/// autogenerated analytical inverse kinematics code from ikfast program part of OpenRAVE
/// \author Rosen Diankov
///
/// Licensed under the Apache License, Version 2.0 (the "License");
/// you may not use this file except in compliance with the License.
/// You may obtain a copy of the License at
///     http://www.apache.org/licenses/LICENSE-2.0
/// 
/// Unless required by applicable law or agreed to in writing, software
/// distributed under the License is distributed on an "AS IS" BASIS,
/// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
/// See the License for the specific language governing permissions and
/// limitations under the License.
///
/// ikfast version 61 generated on 2013-08-28 18:45:26.713367
/// To compile with gcc:
///     gcc -lstdc++ ik.cpp
/// To compile without any main function as a shared object (might need -llapack):
///     gcc -fPIC -lstdc++ -DIKFAST_NO_MAIN -DIKFAST_CLIBRARY -shared -Wl,-soname,libik.so -o libik.so ik.cpp
#define IKFAST_HAS_LIBRARY
#include "ikfast.h" // found inside share/openrave-X.Y/python/ikfast.h
using namespace ikfast;

// check if the included ikfast version matches what this file was compiled with
#define IKFAST_COMPILE_ASSERT(x) extern int __dummy[(int)x]
IKFAST_COMPILE_ASSERT(IKFAST_VERSION==61);

#include <cmath>
#include <vector>
#include <limits>
#include <algorithm>
#include <complex>

#define IKFAST_STRINGIZE2(s) #s
#define IKFAST_STRINGIZE(s) IKFAST_STRINGIZE2(s)

#ifndef IKFAST_ASSERT
#include <stdexcept>
#include <sstream>
#include <iostream>

#ifdef _MSC_VER
#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __FUNCDNAME__
#endif
#endif

#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __func__
#endif

#define IKFAST_ASSERT(b) { if( !(b) ) { std::stringstream ss; ss << "ikfast exception: " << __FILE__ << ":" << __LINE__ << ": " <<__PRETTY_FUNCTION__ << ": Assertion '" << #b << "' failed"; throw std::runtime_error(ss.str()); } }

#endif

#if defined(_MSC_VER)
#define IKFAST_ALIGNED16(x) __declspec(align(16)) x
#else
#define IKFAST_ALIGNED16(x) x __attribute((aligned(16)))
#endif

#define IK2PI  ((IkReal)6.28318530717959)
#define IKPI  ((IkReal)3.14159265358979)
#define IKPI_2  ((IkReal)1.57079632679490)

#ifdef _MSC_VER
#ifndef isnan
#define isnan _isnan
#endif
#endif // _MSC_VER

// lapack routines
extern "C" {
  void dgetrf_ (const int* m, const int* n, double* a, const int* lda, int* ipiv, int* info);
  void zgetrf_ (const int* m, const int* n, std::complex<double>* a, const int* lda, int* ipiv, int* info);
  void dgetri_(const int* n, const double* a, const int* lda, int* ipiv, double* work, const int* lwork, int* info);
  void dgesv_ (const int* n, const int* nrhs, double* a, const int* lda, int* ipiv, double* b, const int* ldb, int* info);
  void dgetrs_(const char *trans, const int *n, const int *nrhs, double *a, const int *lda, int *ipiv, double *b, const int *ldb, int *info);
  void dgeev_(const char *jobvl, const char *jobvr, const int *n, double *a, const int *lda, double *wr, double *wi,double *vl, const int *ldvl, double *vr, const int *ldvr, double *work, const int *lwork, int *info);
}

using namespace std; // necessary to get std math routines

#ifdef IKFAST_NAMESPACE
namespace IKFAST_NAMESPACE {
#endif

inline float IKabs(float f) { return fabsf(f); }
inline double IKabs(double f) { return fabs(f); }

inline float IKsqr(float f) { return f*f; }
inline double IKsqr(double f) { return f*f; }

inline float IKlog(float f) { return logf(f); }
inline double IKlog(double f) { return log(f); }

// allows asin and acos to exceed 1
#ifndef IKFAST_SINCOS_THRESH
#define IKFAST_SINCOS_THRESH ((IkReal)0.000001)
#endif

// used to check input to atan2 for degenerate cases
#ifndef IKFAST_ATAN2_MAGTHRESH
#define IKFAST_ATAN2_MAGTHRESH ((IkReal)2e-6)
#endif

// minimum distance of separate solutions
#ifndef IKFAST_SOLUTION_THRESH
#define IKFAST_SOLUTION_THRESH ((IkReal)1e-6)
#endif

inline float IKasin(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(-IKPI_2);
else if( f >= 1 ) return float(IKPI_2);
return asinf(f);
}
inline double IKasin(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return -IKPI_2;
else if( f >= 1 ) return IKPI_2;
return asin(f);
}

// return positive value in [0,y)
inline float IKfmod(float x, float y)
{
    while(x < 0) {
        x += y;
    }
    return fmodf(x,y);
}

// return positive value in [0,y)
inline double IKfmod(double x, double y)
{
    while(x < 0) {
        x += y;
    }
    return fmod(x,y);
}

inline float IKacos(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(IKPI);
else if( f >= 1 ) return float(0);
return acosf(f);
}
inline double IKacos(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return IKPI;
else if( f >= 1 ) return 0;
return acos(f);
}
inline float IKsin(float f) { return sinf(f); }
inline double IKsin(double f) { return sin(f); }
inline float IKcos(float f) { return cosf(f); }
inline double IKcos(double f) { return cos(f); }
inline float IKtan(float f) { return tanf(f); }
inline double IKtan(double f) { return tan(f); }
inline float IKsqrt(float f) { if( f <= 0.0f ) return 0.0f; return sqrtf(f); }
inline double IKsqrt(double f) { if( f <= 0.0 ) return 0.0; return sqrt(f); }
inline float IKatan2(float fy, float fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return float(IKPI_2);
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2f(fy,fx);
}
inline double IKatan2(double fy, double fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return IKPI_2;
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2(fy,fx);
}

inline float IKsign(float f) {
    if( f > 0 ) {
        return float(1);
    }
    else if( f < 0 ) {
        return float(-1);
    }
    return 0;
}

inline double IKsign(double f) {
    if( f > 0 ) {
        return 1.0;
    }
    else if( f < 0 ) {
        return -1.0;
    }
    return 0;
}

/// solves the forward kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API void ComputeFk(const IkReal* j, IkReal* eetrans, IkReal* eerot) {
IkReal x0,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,x31,x32,x33,x34,x35,x36,x37,x38,x39,x40,x41,x42,x43,x44,x45,x46,x47,x48,x49;
x0=IKsin(j[0]);
x1=IKcos(j[1]);
x2=IKsin(j[1]);
x3=IKsin(j[2]);
x4=IKcos(j[2]);
x5=IKcos(j[3]);
x6=IKsin(j[3]);
x7=IKsin(j[4]);
x8=IKcos(j[0]);
x9=IKcos(j[4]);
x10=IKcos(j[5]);
x11=IKsin(j[5]);
x12=((IkReal(0.133220000000000))*(x4));
x13=((IkReal(0.190890000000000))*(x7));
x14=((IkReal(0.133220000000000))*(x8));
x15=((IkReal(0.00750000000000000))*(x0));
x16=((IkReal(0.00750000000000000))*(x8));
x17=((IkReal(0.521670000000000))*(x2));
x18=((IkReal(1.00000000000000))*(x0));
x19=((IkReal(0.0513300000000000))*(x8));
x20=((IkReal(0.133220000000000))*(x0));
x21=((IkReal(0.190890000000000))*(x5));
x22=((IkReal(0.0513300000000000))*(x0));
x23=((IkReal(0.261090000000000))*(x0));
x24=((IkReal(1.00000000000000))*(x5));
x25=((IkReal(1.00000000000000))*(x8));
x26=((IkReal(1.00000000000000))*(x6));
x27=((IkReal(0.190890000000000))*(x6));
x28=((x1)*(x3));
x29=((x2)*(x4));
x30=((x1)*(x8));
x31=((x0)*(x9));
x32=((x1)*(x4));
x33=((x2)*(x3));
x34=((x0)*(x1));
x35=((x8)*(x9));
x36=((IkReal(-0.000790000000000000))*(x5));
x37=((IkReal(1.00000000000000))*(x32));
x38=((x28)+(x29));
x39=((((IkReal(-1.00000000000000))*(x33)))+(x37));
x40=((x38)*(x5));
x41=((x39)*(x6));
x42=((((IkReal(-1.00000000000000))*(x18)*(x32)))+(((x0)*(x33))));
x43=((((x30)*(x4)))+(((IkReal(-1.00000000000000))*(x25)*(x33))));
x44=((x18)*(((x28)+(x29))));
x45=((x25)*(((((IkReal(-1.00000000000000))*(x28)))+(((IkReal(-1.00000000000000))*(x29))))));
x46=((x43)*(x5));
x47=((x42)*(x5));
x48=((x44)*(x6));
x49=((x45)*(x6));
eetrans[0]=((((x0)*(x17)))+(((IkReal(-0.000790000000000000))*(x35)))+(((x23)*(x33)))+(((x7)*(((((IkReal(-0.000790000000000000))*(x48)))+(((x36)*(x42)))))))+(((x5)*(((((x20)*(x33)))+(((IkReal(-1.00000000000000))*(x12)*(x34)))))))+(((x5)*(((((x22)*(x29)))+(((x22)*(x28)))))))+(((x9)*(((((x27)*(x44)))+(((x21)*(x42)))))))+(((IkReal(-1.00000000000000))*(x23)*(x32)))+(((x6)*(((((x0)*(x12)*(x2)))+(((x20)*(x28)))))))+(((x6)*(((((x22)*(x32)))+(((IkReal(-1.00000000000000))*(x22)*(x33)))))))+(((x15)*(x28)))+(((x15)*(x29)))+(((IkReal(0.00982000000000000))*(x34)))+(((IkReal(-1.00000000000000))*(x13)*(x8))));
IkReal x50=((IkReal(1.00000000000000))*(x28));
IkReal x51=((IkReal(1.00000000000000))*(x8));
IkReal x52=((IkReal(1.00000000000000))*(x29));
eetrans[1]=((((IkReal(-1.00000000000000))*(x17)*(x51)))+(((IkReal(-1.00000000000000))*(x16)*(x50)))+(((IkReal(-1.00000000000000))*(x16)*(x52)))+(((IkReal(-0.261090000000000))*(x33)*(x8)))+(((IkReal(-0.000790000000000000))*(x31)))+(((IkReal(-0.00982000000000000))*(x30)))+(((x7)*(((((IkReal(-0.000790000000000000))*(x49)))+(((x36)*(x43)))))))+(((IkReal(-1.00000000000000))*(x0)*(x13)))+(((x6)*(((((IkReal(-1.00000000000000))*(x14)*(x50)))+(((IkReal(-1.00000000000000))*(x12)*(x2)*(x51)))))))+(((x5)*(((((IkReal(-1.00000000000000))*(x14)*(x33)))+(((x12)*(x30)))))))+(((x9)*(((((x27)*(x45)))+(((x21)*(x43)))))))+(((x6)*(((((x19)*(x33)))+(((IkReal(-1.00000000000000))*(x19)*(x32)))))))+(((x5)*(((((IkReal(-1.00000000000000))*(x19)*(x52)))+(((IkReal(-1.00000000000000))*(x19)*(x50)))))))+(((IkReal(0.261090000000000))*(x30)*(x4))));
eetrans[2]=((IkReal(0.353360000000000))+(((x6)*(((((IkReal(-0.0513300000000000))*(x28)))+(((IkReal(-0.0513300000000000))*(x29)))))))+(((x9)*(((((x27)*(x39)))+(((x21)*(x38)))))))+(((x7)*(((((IkReal(-0.000790000000000000))*(x41)))+(((IkReal(-0.000790000000000000))*(x40)))))))+(((IkReal(0.261090000000000))*(x28)))+(((IkReal(0.261090000000000))*(x29)))+(((IkReal(0.00750000000000000))*(x32)))+(((IkReal(-0.00750000000000000))*(x33)))+(((x5)*(((((IkReal(0.133220000000000))*(x28)))+(((x12)*(x2)))))))+(((x5)*(((((IkReal(-0.0513300000000000))*(x33)))+(((IkReal(0.0513300000000000))*(x32)))))))+(((IkReal(0.521670000000000))*(x1)))+(((x6)*(((((x1)*(x12)))+(((IkReal(-0.133220000000000))*(x33)))))))+(((IkReal(-0.00982000000000000))*(x2))));
eerot[0]=((((x10)*(((((IkReal(-1.00000000000000))*(x42)*(x6)))+(((IkReal(1.00000000000000))*(x44)*(x5)))))))+(((x11)*(((x35)+(((x7)*(((x48)+(x47))))))))));
eerot[1]=((((x11)*(((x31)+(((x7)*(((x49)+(x46)))))))))+(((x10)*(((((IkReal(-1.00000000000000))*(x26)*(x43)))+(((IkReal(-1.00000000000000))*(x24)*(((((x29)*(x8)))+(((x28)*(x8))))))))))));
eerot[2]=((((IkReal(-1.00000000000000))*(x10)*(((((x26)*(x38)))+(((x24)*(((((IkReal(-1.00000000000000))*(x37)))+(x33)))))))))+(((x11)*(x7)*(((x40)+(x41))))));
}

IKFAST_API int GetNumFreeParameters() { return 1; }
IKFAST_API int* GetFreeParameters() { static int freeparams[] = {2}; return freeparams; }
IKFAST_API int GetNumJoints() { return 6; }

IKFAST_API int GetIkRealSize() { return sizeof(IkReal); }

IKFAST_API int GetIkType() { return 0x56000007; }

class IKSolver {
public:
IkReal j0,cj0,sj0,htj0,j1,cj1,sj1,htj1,j3,cj3,sj3,htj3,j4,cj4,sj4,htj4,j5,cj5,sj5,htj5,j2,cj2,sj2,htj2,new_r00,r00,rxp0_0,new_r01,r01,rxp0_1,new_r02,r02,rxp0_2,new_px,px,npx,new_py,py,npy,new_pz,pz,npz,pp;
unsigned char _ij0[2], _nj0,_ij1[2], _nj1,_ij3[2], _nj3,_ij4[2], _nj4,_ij5[2], _nj5,_ij2[2], _nj2;

bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
j0=numeric_limits<IkReal>::quiet_NaN(); _ij0[0] = -1; _ij0[1] = -1; _nj0 = -1; j1=numeric_limits<IkReal>::quiet_NaN(); _ij1[0] = -1; _ij1[1] = -1; _nj1 = -1; j3=numeric_limits<IkReal>::quiet_NaN(); _ij3[0] = -1; _ij3[1] = -1; _nj3 = -1; j4=numeric_limits<IkReal>::quiet_NaN(); _ij4[0] = -1; _ij4[1] = -1; _nj4 = -1; j5=numeric_limits<IkReal>::quiet_NaN(); _ij5[0] = -1; _ij5[1] = -1; _nj5 = -1;  _ij2[0] = -1; _ij2[1] = -1; _nj2 = 0; 
for(int dummyiter = 0; dummyiter < 1; ++dummyiter) {
    solutions.Clear();
px = eetrans[0]; py = eetrans[1]; pz = eetrans[2];

j2=pfree[0]; cj2=cos(pfree[0]); sj2=sin(pfree[0]);
r00 = eerot[0];
r01 = eerot[1];
r02 = eerot[2];
px = eetrans[0]; py = eetrans[1]; pz = eetrans[2];
new_r00=r00;
new_px=px;
new_r01=r01;
new_py=py;
new_r02=r02;
new_pz=((IkReal(-0.353360000000000))+(pz));
r00 = new_r00; r01 = new_r01; r02 = new_r02; px = new_px; py = new_py; pz = new_pz;

pp=(((px)*(px))+((py)*(py))+((pz)*(pz)));
IkReal op[72], zeror[48];
int numroots;
IkReal x53=((IkReal(0.0196400000000000))*(py));
IkReal x54=((IkReal(8.08016000000000e-5))*(cj2));
IkReal x55=((IkReal(0.411546695400000))*(sj2));
IkReal x56=((IkReal(1.04334000000000))*(pz));
IkReal x57=((IkReal(1.00000000000000))*(pp));
IkReal x58=((IkReal(0.00261644080000000))*(sj2));
IkReal x59=((IkReal(0.138993754800000))*(cj2));
IkReal x60=((IkReal(0.0392800000000000))*(pz));
IkReal x61=((IkReal(2.08668000000000))*(py));
IkReal x62=((IkReal(0.00531368320000000))*(cj2));
IkReal x63=((IkReal(0.133559185800000))*(sj2));
IkReal x64=(pz)*(pz);
IkReal x65=(py)*(py);
IkReal x66=((IkReal(0.0665074998000000))*(r01));
IkReal x67=((IkReal(0.00150044554779716))*(r00));
IkReal x68=((IkReal(0.271250219400000))*(r02));
IkReal x69=((IkReal(0.133264585800000))*(r01));
IkReal x70=((IkReal(5.43267641992771e-5))*(r00));
IkReal x71=((IkReal(0.0103364168000000))*(r02));
IkReal x72=((IkReal(0.411252095400000))*(r01));
IkReal x73=((IkReal(0.0155692984000000))*(r02));
IkReal x74=((IkReal(0.000167526287568757))*(r00));
IkReal x75=((IkReal(0.0406017846000000))*(r01));
IkReal x76=((IkReal(0.00149407265765100))*(r00));
IkReal x77=((IkReal(0.273266461800000))*(r02));
IkReal x78=((IkReal(4.17336000000000))*(px));
IkReal x79=(px)*(px);
IkReal x80=((IkReal(0.00300089109559432))*(r01));
IkReal x81=((IkReal(0.133014999600000))*(r00));
IkReal x82=((IkReal(0.266529171600000))*(r00));
IkReal x83=((IkReal(0.000108653528398554))*(r01));
IkReal x84=((IkReal(0.000335052575137514))*(r01));
IkReal x85=((IkReal(0.822504190800000))*(r00));
IkReal x86=((IkReal(0.0812035692000000))*(r00));
IkReal x87=((IkReal(0.00298814531530201))*(r01));
IkReal x88=((IkReal(0.542500438800000))*(r01));
IkReal x89=((IkReal(0.133014999600000))*(r02));
IkReal x90=((IkReal(0.266529171600000))*(r02));
IkReal x91=((IkReal(0.0206728336000000))*(r01));
IkReal x92=((r00)*(sj2));
IkReal x93=((pz)*(sj2));
IkReal x94=((px)*(py));
IkReal x95=((cj2)*(r00));
IkReal x96=((IkReal(0.000849718686154330))*(py));
IkReal x97=((IkReal(0.000973873958824454))*(pz));
IkReal x98=((cj2)*(r01));
IkReal x99=((IkReal(0.000725563413484206))*(pz));
IkReal x100=((r01)*(sj2));
IkReal x101=((px)*(r02));
IkReal x102=((IkReal(0.00432209335219236))*(py));
IkReal x103=((py)*(r02));
IkReal x104=((IkReal(4.00000000000000))*(pz));
IkReal x105=((r02)*(sj2));
IkReal x106=((py)*(sj2));
IkReal x107=((IkReal(2.00000000000000))*(pp));
IkReal x108=((cj2)*(r02));
IkReal x109=((IkReal(0.00863574414584316))*(r01));
IkReal x110=((cj2)*(pz));
IkReal x111=((px)*(r00));
IkReal x112=((IkReal(0.00827701817800828))*(r01));
IkReal x113=((pz)*(r01));
IkReal x114=((pz)*(r00));
IkReal x115=((px)*(sj2));
IkReal x116=((cj2)*(py));
IkReal x117=((cj2)*(px));
IkReal x118=((IkReal(0.0196400000000000))*(px));
IkReal x119=((IkReal(1.04334000000000))*(py));
IkReal x120=((IkReal(1.04334000000000))*(px));
IkReal x121=((IkReal(0.0196400000000000))*(pz));
IkReal x122=((IkReal(4.00000000000000))*(pp));
IkReal x123=((py)*(r00));
IkReal x124=((py)*(r01));
IkReal x125=((IkReal(2.08668000000000))*(pz));
IkReal x126=((pz)*(r02));
IkReal x127=((IkReal(0.0150000000000000))*(x106));
IkReal x128=((IkReal(0.788620000000000))*(x116));
IkReal x129=((IkReal(0.788620000000000))*(x93));
IkReal x130=((IkReal(0.0150000000000000))*(x110));
IkReal x131=((IkReal(0.266440000000000))*(x106));
IkReal x132=((IkReal(0.266440000000000))*(x110));
IkReal x133=((IkReal(0.0300000000000000))*(x116));
IkReal x134=((IkReal(0.0300000000000000))*(x93));
IkReal x135=((IkReal(0.255740000000000))*(x93));
IkReal x136=((IkReal(0.255740000000000))*(x116));
IkReal x137=((IkReal(0.000232798935690712))*(x95));
IkReal x138=((IkReal(0.00113213494065692))*(x92));
IkReal x139=((IkReal(0.117660000000000))*(x113));
IkReal x140=((IkReal(0.0409654482000000))*(x100));
IkReal x141=((IkReal(0.00431787207292158))*(x114));
IkReal x142=((IkReal(0.00413850908900414))*(pp)*(r00));
IkReal x143=((IkReal(0.188644089500000))*(x98));
IkReal x144=((IkReal(8.12803185080413e-5))*(px)*(r01));
IkReal x145=((IkReal(0.00431787207292158))*(x101));
IkReal x146=((IkReal(0.0204742506000000))*(x108));
IkReal x147=((IkReal(0.522180000000000))*(x111));
IkReal x148=((IkReal(0.117660000000000))*(x103));
IkReal x149=((IkReal(0.522180000000000))*(x126));
IkReal x150=((IkReal(0.522180000000000))*(x124));
IkReal x151=((IkReal(8.12803185080413e-5))*(x123));
IkReal x152=((IkReal(0.355442223500000))*(x105));
IkReal x153=((IkReal(0.255740000000000))*(x103));
IkReal x154=((IkReal(0.00832754880000000))*(x98));
IkReal x155=((IkReal(4.17211874901776e-6))*(x95));
IkReal x156=((IkReal(0.0150000000000000))*(x126));
IkReal x157=((IkReal(0.0150000000000000))*(x111));
IkReal x158=((IkReal(0.0150000000000000))*(x124));
IkReal x159=((IkReal(0.255740000000000))*(x113));
IkReal x160=((IkReal(0.254532796100000))*(x100));
IkReal x161=((IkReal(0.289553516900000))*(x108));
IkReal x162=((IkReal(0.0121636488000000))*(x105));
IkReal x163=((IkReal(0.000221636373503065))*(x92));
IkReal x164=((pp)*(x108));
IkReal x165=((IkReal(0.000162560637016083))*(x101));
IkReal x166=((px)*(x109));
IkReal x167=((IkReal(0.000162560637016083))*(x114));
IkReal x168=((IkReal(0.00863574414584316))*(x123));
IkReal x169=((IkReal(0.393662435300000))*(x100));
IkReal x170=((IkReal(0.0161602488000000))*(x105));
IkReal x171=((IkReal(0.788620000000000))*(x113));
IkReal x172=((IkReal(0.150423877700000))*(x108));
IkReal x173=((pp)*(x100));
IkReal x174=((IkReal(0.788620000000000))*(x103));
IkReal x175=((IkReal(0.00433094880000000))*(x98));
IkReal x176=((IkReal(0.000210473811315417))*(x95));
IkReal x177=((IkReal(0.0876600000000000))*(x103));
IkReal x178=((IkReal(0.187104189500000))*(x98));
IkReal x179=((pp)*(x105));
IkReal x180=((IkReal(0.0331327482000000))*(x108));
IkReal x181=((pp)*(x98));
IkReal x182=((IkReal(0.356982123500000))*(x105));
IkReal x183=((IkReal(0.0876600000000000))*(x113));
IkReal x184=((IkReal(0.00112379070315889))*(x92));
IkReal x185=((IkReal(0.0126415506000000))*(x100));
IkReal x186=((IkReal(1.57724000000000))*(x117));
IkReal x187=((IkReal(0.532880000000000))*(x115));
IkReal x188=((IkReal(1.06576000000000))*(x117));
IkReal x189=((IkReal(0.0600000000000000))*(x117));
IkReal x190=((IkReal(0.511480000000000))*(x117));
IkReal x191=((IkReal(0.00226426988131385))*(x100));
IkReal x192=((pz)*(x109));
IkReal x193=((IkReal(0.000465597871381424))*(x98));
IkReal x194=((pp)*(x112));
IkReal x195=((IkReal(0.235320000000000))*(x101));
IkReal x196=((IkReal(0.00863574414584316))*(x103));
IkReal x197=((IkReal(0.377288179000000))*(x95));
IkReal x198=((IkReal(0.0819308964000000))*(x92));
IkReal x199=((IkReal(0.235320000000000))*(x114));
IkReal x200=((IkReal(0.511480000000000))*(x114));
IkReal x201=((IkReal(0.509065592200000))*(x92));
IkReal x202=((IkReal(8.34423749803552e-6))*(x98));
IkReal x203=((IkReal(0.000443272747006129))*(x100));
IkReal x204=((IkReal(0.511480000000000))*(x101));
IkReal x205=((IkReal(0.0166550976000000))*(x95));
IkReal x206=((IkReal(0.000325121274032165))*(x103));
IkReal x207=((IkReal(0.000325121274032165))*(x113));
IkReal x208=((IkReal(0.00866189760000000))*(x95));
IkReal x209=((IkReal(1.57724000000000))*(x101));
IkReal x210=((IkReal(1.57724000000000))*(x114));
IkReal x211=((IkReal(0.787324870600000))*(x92));
IkReal x212=((IkReal(0.000420947622630834))*(x98));
IkReal x213=((IkReal(0.0252831012000000))*(x92));
IkReal x214=((IkReal(0.175320000000000))*(x114));
IkReal x215=((IkReal(0.175320000000000))*(x101));
IkReal x216=((IkReal(0.00224758140631777))*(x100));
IkReal x217=((IkReal(0.374208379000000))*(x95));
IkReal x218=((IkReal(1.57724000000000))*(x110));
IkReal x219=((IkReal(1.57724000000000))*(x106));
IkReal x220=((IkReal(0.532880000000000))*(x116));
IkReal x221=((IkReal(0.532880000000000))*(x93));
IkReal x222=((IkReal(0.511480000000000))*(x110));
IkReal x223=((IkReal(0.511480000000000))*(x106));
IkReal x224=((IkReal(0.710884447000000))*(x100));
IkReal x225=((IkReal(0.0409485012000000))*(x98));
IkReal x226=((IkReal(0.377288179000000))*(x108));
IkReal x227=((IkReal(0.0819308964000000))*(x105));
IkReal x228=((IkReal(0.579107033800000))*(x98));
IkReal x229=((IkReal(0.0243272976000000))*(x100));
IkReal x230=((IkReal(0.509065592200000))*(x105));
IkReal x231=((IkReal(0.0166550976000000))*(x108));
IkReal x232=((IkReal(4.00000000000000))*(x64));
IkReal x233=((IkReal(8.00000000000000))*(x79));
IkReal x234=((IkReal(4.00000000000000))*(x65));
IkReal x235=((IkReal(2.00000000000000))*(px)*(pz));
IkReal x236=((IkReal(2.00000000000000))*(x64));
IkReal x237=((IkReal(4.00000000000000))*(x79));
IkReal x238=((IkReal(2.00000000000000))*(x65));
IkReal x239=((IkReal(0.0196400000000000))*(r01)*(x93));
IkReal x240=((x118)*(x95));
IkReal x241=((IkReal(0.00216104667609618))*(pz)*(x92));
IkReal x242=((x56)*(x98));
IkReal x243=((IkReal(0.00216104667609618))*(py)*(x95));
IkReal x244=((IkReal(0.000486936979412227))*(pz)*(x95));
IkReal x245=((x53)*(x98));
IkReal x246=((IkReal(0.000486936979412227))*(px)*(x100));
IkReal x247=((x108)*(x121));
IkReal x248=((x105)*(x53));
IkReal x249=((x105)*(x56));
IkReal x250=((IkReal(0.00827701817800828))*(r00)*(x79));
IkReal x251=((x120)*(x92));
IkReal x252=((IkReal(0.00216104667609618))*(px)*(x98));
IkReal x253=((IkReal(0.00216104667609618))*(sj2)*(x101));
IkReal x254=((IkReal(1.04334000000000))*(cj2)*(x103));
IkReal x255=((IkReal(0.000486936979412227))*(cj2)*(x101));
IkReal x256=((x112)*(x94));
IkReal x257=((IkReal(0.00827701817800828))*(pz)*(x101));
IkReal x258=((IkReal(0.000486936979412227))*(py)*(x92));
IkReal x259=((x100)*(x119));
IkReal x260=((IkReal(0.000424859343077165))*(px)*(x98));
IkReal x261=((IkReal(0.000424859343077165))*(sj2)*(x101));
IkReal x262=((IkReal(1.04334000000000))*(sj2)*(x103));
IkReal x263=((x121)*(x98));
IkReal x264=((x120)*(x95));
IkReal x265=((IkReal(0.000424859343077165))*(pz)*(x92));
IkReal x266=((x108)*(x56));
IkReal x267=((x119)*(x98));
IkReal x268=((IkReal(0.000424859343077165))*(py)*(x95));
IkReal x269=((IkReal(0.0196400000000000))*(r02)*(x93));
IkReal x270=((x108)*(x53));
IkReal x271=((x100)*(x53));
IkReal x272=((x118)*(x92));
IkReal x273=((x100)*(x56));
IkReal x274=((x100)*(x57));
IkReal x275=((x57)*(x98));
IkReal x276=((x105)*(x57));
IkReal x277=((x92)*(x96));
IkReal x278=((IkReal(0.000849718686154330))*(cj2)*(x101));
IkReal x279=((x107)*(x98));
IkReal x280=((IkReal(0.000849718686154330))*(px)*(x100));
IkReal x281=((IkReal(0.000849718686154330))*(pz)*(x95));
IkReal x282=((x105)*(x107));
IkReal x283=((x100)*(x107));
IkReal x284=((IkReal(0.00432209335219236))*(pz)*(x95));
IkReal x285=((IkReal(0.00432209335219236))*(px)*(x100));
IkReal x286=((x107)*(x108));
IkReal x287=((IkReal(0.00432209335219236))*(cj2)*(x101));
IkReal x288=((x102)*(x92));
IkReal x289=((x108)*(x57));
IkReal x290=((IkReal(0.000362781706742103))*(pz)*(x95));
IkReal x291=((IkReal(0.000362781706742103))*(px)*(x100));
IkReal x292=((IkReal(0.000362781706742103))*(py)*(x92));
IkReal x293=((IkReal(0.000362781706742103))*(cj2)*(x101));
IkReal x294=((IkReal(-0.532880000000000))*(x115));
IkReal x295=((IkReal(0.0392800000000000))*(sj2)*(x101));
IkReal x296=((x97)*(x98));
IkReal x297=((IkReal(0.00432209335219236))*(r01)*(x93));
IkReal x298=((IkReal(2.08668000000000))*(cj2)*(x101));
IkReal x299=((x107)*(x95));
IkReal x300=((x102)*(x105));
IkReal x301=((IkReal(0.000973873958824454))*(cj2)*(x103));
IkReal x302=((x60)*(x92));
IkReal x303=((x125)*(x95));
IkReal x304=((IkReal(0.0165540363560166))*(r00)*(x94));
IkReal x305=((IkReal(0.0165540363560166))*(r01)*(x65));
IkReal x306=((IkReal(0.0165540363560166))*(pz)*(x103));
IkReal x307=((x125)*(x92));
IkReal x308=((x107)*(x92));
IkReal x309=((IkReal(0.0392800000000000))*(cj2)*(x101));
IkReal x310=((x105)*(x96));
IkReal x311=((IkReal(2.08668000000000))*(sj2)*(x101));
IkReal x312=((x60)*(x95));
IkReal x313=((IkReal(0.000849718686154330))*(r01)*(x93));
IkReal x314=((IkReal(0.00169943737230866))*(pz)*(x98));
IkReal x315=((IkReal(0.00864418670438472))*(pz)*(x98));
IkReal x316=((x122)*(x92));
IkReal x317=((IkReal(0.00864418670438472))*(cj2)*(x103));
IkReal x318=((x98)*(x99));
IkReal x319=((IkReal(0.000725563413484206))*(cj2)*(x103));
IkReal x320=((x59)+(x58));
IkReal x321=((IkReal(0.000973873958824454))*(py)*(x95));
IkReal x322=((IkReal(0.000973873958824454))*(sj2)*(x101));
IkReal x323=((x92)*(x97));
IkReal x324=((IkReal(0.000973873958824454))*(px)*(x98));
IkReal x325=((IkReal(0.0116780652000000))+(x132));
IkReal x326=((x105)*(x236));
IkReal x327=((IkReal(2.00000000000000))*(x94)*(x95));
IkReal x328=((IkReal(2.00000000000000))*(x124)*(x93));
IkReal x329=((IkReal(2.00000000000000))*(x103)*(x110));
IkReal x330=((x238)*(x98));
IkReal x331=((x235)*(x92));
IkReal x332=((IkReal(2.00000000000000))*(x103)*(x93));
IkReal x333=((IkReal(2.00000000000000))*(x92)*(x94));
IkReal x334=((x100)*(x238));
IkReal x335=((x235)*(x95));
IkReal x336=((IkReal(2.00000000000000))*(py)*(pz)*(x98));
IkReal x337=((x108)*(x236));
IkReal x338=((x234)*(x98));
IkReal x339=((cj2)*(x103)*(x104));
IkReal x340=((x105)*(x232));
IkReal x341=((IkReal(4.00000000000000))*(x94)*(x95));
IkReal x342=((IkReal(4.00000000000000))*(x124)*(x93));
IkReal x343=((px)*(x104)*(x92));
IkReal x344=((py)*(x104)*(x98));
IkReal x345=((x108)*(x232));
IkReal x346=((px)*(x104)*(x95));
IkReal x347=((x100)*(x234));
IkReal x348=((IkReal(4.00000000000000))*(x92)*(x94));
IkReal x349=((IkReal(4.00000000000000))*(x103)*(x93));
IkReal x350=((((IkReal(0.0392800000000000))*(px)))+(((IkReal(0.0300000000000000))*(x115))));
IkReal x351=((x237)*(x95));
IkReal x352=((cj2)*(x101)*(x104));
IkReal x353=((IkReal(4.00000000000000))*(x94)*(x98));
IkReal x354=((x237)*(x92));
IkReal x355=((IkReal(4.00000000000000))*(x100)*(x94));
IkReal x356=((IkReal(4.00000000000000))*(x101)*(x93));
IkReal x357=((x233)*(x95));
IkReal x358=((IkReal(8.00000000000000))*(x94)*(x98));
IkReal x359=((IkReal(8.00000000000000))*(x101)*(x110));
IkReal x360=((IkReal(8.00000000000000))*(x100)*(x94));
IkReal x361=((IkReal(8.00000000000000))*(x101)*(x93));
IkReal x362=((x233)*(x92));
IkReal x363=((x220)+(((IkReal(-1.00000000000000))*(x221))));
IkReal x364=((x134)+(x60));
IkReal x365=((x230)+(x90));
IkReal x366=((x204)+(x83));
IkReal x367=((x209)+(x84));
IkReal x368=((x133)+(x61));
IkReal x369=((x171)+(x74));
IkReal x370=((x127)+(x53));
IkReal x371=((x130)+(x56));
IkReal x372=((x189)+(x78));
IkReal x373=((((IkReal(-1.00000000000000))*(x220)))+(((IkReal(-1.00000000000000))*(x221))));
IkReal x374=((x57)+(x62)+(x63));
IkReal x375=((x177)+(x176));
IkReal x376=((x55)+(x54)+(x57));
IkReal x377=((x131)+(x132));
IkReal x378=((x131)+(x320));
IkReal x379=((x132)+(x320));
IkReal x380=((x142)+(x275));
IkReal x381=((x319)+(x217));
IkReal x382=((x315)+(x206));
IkReal x383=((x317)+(x207));
IkReal x384=((x165)+(x284));
IkReal x385=((x166)+(x285));
IkReal x386=((x144)+(x243));
IkReal x387=((x148)+(x246));
IkReal x388=((x192)+(x297));
IkReal x389=((((x122)*(x95)))+(((IkReal(0.00169943737230866))*(cj2)*(x103))));
IkReal x390=((x184)+(x183)+(x76));
IkReal x391=((x229)+(x228)+(x91));
IkReal x392=((x215)+(x216)+(x87));
IkReal x393=((x254)+(x248));
IkReal x394=((x302)+(x303));
IkReal x395=((x320)+(x377));
IkReal x396=((x194)+(x388));
IkReal x397=((x135)+(x136)+(x371));
IkReal x398=((x311)+(x312)+(x203));
IkReal x399=((x309)+(x307)+(x202));
IkReal x400=((x128)+(x129)+(x371));
IkReal x401=((x155)+(x263)+(x262));
IkReal x402=((x394)+(x299));
IkReal x403=((x306)+(x304)+(x305));
IkReal x404=((x240)+(x247)+(x245));
IkReal x405=((x256)+(x257)+(x250));
IkReal x406=((x322)+(x225)+(x224)+(x88));
IkReal x407=((x308)+(x310)+(x211)+(x85));
IkReal x408=((x308)+(x310)+(x201)+(x82));
IkReal x409=((x168)+(x167)+(x288)+(x287));
IkReal x410=((x178)+(x180)+(x290)+(x291));
IkReal x411=((x212)+(x214)+(x298)+(x295));
IkReal x412=((x347)+(x348)+(x349));
IkReal x413=((x351)+(x353)+(x352));
IkReal x414=((x151)+(x393)+(x252));
IkReal x415=((x151)+(x252)+(x239)+(x242));
IkReal x416=((x360)+(x361)+(x362));
IkReal x417=((x279)+(x282)+(x281)+(x280));
IkReal x418=((x196)+(x300)+(x318)+(x213)+(x86));
IkReal x419=((x324)+(x227)+(x226)+(x286)+(x89));
IkReal x420=((x179)+(x181)+(x404));
IkReal x421=((x198)+(x197)+(x196)+(x300)+(x301)+(x81));
IkReal x422=((x333)+(x332)+(x334)+(x261));
IkReal x423=((x346)+(x344)+(x345)+(x283));
IkReal x424=((x140)+(x141)+(x143)+(x241)+(x244)+(x66));
IkReal x425=((x193)+(x191)+(x195)+(x298)+(x295)+(x80));
IkReal x426=((x339)+(x338)+(x341)+(x278));
IkReal x427=((x260)+(x289)+(x401));
IkReal x428=((x330)+(x327)+(x329)+(x255));
IkReal x429=((x145)+(x253)+(x405));
IkReal x430=((x342)+(x343)+(x340)+(x277));
IkReal x431=((x357)+(x359)+(x358)+(x314));
IkReal x432=((x150)+(x147)+(x149)+(x259)+(x251)+(x249));
IkReal x433=((x355)+(x354)+(x356)+(x313)+(x205));
IkReal x434=((x355)+(x354)+(x356)+(x313)+(x208));
IkReal x435=((x152)+(x146)+(x148)+(x331)+(x326)+(x328)+(x258)+(x68));
IkReal x436=((x145)+(x253)+(x276)+(x432));
IkReal x437=((x142)+(x137)+(x139)+(x138)+(x386)+(x239)+(x242)+(x246)+(x67));
IkReal x438=((x170)+(x172)+(x169)+(x337)+(x336)+(x335)+(x265)+(x268)+(x73)+(x72));
IkReal x439=((x152)+(x146)+(x137)+(x139)+(x138)+(x331)+(x326)+(x328)+(x258)+(x67)+(x68));
IkReal x440=((x162)+(x163)+(x161)+(x159)+(x337)+(x336)+(x335)+(x268)+(x273)+(x270)+(x71)+(x70));
IkReal x441=((x160)+(x157)+(x156)+(x158)+(x265)+(x264)+(x267)+(x266)+(x269)+(x274)+(x272)+(x271)+(x69));
IkReal x442=((x163)+(x157)+(x156)+(x158)+(x264)+(x267)+(x266)+(x260)+(x269)+(x272)+(x273)+(x270)+(x271));
IkReal x443=((x141)+(x185)+(x182)+(x331)+(x330)+(x326)+(x327)+(x328)+(x329)+(x292)+(x293)+(x241)+(x77)+(x75));
op[0]=((IkReal(-0.388698262300000))+(((IkReal(-1.00000000000000))*(x376)))+(((IkReal(-1.00000000000000))*(x370)))+(x400));
op[1]=((((IkReal(-1.00000000000000))*(x378)))+(x325));
op[2]=((((IkReal(-1.00000000000000))*(x364)))+(((IkReal(-1.00000000000000))*(x368)))+(x218)+(((IkReal(-1.00000000000000))*(x219))));
op[3]=x373;
op[4]=((IkReal(-0.388698262300000))+(((IkReal(-1.00000000000000))*(x376)))+(x370)+(((IkReal(-1.00000000000000))*(x400))));
op[5]=((IkReal(0.0116780652000000))+(((IkReal(-1.00000000000000))*(x379)))+(x131));
op[6]=((IkReal(-0.0156746652000000))+(((IkReal(-1.00000000000000))*(x378)))+(x132));
op[7]=((IkReal(-0.249568623100000))+(((IkReal(-1.00000000000000))*(x374)))+(((IkReal(-1.00000000000000))*(x370)))+(x397));
op[8]=x373;
op[9]=((((IkReal(-1.00000000000000))*(x364)))+(((IkReal(-1.00000000000000))*(x368)))+(x222)+(((IkReal(-1.00000000000000))*(x223))));
op[10]=((IkReal(-0.0156746652000000))+(((IkReal(-1.00000000000000))*(x379)))+(x131));
op[11]=((IkReal(-0.249568623100000))+(((IkReal(-1.00000000000000))*(x397)))+(((IkReal(-1.00000000000000))*(x374)))+(x370));
op[12]=((((IkReal(-1.00000000000000))*(x432)))+(((IkReal(-1.00000000000000))*(x393)))+(((IkReal(-1.00000000000000))*(x424)))+(x142)+(x145)+(x253)+(x404)+(x415)+(x428)+(x439)+(((IkReal(-1.00000000000000))*(x387)))+(((IkReal(-1.00000000000000))*(x386)))+(((IkReal(-1.00000000000000))*(x276)))+(((IkReal(-1.00000000000000))*(x275)))+(((IkReal(-1.00000000000000))*(x405))));
op[13]=((((IkReal(-1.00000000000000))*(x442)))+(((IkReal(-1.00000000000000))*(x154)))+(((IkReal(-1.00000000000000))*(x159)))+(((IkReal(-1.00000000000000))*(x70)))+(((IkReal(-1.00000000000000))*(x422)))+(x173)+(x162)+(x160)+(x161)+(x153)+(x337)+(x336)+(x335)+(x265)+(x268)+(x401)+(x71)+(x69)+(((IkReal(-1.00000000000000))*(x289))));
op[14]=((x321)+(x323)+(x409)+(x423)+(((IkReal(-1.00000000000000))*(x385)))+(((IkReal(-1.00000000000000))*(x384)))+(((IkReal(-1.00000000000000))*(x419)))+(((IkReal(-1.00000000000000))*(x412)))+(((IkReal(-1.00000000000000))*(x406))));
op[15]=((((IkReal(-1.00000000000000))*(x430)))+(((IkReal(-1.00000000000000))*(x391)))+(((IkReal(-1.00000000000000))*(x426)))+(x365)+(((IkReal(-1.00000000000000))*(x231)))+(x417));
op[16]=((((IkReal(-1.00000000000000))*(x435)))+(((IkReal(-1.00000000000000))*(x432)))+(((IkReal(-1.00000000000000))*(x428)))+(((IkReal(-1.00000000000000))*(x429)))+(x424)+(x420)+(x437)+(((IkReal(-1.00000000000000))*(x414))));
op[17]=((((IkReal(-1.00000000000000))*(x440)))+(((IkReal(-1.00000000000000))*(x441)))+(x164)+(x154)+(x153)+(x260)+(x401)+(x422));
op[18]=((((IkReal(-1.00000000000000))*(x438)))+(((IkReal(-1.00000000000000))*(x174)))+(x175)+(x164)+(x369)+(x422)+(x442)+(((IkReal(-1.00000000000000))*(x274)))+(((IkReal(-1.00000000000000))*(x401))));
op[19]=((((IkReal(-1.00000000000000))*(x436)))+(((IkReal(-1.00000000000000))*(x390)))+(x386)+(x375)+(x239)+(x242)+(x405)+(x404)+(x443)+(((IkReal(-1.00000000000000))*(x380)))+(((IkReal(-1.00000000000000))*(x414)))+(((IkReal(-1.00000000000000))*(x410))));
op[20]=((((IkReal(-0.822504190800000))*(r02)))+(((IkReal(0.00866189760000000))*(x108)))+(((IkReal(-0.787324870600000))*(x105)))+(x426)+(x430)+(((IkReal(0.0311385968000000))*(r01)))+(((IkReal(0.0323204976000000))*(x100)))+(((IkReal(-1.00000000000000))*(x417)))+(((IkReal(0.300847755400000))*(x98))));
op[21]=((((x92)*(x99)))+(((IkReal(-0.713964247000000))*(x100)))+(((IkReal(-0.000725563413484206))*(px)*(x98)))+(((IkReal(-0.546532923600000))*(r01)))+(((IkReal(0.0662654964000000))*(x98)))+(((IkReal(0.0812035692000000))*(r02)))+(x384)+(x385)+(((IkReal(0.0252831012000000))*(x105)))+(x423)+(((IkReal(-0.000725563413484206))*(sj2)*(x101)))+(((IkReal(-1.00000000000000))*(x286)))+(((IkReal(0.000725563413484206))*(py)*(x95)))+(((IkReal(-1.00000000000000))*(x412)))+(((IkReal(-1.00000000000000))*(x409)))+(((IkReal(-0.374208379000000))*(x108))));
op[22]=((((IkReal(-1.00000000000000))*(x174)))+(((IkReal(-1.00000000000000))*(x175)))+(((IkReal(-1.00000000000000))*(x422)))+(((IkReal(-1.00000000000000))*(x427)))+(x173)+(x163)+(x157)+(x156)+(x158)+(x369)+(x264)+(x267)+(x266)+(x269)+(x272)+(x273)+(x270)+(x271)+(x438));
op[23]=((((IkReal(-1.00000000000000))*(x142)))+(((IkReal(-1.00000000000000))*(x443)))+(((IkReal(-1.00000000000000))*(x432)))+(((IkReal(-1.00000000000000))*(x393)))+(((IkReal(-1.00000000000000))*(x390)))+(x375)+(x410)+(x415)+(x429)+(x420)+(((IkReal(-1.00000000000000))*(x386))));
op[24]=((((IkReal(-1.00000000000000))*(x186)))+(x350));
op[25]=x187;
op[26]=((((IkReal(3.15448000000000))*(x115)))+(x372));
op[27]=x188;
op[28]=((((IkReal(-1.00000000000000))*(x350)))+(x186));
op[29]=x294;
op[30]=x187;
op[31]=((((IkReal(-1.00000000000000))*(x190)))+(x350));
op[32]=x188;
op[33]=((((IkReal(1.02296000000000))*(x115)))+(x372));
op[34]=x294;
op[35]=((((IkReal(-1.00000000000000))*(x350)))+(x190));
op[36]=((((IkReal(-1.00000000000000))*(x394)))+(((IkReal(-1.00000000000000))*(x296)))+(((IkReal(-1.00000000000000))*(x199)))+(x194)+(x299)+(x425)+(x421)+(((IkReal(-1.00000000000000))*(x388)))+(((IkReal(-1.00000000000000))*(x413)))+(((IkReal(-1.00000000000000))*(x403))));
op[37]=((((IkReal(-1.00000000000000))*(x398)))+(((IkReal(-1.00000000000000))*(x366)))+(x399)+(x200)+(x433)+(((IkReal(-1.00000000000000))*(x408))));
op[38]=((((IkReal(1.08500087760000))*(r00)))+(((IkReal(1.42176889400000))*(x92)))+(((IkReal(0.0818970024000000))*(x95)))+(x383)+(((IkReal(-1.00000000000000))*(x316)))+(x416)+(((IkReal(-0.00194774791764891))*(sj2)*(x103)))+(((IkReal(-1.00000000000000))*(x382)))+(((IkReal(0.00194774791764891))*(r01)*(x93))));
op[39]=((x431)+(((IkReal(1.15821406760000))*(x95)))+(((IkReal(-1.00000000000000))*(x389)))+(((IkReal(0.0486545952000000))*(x92)))+(((IkReal(0.0413456672000000))*(r00))));
op[40]=((((IkReal(-1.00000000000000))*(x421)))+(((IkReal(-1.00000000000000))*(x199)))+(x396)+(x296)+(x413)+(x425)+(((IkReal(-1.00000000000000))*(x402)))+(((IkReal(-1.00000000000000))*(x403))));
op[41]=((((IkReal(-1.00000000000000))*(x433)))+(((IkReal(-1.00000000000000))*(x398)))+(((IkReal(-1.00000000000000))*(x366)))+(x399)+(x200)+(x408));
op[42]=((((IkReal(-1.00000000000000))*(x434)))+(((IkReal(-1.00000000000000))*(x399)))+(x367)+(x398)+(x407)+(((IkReal(-1.00000000000000))*(x210))));
op[43]=((((IkReal(-1.00000000000000))*(x394)))+(((IkReal(-1.00000000000000))*(x392)))+(((IkReal(-1.00000000000000))*(x194)))+(x381)+(x388)+(x299)+(x403)+(x411)+(((IkReal(-1.00000000000000))*(x418)))+(((IkReal(-1.00000000000000))*(x413))));
op[44]=((((IkReal(-1.00000000000000))*(x431)))+(x389)+(((IkReal(-0.0622771936000000))*(r00)))+(((IkReal(-0.601695510800000))*(x95)))+(((IkReal(-0.0646409952000000))*(x92))));
op[45]=((((IkReal(1.42792849400000))*(x92)))+(((IkReal(1.09306584720000))*(r00)))+(((IkReal(0.00145112682696841))*(r01)*(x93)))+(((IkReal(-0.132530992800000))*(x95)))+(x382)+(((IkReal(-1.00000000000000))*(x316)))+(x416)+(((IkReal(-0.00145112682696841))*(sj2)*(x103)))+(((IkReal(-1.00000000000000))*(x383))));
op[46]=((((IkReal(-1.00000000000000))*(x399)))+(x367)+(x398)+(x434)+(((IkReal(-1.00000000000000))*(x210)))+(((IkReal(-1.00000000000000))*(x407))));
op[47]=((((IkReal(-1.00000000000000))*(x392)))+(((IkReal(-1.00000000000000))*(x396)))+(x403)+(x413)+(x411)+(x418)+(((IkReal(-1.00000000000000))*(x381)))+(((IkReal(-1.00000000000000))*(x402))));
op[48]=((IkReal(-0.388698262300000))+(((IkReal(-1.00000000000000))*(x376)))+(((IkReal(-1.00000000000000))*(x128)))+(x129)+(x371)+(x370));
op[49]=((((IkReal(-1.00000000000000))*(x320)))+(x131)+(x325));
op[50]=((((IkReal(-1.00000000000000))*(x364)))+(x368)+(x218)+(x219));
op[51]=x363;
op[52]=((IkReal(-0.388698262300000))+(((IkReal(-1.00000000000000))*(x376)))+(((IkReal(-1.00000000000000))*(x370)))+(((IkReal(-1.00000000000000))*(x371)))+(((IkReal(-1.00000000000000))*(x129)))+(x128));
op[53]=((IkReal(0.0116780652000000))+(((IkReal(-1.00000000000000))*(x395))));
op[54]=((IkReal(-0.0156746652000000))+(((IkReal(-1.00000000000000))*(x320)))+(x377));
op[55]=((IkReal(-0.249568623100000))+(((IkReal(-1.00000000000000))*(x374)))+(x135)+(x371)+(x370)+(((IkReal(-1.00000000000000))*(x136))));
op[56]=x363;
op[57]=((((IkReal(-1.00000000000000))*(x364)))+(x368)+(x223)+(x222));
op[58]=((IkReal(-0.0156746652000000))+(((IkReal(-1.00000000000000))*(x395))));
op[59]=((IkReal(-0.249568623100000))+(((IkReal(-1.00000000000000))*(x374)))+(((IkReal(-1.00000000000000))*(x370)))+(((IkReal(-1.00000000000000))*(x371)))+(x136)+(((IkReal(-1.00000000000000))*(x135))));
op[60]=((((IkReal(-1.00000000000000))*(x437)))+(((IkReal(-1.00000000000000))*(x436)))+(((IkReal(-1.00000000000000))*(x428)))+(x181)+(x405)+(x404)+(x414)+(x424)+(x435));
op[61]=((((IkReal(-1.00000000000000))*(x441)))+(((IkReal(-1.00000000000000))*(x153)))+(((IkReal(-1.00000000000000))*(x427)))+(x154)+(x422)+(x440));
op[62]=((((IkReal(-1.00000000000000))*(x167)))+(((IkReal(-1.00000000000000))*(x323)))+(x168)+(x321)+(x384)+(x346)+(x344)+(x345)+(x288)+(x406)+(x412)+(((IkReal(-1.00000000000000))*(x385)))+(((IkReal(-1.00000000000000))*(x283)))+(((IkReal(-1.00000000000000))*(x287)))+(((IkReal(-1.00000000000000))*(x419))));
op[63]=((((IkReal(-1.00000000000000))*(x430)))+(x365)+(x391)+(((IkReal(-1.00000000000000))*(x231)))+(x282)+(x280)+(x426)+(((IkReal(-1.00000000000000))*(x279)))+(((IkReal(-1.00000000000000))*(x281))));
op[64]=((((IkReal(-1.00000000000000))*(x439)))+(((IkReal(-1.00000000000000))*(x432)))+(((IkReal(-1.00000000000000))*(x424)))+(x179)+(x386)+(x387)+(x393)+(x404)+(x429)+(x428)+(((IkReal(-1.00000000000000))*(x380)))+(((IkReal(-1.00000000000000))*(x415))));
IkReal x444=(pz)*(pz);
IkReal x445=(py)*(py);
IkReal x446=((IkReal(0.0155692984000000))*(r02));
IkReal x447=((IkReal(0.411252095400000))*(r01));
IkReal x448=((IkReal(0.000167526287568757))*(r00));
IkReal x449=((IkReal(0.0406017846000000))*(r01));
IkReal x450=((IkReal(0.00149407265765100))*(r00));
IkReal x451=((IkReal(0.273266461800000))*(r02));
IkReal x452=((r00)*(sj2));
IkReal x453=((cj2)*(py));
IkReal x454=((IkReal(2.00000000000000))*(px));
IkReal x455=((IkReal(4.00000000000000))*(r02));
IkReal x456=((py)*(r02));
IkReal x457=((pz)*(sj2));
IkReal x458=((IkReal(1.04334000000000))*(r02));
IkReal x459=((r01)*(sj2));
IkReal x460=((IkReal(1.00000000000000))*(pp));
IkReal x461=((IkReal(4.00000000000000))*(pz));
IkReal x462=((cj2)*(r02));
IkReal x463=((IkReal(0.000849718686154330))*(px));
IkReal x464=((IkReal(0.00432209335219236))*(px));
IkReal x465=((IkReal(2.00000000000000))*(pp));
IkReal x466=((px)*(r01));
IkReal x467=((r02)*(sj2));
IkReal x468=((IkReal(0.0196400000000000))*(r01));
IkReal x469=((IkReal(2.00000000000000))*(r02));
IkReal x470=((cj2)*(r01));
IkReal x471=((px)*(r00));
IkReal x472=((pz)*(r01));
IkReal x473=((IkReal(0.0196400000000000))*(r02));
IkReal x474=((cj2)*(r00));
IkReal x475=((IkReal(4.00000000000000))*(py));
IkReal x476=((py)*(r01));
IkReal x477=((IkReal(1.04334000000000))*(r01));
IkReal x478=((px)*(r02));
IkReal x479=((py)*(r00));
IkReal x480=((pz)*(r02));
IkReal x481=((pz)*(r00));
IkReal x482=((IkReal(0.000362781706742103))*(px));
IkReal x483=((cj2)*(pz));
IkReal x484=((IkReal(0.0150000000000000))*(x480));
IkReal x485=((IkReal(0.0150000000000000))*(x471));
IkReal x486=((IkReal(0.0150000000000000))*(x476));
IkReal x487=((pp)*(x459));
IkReal x488=((IkReal(4.17211874901776e-6))*(x474));
IkReal x489=((pp)*(x462));
IkReal x490=((IkReal(0.000221636373503065))*(x452));
IkReal x491=((IkReal(0.0161602488000000))*(x467));
IkReal x492=((IkReal(0.788620000000000))*(x456));
IkReal x493=((IkReal(0.150423877700000))*(x462));
IkReal x494=((IkReal(0.00433094880000000))*(x470));
IkReal x495=((IkReal(0.393662435300000))*(x459));
IkReal x496=((IkReal(0.788620000000000))*(x472));
IkReal x497=((IkReal(0.0876600000000000))*(x472));
IkReal x498=((IkReal(0.0331327482000000))*(x462));
IkReal x499=((IkReal(0.00112379070315889))*(x452));
IkReal x500=((IkReal(0.00431787207292158))*(x481));
IkReal x501=((IkReal(0.00413850908900414))*(pp)*(r00));
IkReal x502=((IkReal(0.0126415506000000))*(x459));
IkReal x503=((IkReal(8.12803185080413e-5))*(x479));
IkReal x504=((IkReal(0.00431787207292158))*(x478));
IkReal x505=((IkReal(0.000210473811315417))*(x474));
IkReal x506=((IkReal(0.356982123500000))*(x467));
IkReal x507=((IkReal(0.0876600000000000))*(x456));
IkReal x508=((IkReal(0.522180000000000))*(x471));
IkReal x509=((IkReal(0.187104189500000))*(x470));
IkReal x510=((IkReal(0.522180000000000))*(x480));
IkReal x511=((IkReal(0.522180000000000))*(x476));
IkReal x512=((IkReal(8.12803185080413e-5))*(x466));
IkReal x513=((sj2)*(x444));
IkReal x514=((IkReal(4.00000000000000))*(x445));
IkReal x515=((IkReal(2.00000000000000))*(x445));
IkReal x516=((IkReal(1.04334000000000))*(cj2)*(x471));
IkReal x517=((IkReal(0.000424859343077165))*(cj2)*(x466));
IkReal x518=((IkReal(0.000424859343077165))*(pz)*(x452));
IkReal x519=((x458)*(x483));
IkReal x520=((x453)*(x477));
IkReal x521=((x457)*(x473));
IkReal x522=((IkReal(0.0196400000000000))*(py)*(x459));
IkReal x523=((IkReal(0.0196400000000000))*(px)*(x452));
IkReal x524=((IkReal(1.04334000000000))*(sj2)*(x456));
IkReal x525=((x468)*(x483));
IkReal x526=((IkReal(0.000424859343077165))*(px)*(x467));
IkReal x527=((IkReal(0.000424859343077165))*(r00)*(x453));
IkReal x528=((x453)*(x473));
IkReal x529=((x457)*(x477));
IkReal x530=((IkReal(0.0196400000000000))*(sj2)*(x456));
IkReal x531=((IkReal(0.0196400000000000))*(cj2)*(x471));
IkReal x532=((IkReal(0.00216104667609618))*(pz)*(x452));
IkReal x533=((IkReal(0.00216104667609618))*(cj2)*(x466));
IkReal x534=((x453)*(x458));
IkReal x535=((x453)*(x468));
IkReal x536=((x459)*(x482));
IkReal x537=((IkReal(0.0196400000000000))*(pz)*(x462));
IkReal x538=((x462)*(x482));
IkReal x539=((IkReal(0.000362781706742103))*(py)*(x452));
IkReal x540=((x457)*(x468));
IkReal x541=((x457)*(x458));
IkReal x542=((IkReal(0.00827701817800828))*(px)*(x471));
IkReal x543=((IkReal(1.04334000000000))*(px)*(x452));
IkReal x544=((IkReal(1.04334000000000))*(pz)*(x470));
IkReal x545=((IkReal(0.00216104667609618))*(px)*(x467));
IkReal x546=((IkReal(0.00216104667609618))*(r00)*(x453));
IkReal x547=((IkReal(0.00827701817800828))*(py)*(x466));
IkReal x548=((IkReal(0.00827701817800828))*(pz)*(x478));
IkReal x549=((IkReal(0.000362781706742103))*(pz)*(x474));
IkReal x550=((IkReal(1.04334000000000))*(py)*(x459));
IkReal x551=((IkReal(2.00000000000000))*(x456)*(x457));
IkReal x552=((pz)*(x454)*(x474));
IkReal x553=((IkReal(2.00000000000000))*(x453)*(x472));
IkReal x554=((py)*(x452)*(x454));
IkReal x555=((x459)*(x515));
IkReal x556=((IkReal(2.00000000000000))*(x444)*(x462));
IkReal x557=((r00)*(x453)*(x454));
IkReal x558=((pz)*(x453)*(x469));
IkReal x559=((x470)*(x515));
IkReal x560=((IkReal(2.00000000000000))*(x444)*(x467));
IkReal x561=((IkReal(2.00000000000000))*(x457)*(x476));
IkReal x562=((pz)*(x452)*(x454));
IkReal x563=((x495)+(x447));
IkReal x564=((x489)+(x487));
IkReal x565=((x518)+(x517));
IkReal x566=((x490)+(x496)+(x448)+(x528)+(x529));
IkReal x567=((x499)+(x497)+(x450)+(x501)+(x531)+(x530)+(x535)+(x534)+(x537));
IkReal x568=((x498)+(x449)+(x500)+(x502)+(x503)+(x559)+(x558)+(x557)+(x533)+(x532)+(x536)+(x538));
IkReal x569=((x451)+(x509)+(x504)+(x506)+(x545)+(x546)+(x549)+(x539)+(x512)+(x562)+(x560)+(x561));
IkReal x570=((x488)+(x485)+(x484)+(x486)+(x492)+(x522)+(x523)+(x520)+(x521)+(x524)+(x525)+(x519)+(x516));
IkReal x571=((x508)+(x505)+(x507)+(x550)+(x544)+(x547)+(x540)+(x541)+(x542)+(x543)+(x548)+(x511)+(x510));
IkReal x572=((x493)+(x491)+(x494)+(x446)+(x553)+(x552)+(x551)+(x556)+(x555)+(x554)+(x526)+(x527));
op[65]=((((IkReal(-0.0121636488000000))*(x467)))+(((IkReal(-0.255740000000000))*(x456)))+(((IkReal(0.133264585800000))*(r01)))+(((IkReal(-1.00000000000000))*(x488)))+(((IkReal(-1.00000000000000))*(x484)))+(((IkReal(-1.00000000000000))*(x485)))+(((IkReal(-1.00000000000000))*(x486)))+(((IkReal(-1.00000000000000))*(x526)))+(((IkReal(-1.00000000000000))*(x521)))+(((IkReal(-1.00000000000000))*(x520)))+(((IkReal(-1.00000000000000))*(x523)))+(((IkReal(-1.00000000000000))*(x522)))+(((IkReal(-1.00000000000000))*(x525)))+(((IkReal(-1.00000000000000))*(x524)))+(((IkReal(-1.00000000000000))*(x527)))+(((IkReal(-1.00000000000000))*(x551)))+(((IkReal(-1.00000000000000))*(x552)))+(((IkReal(-1.00000000000000))*(x553)))+(((IkReal(-1.00000000000000))*(x554)))+(((IkReal(-1.00000000000000))*(x555)))+(((IkReal(-1.00000000000000))*(x556)))+(x490)+(((IkReal(5.43267641992771e-5))*(r00)))+(x528)+(x529)+(x564)+(x565)+(((IkReal(-0.0103364168000000))*(r02)))+(((IkReal(0.254532796100000))*(x459)))+(((IkReal(-1.00000000000000))*(x519)))+(((IkReal(-1.00000000000000))*(x516)))+(((IkReal(-0.289553516900000))*(x462)))+(((IkReal(0.255740000000000))*(x472)))+(((IkReal(-0.00832754880000000))*(x470))));
op[66]=((((IkReal(-1.00000000000000))*(x572)))+(x570)+(x564)+(x565)+(x563)+(((IkReal(-1.00000000000000))*(x566))));
op[67]=((((pp)*(x470)))+(((IkReal(-1.00000000000000))*(x460)*(x467)))+(((IkReal(-1.00000000000000))*(x571)))+(x569)+(x567)+(((IkReal(-1.00000000000000))*(x568))));
op[68]=((((IkReal(0.00866189760000000))*(x462)))+(((IkReal(-0.300847755400000))*(x470)))+(((IkReal(-1.00000000000000))*(x465)*(x467)))+(((IkReal(-1.00000000000000))*(x462)*(x463)))+(((IkReal(0.000849718686154330))*(py)*(x452)))+(((IkReal(-0.822504190800000))*(r02)))+(((r01)*(x457)*(x475)))+(((IkReal(-0.787324870600000))*(x467)))+(((IkReal(-0.0323204976000000))*(x459)))+(((IkReal(-1.00000000000000))*(pz)*(x453)*(x455)))+(((x465)*(x470)))+(((IkReal(-1.00000000000000))*(x459)*(x463)))+(((IkReal(-1.00000000000000))*(x470)*(x514)))+(((px)*(x452)*(x461)))+(((IkReal(0.000849718686154330))*(pz)*(x474)))+(((IkReal(-0.0311385968000000))*(r01)))+(((IkReal(-4.00000000000000))*(x453)*(x471)))+(((x455)*(x513))));
op[69]=((((r01)*(x453)*(x461)))+(((IkReal(0.00863574414584316))*(x466)))+(((IkReal(-1.00000000000000))*(x462)*(x465)))+(((x459)*(x514)))+(((IkReal(0.713964247000000))*(x459)))+(((IkReal(0.000162560637016083))*(x481)))+(((IkReal(0.000725563413484206))*(r00)*(x453)))+(((IkReal(0.000725563413484206))*(px)*(x467)))+(((IkReal(-0.00432209335219236))*(pz)*(x474)))+(((IkReal(-1.00000000000000))*(x459)*(x465)))+(((IkReal(0.0812035692000000))*(r02)))+(((IkReal(-0.000162560637016083))*(x478)))+(((IkReal(-0.00863574414584316))*(x479)))+(((IkReal(-0.0662654964000000))*(x470)))+(((IkReal(-0.374208379000000))*(x462)))+(((py)*(x455)*(x457)))+(((IkReal(-0.000725563413484206))*(pz)*(x452)))+(((cj2)*(x444)*(x455)))+(((IkReal(0.546532923600000))*(r01)))+(((px)*(x452)*(x475)))+(((IkReal(0.0252831012000000))*(x467)))+(((x459)*(x464)))+(((cj2)*(x461)*(x471)))+(((IkReal(-0.00432209335219236))*(py)*(x452)))+(((x462)*(x464)))+(((IkReal(-0.000725563413484206))*(cj2)*(x466))));
op[70]=((((IkReal(-1.00000000000000))*(x460)*(x462)))+(((IkReal(-1.00000000000000))*(x459)*(x460)))+(x570)+(x572)+(((IkReal(-1.00000000000000))*(x565)))+(((IkReal(-1.00000000000000))*(x566)))+(((IkReal(-1.00000000000000))*(x563))));
op[71]=((((IkReal(-1.00000000000000))*(x460)*(x470)))+(((IkReal(-1.00000000000000))*(x571)))+(x568)+(x567)+(((IkReal(-1.00000000000000))*(x569)))+(((pp)*(x467))));
solvedialyticpoly8qep(op,zeror,numroots);
IkReal j0array[16], cj0array[16], sj0array[16], j1array[16], cj1array[16], sj1array[16], j3array[16], cj3array[16], sj3array[16];
int numsolutions = 0;
for(int ij0 = 0; ij0 < numroots; ij0 += 3)
{
IkReal htj0 = zeror[ij0+0], htj1 = zeror[ij0+1], htj3 = zeror[ij0+2];
j0array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj0)));
j1array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj1)));
j3array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj3)));
IkReal x573=(htj0)*(htj0);
IkReal x574=(htj1)*(htj1);
IkReal x575=(htj3)*(htj3);
cj0array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x573))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x573)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x573))))));
cj1array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x574))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x574)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x574))))));
cj3array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x575))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x575)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x575))))));
sj0array[numsolutions]=((IkReal(2.00000000000000))*(htj0)*(((IKabs(((IkReal(1.00000000000000))+((htj0)*(htj0)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj0)*(htj0))))):(IkReal)1.0e30)));
sj1array[numsolutions]=((IkReal(2.00000000000000))*(htj1)*(((IKabs(((IkReal(1.00000000000000))+((htj1)*(htj1)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj1)*(htj1))))):(IkReal)1.0e30)));
sj3array[numsolutions]=((IkReal(2.00000000000000))*(htj3)*(((IKabs(((IkReal(1.00000000000000))+((htj3)*(htj3)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj3)*(htj3))))):(IkReal)1.0e30)));
if( j0array[numsolutions] > IKPI )
{
    j0array[numsolutions]-=IK2PI;
}
else if( j0array[numsolutions] < -IKPI )
{
    j0array[numsolutions]+=IK2PI;
}
if( j1array[numsolutions] > IKPI )
{
    j1array[numsolutions]-=IK2PI;
}
else if( j1array[numsolutions] < -IKPI )
{
    j1array[numsolutions]+=IK2PI;
}
if( j3array[numsolutions] > IKPI )
{
    j3array[numsolutions]-=IK2PI;
}
else if( j3array[numsolutions] < -IKPI )
{
    j3array[numsolutions]+=IK2PI;
}
numsolutions++;
}
bool j0valid[16]={true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true};
_nj0 = 16;
_nj1 = 1;
_nj3 = 1;
for(int ij0 = 0; ij0 < numsolutions; ++ij0)
    {
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
_ij1[0] = 0; _ij1[1] = -1;
_ij3[0] = 0; _ij3[1] = -1;
for(int iij0 = ij0+1; iij0 < numsolutions; ++iij0)
{
if( !j0valid[iij0] ) { continue; }
if( IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(cj1array[ij0]-cj1array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij0]-sj1array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(cj3array[ij0]-cj3array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij0]-sj3array[iij0]) < IKFAST_SOLUTION_THRESH &&  1 )
{
    j0valid[iij0]=false; _ij0[1] = iij0; _ij1[1] = 0; _ij3[1] = 0;  break; 
}
}
    j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

    j1 = j1array[ij0]; cj1 = cj1array[ij0]; sj1 = sj1array[ij0];

    j3 = j3array[ij0]; cj3 = cj3array[ij0]; sj3 = sj3array[ij0];

{
IkReal dummyeval[1];
IkReal gconst0;
gconst0=IKsign(cj3);
dummyeval[0]=cj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst1;
gconst1=IKsign(sj3);
dummyeval[0]=sj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[2];
IkReal x576=((cj1)*(sj2));
IkReal x577=((cj2)*(sj1));
IkReal x578=((cj0)*(py));
IkReal x579=((IkReal(1.00000000000000))*(px)*(sj0));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0588300000000000))+(((x576)*(x578)))+(((IkReal(-1.00000000000000))*(x577)*(x579)))+(((pz)*(sj1)*(sj2)))+(((IkReal(-1.00000000000000))*(x576)*(x579)))+(((IkReal(0.521670000000000))*(cj2)))+(((x577)*(x578)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(pz)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x580=((IkReal(5.23852937836376))*(cj0));
IkReal x581=((IkReal(5.23852937836376))*(cj1));
IkReal x582=((pz)*(sj2));
IkReal x583=((IkReal(0.0216797014453736))*(sj0));
IkReal x584=((cj2)*(px));
IkReal x585=((IkReal(0.0216797014453736))*(cj0));
IkReal x586=((IkReal(5.23852937836376))*(sj1));
IkReal x587=((px)*(sj2));
IkReal x588=((cj2)*(pz));
IkReal x589=((py)*(sj1)*(sj2));
IkReal x590=((cj1)*(cj2)*(py));
if( IKabs(((IkReal(0.00854852307692527))+(((IkReal(-1.00000000000000))*(sj1)*(x583)*(x587)))+(((IkReal(-1.00000000000000))*(x585)*(x590)))+(((IkReal(-1.00000000000000))*(px)*(x580)))+(((x585)*(x589)))+(((IkReal(-0.0216797014453736))*(cj1)*(x582)))+(((IkReal(-0.000212894668193569))*(cj2)))+(((IkReal(-5.23852937836376))*(py)*(sj0)))+(((IkReal(-0.0216797014453736))*(sj1)*(x588)))+(((IkReal(0.0113096498530081))*(sj2)))+(((cj1)*(x583)*(x584))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-2.06560451918261))+(((IkReal(-1.00000000000000))*(x580)*(x589)))+(((x581)*(x582)))+(((IkReal(-1.00000000000000))*(py)*(x583)))+(((IkReal(-1.00000000000000))*(px)*(x585)))+(((x586)*(x588)))+(((IkReal(0.0514423584955321))*(cj2)))+(((IkReal(-2.73278362081102))*(sj2)))+(((x580)*(x590)))+(((sj0)*(x586)*(x587)))+(((IkReal(-1.00000000000000))*(sj0)*(x581)*(x584))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.00854852307692527))+(((IkReal(-1.00000000000000))*(sj1)*(x583)*(x587)))+(((IkReal(-1.00000000000000))*(x585)*(x590)))+(((IkReal(-1.00000000000000))*(px)*(x580)))+(((x585)*(x589)))+(((IkReal(-0.0216797014453736))*(cj1)*(x582)))+(((IkReal(-0.000212894668193569))*(cj2)))+(((IkReal(-5.23852937836376))*(py)*(sj0)))+(((IkReal(-0.0216797014453736))*(sj1)*(x588)))+(((IkReal(0.0113096498530081))*(sj2)))+(((cj1)*(x583)*(x584)))))+IKsqr(((IkReal(-2.06560451918261))+(((IkReal(-1.00000000000000))*(x580)*(x589)))+(((x581)*(x582)))+(((IkReal(-1.00000000000000))*(py)*(x583)))+(((IkReal(-1.00000000000000))*(px)*(x585)))+(((x586)*(x588)))+(((IkReal(0.0514423584955321))*(cj2)))+(((IkReal(-2.73278362081102))*(sj2)))+(((x580)*(x590)))+(((sj0)*(x586)*(x587)))+(((IkReal(-1.00000000000000))*(sj0)*(x581)*(x584)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((IkReal(0.00854852307692527))+(((IkReal(-1.00000000000000))*(sj1)*(x583)*(x587)))+(((IkReal(-1.00000000000000))*(x585)*(x590)))+(((IkReal(-1.00000000000000))*(px)*(x580)))+(((x585)*(x589)))+(((IkReal(-0.0216797014453736))*(cj1)*(x582)))+(((IkReal(-0.000212894668193569))*(cj2)))+(((IkReal(-5.23852937836376))*(py)*(sj0)))+(((IkReal(-0.0216797014453736))*(sj1)*(x588)))+(((IkReal(0.0113096498530081))*(sj2)))+(((cj1)*(x583)*(x584)))), ((IkReal(-2.06560451918261))+(((IkReal(-1.00000000000000))*(x580)*(x589)))+(((x581)*(x582)))+(((IkReal(-1.00000000000000))*(py)*(x583)))+(((IkReal(-1.00000000000000))*(px)*(x585)))+(((x586)*(x588)))+(((IkReal(0.0514423584955321))*(cj2)))+(((IkReal(-2.73278362081102))*(sj2)))+(((x580)*(x590)))+(((sj0)*(x586)*(x587)))+(((IkReal(-1.00000000000000))*(sj0)*(x581)*(x584)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[2];
IkReal x591=IKsin(j4);
IkReal x592=IKcos(j4);
IkReal x593=((cj1)*(cj2));
IkReal x594=((px)*(sj0));
IkReal x595=((cj0)*(py));
IkReal x596=((sj1)*(sj2));
evalcond[0]=((((IkReal(0.190890000000000))*(x591)))+(((cj0)*(px)))+(((py)*(sj0)))+(((IkReal(0.000790000000000000))*(x592))));
evalcond[1]=((IkReal(-0.394310000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((x594)*(x596)))+(((IkReal(-0.190890000000000))*(x592)))+(((IkReal(-1.00000000000000))*(x593)*(x594)))+(((IkReal(-1.00000000000000))*(x595)*(x596)))+(((cj2)*(pz)*(sj1)))+(((cj1)*(pz)*(sj2)))+(((IkReal(0.000790000000000000))*(x591)))+(((IkReal(-0.521670000000000))*(sj2)))+(((x593)*(x595))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
dummyeval[0]=cj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x597=((IkReal(1.00000000000000))*(sj2));
IkReal x598=((px)*(sj0));
IkReal x599=((pz)*(sj2));
IkReal x600=((cj0)*(sj1));
IkReal x601=((cj1)*(sj2));
IkReal x602=((sj1)*(sj2));
IkReal x603=((cj2)*(sj1));
IkReal x604=((r00)*(sj0));
IkReal x605=((cj0)*(cj1)*(cj2));
IkReal x606=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.000790000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x604)*(x606)))+(((r02)*(x601)))+(((r02)*(x603)))+(((x602)*(x604)))+(((r01)*(x605)))+(((IkReal(-1.00000000000000))*(r01)*(x597)*(x600))));
evalcond[3]=((IkReal(-0.585200000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((cj1)*(x599)))+(((IkReal(-1.00000000000000))*(x598)*(x606)))+(((py)*(x605)))+(((pz)*(x603)))+(((IkReal(-0.521670000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(py)*(x597)*(x600)))+(((x598)*(x602))));
evalcond[4]=((IkReal(0.0588300000000000))+(((cj2)*(py)*(x600)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(cj1)*(x597)*(x598)))+(((sj1)*(x599)))+(((IkReal(-1.00000000000000))*(x598)*(x603)))+(((IkReal(-1.00000000000000))*(pz)*(x606)))+(((IkReal(0.00982000000000000))*(sj2)))+(((cj0)*(py)*(x601))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x607=((IkReal(1.00000000000000))*(sj2));
IkReal x608=((cj0)*(r01));
IkReal x609=((r00)*(sj0));
IkReal x610=((cj2)*(sj1));
if( IKabs(((((r01)*(sj0)))+(((cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(cj1)*(x607)*(x608)))+(((cj1)*(sj2)*(x609)))+(((IkReal(-1.00000000000000))*(x608)*(x610)))+(((x609)*(x610)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x607)))+(((cj1)*(cj2)*(r02))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r01)*(sj0)))+(((cj0)*(r00)))))+IKsqr(((((IkReal(-1.00000000000000))*(cj1)*(x607)*(x608)))+(((cj1)*(sj2)*(x609)))+(((IkReal(-1.00000000000000))*(x608)*(x610)))+(((x609)*(x610)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x607)))+(((cj1)*(cj2)*(r02)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((r01)*(sj0)))+(((cj0)*(r00)))), ((((IkReal(-1.00000000000000))*(cj1)*(x607)*(x608)))+(((cj1)*(sj2)*(x609)))+(((IkReal(-1.00000000000000))*(x608)*(x610)))+(((x609)*(x610)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x607)))+(((cj1)*(cj2)*(r02)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x611=((cj2)*(sj1));
IkReal x612=((cj0)*(r01));
IkReal x613=((cj1)*(sj2));
IkReal x614=((IkReal(1.00000000000000))*(r00)*(sj0));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x611)*(x614)))+(((x611)*(x612)))+(((x612)*(x613)))+(IKcos(j5))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(x613)*(x614)))+(((r02)*(sj1)*(sj2))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x615=((IkReal(1.00000000000000))*(sj2));
IkReal x616=((px)*(sj0));
IkReal x617=((pz)*(sj2));
IkReal x618=((cj0)*(sj1));
IkReal x619=((cj1)*(sj2));
IkReal x620=((sj1)*(sj2));
IkReal x621=((cj2)*(sj1));
IkReal x622=((r00)*(sj0));
IkReal x623=((cj0)*(cj1)*(cj2));
IkReal x624=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.000790000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((r02)*(x621)))+(((IkReal(-1.00000000000000))*(x622)*(x624)))+(((r01)*(x623)))+(((r02)*(x619)))+(((IkReal(-1.00000000000000))*(r01)*(x615)*(x618)))+(((x620)*(x622))));
evalcond[3]=((IkReal(-0.203420000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((py)*(x623)))+(((pz)*(x621)))+(((x616)*(x620)))+(((cj1)*(x617)))+(((IkReal(-1.00000000000000))*(py)*(x615)*(x618)))+(((IkReal(-1.00000000000000))*(x616)*(x624)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(0.0588300000000000))+(((IkReal(-1.00000000000000))*(pz)*(x624)))+(((sj1)*(x617)))+(((cj2)*(py)*(x618)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(cj1)*(x615)*(x616)))+(((IkReal(-1.00000000000000))*(x616)*(x621)))+(((cj0)*(py)*(x619)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x625=((IkReal(1.00000000000000))*(sj2));
IkReal x626=((cj0)*(r01));
IkReal x627=((r00)*(sj0));
IkReal x628=((cj2)*(sj1));
if( IKabs(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r02)*(sj1)*(x625)))+(((IkReal(-1.00000000000000))*(cj1)*(x625)*(x626)))+(((cj1)*(sj2)*(x627)))+(((cj1)*(cj2)*(r02)))+(((x627)*(x628)))+(((IkReal(-1.00000000000000))*(x626)*(x628))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))))+IKsqr(((((IkReal(-1.00000000000000))*(r02)*(sj1)*(x625)))+(((IkReal(-1.00000000000000))*(cj1)*(x625)*(x626)))+(((cj1)*(sj2)*(x627)))+(((cj1)*(cj2)*(r02)))+(((x627)*(x628)))+(((IkReal(-1.00000000000000))*(x626)*(x628)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))), ((((IkReal(-1.00000000000000))*(r02)*(sj1)*(x625)))+(((IkReal(-1.00000000000000))*(cj1)*(x625)*(x626)))+(((cj1)*(sj2)*(x627)))+(((cj1)*(cj2)*(r02)))+(((x627)*(x628)))+(((IkReal(-1.00000000000000))*(x626)*(x628)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x629=((cj2)*(sj1));
IkReal x630=((cj0)*(r01));
IkReal x631=((cj1)*(sj2));
IkReal x632=((IkReal(1.00000000000000))*(r00)*(sj0));
evalcond[0]=((((r01)*(sj0)))+(IKsin(j5))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x629)*(x632)))+(((IkReal(-1.00000000000000))*(x631)*(x632)))+(((x629)*(x630)))+(IKcos(j5))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((r02)*(sj1)*(sj2)))+(((x630)*(x631))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x633=((pz)*(sj1));
IkReal x634=((cj0)*(py));
IkReal x635=((IkReal(1.00000000000000))*(sj2));
IkReal x636=((cj1)*(cj2));
IkReal x637=((px)*(sj0));
IkReal x638=((cj2)*(sj1));
IkReal x639=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(0.190890000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.393520000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((x634)*(x636)))+(((IkReal(-1.00000000000000))*(sj1)*(x634)*(x635)))+(((pz)*(x639)))+(((sj1)*(sj2)*(x637)))+(((IkReal(-0.521670000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(x636)*(x637)))+(((cj2)*(x633))));
evalcond[4]=((IkReal(0.0588300000000000))+(((IkReal(-1.00000000000000))*(cj1)*(x635)*(x637)))+(((x634)*(x638)))+(((x634)*(x639)))+(((IkReal(-1.00000000000000))*(pz)*(x636)))+(((IkReal(-1.00000000000000))*(x637)*(x638)))+(((sj2)*(x633)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x640=((IkReal(1.00000000000000))*(sj2));
IkReal x641=((r02)*(sj1));
IkReal x642=((cj0)*(r01));
IkReal x643=((IkReal(1.00000000000000))*(cj2));
IkReal x644=((cj1)*(r02));
IkReal x645=((cj1)*(r00)*(sj0));
IkReal x646=((r00)*(sj0)*(sj1));
if( IKabs(((((cj1)*(cj2)*(x642)))+(((IkReal(-1.00000000000000))*(sj1)*(x640)*(x642)))+(((sj2)*(x644)))+(((sj2)*(x646)))+(((cj2)*(x641)))+(((IkReal(-1.00000000000000))*(x643)*(x645))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x640)*(x641)))+(((IkReal(-1.00000000000000))*(cj1)*(x640)*(x642)))+(((IkReal(-1.00000000000000))*(sj1)*(x642)*(x643)))+(((sj2)*(x645)))+(((cj2)*(x644)))+(((cj2)*(x646))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj1)*(cj2)*(x642)))+(((IkReal(-1.00000000000000))*(sj1)*(x640)*(x642)))+(((sj2)*(x644)))+(((sj2)*(x646)))+(((cj2)*(x641)))+(((IkReal(-1.00000000000000))*(x643)*(x645)))))+IKsqr(((((IkReal(-1.00000000000000))*(x640)*(x641)))+(((IkReal(-1.00000000000000))*(cj1)*(x640)*(x642)))+(((IkReal(-1.00000000000000))*(sj1)*(x642)*(x643)))+(((sj2)*(x645)))+(((cj2)*(x644)))+(((cj2)*(x646)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((cj1)*(cj2)*(x642)))+(((IkReal(-1.00000000000000))*(sj1)*(x640)*(x642)))+(((sj2)*(x644)))+(((sj2)*(x646)))+(((cj2)*(x641)))+(((IkReal(-1.00000000000000))*(x643)*(x645)))), ((((IkReal(-1.00000000000000))*(x640)*(x641)))+(((IkReal(-1.00000000000000))*(cj1)*(x640)*(x642)))+(((IkReal(-1.00000000000000))*(sj1)*(x642)*(x643)))+(((sj2)*(x645)))+(((cj2)*(x644)))+(((cj2)*(x646)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x647=((r02)*(sj2));
IkReal x648=((IkReal(1.00000000000000))*(sj2));
IkReal x649=((r00)*(sj0));
IkReal x650=((cj1)*(cj2));
IkReal x651=((cj0)*(r01));
IkReal x652=((sj1)*(x651));
IkReal x653=((IkReal(1.00000000000000))*(cj2)*(x649));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj1)*(x648)*(x649)))+(((IkReal(-1.00000000000000))*(sj1)*(x653)))+(((sj1)*(x647)))+(((IkReal(-1.00000000000000))*(r02)*(x650)))+(((cj1)*(sj2)*(x651)))+(((cj2)*(x652)))+(IKcos(j5)));
evalcond[1]=((((cj1)*(x647)))+(((cj2)*(r02)*(sj1)))+(((sj1)*(sj2)*(x649)))+(((IkReal(-1.00000000000000))*(x648)*(x652)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((IkReal(-1.00000000000000))*(x649)*(x650)))+(((x650)*(x651))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x654=((pz)*(sj1));
IkReal x655=((cj0)*(py));
IkReal x656=((IkReal(1.00000000000000))*(sj2));
IkReal x657=((cj1)*(cj2));
IkReal x658=((px)*(sj0));
IkReal x659=((cj2)*(sj1));
IkReal x660=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(-0.190890000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.395100000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(sj1)*(x655)*(x656)))+(((cj2)*(x654)))+(((sj1)*(sj2)*(x658)))+(((pz)*(x660)))+(((x655)*(x657)))+(((IkReal(-0.521670000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(x657)*(x658))));
evalcond[4]=((IkReal(0.0588300000000000))+(((IkReal(-1.00000000000000))*(pz)*(x657)))+(((IkReal(0.521670000000000))*(cj2)))+(((sj2)*(x654)))+(((x655)*(x659)))+(((IkReal(-1.00000000000000))*(x658)*(x659)))+(((x655)*(x660)))+(((IkReal(0.00982000000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(cj1)*(x656)*(x658))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x661=((IkReal(1.00000000000000))*(sj2));
IkReal x662=((r02)*(sj1));
IkReal x663=((cj0)*(r01));
IkReal x664=((r00)*(sj0));
IkReal x665=((cj1)*(r02));
IkReal x666=((IkReal(1.00000000000000))*(cj2));
if( IKabs(((((IkReal(-1.00000000000000))*(x662)*(x666)))+(((sj1)*(sj2)*(x663)))+(((cj1)*(cj2)*(x664)))+(((IkReal(-1.00000000000000))*(x661)*(x665)))+(((IkReal(-1.00000000000000))*(sj1)*(x661)*(x664)))+(((IkReal(-1.00000000000000))*(cj1)*(x663)*(x666))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj2)*(sj1)*(x664)))+(((cj2)*(x665)))+(((IkReal(-1.00000000000000))*(x661)*(x662)))+(((cj1)*(sj2)*(x664)))+(((IkReal(-1.00000000000000))*(cj1)*(x661)*(x663)))+(((IkReal(-1.00000000000000))*(sj1)*(x663)*(x666))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x662)*(x666)))+(((sj1)*(sj2)*(x663)))+(((cj1)*(cj2)*(x664)))+(((IkReal(-1.00000000000000))*(x661)*(x665)))+(((IkReal(-1.00000000000000))*(sj1)*(x661)*(x664)))+(((IkReal(-1.00000000000000))*(cj1)*(x663)*(x666)))))+IKsqr(((((cj2)*(sj1)*(x664)))+(((cj2)*(x665)))+(((IkReal(-1.00000000000000))*(x661)*(x662)))+(((cj1)*(sj2)*(x664)))+(((IkReal(-1.00000000000000))*(cj1)*(x661)*(x663)))+(((IkReal(-1.00000000000000))*(sj1)*(x663)*(x666)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x662)*(x666)))+(((sj1)*(sj2)*(x663)))+(((cj1)*(cj2)*(x664)))+(((IkReal(-1.00000000000000))*(x661)*(x665)))+(((IkReal(-1.00000000000000))*(sj1)*(x661)*(x664)))+(((IkReal(-1.00000000000000))*(cj1)*(x663)*(x666)))), ((((cj2)*(sj1)*(x664)))+(((cj2)*(x665)))+(((IkReal(-1.00000000000000))*(x661)*(x662)))+(((cj1)*(sj2)*(x664)))+(((IkReal(-1.00000000000000))*(cj1)*(x661)*(x663)))+(((IkReal(-1.00000000000000))*(sj1)*(x663)*(x666)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x667=((r02)*(sj2));
IkReal x668=((IkReal(1.00000000000000))*(sj2));
IkReal x669=((r00)*(sj0));
IkReal x670=((cj1)*(cj2));
IkReal x671=((cj0)*(r01));
IkReal x672=((sj1)*(x671));
IkReal x673=((IkReal(1.00000000000000))*(cj2)*(x669));
evalcond[0]=((((cj2)*(x672)))+(((IkReal(-1.00000000000000))*(r02)*(x670)))+(((IkReal(-1.00000000000000))*(cj1)*(x668)*(x669)))+(((sj1)*(x667)))+(IKcos(j5))+(((cj1)*(sj2)*(x671)))+(((IkReal(-1.00000000000000))*(sj1)*(x673))));
evalcond[1]=((((sj1)*(sj2)*(x669)))+(((x670)*(x671)))+(((IkReal(-1.00000000000000))*(x668)*(x672)))+(IKsin(j5))+(((cj2)*(r02)*(sj1)))+(((cj1)*(x667)))+(((IkReal(-1.00000000000000))*(x669)*(x670))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x674=((IkReal(1.00000000000000))*(sj2));
IkReal x675=((r02)*(sj1));
IkReal x676=((cj0)*(r01));
IkReal x677=((IkReal(1.00000000000000))*(cj2));
IkReal x678=((cj1)*(r02));
IkReal x679=((cj1)*(r00)*(sj0));
IkReal x680=((r00)*(sj0)*(sj1));
if( IKabs(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((cj2)*(x675)))+(((sj2)*(x678)))+(((sj2)*(x680)))+(((IkReal(-1.00000000000000))*(sj1)*(x674)*(x676)))+(((IkReal(-1.00000000000000))*(x677)*(x679)))+(((cj1)*(cj2)*(x676))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj2)*(x678)))+(((sj2)*(x679)))+(((IkReal(-1.00000000000000))*(cj1)*(x674)*(x676)))+(((IkReal(-1.00000000000000))*(sj1)*(x676)*(x677)))+(((IkReal(-1.00000000000000))*(x674)*(x675)))+(((cj2)*(x680))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((cj2)*(x675)))+(((sj2)*(x678)))+(((sj2)*(x680)))+(((IkReal(-1.00000000000000))*(sj1)*(x674)*(x676)))+(((IkReal(-1.00000000000000))*(x677)*(x679)))+(((cj1)*(cj2)*(x676)))))))+IKsqr(((((cj2)*(x678)))+(((sj2)*(x679)))+(((IkReal(-1.00000000000000))*(cj1)*(x674)*(x676)))+(((IkReal(-1.00000000000000))*(sj1)*(x676)*(x677)))+(((IkReal(-1.00000000000000))*(x674)*(x675)))+(((cj2)*(x680)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((cj2)*(x675)))+(((sj2)*(x678)))+(((sj2)*(x680)))+(((IkReal(-1.00000000000000))*(sj1)*(x674)*(x676)))+(((IkReal(-1.00000000000000))*(x677)*(x679)))+(((cj1)*(cj2)*(x676)))))), ((((cj2)*(x678)))+(((sj2)*(x679)))+(((IkReal(-1.00000000000000))*(cj1)*(x674)*(x676)))+(((IkReal(-1.00000000000000))*(sj1)*(x676)*(x677)))+(((IkReal(-1.00000000000000))*(x674)*(x675)))+(((cj2)*(x680)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x681=IKsin(j5);
IkReal x682=((r02)*(sj2));
IkReal x683=((IkReal(1.00000000000000))*(sj2));
IkReal x684=((r00)*(sj0));
IkReal x685=((IkReal(1.00000000000000))*(cj2));
IkReal x686=((IkReal(1.00000000000000))*(x681));
IkReal x687=((cj0)*(r01)*(sj1));
IkReal x688=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x686)))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj1)*(r02)*(x685)))+(((sj2)*(x688)))+(((IkReal(-1.00000000000000))*(cj1)*(x683)*(x684)))+(((IkReal(-1.00000000000000))*(sj1)*(x684)*(x685)))+(IKcos(j5))+(((sj1)*(x682)))+(((cj2)*(x687))));
evalcond[2]=((((cj1)*(x682)))+(((IkReal(-1.00000000000000))*(cj1)*(x684)*(x685)))+(((cj2)*(r02)*(sj1)))+(((sj1)*(sj2)*(x684)))+(((IkReal(-1.00000000000000))*(x683)*(x687)))+(((cj2)*(x688)))+(((IkReal(-1.00000000000000))*(sj4)*(x686))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x689=((IkReal(1.00000000000000))*(sj2));
IkReal x690=((cj0)*(r01));
IkReal x691=((r00)*(sj0));
IkReal x692=((cj2)*(sj1));
if( IKabs(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(cj1)*(x689)*(x690)))+(((x691)*(x692)))+(((IkReal(-1.00000000000000))*(x690)*(x692)))+(((cj1)*(cj2)*(r02)))+(((cj1)*(sj2)*(x691)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x689))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))))+IKsqr(((((IkReal(-1.00000000000000))*(cj1)*(x689)*(x690)))+(((x691)*(x692)))+(((IkReal(-1.00000000000000))*(x690)*(x692)))+(((cj1)*(cj2)*(r02)))+(((cj1)*(sj2)*(x691)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x689)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))), ((((IkReal(-1.00000000000000))*(cj1)*(x689)*(x690)))+(((x691)*(x692)))+(((IkReal(-1.00000000000000))*(x690)*(x692)))+(((cj1)*(cj2)*(r02)))+(((cj1)*(sj2)*(x691)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x689)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x693=IKsin(j5);
IkReal x694=((r02)*(sj2));
IkReal x695=((IkReal(1.00000000000000))*(sj2));
IkReal x696=((r00)*(sj0));
IkReal x697=((IkReal(1.00000000000000))*(cj2));
IkReal x698=((IkReal(1.00000000000000))*(x693));
IkReal x699=((cj0)*(r01)*(sj1));
IkReal x700=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x698)))+(((cj0)*(r00))));
evalcond[1]=((((sj1)*(x694)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x697)))+(((sj2)*(x700)))+(IKcos(j5))+(((IkReal(-1.00000000000000))*(sj1)*(x696)*(x697)))+(((cj2)*(x699)))+(((IkReal(-1.00000000000000))*(cj1)*(x695)*(x696))));
evalcond[2]=((((cj1)*(x694)))+(((IkReal(-1.00000000000000))*(cj1)*(x696)*(x697)))+(((IkReal(-1.00000000000000))*(sj4)*(x698)))+(((cj2)*(r02)*(sj1)))+(((sj1)*(sj2)*(x696)))+(((IkReal(-1.00000000000000))*(x695)*(x699)))+(((cj2)*(x700))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x701=((cj1)*(sj2));
IkReal x702=((cj2)*(sj1));
IkReal x703=((cj0)*(py));
IkReal x704=((IkReal(1.00000000000000))*(px)*(sj0));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0438300000000000))+(((x701)*(x703)))+(((x702)*(x703)))+(((IkReal(-1.00000000000000))*(x702)*(x704)))+(((pz)*(sj1)*(sj2)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(pz)))+(((IkReal(-1.00000000000000))*(x701)*(x704)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x705=((IkReal(5.23852937836376))*(cj0));
IkReal x706=((IkReal(0.0216797014453736))*(sj0));
IkReal x707=((IkReal(0.0216797014453736))*(cj0));
IkReal x708=((IkReal(5.23852937836376))*(sj0));
IkReal x709=((py)*(sj1)*(sj2));
IkReal x710=((cj1)*(cj2)*(px));
IkReal x711=((cj1)*(pz)*(sj2));
IkReal x712=((px)*(sj1)*(sj2));
IkReal x713=((cj1)*(cj2)*(py));
IkReal x714=((cj2)*(pz)*(sj1));
if( IKabs(((IkReal(-0.00277218342381993))+(((IkReal(-1.00000000000000))*(py)*(x708)))+(((IkReal(-1.00000000000000))*(x707)*(x709)))+(((IkReal(-1.00000000000000))*(x706)*(x710)))+(((x707)*(x713)))+(((x706)*(x712)))+(((IkReal(-0.0113096498530081))*(sj2)))+(((IkReal(0.0216797014453736))*(x714)))+(((IkReal(0.0216797014453736))*(x711)))+(((IkReal(-1.00000000000000))*(px)*(x705)))+(((IkReal(0.000212894668193569))*(cj2))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(0.669850751611374))+(((IkReal(-1.00000000000000))*(py)*(x706)))+(((IkReal(-0.0514423584955321))*(cj2)))+(((IkReal(-1.00000000000000))*(px)*(x707)))+(((IkReal(-1.00000000000000))*(x705)*(x713)))+(((IkReal(-1.00000000000000))*(x708)*(x712)))+(((IkReal(-5.23852937836376))*(x714)))+(((IkReal(-5.23852937836376))*(x711)))+(((x708)*(x710)))+(((x705)*(x709)))+(((IkReal(2.73278362081102))*(sj2))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(-0.00277218342381993))+(((IkReal(-1.00000000000000))*(py)*(x708)))+(((IkReal(-1.00000000000000))*(x707)*(x709)))+(((IkReal(-1.00000000000000))*(x706)*(x710)))+(((x707)*(x713)))+(((x706)*(x712)))+(((IkReal(-0.0113096498530081))*(sj2)))+(((IkReal(0.0216797014453736))*(x714)))+(((IkReal(0.0216797014453736))*(x711)))+(((IkReal(-1.00000000000000))*(px)*(x705)))+(((IkReal(0.000212894668193569))*(cj2)))))+IKsqr(((IkReal(0.669850751611374))+(((IkReal(-1.00000000000000))*(py)*(x706)))+(((IkReal(-0.0514423584955321))*(cj2)))+(((IkReal(-1.00000000000000))*(px)*(x707)))+(((IkReal(-1.00000000000000))*(x705)*(x713)))+(((IkReal(-1.00000000000000))*(x708)*(x712)))+(((IkReal(-5.23852937836376))*(x714)))+(((IkReal(-5.23852937836376))*(x711)))+(((x708)*(x710)))+(((x705)*(x709)))+(((IkReal(2.73278362081102))*(sj2)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((IkReal(-0.00277218342381993))+(((IkReal(-1.00000000000000))*(py)*(x708)))+(((IkReal(-1.00000000000000))*(x707)*(x709)))+(((IkReal(-1.00000000000000))*(x706)*(x710)))+(((x707)*(x713)))+(((x706)*(x712)))+(((IkReal(-0.0113096498530081))*(sj2)))+(((IkReal(0.0216797014453736))*(x714)))+(((IkReal(0.0216797014453736))*(x711)))+(((IkReal(-1.00000000000000))*(px)*(x705)))+(((IkReal(0.000212894668193569))*(cj2)))), ((IkReal(0.669850751611374))+(((IkReal(-1.00000000000000))*(py)*(x706)))+(((IkReal(-0.0514423584955321))*(cj2)))+(((IkReal(-1.00000000000000))*(px)*(x707)))+(((IkReal(-1.00000000000000))*(x705)*(x713)))+(((IkReal(-1.00000000000000))*(x708)*(x712)))+(((IkReal(-5.23852937836376))*(x714)))+(((IkReal(-5.23852937836376))*(x711)))+(((x708)*(x710)))+(((x705)*(x709)))+(((IkReal(2.73278362081102))*(sj2)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[2];
IkReal x715=IKcos(j4);
IkReal x716=IKsin(j4);
IkReal x717=((cj1)*(cj2));
IkReal x718=((px)*(sj0));
IkReal x719=((cj0)*(py));
IkReal x720=((sj1)*(sj2));
evalcond[0]=((((IkReal(0.000790000000000000))*(x715)))+(((cj0)*(px)))+(((py)*(sj0)))+(((IkReal(0.190890000000000))*(x716))));
evalcond[1]=((IkReal(-0.127870000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-0.000790000000000000))*(x716)))+(((x717)*(x719)))+(((cj2)*(pz)*(sj1)))+(((cj1)*(pz)*(sj2)))+(((x718)*(x720)))+(((IkReal(-1.00000000000000))*(x719)*(x720)))+(((IkReal(-1.00000000000000))*(x717)*(x718)))+(((IkReal(-0.521670000000000))*(sj2)))+(((IkReal(0.190890000000000))*(x715))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
dummyeval[0]=cj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x721=((IkReal(1.00000000000000))*(sj2));
IkReal x722=((px)*(sj0));
IkReal x723=((pz)*(sj2));
IkReal x724=((cj0)*(sj1));
IkReal x725=((cj1)*(sj2));
IkReal x726=((sj1)*(sj2));
IkReal x727=((cj2)*(sj1));
IkReal x728=((r00)*(sj0));
IkReal x729=((cj0)*(cj1)*(cj2));
IkReal x730=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.000790000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((x726)*(x728)))+(((r01)*(x729)))+(((r02)*(x727)))+(((r02)*(x725)))+(((IkReal(-1.00000000000000))*(r01)*(x721)*(x724)))+(((IkReal(-1.00000000000000))*(x728)*(x730))));
evalcond[3]=((IkReal(0.0630200000000000))+(((cj1)*(x723)))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(py)*(x721)*(x724)))+(((IkReal(-1.00000000000000))*(x722)*(x730)))+(((x722)*(x726)))+(((py)*(x729)))+(((pz)*(x727)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(-0.0438300000000000))+(((cj2)*(py)*(x724)))+(((cj0)*(py)*(x725)))+(((IkReal(-1.00000000000000))*(cj1)*(x721)*(x722)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x722)*(x727)))+(((IkReal(-1.00000000000000))*(pz)*(x730)))+(((sj1)*(x723)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x731=((cj2)*(sj1));
IkReal x732=((cj0)*(r01));
IkReal x733=((cj1)*(sj2));
IkReal x734=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((r01)*(sj0)))+(((cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x731)*(x732)))+(((IkReal(-1.00000000000000))*(x731)*(x734)))+(((IkReal(-1.00000000000000))*(x733)*(x734)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((r02)*(sj1)*(sj2)))+(((x732)*(x733))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r01)*(sj0)))+(((cj0)*(r00)))))+IKsqr(((((x731)*(x732)))+(((IkReal(-1.00000000000000))*(x731)*(x734)))+(((IkReal(-1.00000000000000))*(x733)*(x734)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((r02)*(sj1)*(sj2)))+(((x732)*(x733)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((r01)*(sj0)))+(((cj0)*(r00)))), ((((x731)*(x732)))+(((IkReal(-1.00000000000000))*(x731)*(x734)))+(((IkReal(-1.00000000000000))*(x733)*(x734)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((r02)*(sj1)*(sj2)))+(((x732)*(x733)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x735=((cj2)*(sj1));
IkReal x736=((cj0)*(r01));
IkReal x737=((cj1)*(sj2));
IkReal x738=((IkReal(1.00000000000000))*(r00)*(sj0));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x735)*(x738)))+(((x735)*(x736)))+(((x736)*(x737)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((IkReal(-1.00000000000000))*(x737)*(x738)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((r02)*(sj1)*(sj2))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x739=((IkReal(1.00000000000000))*(sj2));
IkReal x740=((px)*(sj0));
IkReal x741=((pz)*(sj2));
IkReal x742=((cj0)*(sj1));
IkReal x743=((cj1)*(sj2));
IkReal x744=((sj1)*(sj2));
IkReal x745=((cj2)*(sj1));
IkReal x746=((r00)*(sj0));
IkReal x747=((cj0)*(cj1)*(cj2));
IkReal x748=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.000790000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((r02)*(x743)))+(((r02)*(x745)))+(((IkReal(-1.00000000000000))*(x746)*(x748)))+(((x744)*(x746)))+(((IkReal(-1.00000000000000))*(r01)*(x739)*(x742)))+(((r01)*(x747))));
evalcond[3]=((IkReal(-0.318760000000000))+(((py)*(x747)))+(((IkReal(0.00982000000000000))*(cj2)))+(((cj1)*(x741)))+(((IkReal(-1.00000000000000))*(py)*(x739)*(x742)))+(((x740)*(x744)))+(((IkReal(-1.00000000000000))*(x740)*(x748)))+(((IkReal(-0.521670000000000))*(sj2)))+(((pz)*(x745))));
evalcond[4]=((IkReal(-0.0438300000000000))+(((IkReal(0.521670000000000))*(cj2)))+(((sj1)*(x741)))+(((IkReal(-1.00000000000000))*(pz)*(x748)))+(((IkReal(-1.00000000000000))*(cj1)*(x739)*(x740)))+(((cj2)*(py)*(x742)))+(((IkReal(-1.00000000000000))*(x740)*(x745)))+(((cj0)*(py)*(x743)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x749=((cj2)*(sj1));
IkReal x750=((cj0)*(r01));
IkReal x751=((cj1)*(sj2));
IkReal x752=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x751)*(x752)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(x749)*(x752)))+(((r02)*(sj1)*(sj2)))+(((x749)*(x750)))+(((x750)*(x751))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))))+IKsqr(((((IkReal(-1.00000000000000))*(x751)*(x752)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(x749)*(x752)))+(((r02)*(sj1)*(sj2)))+(((x749)*(x750)))+(((x750)*(x751)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))), ((((IkReal(-1.00000000000000))*(x751)*(x752)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(x749)*(x752)))+(((r02)*(sj1)*(sj2)))+(((x749)*(x750)))+(((x750)*(x751)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x753=((cj2)*(sj1));
IkReal x754=((cj0)*(r01));
IkReal x755=((cj1)*(sj2));
IkReal x756=((IkReal(1.00000000000000))*(r00)*(sj0));
evalcond[0]=((((r01)*(sj0)))+(IKsin(j5))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x755)*(x756)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((IkReal(-1.00000000000000))*(x753)*(x756)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((x753)*(x754)))+(((r02)*(sj1)*(sj2)))+(((x754)*(x755))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x757=((pz)*(sj1));
IkReal x758=((cj0)*(py));
IkReal x759=((IkReal(1.00000000000000))*(sj2));
IkReal x760=((cj1)*(cj2));
IkReal x761=((px)*(sj0));
IkReal x762=((cj2)*(sj1));
IkReal x763=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(0.190890000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.128660000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((sj1)*(sj2)*(x761)))+(((IkReal(-1.00000000000000))*(sj1)*(x758)*(x759)))+(((x758)*(x760)))+(((cj2)*(x757)))+(((pz)*(x763)))+(((IkReal(-0.521670000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(x760)*(x761))));
evalcond[4]=((IkReal(-0.0438300000000000))+(((IkReal(-1.00000000000000))*(x761)*(x762)))+(((x758)*(x763)))+(((x758)*(x762)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(pz)*(x760)))+(((sj2)*(x757)))+(((IkReal(-1.00000000000000))*(cj1)*(x759)*(x761)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x764=((sj1)*(sj2));
IkReal x765=((cj2)*(sj1));
IkReal x766=((cj1)*(sj2));
IkReal x767=((IkReal(1.00000000000000))*(r02));
IkReal x768=((cj1)*(cj2));
IkReal x769=((cj0)*(r01));
IkReal x770=((sj1)*(x769));
IkReal x771=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((IkReal(-1.00000000000000))*(x765)*(x767)))+(((IkReal(-1.00000000000000))*(x766)*(x767)))+(((IkReal(-1.00000000000000))*(x764)*(x771)))+(((IkReal(-1.00000000000000))*(x768)*(x769)))+(((r00)*(sj0)*(x768)))+(((x764)*(x769))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x767)*(x768)))+(((IkReal(-1.00000000000000))*(x766)*(x771)))+(((r02)*(x764)))+(((x765)*(x769)))+(((IkReal(-1.00000000000000))*(x765)*(x771)))+(((x766)*(x769))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x765)*(x767)))+(((IkReal(-1.00000000000000))*(x766)*(x767)))+(((IkReal(-1.00000000000000))*(x764)*(x771)))+(((IkReal(-1.00000000000000))*(x768)*(x769)))+(((r00)*(sj0)*(x768)))+(((x764)*(x769)))))+IKsqr(((((IkReal(-1.00000000000000))*(x767)*(x768)))+(((IkReal(-1.00000000000000))*(x766)*(x771)))+(((r02)*(x764)))+(((x765)*(x769)))+(((IkReal(-1.00000000000000))*(x765)*(x771)))+(((x766)*(x769)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x765)*(x767)))+(((IkReal(-1.00000000000000))*(x766)*(x767)))+(((IkReal(-1.00000000000000))*(x764)*(x771)))+(((IkReal(-1.00000000000000))*(x768)*(x769)))+(((r00)*(sj0)*(x768)))+(((x764)*(x769)))), ((((IkReal(-1.00000000000000))*(x767)*(x768)))+(((IkReal(-1.00000000000000))*(x766)*(x771)))+(((r02)*(x764)))+(((x765)*(x769)))+(((IkReal(-1.00000000000000))*(x765)*(x771)))+(((x766)*(x769)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x772=((r02)*(sj2));
IkReal x773=((IkReal(1.00000000000000))*(sj2));
IkReal x774=((r00)*(sj0));
IkReal x775=((cj1)*(cj2));
IkReal x776=((cj0)*(r01));
IkReal x777=((sj1)*(x776));
IkReal x778=((IkReal(1.00000000000000))*(cj2)*(x774));
evalcond[0]=((((IkReal(-1.00000000000000))*(r02)*(x775)))+(((cj1)*(sj2)*(x776)))+(((cj2)*(x777)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((sj1)*(x772)))+(((IkReal(-1.00000000000000))*(sj1)*(x778)))+(((IkReal(-1.00000000000000))*(cj1)*(x773)*(x774))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x774)*(x775)))+(((cj1)*(x772)))+(((sj1)*(sj2)*(x774)))+(IKsin(j5))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x773)*(x777)))+(((x775)*(x776))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x779=((pz)*(sj1));
IkReal x780=((cj0)*(py));
IkReal x781=((IkReal(1.00000000000000))*(sj2));
IkReal x782=((cj1)*(cj2));
IkReal x783=((px)*(sj0));
IkReal x784=((cj2)*(sj1));
IkReal x785=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(-0.190890000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.127080000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((sj1)*(sj2)*(x783)))+(((IkReal(-1.00000000000000))*(sj1)*(x780)*(x781)))+(((cj2)*(x779)))+(((pz)*(x785)))+(((x780)*(x782)))+(((IkReal(-0.521670000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(x782)*(x783))));
evalcond[4]=((IkReal(-0.0438300000000000))+(((IkReal(-1.00000000000000))*(cj1)*(x781)*(x783)))+(((IkReal(0.521670000000000))*(cj2)))+(((sj2)*(x779)))+(((x780)*(x785)))+(((x780)*(x784)))+(((IkReal(-1.00000000000000))*(pz)*(x782)))+(((IkReal(0.00982000000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(x783)*(x784))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x786=((cj2)*(sj1));
IkReal x787=((cj0)*(r01));
IkReal x788=((sj1)*(sj2));
IkReal x789=((cj1)*(cj2));
IkReal x790=((cj1)*(sj2));
IkReal x791=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((x787)*(x789)))+(((r02)*(x786)))+(((IkReal(-1.00000000000000))*(x787)*(x788)))+(((r02)*(x790)))+(((IkReal(-1.00000000000000))*(x789)*(x791)))+(((r00)*(sj0)*(x788))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x786)*(x787)))+(((x787)*(x790)))+(((r02)*(x788)))+(((IkReal(-1.00000000000000))*(x790)*(x791)))+(((IkReal(-1.00000000000000))*(r02)*(x789)))+(((IkReal(-1.00000000000000))*(x786)*(x791))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((x787)*(x789)))+(((r02)*(x786)))+(((IkReal(-1.00000000000000))*(x787)*(x788)))+(((r02)*(x790)))+(((IkReal(-1.00000000000000))*(x789)*(x791)))+(((r00)*(sj0)*(x788)))))+IKsqr(((((x786)*(x787)))+(((x787)*(x790)))+(((r02)*(x788)))+(((IkReal(-1.00000000000000))*(x790)*(x791)))+(((IkReal(-1.00000000000000))*(r02)*(x789)))+(((IkReal(-1.00000000000000))*(x786)*(x791)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((x787)*(x789)))+(((r02)*(x786)))+(((IkReal(-1.00000000000000))*(x787)*(x788)))+(((r02)*(x790)))+(((IkReal(-1.00000000000000))*(x789)*(x791)))+(((r00)*(sj0)*(x788)))), ((((x786)*(x787)))+(((x787)*(x790)))+(((r02)*(x788)))+(((IkReal(-1.00000000000000))*(x790)*(x791)))+(((IkReal(-1.00000000000000))*(r02)*(x789)))+(((IkReal(-1.00000000000000))*(x786)*(x791)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x792=((r02)*(sj2));
IkReal x793=((IkReal(1.00000000000000))*(sj2));
IkReal x794=((r00)*(sj0));
IkReal x795=((cj1)*(cj2));
IkReal x796=((cj0)*(r01));
IkReal x797=((sj1)*(x796));
IkReal x798=((IkReal(1.00000000000000))*(cj2)*(x794));
evalcond[0]=((((sj1)*(x792)))+(((IkReal(-1.00000000000000))*(cj1)*(x793)*(x794)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((IkReal(-1.00000000000000))*(r02)*(x795)))+(((cj1)*(sj2)*(x796)))+(((cj2)*(x797)))+(((IkReal(-1.00000000000000))*(sj1)*(x798))));
evalcond[1]=((((sj1)*(sj2)*(x794)))+(((cj1)*(x792)))+(((IkReal(-1.00000000000000))*(x793)*(x797)))+(((IkReal(-1.00000000000000))*(x794)*(x795)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((x795)*(x796))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x799=((sj1)*(sj2));
IkReal x800=((cj2)*(sj1));
IkReal x801=((cj1)*(sj2));
IkReal x802=((IkReal(1.00000000000000))*(r02));
IkReal x803=((cj1)*(cj2));
IkReal x804=((cj0)*(r01));
IkReal x805=((sj1)*(x804));
IkReal x806=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x799)*(x806)))+(((IkReal(-1.00000000000000))*(x803)*(x804)))+(((IkReal(-1.00000000000000))*(x800)*(x802)))+(((r00)*(sj0)*(x803)))+(((x799)*(x804)))+(((IkReal(-1.00000000000000))*(x801)*(x802))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x800)*(x804)))+(((IkReal(-1.00000000000000))*(x800)*(x806)))+(((r02)*(x799)))+(((x801)*(x804)))+(((IkReal(-1.00000000000000))*(x801)*(x806)))+(((IkReal(-1.00000000000000))*(x802)*(x803))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x799)*(x806)))+(((IkReal(-1.00000000000000))*(x803)*(x804)))+(((IkReal(-1.00000000000000))*(x800)*(x802)))+(((r00)*(sj0)*(x803)))+(((x799)*(x804)))+(((IkReal(-1.00000000000000))*(x801)*(x802)))))))+IKsqr(((((x800)*(x804)))+(((IkReal(-1.00000000000000))*(x800)*(x806)))+(((r02)*(x799)))+(((x801)*(x804)))+(((IkReal(-1.00000000000000))*(x801)*(x806)))+(((IkReal(-1.00000000000000))*(x802)*(x803)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x799)*(x806)))+(((IkReal(-1.00000000000000))*(x803)*(x804)))+(((IkReal(-1.00000000000000))*(x800)*(x802)))+(((r00)*(sj0)*(x803)))+(((x799)*(x804)))+(((IkReal(-1.00000000000000))*(x801)*(x802)))))), ((((x800)*(x804)))+(((IkReal(-1.00000000000000))*(x800)*(x806)))+(((r02)*(x799)))+(((x801)*(x804)))+(((IkReal(-1.00000000000000))*(x801)*(x806)))+(((IkReal(-1.00000000000000))*(x802)*(x803)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x807=IKsin(j5);
IkReal x808=((r02)*(sj2));
IkReal x809=((IkReal(1.00000000000000))*(sj2));
IkReal x810=((r00)*(sj0));
IkReal x811=((IkReal(1.00000000000000))*(cj2));
IkReal x812=((cj0)*(r01)*(sj1));
IkReal x813=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x807)))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj1)*(x810)*(x811)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x811)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((IkReal(-1.00000000000000))*(cj1)*(x809)*(x810)))+(((sj2)*(x813)))+(((sj1)*(x808)))+(((cj2)*(x812))));
evalcond[2]=((((sj1)*(sj2)*(x810)))+(((cj1)*(x808)))+(((IkReal(-1.00000000000000))*(x809)*(x812)))+(((sj4)*(x807)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(x810)*(x811)))+(((cj2)*(x813))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x814=((cj2)*(sj1));
IkReal x815=((cj0)*(r01));
IkReal x816=((cj1)*(sj2));
IkReal x817=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x815)*(x816)))+(((IkReal(-1.00000000000000))*(x816)*(x817)))+(((x814)*(x815)))+(((IkReal(-1.00000000000000))*(x814)*(x817)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((r02)*(sj1)*(sj2))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))))+IKsqr(((((x815)*(x816)))+(((IkReal(-1.00000000000000))*(x816)*(x817)))+(((x814)*(x815)))+(((IkReal(-1.00000000000000))*(x814)*(x817)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((r02)*(sj1)*(sj2)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))), ((((x815)*(x816)))+(((IkReal(-1.00000000000000))*(x816)*(x817)))+(((x814)*(x815)))+(((IkReal(-1.00000000000000))*(x814)*(x817)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((r02)*(sj1)*(sj2)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x818=IKsin(j5);
IkReal x819=((r02)*(sj2));
IkReal x820=((IkReal(1.00000000000000))*(sj2));
IkReal x821=((r00)*(sj0));
IkReal x822=((IkReal(1.00000000000000))*(cj2));
IkReal x823=((cj0)*(r01)*(sj1));
IkReal x824=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x818)))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj1)*(x820)*(x821)))+(((sj1)*(x819)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x822)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((sj2)*(x824)))+(((IkReal(-1.00000000000000))*(sj1)*(x821)*(x822)))+(((cj2)*(x823))));
evalcond[2]=((((sj4)*(x818)))+(((sj1)*(sj2)*(x821)))+(((IkReal(-1.00000000000000))*(cj1)*(x821)*(x822)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x820)*(x823)))+(((cj1)*(x819)))+(((cj2)*(x824))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x825=((cj1)*(cj2));
IkReal x826=((cj0)*(py));
IkReal x827=((px)*(sj0));
IkReal x828=((sj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.209760000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((x825)*(x826)))+(((cj2)*(pz)*(sj1)))+(((cj1)*(pz)*(sj2)))+(((IkReal(-1.00000000000000))*(x825)*(x827)))+(((IkReal(-0.521670000000000))*(sj2)))+(((x827)*(x828)))+(((IkReal(-1.00000000000000))*(x826)*(x828))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x829=((IkReal(0.0216797014453736))*(sj1));
IkReal x830=((cj0)*(py));
IkReal x831=((pz)*(sj2));
IkReal x832=((IkReal(5.23852937836376))*(px));
IkReal x833=((cj1)*(sj2));
IkReal x834=((IkReal(5.23852937836376))*(sj1));
IkReal x835=((py)*(sj0));
IkReal x836=((IkReal(0.0216797014453736))*(px));
IkReal x837=((cj2)*(px)*(sj0));
IkReal x838=((cj1)*(cj2)*(pz));
if( IKabs(((IkReal(0.00305076758739298))+(((IkReal(-0.0216797014453736))*(x838)))+(((IkReal(0.0216797014453736))*(x830)*(x833)))+(((IkReal(0.000212894668193569))*(sj2)))+(((IkReal(-5.23852937836376))*(x835)))+(((IkReal(0.0113096498530081))*(cj2)))+(((x829)*(x831)))+(((IkReal(-1.00000000000000))*(cj0)*(x832)))+(((cj2)*(x829)*(x830)))+(((IkReal(-1.00000000000000))*(sj0)*(x833)*(x836)))+(((IkReal(-1.00000000000000))*(x829)*(x837))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.737165854123348))+(((IkReal(-0.0216797014453736))*(x835)))+(((IkReal(5.23852937836376))*(x838)))+(((sj0)*(x832)*(x833)))+(((IkReal(-1.00000000000000))*(cj2)*(x830)*(x834)))+(((IkReal(-2.73278362081102))*(cj2)))+(((IkReal(-1.00000000000000))*(cj0)*(x836)))+(((IkReal(-0.0514423584955321))*(sj2)))+(((cj2)*(sj0)*(sj1)*(x832)))+(((IkReal(-5.23852937836376))*(x830)*(x833)))+(((IkReal(-1.00000000000000))*(x831)*(x834))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.00305076758739298))+(((IkReal(-0.0216797014453736))*(x838)))+(((IkReal(0.0216797014453736))*(x830)*(x833)))+(((IkReal(0.000212894668193569))*(sj2)))+(((IkReal(-5.23852937836376))*(x835)))+(((IkReal(0.0113096498530081))*(cj2)))+(((x829)*(x831)))+(((IkReal(-1.00000000000000))*(cj0)*(x832)))+(((cj2)*(x829)*(x830)))+(((IkReal(-1.00000000000000))*(sj0)*(x833)*(x836)))+(((IkReal(-1.00000000000000))*(x829)*(x837)))))+IKsqr(((IkReal(-0.737165854123348))+(((IkReal(-0.0216797014453736))*(x835)))+(((IkReal(5.23852937836376))*(x838)))+(((sj0)*(x832)*(x833)))+(((IkReal(-1.00000000000000))*(cj2)*(x830)*(x834)))+(((IkReal(-2.73278362081102))*(cj2)))+(((IkReal(-1.00000000000000))*(cj0)*(x836)))+(((IkReal(-0.0514423584955321))*(sj2)))+(((cj2)*(sj0)*(sj1)*(x832)))+(((IkReal(-5.23852937836376))*(x830)*(x833)))+(((IkReal(-1.00000000000000))*(x831)*(x834)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((IkReal(0.00305076758739298))+(((IkReal(-0.0216797014453736))*(x838)))+(((IkReal(0.0216797014453736))*(x830)*(x833)))+(((IkReal(0.000212894668193569))*(sj2)))+(((IkReal(-5.23852937836376))*(x835)))+(((IkReal(0.0113096498530081))*(cj2)))+(((x829)*(x831)))+(((IkReal(-1.00000000000000))*(cj0)*(x832)))+(((cj2)*(x829)*(x830)))+(((IkReal(-1.00000000000000))*(sj0)*(x833)*(x836)))+(((IkReal(-1.00000000000000))*(x829)*(x837)))), ((IkReal(-0.737165854123348))+(((IkReal(-0.0216797014453736))*(x835)))+(((IkReal(5.23852937836376))*(x838)))+(((sj0)*(x832)*(x833)))+(((IkReal(-1.00000000000000))*(cj2)*(x830)*(x834)))+(((IkReal(-2.73278362081102))*(cj2)))+(((IkReal(-1.00000000000000))*(cj0)*(x836)))+(((IkReal(-0.0514423584955321))*(sj2)))+(((cj2)*(sj0)*(sj1)*(x832)))+(((IkReal(-5.23852937836376))*(x830)*(x833)))+(((IkReal(-1.00000000000000))*(x831)*(x834)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[2];
IkReal x839=IKcos(j4);
IkReal x840=IKsin(j4);
IkReal x841=((cj1)*(sj2));
IkReal x842=((cj2)*(sj1));
IkReal x843=((cj0)*(py));
IkReal x844=((IkReal(1.00000000000000))*(px)*(sj0));
evalcond[0]=((((IkReal(0.190890000000000))*(x840)))+(((cj0)*(px)))+(((py)*(sj0)))+(((IkReal(0.000790000000000000))*(x839))));
evalcond[1]=((IkReal(0.140720000000000))+(((IkReal(-1.00000000000000))*(x841)*(x844)))+(((IkReal(-0.000790000000000000))*(x840)))+(((pz)*(sj1)*(sj2)))+(((IkReal(-1.00000000000000))*(x842)*(x844)))+(((IkReal(0.521670000000000))*(cj2)))+(((x842)*(x843)))+(((IkReal(0.190890000000000))*(x839)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(pz)))+(((IkReal(0.00982000000000000))*(sj2)))+(((x841)*(x843))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
dummyeval[0]=cj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x845=((IkReal(1.00000000000000))*(sj0));
IkReal x846=((cj1)*(sj2));
IkReal x847=((sj1)*(sj2));
IkReal x848=((cj2)*(sj1));
IkReal x849=((cj0)*(r01));
IkReal x850=((cj0)*(py));
IkReal x851=((cj2)*(x850));
IkReal x852=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.000790000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((r02)*(x847)))+(((x846)*(x849)))+(((x848)*(x849)))+(((IkReal(-1.00000000000000))*(r02)*(x852)))+(((IkReal(-1.00000000000000))*(r00)*(x845)*(x848)))+(((IkReal(-1.00000000000000))*(r00)*(x845)*(x846))));
evalcond[3]=((IkReal(-0.209760000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(px)*(x845)))+(((IkReal(-1.00000000000000))*(x847)*(x850)))+(((cj1)*(x851)))+(((pz)*(x848)))+(((pz)*(x846)))+(((IkReal(-0.521670000000000))*(sj2)))+(((px)*(sj0)*(x847))));
evalcond[4]=((IkReal(0.331610000000000))+(((x848)*(x850)))+(((IkReal(-1.00000000000000))*(px)*(x845)*(x848)))+(((IkReal(-1.00000000000000))*(px)*(x845)*(x846)))+(((IkReal(0.521670000000000))*(cj2)))+(((pz)*(x847)))+(((IkReal(-1.00000000000000))*(pz)*(x852)))+(((x846)*(x850)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x853=((cj0)*(r01));
IkReal x854=((sj1)*(sj2));
IkReal x855=((IkReal(1.00000000000000))*(cj1));
IkReal x856=((r00)*(sj0));
if( IKabs(((((r01)*(sj0)))+(((cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x854)*(x856)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((x853)*(x854)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x855)))+(((IkReal(-1.00000000000000))*(cj2)*(x853)*(x855)))+(((cj1)*(cj2)*(x856))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r01)*(sj0)))+(((cj0)*(r00)))))+IKsqr(((((IkReal(-1.00000000000000))*(x854)*(x856)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((x853)*(x854)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x855)))+(((IkReal(-1.00000000000000))*(cj2)*(x853)*(x855)))+(((cj1)*(cj2)*(x856)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((r01)*(sj0)))+(((cj0)*(r00)))), ((((IkReal(-1.00000000000000))*(x854)*(x856)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((x853)*(x854)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x855)))+(((IkReal(-1.00000000000000))*(cj2)*(x853)*(x855)))+(((cj1)*(cj2)*(x856)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x857=((sj1)*(sj2));
IkReal x858=((cj0)*(r01));
IkReal x859=((r00)*(sj0));
IkReal x860=((cj1)*(cj2));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x857)*(x858)))+(IKcos(j5))+(((x858)*(x860)))+(((cj2)*(r02)*(sj1)))+(((x857)*(x859)))+(((cj1)*(r02)*(sj2)))+(((IkReal(-1.00000000000000))*(x859)*(x860))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x861=((IkReal(1.00000000000000))*(sj0));
IkReal x862=((cj1)*(sj2));
IkReal x863=((sj1)*(sj2));
IkReal x864=((cj2)*(sj1));
IkReal x865=((cj0)*(r01));
IkReal x866=((cj0)*(py));
IkReal x867=((cj2)*(x866));
IkReal x868=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.000790000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r00)*(x861)*(x862)))+(((IkReal(-1.00000000000000))*(r00)*(x861)*(x864)))+(((r02)*(x863)))+(((x862)*(x865)))+(((IkReal(-1.00000000000000))*(r02)*(x868)))+(((x864)*(x865))));
evalcond[3]=((IkReal(-0.209760000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((px)*(sj0)*(x863)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(px)*(x861)))+(((cj1)*(x867)))+(((pz)*(x862)))+(((pz)*(x864)))+(((IkReal(-1.00000000000000))*(x863)*(x866)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(-0.0501700000000000))+(((IkReal(-1.00000000000000))*(pz)*(x868)))+(((IkReal(0.521670000000000))*(cj2)))+(((x862)*(x866)))+(((IkReal(-1.00000000000000))*(px)*(x861)*(x862)))+(((IkReal(-1.00000000000000))*(px)*(x861)*(x864)))+(((pz)*(x863)))+(((x864)*(x866)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x869=((sj1)*(sj2));
IkReal x870=((cj0)*(r01));
IkReal x871=((r00)*(sj0));
IkReal x872=((IkReal(1.00000000000000))*(cj1));
if( IKabs(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj1)*(cj2)*(x871)))+(((IkReal(-1.00000000000000))*(cj2)*(x870)*(x872)))+(((IkReal(-1.00000000000000))*(x869)*(x871)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((x869)*(x870)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x872))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))))+IKsqr(((((cj1)*(cj2)*(x871)))+(((IkReal(-1.00000000000000))*(cj2)*(x870)*(x872)))+(((IkReal(-1.00000000000000))*(x869)*(x871)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((x869)*(x870)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x872)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))), ((((cj1)*(cj2)*(x871)))+(((IkReal(-1.00000000000000))*(cj2)*(x870)*(x872)))+(((IkReal(-1.00000000000000))*(x869)*(x871)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((x869)*(x870)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x872)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x873=((sj1)*(sj2));
IkReal x874=((cj0)*(r01));
IkReal x875=((r00)*(sj0));
IkReal x876=((cj1)*(cj2));
evalcond[0]=((((r01)*(sj0)))+(IKsin(j5))+(((cj0)*(r00))));
evalcond[1]=((((x874)*(x876)))+(((x873)*(x875)))+(((IkReal(-1.00000000000000))*(x873)*(x874)))+(IKcos(j5))+(((IkReal(-1.00000000000000))*(x875)*(x876)))+(((cj2)*(r02)*(sj1)))+(((cj1)*(r02)*(sj2))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x877=((pz)*(sj1));
IkReal x878=((cj0)*(py));
IkReal x879=((IkReal(1.00000000000000))*(sj2));
IkReal x880=((cj1)*(cj2));
IkReal x881=((px)*(sj0));
IkReal x882=((cj2)*(sj1));
IkReal x883=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(0.190890000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.209760000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(sj1)*(x878)*(x879)))+(((cj2)*(x877)))+(((pz)*(x883)))+(((sj1)*(sj2)*(x881)))+(((x878)*(x880)))+(((IkReal(-1.00000000000000))*(x880)*(x881)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(0.139930000000000))+(((sj2)*(x877)))+(((IkReal(-1.00000000000000))*(x881)*(x882)))+(((IkReal(-1.00000000000000))*(cj1)*(x879)*(x881)))+(((IkReal(0.521670000000000))*(cj2)))+(((x878)*(x882)))+(((x878)*(x883)))+(((IkReal(-1.00000000000000))*(pz)*(x880)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x884=((IkReal(1.00000000000000))*(sj2));
IkReal x885=((r02)*(sj1));
IkReal x886=((cj0)*(r01));
IkReal x887=((r00)*(sj0));
IkReal x888=((cj1)*(r02));
IkReal x889=((IkReal(1.00000000000000))*(cj2));
if( IKabs(((((IkReal(-1.00000000000000))*(sj1)*(x886)*(x889)))+(((cj2)*(x888)))+(((cj1)*(sj2)*(x887)))+(((IkReal(-1.00000000000000))*(cj1)*(x884)*(x886)))+(((cj2)*(sj1)*(x887)))+(((IkReal(-1.00000000000000))*(x884)*(x885))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(sj1)*(x884)*(x887)))+(((IkReal(-1.00000000000000))*(cj1)*(x886)*(x889)))+(((sj1)*(sj2)*(x886)))+(((cj1)*(cj2)*(x887)))+(((IkReal(-1.00000000000000))*(x885)*(x889)))+(((IkReal(-1.00000000000000))*(x884)*(x888))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(sj1)*(x886)*(x889)))+(((cj2)*(x888)))+(((cj1)*(sj2)*(x887)))+(((IkReal(-1.00000000000000))*(cj1)*(x884)*(x886)))+(((cj2)*(sj1)*(x887)))+(((IkReal(-1.00000000000000))*(x884)*(x885)))))+IKsqr(((((IkReal(-1.00000000000000))*(sj1)*(x884)*(x887)))+(((IkReal(-1.00000000000000))*(cj1)*(x886)*(x889)))+(((sj1)*(sj2)*(x886)))+(((cj1)*(cj2)*(x887)))+(((IkReal(-1.00000000000000))*(x885)*(x889)))+(((IkReal(-1.00000000000000))*(x884)*(x888)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(sj1)*(x886)*(x889)))+(((cj2)*(x888)))+(((cj1)*(sj2)*(x887)))+(((IkReal(-1.00000000000000))*(cj1)*(x884)*(x886)))+(((cj2)*(sj1)*(x887)))+(((IkReal(-1.00000000000000))*(x884)*(x885)))), ((((IkReal(-1.00000000000000))*(sj1)*(x884)*(x887)))+(((IkReal(-1.00000000000000))*(cj1)*(x886)*(x889)))+(((sj1)*(sj2)*(x886)))+(((cj1)*(cj2)*(x887)))+(((IkReal(-1.00000000000000))*(x885)*(x889)))+(((IkReal(-1.00000000000000))*(x884)*(x888)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x890=((r02)*(sj2));
IkReal x891=((IkReal(1.00000000000000))*(sj2));
IkReal x892=((r00)*(sj0));
IkReal x893=((cj1)*(cj2));
IkReal x894=((cj0)*(r01));
IkReal x895=((sj1)*(x894));
IkReal x896=((IkReal(1.00000000000000))*(cj2)*(x892));
evalcond[0]=((((cj2)*(x895)))+(((IkReal(-1.00000000000000))*(r02)*(x893)))+(((cj1)*(sj2)*(x894)))+(((sj1)*(x890)))+(IKsin(j5))+(((IkReal(-1.00000000000000))*(cj1)*(x891)*(x892)))+(((IkReal(-1.00000000000000))*(sj1)*(x896))));
evalcond[1]=((((sj1)*(sj2)*(x892)))+(IKcos(j5))+(((x893)*(x894)))+(((IkReal(-1.00000000000000))*(x892)*(x893)))+(((cj2)*(r02)*(sj1)))+(((cj1)*(x890)))+(((IkReal(-1.00000000000000))*(x891)*(x895))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x897=((pz)*(sj1));
IkReal x898=((cj0)*(py));
IkReal x899=((IkReal(1.00000000000000))*(sj2));
IkReal x900=((cj1)*(cj2));
IkReal x901=((px)*(sj0));
IkReal x902=((cj2)*(sj1));
IkReal x903=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(-0.190890000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.209760000000000))+(((cj2)*(x897)))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x900)*(x901)))+(((IkReal(-1.00000000000000))*(sj1)*(x898)*(x899)))+(((sj1)*(sj2)*(x901)))+(((pz)*(x903)))+(((x898)*(x900)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(0.141510000000000))+(((IkReal(-1.00000000000000))*(x901)*(x902)))+(((sj2)*(x897)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(cj1)*(x899)*(x901)))+(((x898)*(x902)))+(((x898)*(x903)))+(((IkReal(0.00982000000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(pz)*(x900))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x904=((cj2)*(sj1));
IkReal x905=((IkReal(1.00000000000000))*(r02));
IkReal x906=((cj0)*(r01));
IkReal x907=((sj1)*(sj2));
IkReal x908=((cj1)*(cj2));
IkReal x909=((cj1)*(sj2));
IkReal x910=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((r02)*(x907)))+(((x906)*(x909)))+(((IkReal(-1.00000000000000))*(x904)*(x910)))+(((IkReal(-1.00000000000000))*(x905)*(x908)))+(((IkReal(-1.00000000000000))*(x909)*(x910)))+(((x904)*(x906))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((r00)*(sj0)*(x908)))+(((IkReal(-1.00000000000000))*(x906)*(x908)))+(((x906)*(x907)))+(((IkReal(-1.00000000000000))*(x904)*(x905)))+(((IkReal(-1.00000000000000))*(x907)*(x910)))+(((IkReal(-1.00000000000000))*(x905)*(x909))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r02)*(x907)))+(((x906)*(x909)))+(((IkReal(-1.00000000000000))*(x904)*(x910)))+(((IkReal(-1.00000000000000))*(x905)*(x908)))+(((IkReal(-1.00000000000000))*(x909)*(x910)))+(((x904)*(x906)))))+IKsqr(((((r00)*(sj0)*(x908)))+(((IkReal(-1.00000000000000))*(x906)*(x908)))+(((x906)*(x907)))+(((IkReal(-1.00000000000000))*(x904)*(x905)))+(((IkReal(-1.00000000000000))*(x907)*(x910)))+(((IkReal(-1.00000000000000))*(x905)*(x909)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((r02)*(x907)))+(((x906)*(x909)))+(((IkReal(-1.00000000000000))*(x904)*(x910)))+(((IkReal(-1.00000000000000))*(x905)*(x908)))+(((IkReal(-1.00000000000000))*(x909)*(x910)))+(((x904)*(x906)))), ((((r00)*(sj0)*(x908)))+(((IkReal(-1.00000000000000))*(x906)*(x908)))+(((x906)*(x907)))+(((IkReal(-1.00000000000000))*(x904)*(x905)))+(((IkReal(-1.00000000000000))*(x907)*(x910)))+(((IkReal(-1.00000000000000))*(x905)*(x909)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x911=((r02)*(sj2));
IkReal x912=((IkReal(1.00000000000000))*(sj2));
IkReal x913=((r00)*(sj0));
IkReal x914=((cj1)*(cj2));
IkReal x915=((cj0)*(r01));
IkReal x916=((sj1)*(x915));
IkReal x917=((IkReal(1.00000000000000))*(cj2)*(x913));
evalcond[0]=((((IkReal(-1.00000000000000))*(r02)*(x914)))+(((cj2)*(x916)))+(((IkReal(-1.00000000000000))*(sj1)*(x917)))+(((cj1)*(sj2)*(x915)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((sj1)*(x911)))+(((IkReal(-1.00000000000000))*(cj1)*(x912)*(x913))));
evalcond[1]=((((x914)*(x915)))+(((sj1)*(sj2)*(x913)))+(IKcos(j5))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x912)*(x916)))+(((IkReal(-1.00000000000000))*(x913)*(x914)))+(((cj1)*(x911))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x918=((IkReal(1.00000000000000))*(sj2));
IkReal x919=((r02)*(sj1));
IkReal x920=((cj0)*(r01));
IkReal x921=((cj1)*(r02));
IkReal x922=((r00)*(sj0));
IkReal x923=((IkReal(1.00000000000000))*(cj2));
if( IKabs(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x918)*(x919)))+(((cj2)*(sj1)*(x922)))+(((cj2)*(x921)))+(((cj1)*(sj2)*(x922)))+(((IkReal(-1.00000000000000))*(cj1)*(x918)*(x920)))+(((IkReal(-1.00000000000000))*(sj1)*(x920)*(x923))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(sj1)*(x918)*(x922)))+(((cj1)*(cj2)*(x922)))+(((sj1)*(sj2)*(x920)))+(((IkReal(-1.00000000000000))*(x918)*(x921)))+(((IkReal(-1.00000000000000))*(x919)*(x923)))+(((IkReal(-1.00000000000000))*(cj1)*(x920)*(x923))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x918)*(x919)))+(((cj2)*(sj1)*(x922)))+(((cj2)*(x921)))+(((cj1)*(sj2)*(x922)))+(((IkReal(-1.00000000000000))*(cj1)*(x918)*(x920)))+(((IkReal(-1.00000000000000))*(sj1)*(x920)*(x923)))))))+IKsqr(((((IkReal(-1.00000000000000))*(sj1)*(x918)*(x922)))+(((cj1)*(cj2)*(x922)))+(((sj1)*(sj2)*(x920)))+(((IkReal(-1.00000000000000))*(x918)*(x921)))+(((IkReal(-1.00000000000000))*(x919)*(x923)))+(((IkReal(-1.00000000000000))*(cj1)*(x920)*(x923)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x918)*(x919)))+(((cj2)*(sj1)*(x922)))+(((cj2)*(x921)))+(((cj1)*(sj2)*(x922)))+(((IkReal(-1.00000000000000))*(cj1)*(x918)*(x920)))+(((IkReal(-1.00000000000000))*(sj1)*(x920)*(x923)))))), ((((IkReal(-1.00000000000000))*(sj1)*(x918)*(x922)))+(((cj1)*(cj2)*(x922)))+(((sj1)*(sj2)*(x920)))+(((IkReal(-1.00000000000000))*(x918)*(x921)))+(((IkReal(-1.00000000000000))*(x919)*(x923)))+(((IkReal(-1.00000000000000))*(cj1)*(x920)*(x923)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x924=IKsin(j5);
IkReal x925=((r02)*(sj2));
IkReal x926=((IkReal(1.00000000000000))*(sj2));
IkReal x927=((r00)*(sj0));
IkReal x928=((IkReal(1.00000000000000))*(cj2));
IkReal x929=((cj0)*(r01)*(sj1));
IkReal x930=((cj0)*(cj1)*(r01));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj4)*(x924)))+(((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj1)*(r02)*(x928)))+(((IkReal(-1.00000000000000))*(cj1)*(x926)*(x927)))+(((sj1)*(x925)))+(((sj4)*(x924)))+(((cj2)*(x929)))+(((IkReal(-1.00000000000000))*(sj1)*(x927)*(x928)))+(((sj2)*(x930))));
evalcond[2]=((((cj2)*(x930)))+(IKcos(j5))+(((sj1)*(sj2)*(x927)))+(((IkReal(-1.00000000000000))*(x926)*(x929)))+(((cj2)*(r02)*(sj1)))+(((cj1)*(x925)))+(((IkReal(-1.00000000000000))*(cj1)*(x927)*(x928))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x931=((cj0)*(r01));
IkReal x932=((sj1)*(sj2));
IkReal x933=((IkReal(1.00000000000000))*(cj1));
IkReal x934=((r00)*(sj0));
if( IKabs(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj1)*(cj2)*(x934)))+(((x931)*(x932)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x932)*(x934)))+(((IkReal(-1.00000000000000))*(cj2)*(x931)*(x933)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x933))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))))+IKsqr(((((cj1)*(cj2)*(x934)))+(((x931)*(x932)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x932)*(x934)))+(((IkReal(-1.00000000000000))*(cj2)*(x931)*(x933)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x933)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))), ((((cj1)*(cj2)*(x934)))+(((x931)*(x932)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x932)*(x934)))+(((IkReal(-1.00000000000000))*(cj2)*(x931)*(x933)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x933)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x935=IKsin(j5);
IkReal x936=((r02)*(sj2));
IkReal x937=((IkReal(1.00000000000000))*(sj2));
IkReal x938=((r00)*(sj0));
IkReal x939=((IkReal(1.00000000000000))*(cj2));
IkReal x940=((cj0)*(r01)*(sj1));
IkReal x941=((cj0)*(cj1)*(r01));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj4)*(x935)))+(((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[1]=((((sj2)*(x941)))+(((IkReal(-1.00000000000000))*(sj1)*(x938)*(x939)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x939)))+(((sj1)*(x936)))+(((IkReal(-1.00000000000000))*(cj1)*(x937)*(x938)))+(((cj2)*(x940)))+(((sj4)*(x935))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj1)*(x938)*(x939)))+(((cj2)*(x941)))+(IKcos(j5))+(((sj1)*(sj2)*(x938)))+(((cj2)*(r02)*(sj1)))+(((cj1)*(x936)))+(((IkReal(-1.00000000000000))*(x937)*(x940))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x942=((cj1)*(cj2));
IkReal x943=((cj0)*(py));
IkReal x944=((px)*(sj0));
IkReal x945=((sj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.312420000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x943)*(x945)))+(((IkReal(-1.00000000000000))*(x942)*(x944)))+(((x942)*(x943)))+(((cj2)*(pz)*(sj1)))+(((cj1)*(pz)*(sj2)))+(((x944)*(x945)))+(((IkReal(-0.521670000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x946=((IkReal(5.23852937836376))*(cj0));
IkReal x947=((IkReal(0.0216797014453736))*(pz));
IkReal x948=((sj1)*(sj2));
IkReal x949=((IkReal(0.0216797014453736))*(sj0));
IkReal x950=((cj1)*(sj2));
IkReal x951=((cj1)*(cj2));
IkReal x952=((cj2)*(sj1));
IkReal x953=((IkReal(5.23852937836376))*(sj0));
IkReal x954=((IkReal(0.0216797014453736))*(cj0));
IkReal x955=((IkReal(5.23852937836376))*(pz));
if( IKabs(((IkReal(0.00272557206571237))+(((IkReal(-1.00000000000000))*(py)*(x953)))+(((IkReal(-1.00000000000000))*(x947)*(x948)))+(((IkReal(-0.000212894668193569))*(sj2)))+(((x947)*(x951)))+(((IkReal(-1.00000000000000))*(py)*(x950)*(x954)))+(((px)*(x949)*(x950)))+(((px)*(x949)*(x952)))+(((IkReal(-1.00000000000000))*(px)*(x946)))+(((IkReal(-1.00000000000000))*(py)*(x952)*(x954)))+(((IkReal(-0.0113096498530081))*(cj2))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.658587913447892))+(((IkReal(-1.00000000000000))*(px)*(x952)*(x953)))+(((IkReal(-1.00000000000000))*(py)*(x949)))+(((x948)*(x955)))+(((IkReal(0.0514423584955321))*(sj2)))+(((py)*(x946)*(x952)))+(((py)*(x946)*(x950)))+(((IkReal(-1.00000000000000))*(x951)*(x955)))+(((IkReal(2.73278362081102))*(cj2)))+(((IkReal(-1.00000000000000))*(px)*(x954)))+(((IkReal(-1.00000000000000))*(px)*(x950)*(x953))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.00272557206571237))+(((IkReal(-1.00000000000000))*(py)*(x953)))+(((IkReal(-1.00000000000000))*(x947)*(x948)))+(((IkReal(-0.000212894668193569))*(sj2)))+(((x947)*(x951)))+(((IkReal(-1.00000000000000))*(py)*(x950)*(x954)))+(((px)*(x949)*(x950)))+(((px)*(x949)*(x952)))+(((IkReal(-1.00000000000000))*(px)*(x946)))+(((IkReal(-1.00000000000000))*(py)*(x952)*(x954)))+(((IkReal(-0.0113096498530081))*(cj2)))))+IKsqr(((IkReal(-0.658587913447892))+(((IkReal(-1.00000000000000))*(px)*(x952)*(x953)))+(((IkReal(-1.00000000000000))*(py)*(x949)))+(((x948)*(x955)))+(((IkReal(0.0514423584955321))*(sj2)))+(((py)*(x946)*(x952)))+(((py)*(x946)*(x950)))+(((IkReal(-1.00000000000000))*(x951)*(x955)))+(((IkReal(2.73278362081102))*(cj2)))+(((IkReal(-1.00000000000000))*(px)*(x954)))+(((IkReal(-1.00000000000000))*(px)*(x950)*(x953)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((IkReal(0.00272557206571237))+(((IkReal(-1.00000000000000))*(py)*(x953)))+(((IkReal(-1.00000000000000))*(x947)*(x948)))+(((IkReal(-0.000212894668193569))*(sj2)))+(((x947)*(x951)))+(((IkReal(-1.00000000000000))*(py)*(x950)*(x954)))+(((px)*(x949)*(x950)))+(((px)*(x949)*(x952)))+(((IkReal(-1.00000000000000))*(px)*(x946)))+(((IkReal(-1.00000000000000))*(py)*(x952)*(x954)))+(((IkReal(-0.0113096498530081))*(cj2)))), ((IkReal(-0.658587913447892))+(((IkReal(-1.00000000000000))*(px)*(x952)*(x953)))+(((IkReal(-1.00000000000000))*(py)*(x949)))+(((x948)*(x955)))+(((IkReal(0.0514423584955321))*(sj2)))+(((py)*(x946)*(x952)))+(((py)*(x946)*(x950)))+(((IkReal(-1.00000000000000))*(x951)*(x955)))+(((IkReal(2.73278362081102))*(cj2)))+(((IkReal(-1.00000000000000))*(px)*(x954)))+(((IkReal(-1.00000000000000))*(px)*(x950)*(x953)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[2];
IkReal x956=IKsin(j4);
IkReal x957=IKcos(j4);
IkReal x958=((cj1)*(sj2));
IkReal x959=((cj2)*(sj1));
IkReal x960=((cj0)*(py));
IkReal x961=((IkReal(1.00000000000000))*(px)*(sj0));
evalcond[0]=((((IkReal(0.190890000000000))*(x956)))+(((cj0)*(px)))+(((py)*(sj0)))+(((IkReal(0.000790000000000000))*(x957))));
evalcond[1]=((IkReal(-0.125720000000000))+(((IkReal(-0.190890000000000))*(x957)))+(((pz)*(sj1)*(sj2)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x958)*(x961)))+(((IkReal(-1.00000000000000))*(x959)*(x961)))+(((x959)*(x960)))+(((x958)*(x960)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(pz)))+(((IkReal(0.00982000000000000))*(sj2)))+(((IkReal(0.000790000000000000))*(x956))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
dummyeval[0]=cj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x962=((IkReal(1.00000000000000))*(sj0));
IkReal x963=((cj1)*(sj2));
IkReal x964=((sj1)*(sj2));
IkReal x965=((cj2)*(sj1));
IkReal x966=((cj0)*(r01));
IkReal x967=((cj0)*(py));
IkReal x968=((cj2)*(x967));
IkReal x969=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.000790000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((x965)*(x966)))+(((x963)*(x966)))+(((r02)*(x964)))+(((IkReal(-1.00000000000000))*(r00)*(x962)*(x963)))+(((IkReal(-1.00000000000000))*(r00)*(x962)*(x965)))+(((IkReal(-1.00000000000000))*(r02)*(x969))));
evalcond[3]=((IkReal(-0.312420000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x964)*(x967)))+(((cj1)*(x968)))+(((pz)*(x965)))+(((pz)*(x963)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(px)*(x962)))+(((IkReal(-0.521670000000000))*(sj2)))+(((px)*(sj0)*(x964))));
evalcond[4]=((IkReal(-0.316610000000000))+(((IkReal(-1.00000000000000))*(pz)*(x969)))+(((IkReal(-1.00000000000000))*(px)*(x962)*(x963)))+(((IkReal(-1.00000000000000))*(px)*(x962)*(x965)))+(((IkReal(0.521670000000000))*(cj2)))+(((pz)*(x964)))+(((x965)*(x967)))+(((x963)*(x967)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x970=((sj1)*(sj2));
IkReal x971=((cj0)*(r01));
IkReal x972=((r00)*(sj0));
IkReal x973=((cj1)*(cj2));
if( IKabs(((((r01)*(sj0)))+(((cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x972)*(x973)))+(((cj2)*(r02)*(sj1)))+(((x971)*(x973)))+(((x970)*(x972)))+(((IkReal(-1.00000000000000))*(x970)*(x971)))+(((cj1)*(r02)*(sj2))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r01)*(sj0)))+(((cj0)*(r00)))))+IKsqr(((((IkReal(-1.00000000000000))*(x972)*(x973)))+(((cj2)*(r02)*(sj1)))+(((x971)*(x973)))+(((x970)*(x972)))+(((IkReal(-1.00000000000000))*(x970)*(x971)))+(((cj1)*(r02)*(sj2)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((r01)*(sj0)))+(((cj0)*(r00)))), ((((IkReal(-1.00000000000000))*(x972)*(x973)))+(((cj2)*(r02)*(sj1)))+(((x971)*(x973)))+(((x970)*(x972)))+(((IkReal(-1.00000000000000))*(x970)*(x971)))+(((cj1)*(r02)*(sj2)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x974=((sj1)*(sj2));
IkReal x975=((cj0)*(r01));
IkReal x976=((r00)*(sj0));
IkReal x977=((cj1)*(cj2));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x976)*(x977)))+(((x975)*(x977)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((IkReal(-1.00000000000000))*(x974)*(x975)))+(((cj2)*(r02)*(sj1)))+(((x974)*(x976)))+(((cj1)*(r02)*(sj2))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x978=((IkReal(1.00000000000000))*(sj0));
IkReal x979=((cj1)*(sj2));
IkReal x980=((sj1)*(sj2));
IkReal x981=((cj2)*(sj1));
IkReal x982=((cj0)*(r01));
IkReal x983=((cj0)*(py));
IkReal x984=((cj2)*(x983));
IkReal x985=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.000790000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((x981)*(x982)))+(((IkReal(-1.00000000000000))*(r00)*(x978)*(x981)))+(((IkReal(-1.00000000000000))*(r00)*(x978)*(x979)))+(((x979)*(x982)))+(((IkReal(-1.00000000000000))*(r02)*(x985)))+(((r02)*(x980))));
evalcond[3]=((IkReal(-0.312420000000000))+(((px)*(sj0)*(x980)))+(((IkReal(0.00982000000000000))*(cj2)))+(((cj1)*(x984)))+(((pz)*(x981)))+(((pz)*(x979)))+(((IkReal(-1.00000000000000))*(x980)*(x983)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(px)*(x978)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(0.0651700000000000))+(((x981)*(x983)))+(((IkReal(-1.00000000000000))*(pz)*(x985)))+(((IkReal(-1.00000000000000))*(px)*(x978)*(x981)))+(((x979)*(x983)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(px)*(x978)*(x979)))+(((pz)*(x980)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x986=((r00)*(sj0));
IkReal x987=((cj1)*(cj2));
IkReal x988=((sj1)*(sj2));
IkReal x989=((cj0)*(r01));
if( IKabs(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x986)*(x987)))+(((x986)*(x988)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x988)*(x989)))+(((x987)*(x989)))+(((cj1)*(r02)*(sj2))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))))+IKsqr(((((IkReal(-1.00000000000000))*(x986)*(x987)))+(((x986)*(x988)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x988)*(x989)))+(((x987)*(x989)))+(((cj1)*(r02)*(sj2)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))), ((((IkReal(-1.00000000000000))*(x986)*(x987)))+(((x986)*(x988)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x988)*(x989)))+(((x987)*(x989)))+(((cj1)*(r02)*(sj2)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x990=((sj1)*(sj2));
IkReal x991=((cj0)*(r01));
IkReal x992=((r00)*(sj0));
IkReal x993=((cj1)*(cj2));
evalcond[0]=((((r01)*(sj0)))+(IKsin(j5))+(((cj0)*(r00))));
evalcond[1]=((((x991)*(x993)))+(((IkReal(-1.00000000000000))*(x992)*(x993)))+(((x990)*(x992)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x990)*(x991)))+(((cj1)*(r02)*(sj2))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x994=((pz)*(sj1));
IkReal x995=((cj0)*(py));
IkReal x996=((IkReal(1.00000000000000))*(sj2));
IkReal x997=((cj1)*(cj2));
IkReal x998=((px)*(sj0));
IkReal x999=((cj2)*(sj1));
IkReal x1000=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(0.190890000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.312420000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(sj1)*(x995)*(x996)))+(((sj1)*(sj2)*(x998)))+(((pz)*(x1000)))+(((x995)*(x997)))+(((IkReal(-1.00000000000000))*(x997)*(x998)))+(((IkReal(-0.521670000000000))*(sj2)))+(((cj2)*(x994))));
evalcond[4]=((IkReal(-0.124930000000000))+(((x1000)*(x995)))+(((sj2)*(x994)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(pz)*(x997)))+(((x995)*(x999)))+(((IkReal(0.00982000000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(x998)*(x999)))+(((IkReal(-1.00000000000000))*(cj1)*(x996)*(x998))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1001=((r02)*(sj2));
IkReal x1002=((IkReal(1.00000000000000))*(sj2));
IkReal x1003=((r00)*(sj0));
IkReal x1004=((cj1)*(cj2));
IkReal x1005=((cj0)*(r01));
IkReal x1006=((sj1)*(x1005));
IkReal x1007=((IkReal(1.00000000000000))*(cj2)*(x1003));
if( IKabs(((((cj2)*(x1006)))+(((cj1)*(sj2)*(x1005)))+(((sj1)*(x1001)))+(((IkReal(-1.00000000000000))*(cj1)*(x1002)*(x1003)))+(((IkReal(-1.00000000000000))*(r02)*(x1004)))+(((IkReal(-1.00000000000000))*(sj1)*(x1007))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x1003)*(x1004)))+(((sj1)*(sj2)*(x1003)))+(((x1004)*(x1005)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1002)*(x1006)))+(((cj1)*(x1001))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj2)*(x1006)))+(((cj1)*(sj2)*(x1005)))+(((sj1)*(x1001)))+(((IkReal(-1.00000000000000))*(cj1)*(x1002)*(x1003)))+(((IkReal(-1.00000000000000))*(r02)*(x1004)))+(((IkReal(-1.00000000000000))*(sj1)*(x1007)))))+IKsqr(((((IkReal(-1.00000000000000))*(x1003)*(x1004)))+(((sj1)*(sj2)*(x1003)))+(((x1004)*(x1005)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1002)*(x1006)))+(((cj1)*(x1001)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((cj2)*(x1006)))+(((cj1)*(sj2)*(x1005)))+(((sj1)*(x1001)))+(((IkReal(-1.00000000000000))*(cj1)*(x1002)*(x1003)))+(((IkReal(-1.00000000000000))*(r02)*(x1004)))+(((IkReal(-1.00000000000000))*(sj1)*(x1007)))), ((((IkReal(-1.00000000000000))*(x1003)*(x1004)))+(((sj1)*(sj2)*(x1003)))+(((x1004)*(x1005)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1002)*(x1006)))+(((cj1)*(x1001)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1008=((r02)*(sj2));
IkReal x1009=((IkReal(1.00000000000000))*(sj2));
IkReal x1010=((r00)*(sj0));
IkReal x1011=((cj1)*(cj2));
IkReal x1012=((cj0)*(r01));
IkReal x1013=((sj1)*(x1012));
IkReal x1014=((IkReal(1.00000000000000))*(cj2)*(x1010));
evalcond[0]=((((cj2)*(x1013)))+(((sj1)*(x1008)))+(((IkReal(-1.00000000000000))*(cj1)*(x1009)*(x1010)))+(((IkReal(-1.00000000000000))*(r02)*(x1011)))+(((IkReal(-1.00000000000000))*(sj1)*(x1014)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((cj1)*(sj2)*(x1012))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1010)*(x1011)))+(((IkReal(-1.00000000000000))*(x1009)*(x1013)))+(((sj1)*(sj2)*(x1010)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((cj2)*(r02)*(sj1)))+(((cj1)*(x1008)))+(((x1011)*(x1012))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1015=((pz)*(sj1));
IkReal x1016=((cj0)*(py));
IkReal x1017=((IkReal(1.00000000000000))*(sj2));
IkReal x1018=((cj1)*(cj2));
IkReal x1019=((px)*(sj0));
IkReal x1020=((cj2)*(sj1));
IkReal x1021=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(-0.190890000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.312420000000000))+(((x1016)*(x1018)))+(((IkReal(0.00982000000000000))*(cj2)))+(((cj2)*(x1015)))+(((sj1)*(sj2)*(x1019)))+(((IkReal(-1.00000000000000))*(x1018)*(x1019)))+(((IkReal(-0.521670000000000))*(sj2)))+(((pz)*(x1021)))+(((IkReal(-1.00000000000000))*(sj1)*(x1016)*(x1017))));
evalcond[4]=((IkReal(-0.126510000000000))+(((IkReal(-1.00000000000000))*(x1019)*(x1020)))+(((IkReal(-1.00000000000000))*(pz)*(x1018)))+(((IkReal(-1.00000000000000))*(cj1)*(x1017)*(x1019)))+(((IkReal(0.521670000000000))*(cj2)))+(((sj2)*(x1015)))+(((IkReal(0.00982000000000000))*(sj2)))+(((x1016)*(x1021)))+(((x1016)*(x1020))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1022=((IkReal(1.00000000000000))*(sj2));
IkReal x1023=((r02)*(sj1));
IkReal x1024=((cj0)*(r01));
IkReal x1025=((IkReal(1.00000000000000))*(cj2));
IkReal x1026=((cj1)*(r02));
IkReal x1027=((cj1)*(r00)*(sj0));
IkReal x1028=((r00)*(sj0)*(sj1));
if( IKabs(((((cj2)*(x1028)))+(((cj2)*(x1026)))+(((IkReal(-1.00000000000000))*(x1022)*(x1023)))+(((IkReal(-1.00000000000000))*(sj1)*(x1024)*(x1025)))+(((IkReal(-1.00000000000000))*(cj1)*(x1022)*(x1024)))+(((sj2)*(x1027))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj2)*(x1023)))+(((cj1)*(cj2)*(x1024)))+(((IkReal(-1.00000000000000))*(sj1)*(x1022)*(x1024)))+(((IkReal(-1.00000000000000))*(x1025)*(x1027)))+(((sj2)*(x1026)))+(((sj2)*(x1028))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj2)*(x1028)))+(((cj2)*(x1026)))+(((IkReal(-1.00000000000000))*(x1022)*(x1023)))+(((IkReal(-1.00000000000000))*(sj1)*(x1024)*(x1025)))+(((IkReal(-1.00000000000000))*(cj1)*(x1022)*(x1024)))+(((sj2)*(x1027)))))+IKsqr(((((cj2)*(x1023)))+(((cj1)*(cj2)*(x1024)))+(((IkReal(-1.00000000000000))*(sj1)*(x1022)*(x1024)))+(((IkReal(-1.00000000000000))*(x1025)*(x1027)))+(((sj2)*(x1026)))+(((sj2)*(x1028)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((cj2)*(x1028)))+(((cj2)*(x1026)))+(((IkReal(-1.00000000000000))*(x1022)*(x1023)))+(((IkReal(-1.00000000000000))*(sj1)*(x1024)*(x1025)))+(((IkReal(-1.00000000000000))*(cj1)*(x1022)*(x1024)))+(((sj2)*(x1027)))), ((((cj2)*(x1023)))+(((cj1)*(cj2)*(x1024)))+(((IkReal(-1.00000000000000))*(sj1)*(x1022)*(x1024)))+(((IkReal(-1.00000000000000))*(x1025)*(x1027)))+(((sj2)*(x1026)))+(((sj2)*(x1028)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1029=((r02)*(sj2));
IkReal x1030=((IkReal(1.00000000000000))*(sj2));
IkReal x1031=((r00)*(sj0));
IkReal x1032=((cj1)*(cj2));
IkReal x1033=((cj0)*(r01));
IkReal x1034=((sj1)*(x1033));
IkReal x1035=((IkReal(1.00000000000000))*(cj2)*(x1031));
evalcond[0]=((((sj1)*(x1029)))+(((cj2)*(x1034)))+(((cj1)*(sj2)*(x1033)))+(IKsin(j5))+(((IkReal(-1.00000000000000))*(r02)*(x1032)))+(((IkReal(-1.00000000000000))*(sj1)*(x1035)))+(((IkReal(-1.00000000000000))*(cj1)*(x1030)*(x1031))));
evalcond[1]=((((sj1)*(sj2)*(x1031)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1030)*(x1034)))+(((x1032)*(x1033)))+(((IkReal(-1.00000000000000))*(x1031)*(x1032)))+(((cj1)*(x1029))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1036=((r02)*(sj2));
IkReal x1037=((IkReal(1.00000000000000))*(sj2));
IkReal x1038=((r00)*(sj0));
IkReal x1039=((cj1)*(cj2));
IkReal x1040=((cj0)*(r01));
IkReal x1041=((sj1)*(x1040));
IkReal x1042=((IkReal(1.00000000000000))*(cj2)*(x1038));
if( IKabs(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((sj1)*(x1036)))+(((IkReal(-1.00000000000000))*(sj1)*(x1042)))+(((cj2)*(x1041)))+(((IkReal(-1.00000000000000))*(r02)*(x1039)))+(((cj1)*(sj2)*(x1040)))+(((IkReal(-1.00000000000000))*(cj1)*(x1037)*(x1038))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((sj1)*(sj2)*(x1038)))+(((x1039)*(x1040)))+(((IkReal(-1.00000000000000))*(x1037)*(x1041)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1038)*(x1039)))+(((cj1)*(x1036))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((sj1)*(x1036)))+(((IkReal(-1.00000000000000))*(sj1)*(x1042)))+(((cj2)*(x1041)))+(((IkReal(-1.00000000000000))*(r02)*(x1039)))+(((cj1)*(sj2)*(x1040)))+(((IkReal(-1.00000000000000))*(cj1)*(x1037)*(x1038)))))))+IKsqr(((((sj1)*(sj2)*(x1038)))+(((x1039)*(x1040)))+(((IkReal(-1.00000000000000))*(x1037)*(x1041)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1038)*(x1039)))+(((cj1)*(x1036)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((sj1)*(x1036)))+(((IkReal(-1.00000000000000))*(sj1)*(x1042)))+(((cj2)*(x1041)))+(((IkReal(-1.00000000000000))*(r02)*(x1039)))+(((cj1)*(sj2)*(x1040)))+(((IkReal(-1.00000000000000))*(cj1)*(x1037)*(x1038)))))), ((((sj1)*(sj2)*(x1038)))+(((x1039)*(x1040)))+(((IkReal(-1.00000000000000))*(x1037)*(x1041)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1038)*(x1039)))+(((cj1)*(x1036)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1043=IKsin(j5);
IkReal x1044=((r02)*(sj2));
IkReal x1045=((IkReal(1.00000000000000))*(sj2));
IkReal x1046=((r00)*(sj0));
IkReal x1047=((IkReal(1.00000000000000))*(cj2));
IkReal x1048=((IkReal(1.00000000000000))*(x1043));
IkReal x1049=((cj0)*(r01)*(sj1));
IkReal x1050=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x1048)))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj1)*(x1045)*(x1046)))+(((IkReal(-1.00000000000000))*(sj1)*(x1046)*(x1047)))+(((sj2)*(x1050)))+(((cj2)*(x1049)))+(((sj1)*(x1044)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1047)))+(((IkReal(-1.00000000000000))*(sj4)*(x1048))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1045)*(x1049)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((cj1)*(x1044)))+(((cj2)*(x1050)))+(((cj2)*(r02)*(sj1)))+(((sj1)*(sj2)*(x1046)))+(((IkReal(-1.00000000000000))*(cj1)*(x1046)*(x1047))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1051=((sj1)*(sj2));
IkReal x1052=((cj0)*(r01));
IkReal x1053=((r00)*(sj0));
IkReal x1054=((cj1)*(cj2));
if( IKabs(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x1052)*(x1054)))+(((x1051)*(x1053)))+(((IkReal(-1.00000000000000))*(x1053)*(x1054)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1051)*(x1052)))+(((cj1)*(r02)*(sj2))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))))+IKsqr(((((x1052)*(x1054)))+(((x1051)*(x1053)))+(((IkReal(-1.00000000000000))*(x1053)*(x1054)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1051)*(x1052)))+(((cj1)*(r02)*(sj2)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))), ((((x1052)*(x1054)))+(((x1051)*(x1053)))+(((IkReal(-1.00000000000000))*(x1053)*(x1054)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1051)*(x1052)))+(((cj1)*(r02)*(sj2)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1055=IKsin(j5);
IkReal x1056=((r02)*(sj2));
IkReal x1057=((IkReal(1.00000000000000))*(sj2));
IkReal x1058=((r00)*(sj0));
IkReal x1059=((IkReal(1.00000000000000))*(cj2));
IkReal x1060=((IkReal(1.00000000000000))*(x1055));
IkReal x1061=((cj0)*(r01)*(sj1));
IkReal x1062=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x1060)))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj1)*(x1057)*(x1058)))+(((sj2)*(x1062)))+(((cj2)*(x1061)))+(((sj1)*(x1056)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1059)))+(((IkReal(-1.00000000000000))*(sj4)*(x1060)))+(((IkReal(-1.00000000000000))*(sj1)*(x1058)*(x1059))));
evalcond[2]=((((cj2)*(x1062)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((cj1)*(x1056)))+(((IkReal(-1.00000000000000))*(x1057)*(x1061)))+(((cj2)*(r02)*(sj1)))+(((sj1)*(sj2)*(x1058)))+(((IkReal(-1.00000000000000))*(cj1)*(x1058)*(x1059))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1063=((px)*(sj0));
IkReal x1064=((cj0)*(py));
IkReal x1065=((IkReal(3950000.00000000))*(sj2));
IkReal x1066=((IkReal(954450000.000000))*(sj3));
IkReal x1067=((py)*(sj0));
IkReal x1068=((pz)*(sj1));
IkReal x1069=((cj0)*(px));
IkReal x1070=((IkReal(954450000.000000))*(cj1));
IkReal x1071=((cj2)*(pz));
IkReal x1072=((IkReal(3950000.00000000))*(sj3));
IkReal x1073=((IkReal(3950000.00000000))*(cj2)*(sj1));
IkReal x1074=((IkReal(954450000.000000))*(cj2)*(sj1));
if( IKabs(((gconst1)*(((IkReal(29625.0000000000))+(((IkReal(-1.00000000000000))*(x1063)*(x1073)))+(((IkReal(526219.000000000))*(sj3)))+(((IkReal(-3950000.00000000))*(cj1)*(x1071)))+(((IkReal(-1.00000000000000))*(cj1)*(x1063)*(x1065)))+(((IkReal(2060596.50000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x1066)*(x1069)))+(((IkReal(-1.00000000000000))*(x1066)*(x1067)))+(((IkReal(38789.0000000000))*(sj2)))+(((cj1)*(x1064)*(x1065)))+(((IkReal(202753.500000000))*(cj3)))+(((x1064)*(x1073)))+(((x1065)*(x1068))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst1)*(((IkReal(-7158375.00000000))+(((IkReal(-127151829.000000))*(sj3)))+(((IkReal(-1.00000000000000))*(sj2)*(x1064)*(x1070)))+(((IkReal(-48991918.5000000))*(cj3)))+(((x1070)*(x1071)))+(((sj2)*(x1063)*(x1070)))+(((IkReal(-954450000.000000))*(sj2)*(x1068)))+(((IkReal(-497907931.500000))*(cj2)))+(((x1063)*(x1074)))+(((IkReal(-1.00000000000000))*(x1067)*(x1072)))+(((IkReal(-1.00000000000000))*(x1069)*(x1072)))+(((IkReal(-9372699.00000000))*(sj2)))+(((IkReal(-1.00000000000000))*(x1064)*(x1074))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst1)*(((IkReal(29625.0000000000))+(((IkReal(-1.00000000000000))*(x1063)*(x1073)))+(((IkReal(526219.000000000))*(sj3)))+(((IkReal(-3950000.00000000))*(cj1)*(x1071)))+(((IkReal(-1.00000000000000))*(cj1)*(x1063)*(x1065)))+(((IkReal(2060596.50000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x1066)*(x1069)))+(((IkReal(-1.00000000000000))*(x1066)*(x1067)))+(((IkReal(38789.0000000000))*(sj2)))+(((cj1)*(x1064)*(x1065)))+(((IkReal(202753.500000000))*(cj3)))+(((x1064)*(x1073)))+(((x1065)*(x1068)))))), ((gconst1)*(((IkReal(-7158375.00000000))+(((IkReal(-127151829.000000))*(sj3)))+(((IkReal(-1.00000000000000))*(sj2)*(x1064)*(x1070)))+(((IkReal(-48991918.5000000))*(cj3)))+(((x1070)*(x1071)))+(((sj2)*(x1063)*(x1070)))+(((IkReal(-954450000.000000))*(sj2)*(x1068)))+(((IkReal(-497907931.500000))*(cj2)))+(((x1063)*(x1074)))+(((IkReal(-1.00000000000000))*(x1067)*(x1072)))+(((IkReal(-1.00000000000000))*(x1069)*(x1072)))+(((IkReal(-9372699.00000000))*(sj2)))+(((IkReal(-1.00000000000000))*(x1064)*(x1074)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[3];
IkReal x1075=IKsin(j4);
IkReal x1076=IKcos(j4);
IkReal x1077=((IkReal(1.00000000000000))*(cj1));
IkReal x1078=((pz)*(sj1));
IkReal x1079=((IkReal(1.00000000000000))*(sj1));
IkReal x1080=((cj0)*(cj2)*(py));
IkReal x1081=((px)*(sj0)*(sj2));
IkReal x1082=((IkReal(0.190890000000000))*(x1076));
IkReal x1083=((IkReal(0.000790000000000000))*(x1075));
IkReal x1084=((cj0)*(py)*(sj2));
IkReal x1085=((cj2)*(px)*(sj0));
evalcond[0]=((((IkReal(0.000790000000000000))*(x1076)))+(((IkReal(0.190890000000000))*(x1075)))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[1]=((IkReal(-0.261090000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((cj1)*(x1080)))+(((cj2)*(x1078)))+(((IkReal(-1.00000000000000))*(x1079)*(x1084)))+(((cj1)*(pz)*(sj2)))+(((IkReal(-0.133220000000000))*(cj3)))+(((cj3)*(x1083)))+(((IkReal(-1.00000000000000))*(x1077)*(x1085)))+(((sj1)*(x1081)))+(((IkReal(0.0513300000000000))*(sj3)))+(((IkReal(-0.521670000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(cj3)*(x1082))));
evalcond[2]=((IkReal(0.00750000000000000))+(((IkReal(-1.00000000000000))*(sj3)*(x1083)))+(((sj3)*(x1082)))+(((cj1)*(x1084)))+(((sj2)*(x1078)))+(((IkReal(0.0513300000000000))*(cj3)))+(((IkReal(0.133220000000000))*(sj3)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x1079)*(x1085)))+(((IkReal(-1.00000000000000))*(x1077)*(x1081)))+(((sj1)*(x1080)))+(((IkReal(-1.00000000000000))*(cj2)*(pz)*(x1077)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[2];
IkReal x1086=(cj3)*(cj3);
IkReal x1087=(sj3)*(sj3);
dummyeval[0]=((((sj4)*(x1087)))+(((sj4)*(x1086))));
dummyeval[1]=((((IkReal(-1.00000000000000))*(x1086)))+(((IkReal(-1.00000000000000))*(x1087))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=cj4;
dummyeval[1]=sj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=cj4;
dummyeval[1]=cj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x1088=((cj1)*(sj2));
IkReal x1089=((px)*(sj0));
IkReal x1090=((sj1)*(sj2));
IkReal x1091=((cj0)*(py));
IkReal x1092=((cj2)*(pz));
IkReal x1093=((IkReal(1.00000000000000))*(cj1));
IkReal x1094=((cj2)*(x1091));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(0.190890000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.261090000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((pz)*(x1088)))+(((cj1)*(x1094)))+(((sj1)*(x1092)))+(((IkReal(-1.00000000000000))*(x1090)*(x1091)))+(((x1089)*(x1090)))+(((IkReal(-1.00000000000000))*(cj2)*(x1089)*(x1093)))+(((IkReal(0.0513300000000000))*(sj3)))+(((IkReal(-0.521670000000000))*(sj2)))+(((IkReal(-0.132430000000000))*(cj3))));
evalcond[4]=((IkReal(0.00750000000000000))+(((sj1)*(x1094)))+(((IkReal(-1.00000000000000))*(x1088)*(x1089)))+(((IkReal(0.0513300000000000))*(cj3)))+(((x1088)*(x1091)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x1092)*(x1093)))+(((pz)*(x1090)))+(((IkReal(0.132430000000000))*(sj3)))+(((IkReal(0.00982000000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x1089))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst2;
gconst2=IKsign((((sj3)*(sj3))+((cj3)*(cj3))));
dummyeval[0]=(((sj3)*(sj3))+((cj3)*(cj3)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1095=((IkReal(1.00000000000000))*(cj3));
IkReal x1096=((cj1)*(cj2));
IkReal x1097=((r00)*(sj0));
IkReal x1098=((r02)*(sj3));
IkReal x1099=((cj3)*(r02));
IkReal x1100=((cj2)*(sj1));
IkReal x1101=((IkReal(1.00000000000000))*(sj3));
IkReal x1102=((cj0)*(r01));
IkReal x1103=((cj1)*(sj2));
IkReal x1104=((sj1)*(sj2));
IkReal x1105=((sj1)*(x1102));
if( IKabs(((gconst2)*(((((IkReal(-1.00000000000000))*(x1100)*(x1101)*(x1102)))+(((IkReal(-1.00000000000000))*(x1095)*(x1096)*(x1097)))+(((IkReal(-1.00000000000000))*(x1098)*(x1104)))+(((cj3)*(x1096)*(x1102)))+(((sj3)*(x1097)*(x1103)))+(((sj3)*(x1097)*(x1100)))+(((x1099)*(x1100)))+(((x1099)*(x1103)))+(((cj3)*(x1097)*(x1104)))+(((IkReal(-1.00000000000000))*(x1101)*(x1102)*(x1103)))+(((IkReal(-1.00000000000000))*(x1095)*(x1102)*(x1104)))+(((x1096)*(x1098))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst2)*(((((IkReal(-1.00000000000000))*(r02)*(x1095)*(x1104)))+(((IkReal(-1.00000000000000))*(x1097)*(x1101)*(x1104)))+(((sj3)*(x1102)*(x1104)))+(((IkReal(-1.00000000000000))*(x1098)*(x1103)))+(((IkReal(-1.00000000000000))*(x1098)*(x1100)))+(((IkReal(-1.00000000000000))*(x1095)*(x1100)*(x1102)))+(((cj3)*(x1097)*(x1100)))+(((cj3)*(x1097)*(x1103)))+(((IkReal(-1.00000000000000))*(x1095)*(x1102)*(x1103)))+(((x1096)*(x1099)))+(((sj3)*(x1096)*(x1097)))+(((IkReal(-1.00000000000000))*(x1096)*(x1101)*(x1102))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst2)*(((((IkReal(-1.00000000000000))*(x1100)*(x1101)*(x1102)))+(((IkReal(-1.00000000000000))*(x1095)*(x1096)*(x1097)))+(((IkReal(-1.00000000000000))*(x1098)*(x1104)))+(((cj3)*(x1096)*(x1102)))+(((sj3)*(x1097)*(x1103)))+(((sj3)*(x1097)*(x1100)))+(((x1099)*(x1100)))+(((x1099)*(x1103)))+(((cj3)*(x1097)*(x1104)))+(((IkReal(-1.00000000000000))*(x1101)*(x1102)*(x1103)))+(((IkReal(-1.00000000000000))*(x1095)*(x1102)*(x1104)))+(((x1096)*(x1098)))))), ((gconst2)*(((((IkReal(-1.00000000000000))*(r02)*(x1095)*(x1104)))+(((IkReal(-1.00000000000000))*(x1097)*(x1101)*(x1104)))+(((sj3)*(x1102)*(x1104)))+(((IkReal(-1.00000000000000))*(x1098)*(x1103)))+(((IkReal(-1.00000000000000))*(x1098)*(x1100)))+(((IkReal(-1.00000000000000))*(x1095)*(x1100)*(x1102)))+(((cj3)*(x1097)*(x1100)))+(((cj3)*(x1097)*(x1103)))+(((IkReal(-1.00000000000000))*(x1095)*(x1102)*(x1103)))+(((x1096)*(x1099)))+(((sj3)*(x1096)*(x1097)))+(((IkReal(-1.00000000000000))*(x1096)*(x1101)*(x1102)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1106=IKcos(j5);
IkReal x1107=IKsin(j5);
IkReal x1108=((r02)*(sj2));
IkReal x1109=((IkReal(1.00000000000000))*(sj2));
IkReal x1110=((r00)*(sj0));
IkReal x1111=((cj1)*(cj2));
IkReal x1112=((cj0)*(r01));
IkReal x1113=((sj1)*(x1112));
IkReal x1114=((IkReal(1.00000000000000))*(cj2)*(x1110));
evalcond[0]=((((sj3)*(x1107)))+(((IkReal(-1.00000000000000))*(r02)*(x1111)))+(((IkReal(-1.00000000000000))*(cj1)*(x1109)*(x1110)))+(((IkReal(-1.00000000000000))*(sj1)*(x1114)))+(((sj1)*(x1108)))+(((cj2)*(x1113)))+(((cj1)*(sj2)*(x1112)))+(((cj3)*(x1106))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1110)*(x1111)))+(((x1111)*(x1112)))+(((sj3)*(x1106)))+(((IkReal(-1.00000000000000))*(x1109)*(x1113)))+(((sj1)*(sj2)*(x1110)))+(((cj1)*(x1108)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj3)*(x1107))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1115=((cj1)*(sj2));
IkReal x1116=((px)*(sj0));
IkReal x1117=((sj1)*(sj2));
IkReal x1118=((cj0)*(py));
IkReal x1119=((cj2)*(pz));
IkReal x1120=((IkReal(1.00000000000000))*(cj1));
IkReal x1121=((cj2)*(x1118));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(-0.190890000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.261090000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-0.134010000000000))*(cj3)))+(((x1116)*(x1117)))+(((cj1)*(x1121)))+(((pz)*(x1115)))+(((sj1)*(x1119)))+(((IkReal(-1.00000000000000))*(x1117)*(x1118)))+(((IkReal(0.0513300000000000))*(sj3)))+(((IkReal(-0.521670000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(cj2)*(x1116)*(x1120))));
evalcond[4]=((IkReal(0.00750000000000000))+(((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x1116)))+(((sj1)*(x1121)))+(((IkReal(0.0513300000000000))*(cj3)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x1115)*(x1116)))+(((IkReal(0.134010000000000))*(sj3)))+(((pz)*(x1117)))+(((IkReal(-1.00000000000000))*(x1119)*(x1120)))+(((x1115)*(x1118)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst3;
gconst3=IKsign((((sj3)*(sj3))+((cj3)*(cj3))));
dummyeval[0]=(((sj3)*(sj3))+((cj3)*(cj3)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1122=((r00)*(sj0));
IkReal x1123=((sj1)*(sj2));
IkReal x1124=((r02)*(sj3));
IkReal x1125=((cj0)*(r01));
IkReal x1126=((cj3)*(r02));
IkReal x1127=((IkReal(1.00000000000000))*(cj2));
IkReal x1128=((cj1)*(sj3));
IkReal x1129=((sj1)*(sj3));
IkReal x1130=((cj3)*(sj1));
IkReal x1131=((cj1)*(cj2)*(cj3));
IkReal x1132=((IkReal(1.00000000000000))*(cj1)*(sj2));
if( IKabs(((gconst3)*(((((IkReal(-1.00000000000000))*(cj3)*(x1122)*(x1123)))+(((IkReal(-1.00000000000000))*(x1122)*(x1127)*(x1129)))+(((IkReal(-1.00000000000000))*(sj1)*(x1126)*(x1127)))+(((IkReal(-1.00000000000000))*(cj1)*(cj3)*(x1125)*(x1127)))+(((IkReal(-1.00000000000000))*(cj1)*(x1124)*(x1127)))+(((IkReal(-1.00000000000000))*(x1126)*(x1132)))+(((cj3)*(x1123)*(x1125)))+(((cj2)*(x1125)*(x1129)))+(((sj2)*(x1125)*(x1128)))+(((x1122)*(x1131)))+(((x1123)*(x1124)))+(((IkReal(-1.00000000000000))*(sj2)*(x1122)*(x1128))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst3)*(((((IkReal(-1.00000000000000))*(sj3)*(x1122)*(x1123)))+(((IkReal(-1.00000000000000))*(sj1)*(x1124)*(x1127)))+(((IkReal(-1.00000000000000))*(cj3)*(x1125)*(x1132)))+(((cj2)*(x1122)*(x1130)))+(((cj2)*(x1122)*(x1128)))+(((IkReal(-1.00000000000000))*(x1123)*(x1126)))+(((cj1)*(cj2)*(x1126)))+(((sj3)*(x1123)*(x1125)))+(((IkReal(-1.00000000000000))*(x1125)*(x1127)*(x1128)))+(((IkReal(-1.00000000000000))*(x1124)*(x1132)))+(((cj1)*(cj3)*(sj2)*(x1122)))+(((IkReal(-1.00000000000000))*(x1125)*(x1127)*(x1130))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst3)*(((((IkReal(-1.00000000000000))*(cj3)*(x1122)*(x1123)))+(((IkReal(-1.00000000000000))*(x1122)*(x1127)*(x1129)))+(((IkReal(-1.00000000000000))*(sj1)*(x1126)*(x1127)))+(((IkReal(-1.00000000000000))*(cj1)*(cj3)*(x1125)*(x1127)))+(((IkReal(-1.00000000000000))*(cj1)*(x1124)*(x1127)))+(((IkReal(-1.00000000000000))*(x1126)*(x1132)))+(((cj3)*(x1123)*(x1125)))+(((cj2)*(x1125)*(x1129)))+(((sj2)*(x1125)*(x1128)))+(((x1122)*(x1131)))+(((x1123)*(x1124)))+(((IkReal(-1.00000000000000))*(sj2)*(x1122)*(x1128)))))), ((gconst3)*(((((IkReal(-1.00000000000000))*(sj3)*(x1122)*(x1123)))+(((IkReal(-1.00000000000000))*(sj1)*(x1124)*(x1127)))+(((IkReal(-1.00000000000000))*(cj3)*(x1125)*(x1132)))+(((cj2)*(x1122)*(x1130)))+(((cj2)*(x1122)*(x1128)))+(((IkReal(-1.00000000000000))*(x1123)*(x1126)))+(((cj1)*(cj2)*(x1126)))+(((sj3)*(x1123)*(x1125)))+(((IkReal(-1.00000000000000))*(x1125)*(x1127)*(x1128)))+(((IkReal(-1.00000000000000))*(x1124)*(x1132)))+(((cj1)*(cj3)*(sj2)*(x1122)))+(((IkReal(-1.00000000000000))*(x1125)*(x1127)*(x1130)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1133=IKsin(j5);
IkReal x1134=IKcos(j5);
IkReal x1135=((r02)*(sj2));
IkReal x1136=((IkReal(1.00000000000000))*(sj2));
IkReal x1137=((r00)*(sj0));
IkReal x1138=((IkReal(1.00000000000000))*(cj2));
IkReal x1139=((cj0)*(r01)*(sj1));
IkReal x1140=((cj0)*(cj1)*(r01));
evalcond[0]=((((cj2)*(x1139)))+(((cj3)*(x1134)))+(((IkReal(-1.00000000000000))*(cj1)*(x1136)*(x1137)))+(((sj1)*(x1135)))+(((sj2)*(x1140)))+(((IkReal(-1.00000000000000))*(sj3)*(x1133)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1138)))+(((IkReal(-1.00000000000000))*(sj1)*(x1137)*(x1138))));
evalcond[1]=((((cj3)*(x1133)))+(((IkReal(-1.00000000000000))*(cj1)*(x1137)*(x1138)))+(((sj1)*(sj2)*(x1137)))+(((cj2)*(x1140)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1136)*(x1139)))+(((cj1)*(x1135)))+(((sj3)*(x1134))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1141=((cj1)*(sj2));
IkReal x1142=((px)*(sj0));
IkReal x1143=((sj1)*(sj2));
IkReal x1144=((cj0)*(py));
IkReal x1145=((cj2)*(pz));
IkReal x1146=((IkReal(1.00000000000000))*(cj1));
IkReal x1147=((cj2)*(x1144));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(0.000790000000000000))*(cj4)))+(((cj0)*(px)))+(((py)*(sj0)))+(((IkReal(0.190890000000000))*(sj4))));
evalcond[2]=((IkReal(-0.209760000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((pz)*(x1141)))+(((x1142)*(x1143)))+(((cj1)*(x1147)))+(((sj1)*(x1145)))+(((IkReal(-1.00000000000000))*(cj2)*(x1142)*(x1146)))+(((IkReal(-0.521670000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(x1143)*(x1144))));
evalcond[3]=((IkReal(0.140720000000000))+(((IkReal(-1.00000000000000))*(x1145)*(x1146)))+(((pz)*(x1143)))+(((x1141)*(x1144)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x1141)*(x1142)))+(((IkReal(0.190890000000000))*(cj4)))+(((IkReal(-0.000790000000000000))*(sj4)))+(((sj1)*(x1147)))+(((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x1142)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x1148=((IkReal(1.00000000000000))*(sj0));
IkReal x1149=((cj1)*(sj2));
IkReal x1150=((sj1)*(sj2));
IkReal x1151=((cj2)*(sj1));
IkReal x1152=((cj0)*(r01));
IkReal x1153=((cj0)*(py));
IkReal x1154=((cj2)*(x1153));
IkReal x1155=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.000790000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((x1149)*(x1152)))+(((IkReal(-1.00000000000000))*(r00)*(x1148)*(x1149)))+(((r02)*(x1150)))+(((IkReal(-1.00000000000000))*(r00)*(x1148)*(x1151)))+(((IkReal(-1.00000000000000))*(r02)*(x1155)))+(((x1151)*(x1152))));
evalcond[3]=((IkReal(-0.209760000000000))+(((pz)*(x1151)))+(((IkReal(0.00982000000000000))*(cj2)))+(((pz)*(x1149)))+(((cj1)*(x1154)))+(((IkReal(-1.00000000000000))*(x1150)*(x1153)))+(((IkReal(-0.521670000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(px)*(x1148)))+(((px)*(sj0)*(x1150))));
evalcond[4]=((IkReal(0.331610000000000))+(((pz)*(x1150)))+(((x1149)*(x1153)))+(((IkReal(0.521670000000000))*(cj2)))+(((x1151)*(x1153)))+(((IkReal(-1.00000000000000))*(pz)*(x1155)))+(((IkReal(-1.00000000000000))*(px)*(x1148)*(x1149)))+(((IkReal(0.00982000000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(px)*(x1148)*(x1151))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1156=((cj0)*(r01));
IkReal x1157=((sj1)*(sj2));
IkReal x1158=((IkReal(1.00000000000000))*(cj1));
IkReal x1159=((r00)*(sj0));
if( IKabs(((((r01)*(sj0)))+(((cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x1157)*(x1159)))+(((cj1)*(cj2)*(x1159)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1158)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj2)*(x1156)*(x1158)))+(((x1156)*(x1157))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r01)*(sj0)))+(((cj0)*(r00)))))+IKsqr(((((IkReal(-1.00000000000000))*(x1157)*(x1159)))+(((cj1)*(cj2)*(x1159)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1158)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj2)*(x1156)*(x1158)))+(((x1156)*(x1157)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((r01)*(sj0)))+(((cj0)*(r00)))), ((((IkReal(-1.00000000000000))*(x1157)*(x1159)))+(((cj1)*(cj2)*(x1159)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1158)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj2)*(x1156)*(x1158)))+(((x1156)*(x1157)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1160=((sj1)*(sj2));
IkReal x1161=((cj0)*(r01));
IkReal x1162=((r00)*(sj0));
IkReal x1163=((cj1)*(cj2));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1162)*(x1163)))+(IKcos(j5))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1160)*(x1161)))+(((x1160)*(x1162)))+(((x1161)*(x1163)))+(((cj1)*(r02)*(sj2))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1164=((IkReal(1.00000000000000))*(sj0));
IkReal x1165=((cj1)*(sj2));
IkReal x1166=((sj1)*(sj2));
IkReal x1167=((cj2)*(sj1));
IkReal x1168=((cj0)*(r01));
IkReal x1169=((cj0)*(py));
IkReal x1170=((cj2)*(x1169));
IkReal x1171=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.000790000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r02)*(x1171)))+(((x1165)*(x1168)))+(((r02)*(x1166)))+(((IkReal(-1.00000000000000))*(r00)*(x1164)*(x1167)))+(((IkReal(-1.00000000000000))*(r00)*(x1164)*(x1165)))+(((x1167)*(x1168))));
evalcond[3]=((IkReal(-0.209760000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((cj1)*(x1170)))+(((IkReal(-1.00000000000000))*(x1166)*(x1169)))+(((px)*(sj0)*(x1166)))+(((pz)*(x1167)))+(((pz)*(x1165)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(px)*(x1164)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(-0.0501700000000000))+(((x1165)*(x1169)))+(((IkReal(-1.00000000000000))*(pz)*(x1171)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(px)*(x1164)*(x1167)))+(((IkReal(-1.00000000000000))*(px)*(x1164)*(x1165)))+(((pz)*(x1166)))+(((x1167)*(x1169)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1172=((sj1)*(sj2));
IkReal x1173=((cj0)*(r01));
IkReal x1174=((r00)*(sj0));
IkReal x1175=((IkReal(1.00000000000000))*(cj1));
if( IKabs(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(cj2)*(x1173)*(x1175)))+(((IkReal(-1.00000000000000))*(x1172)*(x1174)))+(((cj1)*(cj2)*(x1174)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((x1172)*(x1173)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1175))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))))+IKsqr(((((IkReal(-1.00000000000000))*(cj2)*(x1173)*(x1175)))+(((IkReal(-1.00000000000000))*(x1172)*(x1174)))+(((cj1)*(cj2)*(x1174)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((x1172)*(x1173)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1175)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))), ((((IkReal(-1.00000000000000))*(cj2)*(x1173)*(x1175)))+(((IkReal(-1.00000000000000))*(x1172)*(x1174)))+(((cj1)*(cj2)*(x1174)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((x1172)*(x1173)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1175)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1176=((sj1)*(sj2));
IkReal x1177=((cj0)*(r01));
IkReal x1178=((r00)*(sj0));
IkReal x1179=((cj1)*(cj2));
evalcond[0]=((((r01)*(sj0)))+(IKsin(j5))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1176)*(x1177)))+(((IkReal(-1.00000000000000))*(x1178)*(x1179)))+(((x1176)*(x1178)))+(((x1177)*(x1179)))+(IKcos(j5))+(((cj2)*(r02)*(sj1)))+(((cj1)*(r02)*(sj2))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1180=((pz)*(sj1));
IkReal x1181=((cj0)*(py));
IkReal x1182=((IkReal(1.00000000000000))*(sj2));
IkReal x1183=((cj1)*(cj2));
IkReal x1184=((px)*(sj0));
IkReal x1185=((cj2)*(sj1));
IkReal x1186=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(0.190890000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.209760000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((sj1)*(sj2)*(x1184)))+(((pz)*(x1186)))+(((IkReal(-1.00000000000000))*(x1183)*(x1184)))+(((IkReal(-1.00000000000000))*(sj1)*(x1181)*(x1182)))+(((x1181)*(x1183)))+(((IkReal(-0.521670000000000))*(sj2)))+(((cj2)*(x1180))));
evalcond[4]=((IkReal(0.139930000000000))+(((IkReal(-1.00000000000000))*(cj1)*(x1182)*(x1184)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(pz)*(x1183)))+(((sj2)*(x1180)))+(((x1181)*(x1186)))+(((x1181)*(x1185)))+(((IkReal(-1.00000000000000))*(x1184)*(x1185)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1187=((IkReal(1.00000000000000))*(sj2));
IkReal x1188=((r02)*(sj1));
IkReal x1189=((cj0)*(r01));
IkReal x1190=((r00)*(sj0));
IkReal x1191=((cj1)*(r02));
IkReal x1192=((IkReal(1.00000000000000))*(cj2));
if( IKabs(((((IkReal(-1.00000000000000))*(sj1)*(x1189)*(x1192)))+(((IkReal(-1.00000000000000))*(cj1)*(x1187)*(x1189)))+(((cj2)*(sj1)*(x1190)))+(((IkReal(-1.00000000000000))*(x1187)*(x1188)))+(((cj2)*(x1191)))+(((cj1)*(sj2)*(x1190))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(sj1)*(x1187)*(x1190)))+(((sj1)*(sj2)*(x1189)))+(((IkReal(-1.00000000000000))*(x1188)*(x1192)))+(((IkReal(-1.00000000000000))*(x1187)*(x1191)))+(((IkReal(-1.00000000000000))*(cj1)*(x1189)*(x1192)))+(((cj1)*(cj2)*(x1190))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(sj1)*(x1189)*(x1192)))+(((IkReal(-1.00000000000000))*(cj1)*(x1187)*(x1189)))+(((cj2)*(sj1)*(x1190)))+(((IkReal(-1.00000000000000))*(x1187)*(x1188)))+(((cj2)*(x1191)))+(((cj1)*(sj2)*(x1190)))))+IKsqr(((((IkReal(-1.00000000000000))*(sj1)*(x1187)*(x1190)))+(((sj1)*(sj2)*(x1189)))+(((IkReal(-1.00000000000000))*(x1188)*(x1192)))+(((IkReal(-1.00000000000000))*(x1187)*(x1191)))+(((IkReal(-1.00000000000000))*(cj1)*(x1189)*(x1192)))+(((cj1)*(cj2)*(x1190)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(sj1)*(x1189)*(x1192)))+(((IkReal(-1.00000000000000))*(cj1)*(x1187)*(x1189)))+(((cj2)*(sj1)*(x1190)))+(((IkReal(-1.00000000000000))*(x1187)*(x1188)))+(((cj2)*(x1191)))+(((cj1)*(sj2)*(x1190)))), ((((IkReal(-1.00000000000000))*(sj1)*(x1187)*(x1190)))+(((sj1)*(sj2)*(x1189)))+(((IkReal(-1.00000000000000))*(x1188)*(x1192)))+(((IkReal(-1.00000000000000))*(x1187)*(x1191)))+(((IkReal(-1.00000000000000))*(cj1)*(x1189)*(x1192)))+(((cj1)*(cj2)*(x1190)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1193=((r02)*(sj2));
IkReal x1194=((IkReal(1.00000000000000))*(sj2));
IkReal x1195=((r00)*(sj0));
IkReal x1196=((cj1)*(cj2));
IkReal x1197=((cj0)*(r01));
IkReal x1198=((sj1)*(x1197));
IkReal x1199=((IkReal(1.00000000000000))*(cj2)*(x1195));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj1)*(x1194)*(x1195)))+(IKsin(j5))+(((sj1)*(x1193)))+(((cj2)*(x1198)))+(((cj1)*(sj2)*(x1197)))+(((IkReal(-1.00000000000000))*(r02)*(x1196)))+(((IkReal(-1.00000000000000))*(sj1)*(x1199))));
evalcond[1]=((((sj1)*(sj2)*(x1195)))+(((IkReal(-1.00000000000000))*(x1195)*(x1196)))+(((IkReal(-1.00000000000000))*(x1194)*(x1198)))+(IKcos(j5))+(((x1196)*(x1197)))+(((cj2)*(r02)*(sj1)))+(((cj1)*(x1193))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1200=((pz)*(sj1));
IkReal x1201=((cj0)*(py));
IkReal x1202=((IkReal(1.00000000000000))*(sj2));
IkReal x1203=((cj1)*(cj2));
IkReal x1204=((px)*(sj0));
IkReal x1205=((cj2)*(sj1));
IkReal x1206=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(-0.190890000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.209760000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x1203)*(x1204)))+(((IkReal(-1.00000000000000))*(sj1)*(x1201)*(x1202)))+(((cj2)*(x1200)))+(((pz)*(x1206)))+(((x1201)*(x1203)))+(((sj1)*(sj2)*(x1204)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(0.141510000000000))+(((IkReal(-1.00000000000000))*(pz)*(x1203)))+(((IkReal(-1.00000000000000))*(cj1)*(x1202)*(x1204)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x1204)*(x1205)))+(((sj2)*(x1200)))+(((x1201)*(x1205)))+(((x1201)*(x1206)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1207=((cj2)*(sj1));
IkReal x1208=((IkReal(1.00000000000000))*(r02));
IkReal x1209=((cj0)*(r01));
IkReal x1210=((sj1)*(sj2));
IkReal x1211=((cj1)*(cj2));
IkReal x1212=((cj1)*(sj2));
IkReal x1213=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((IkReal(-1.00000000000000))*(x1207)*(x1213)))+(((IkReal(-1.00000000000000))*(x1208)*(x1211)))+(((r02)*(x1210)))+(((IkReal(-1.00000000000000))*(x1212)*(x1213)))+(((x1209)*(x1212)))+(((x1207)*(x1209))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x1208)*(x1212)))+(((IkReal(-1.00000000000000))*(x1210)*(x1213)))+(((r00)*(sj0)*(x1211)))+(((x1209)*(x1210)))+(((IkReal(-1.00000000000000))*(x1209)*(x1211)))+(((IkReal(-1.00000000000000))*(x1207)*(x1208))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x1207)*(x1213)))+(((IkReal(-1.00000000000000))*(x1208)*(x1211)))+(((r02)*(x1210)))+(((IkReal(-1.00000000000000))*(x1212)*(x1213)))+(((x1209)*(x1212)))+(((x1207)*(x1209)))))+IKsqr(((((IkReal(-1.00000000000000))*(x1208)*(x1212)))+(((IkReal(-1.00000000000000))*(x1210)*(x1213)))+(((r00)*(sj0)*(x1211)))+(((x1209)*(x1210)))+(((IkReal(-1.00000000000000))*(x1209)*(x1211)))+(((IkReal(-1.00000000000000))*(x1207)*(x1208)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x1207)*(x1213)))+(((IkReal(-1.00000000000000))*(x1208)*(x1211)))+(((r02)*(x1210)))+(((IkReal(-1.00000000000000))*(x1212)*(x1213)))+(((x1209)*(x1212)))+(((x1207)*(x1209)))), ((((IkReal(-1.00000000000000))*(x1208)*(x1212)))+(((IkReal(-1.00000000000000))*(x1210)*(x1213)))+(((r00)*(sj0)*(x1211)))+(((x1209)*(x1210)))+(((IkReal(-1.00000000000000))*(x1209)*(x1211)))+(((IkReal(-1.00000000000000))*(x1207)*(x1208)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1214=((r02)*(sj2));
IkReal x1215=((IkReal(1.00000000000000))*(sj2));
IkReal x1216=((r00)*(sj0));
IkReal x1217=((cj1)*(cj2));
IkReal x1218=((cj0)*(r01));
IkReal x1219=((sj1)*(x1218));
IkReal x1220=((IkReal(1.00000000000000))*(cj2)*(x1216));
evalcond[0]=((((IkReal(-1.00000000000000))*(r02)*(x1217)))+(((IkReal(-1.00000000000000))*(cj1)*(x1215)*(x1216)))+(((sj1)*(x1214)))+(((IkReal(-1.00000000000000))*(sj1)*(x1220)))+(((cj2)*(x1219)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((cj1)*(sj2)*(x1218))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1215)*(x1219)))+(((sj1)*(sj2)*(x1216)))+(((IkReal(-1.00000000000000))*(x1216)*(x1217)))+(IKcos(j5))+(((cj2)*(r02)*(sj1)))+(((x1217)*(x1218)))+(((cj1)*(x1214))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1221=((IkReal(1.00000000000000))*(sj2));
IkReal x1222=((r02)*(sj1));
IkReal x1223=((cj0)*(r01));
IkReal x1224=((cj1)*(r02));
IkReal x1225=((r00)*(sj0));
IkReal x1226=((IkReal(1.00000000000000))*(cj2));
if( IKabs(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj1)*(x1221)*(x1223)))+(((cj2)*(x1224)))+(((cj1)*(sj2)*(x1225)))+(((IkReal(-1.00000000000000))*(x1221)*(x1222)))+(((cj2)*(sj1)*(x1225)))+(((IkReal(-1.00000000000000))*(sj1)*(x1223)*(x1226))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((sj1)*(sj2)*(x1223)))+(((IkReal(-1.00000000000000))*(sj1)*(x1221)*(x1225)))+(((IkReal(-1.00000000000000))*(x1221)*(x1224)))+(((IkReal(-1.00000000000000))*(cj1)*(x1223)*(x1226)))+(((IkReal(-1.00000000000000))*(x1222)*(x1226)))+(((cj1)*(cj2)*(x1225))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj1)*(x1221)*(x1223)))+(((cj2)*(x1224)))+(((cj1)*(sj2)*(x1225)))+(((IkReal(-1.00000000000000))*(x1221)*(x1222)))+(((cj2)*(sj1)*(x1225)))+(((IkReal(-1.00000000000000))*(sj1)*(x1223)*(x1226)))))))+IKsqr(((((sj1)*(sj2)*(x1223)))+(((IkReal(-1.00000000000000))*(sj1)*(x1221)*(x1225)))+(((IkReal(-1.00000000000000))*(x1221)*(x1224)))+(((IkReal(-1.00000000000000))*(cj1)*(x1223)*(x1226)))+(((IkReal(-1.00000000000000))*(x1222)*(x1226)))+(((cj1)*(cj2)*(x1225)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj1)*(x1221)*(x1223)))+(((cj2)*(x1224)))+(((cj1)*(sj2)*(x1225)))+(((IkReal(-1.00000000000000))*(x1221)*(x1222)))+(((cj2)*(sj1)*(x1225)))+(((IkReal(-1.00000000000000))*(sj1)*(x1223)*(x1226)))))), ((((sj1)*(sj2)*(x1223)))+(((IkReal(-1.00000000000000))*(sj1)*(x1221)*(x1225)))+(((IkReal(-1.00000000000000))*(x1221)*(x1224)))+(((IkReal(-1.00000000000000))*(cj1)*(x1223)*(x1226)))+(((IkReal(-1.00000000000000))*(x1222)*(x1226)))+(((cj1)*(cj2)*(x1225)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1227=IKsin(j5);
IkReal x1228=((r02)*(sj2));
IkReal x1229=((IkReal(1.00000000000000))*(sj2));
IkReal x1230=((r00)*(sj0));
IkReal x1231=((IkReal(1.00000000000000))*(cj2));
IkReal x1232=((cj0)*(r01)*(sj1));
IkReal x1233=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x1227)))+(((cj0)*(r00))));
evalcond[1]=((((sj1)*(x1228)))+(((cj2)*(x1232)))+(((IkReal(-1.00000000000000))*(cj1)*(x1229)*(x1230)))+(((IkReal(-1.00000000000000))*(sj1)*(x1230)*(x1231)))+(((sj2)*(x1233)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1231)))+(((sj4)*(x1227))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj1)*(x1230)*(x1231)))+(((cj2)*(x1233)))+(((sj1)*(sj2)*(x1230)))+(IKcos(j5))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1229)*(x1232)))+(((cj1)*(x1228))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1234=((cj0)*(r01));
IkReal x1235=((sj1)*(sj2));
IkReal x1236=((IkReal(1.00000000000000))*(cj1));
IkReal x1237=((r00)*(sj0));
if( IKabs(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x1234)*(x1235)))+(((IkReal(-1.00000000000000))*(cj2)*(x1234)*(x1236)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1236)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1235)*(x1237)))+(((cj1)*(cj2)*(x1237))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))))+IKsqr(((((x1234)*(x1235)))+(((IkReal(-1.00000000000000))*(cj2)*(x1234)*(x1236)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1236)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1235)*(x1237)))+(((cj1)*(cj2)*(x1237)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))), ((((x1234)*(x1235)))+(((IkReal(-1.00000000000000))*(cj2)*(x1234)*(x1236)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1236)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1235)*(x1237)))+(((cj1)*(cj2)*(x1237)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1238=IKsin(j5);
IkReal x1239=((r02)*(sj2));
IkReal x1240=((IkReal(1.00000000000000))*(sj2));
IkReal x1241=((r00)*(sj0));
IkReal x1242=((IkReal(1.00000000000000))*(cj2));
IkReal x1243=((cj0)*(r01)*(sj1));
IkReal x1244=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x1238)))+(((cj0)*(r00))));
evalcond[1]=((((sj1)*(x1239)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1242)))+(((sj2)*(x1244)))+(((sj4)*(x1238)))+(((IkReal(-1.00000000000000))*(cj1)*(x1240)*(x1241)))+(((IkReal(-1.00000000000000))*(sj1)*(x1241)*(x1242)))+(((cj2)*(x1243))));
evalcond[2]=((((sj1)*(sj2)*(x1241)))+(((IkReal(-1.00000000000000))*(cj1)*(x1241)*(x1242)))+(IKcos(j5))+(((IkReal(-1.00000000000000))*(x1240)*(x1243)))+(((cj2)*(r02)*(sj1)))+(((cj2)*(x1244)))+(((cj1)*(x1239))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1245=((cj1)*(sj2));
IkReal x1246=((px)*(sj0));
IkReal x1247=((sj1)*(sj2));
IkReal x1248=((cj0)*(py));
IkReal x1249=((cj2)*(pz));
IkReal x1250=((IkReal(1.00000000000000))*(cj1));
IkReal x1251=((cj2)*(x1248));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(0.000790000000000000))*(cj4)))+(((cj0)*(px)))+(((py)*(sj0)))+(((IkReal(0.190890000000000))*(sj4))));
evalcond[2]=((IkReal(-0.312420000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((pz)*(x1245)))+(((x1246)*(x1247)))+(((cj1)*(x1251)))+(((IkReal(-1.00000000000000))*(x1247)*(x1248)))+(((IkReal(-1.00000000000000))*(cj2)*(x1246)*(x1250)))+(((sj1)*(x1249)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[3]=((IkReal(-0.125720000000000))+(((IkReal(-1.00000000000000))*(x1249)*(x1250)))+(((IkReal(-1.00000000000000))*(x1245)*(x1246)))+(((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x1246)))+(((IkReal(0.000790000000000000))*(sj4)))+(((sj1)*(x1251)))+(((pz)*(x1247)))+(((IkReal(0.521670000000000))*(cj2)))+(((x1245)*(x1248)))+(((IkReal(-0.190890000000000))*(cj4)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x1252=((IkReal(1.00000000000000))*(sj0));
IkReal x1253=((cj1)*(sj2));
IkReal x1254=((sj1)*(sj2));
IkReal x1255=((cj2)*(sj1));
IkReal x1256=((cj0)*(r01));
IkReal x1257=((cj0)*(py));
IkReal x1258=((cj2)*(x1257));
IkReal x1259=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.000790000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((r02)*(x1254)))+(((x1253)*(x1256)))+(((x1255)*(x1256)))+(((IkReal(-1.00000000000000))*(r02)*(x1259)))+(((IkReal(-1.00000000000000))*(r00)*(x1252)*(x1255)))+(((IkReal(-1.00000000000000))*(r00)*(x1252)*(x1253))));
evalcond[3]=((IkReal(-0.312420000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((px)*(sj0)*(x1254)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(px)*(x1252)))+(((cj1)*(x1258)))+(((IkReal(-1.00000000000000))*(x1254)*(x1257)))+(((IkReal(-0.521670000000000))*(sj2)))+(((pz)*(x1253)))+(((pz)*(x1255))));
evalcond[4]=((IkReal(-0.316610000000000))+(((IkReal(0.521670000000000))*(cj2)))+(((x1253)*(x1257)))+(((x1255)*(x1257)))+(((IkReal(-1.00000000000000))*(pz)*(x1259)))+(((IkReal(-1.00000000000000))*(px)*(x1252)*(x1253)))+(((IkReal(-1.00000000000000))*(px)*(x1252)*(x1255)))+(((IkReal(0.00982000000000000))*(sj2)))+(((pz)*(x1254))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1260=((sj1)*(sj2));
IkReal x1261=((cj0)*(r01));
IkReal x1262=((r00)*(sj0));
IkReal x1263=((cj1)*(cj2));
if( IKabs(((((r01)*(sj0)))+(((cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x1261)*(x1263)))+(((IkReal(-1.00000000000000))*(x1262)*(x1263)))+(((x1260)*(x1262)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1260)*(x1261)))+(((cj1)*(r02)*(sj2))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r01)*(sj0)))+(((cj0)*(r00)))))+IKsqr(((((x1261)*(x1263)))+(((IkReal(-1.00000000000000))*(x1262)*(x1263)))+(((x1260)*(x1262)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1260)*(x1261)))+(((cj1)*(r02)*(sj2)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((r01)*(sj0)))+(((cj0)*(r00)))), ((((x1261)*(x1263)))+(((IkReal(-1.00000000000000))*(x1262)*(x1263)))+(((x1260)*(x1262)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1260)*(x1261)))+(((cj1)*(r02)*(sj2)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1264=((sj1)*(sj2));
IkReal x1265=((cj0)*(r01));
IkReal x1266=((r00)*(sj0));
IkReal x1267=((cj1)*(cj2));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((cj0)*(r00))));
evalcond[1]=((((x1264)*(x1266)))+(((IkReal(-1.00000000000000))*(x1264)*(x1265)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1266)*(x1267)))+(((x1265)*(x1267)))+(((cj1)*(r02)*(sj2))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1268=((IkReal(1.00000000000000))*(sj0));
IkReal x1269=((cj1)*(sj2));
IkReal x1270=((sj1)*(sj2));
IkReal x1271=((cj2)*(sj1));
IkReal x1272=((cj0)*(r01));
IkReal x1273=((cj0)*(py));
IkReal x1274=((cj2)*(x1273));
IkReal x1275=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.000790000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((x1269)*(x1272)))+(((r02)*(x1270)))+(((IkReal(-1.00000000000000))*(r02)*(x1275)))+(((x1271)*(x1272)))+(((IkReal(-1.00000000000000))*(r00)*(x1268)*(x1271)))+(((IkReal(-1.00000000000000))*(r00)*(x1268)*(x1269))));
evalcond[3]=((IkReal(-0.312420000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((pz)*(x1271)))+(((px)*(sj0)*(x1270)))+(((cj1)*(x1274)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(px)*(x1268)))+(((IkReal(-0.521670000000000))*(sj2)))+(((pz)*(x1269)))+(((IkReal(-1.00000000000000))*(x1270)*(x1273))));
evalcond[4]=((IkReal(0.0651700000000000))+(((x1269)*(x1273)))+(((pz)*(x1270)))+(((IkReal(0.521670000000000))*(cj2)))+(((x1271)*(x1273)))+(((IkReal(-1.00000000000000))*(px)*(x1268)*(x1269)))+(((IkReal(-1.00000000000000))*(px)*(x1268)*(x1271)))+(((IkReal(0.00982000000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(pz)*(x1275))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1276=((r00)*(sj0));
IkReal x1277=((cj1)*(cj2));
IkReal x1278=((sj1)*(sj2));
IkReal x1279=((cj0)*(r01));
if( IKabs(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x1276)*(x1278)))+(((x1277)*(x1279)))+(((IkReal(-1.00000000000000))*(x1276)*(x1277)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1278)*(x1279)))+(((cj1)*(r02)*(sj2))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))))+IKsqr(((((x1276)*(x1278)))+(((x1277)*(x1279)))+(((IkReal(-1.00000000000000))*(x1276)*(x1277)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1278)*(x1279)))+(((cj1)*(r02)*(sj2)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))), ((((x1276)*(x1278)))+(((x1277)*(x1279)))+(((IkReal(-1.00000000000000))*(x1276)*(x1277)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1278)*(x1279)))+(((cj1)*(r02)*(sj2)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1280=((sj1)*(sj2));
IkReal x1281=((cj0)*(r01));
IkReal x1282=((r00)*(sj0));
IkReal x1283=((cj1)*(cj2));
evalcond[0]=((((r01)*(sj0)))+(IKsin(j5))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1280)*(x1281)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((IkReal(-1.00000000000000))*(x1282)*(x1283)))+(((cj2)*(r02)*(sj1)))+(((x1280)*(x1282)))+(((x1281)*(x1283)))+(((cj1)*(r02)*(sj2))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1284=((pz)*(sj1));
IkReal x1285=((cj0)*(py));
IkReal x1286=((IkReal(1.00000000000000))*(sj2));
IkReal x1287=((cj1)*(cj2));
IkReal x1288=((px)*(sj0));
IkReal x1289=((cj2)*(sj1));
IkReal x1290=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(0.190890000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.312420000000000))+(((x1285)*(x1287)))+(((IkReal(0.00982000000000000))*(cj2)))+(((sj1)*(sj2)*(x1288)))+(((pz)*(x1290)))+(((IkReal(-1.00000000000000))*(x1287)*(x1288)))+(((cj2)*(x1284)))+(((IkReal(-1.00000000000000))*(sj1)*(x1285)*(x1286)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(-0.124930000000000))+(((x1285)*(x1289)))+(((IkReal(-1.00000000000000))*(pz)*(x1287)))+(((IkReal(-1.00000000000000))*(x1288)*(x1289)))+(((IkReal(0.521670000000000))*(cj2)))+(((x1285)*(x1290)))+(((IkReal(-1.00000000000000))*(cj1)*(x1286)*(x1288)))+(((sj2)*(x1284)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1291=((r02)*(sj2));
IkReal x1292=((IkReal(1.00000000000000))*(sj2));
IkReal x1293=((r00)*(sj0));
IkReal x1294=((cj1)*(cj2));
IkReal x1295=((cj0)*(r01));
IkReal x1296=((sj1)*(x1295));
IkReal x1297=((IkReal(1.00000000000000))*(cj2)*(x1293));
if( IKabs(((((cj2)*(x1296)))+(((IkReal(-1.00000000000000))*(sj1)*(x1297)))+(((IkReal(-1.00000000000000))*(r02)*(x1294)))+(((sj1)*(x1291)))+(((cj1)*(sj2)*(x1295)))+(((IkReal(-1.00000000000000))*(cj1)*(x1292)*(x1293))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x1294)*(x1295)))+(((cj1)*(x1291)))+(((sj1)*(sj2)*(x1293)))+(((IkReal(-1.00000000000000))*(x1292)*(x1296)))+(((IkReal(-1.00000000000000))*(x1293)*(x1294)))+(((cj2)*(r02)*(sj1))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj2)*(x1296)))+(((IkReal(-1.00000000000000))*(sj1)*(x1297)))+(((IkReal(-1.00000000000000))*(r02)*(x1294)))+(((sj1)*(x1291)))+(((cj1)*(sj2)*(x1295)))+(((IkReal(-1.00000000000000))*(cj1)*(x1292)*(x1293)))))+IKsqr(((((x1294)*(x1295)))+(((cj1)*(x1291)))+(((sj1)*(sj2)*(x1293)))+(((IkReal(-1.00000000000000))*(x1292)*(x1296)))+(((IkReal(-1.00000000000000))*(x1293)*(x1294)))+(((cj2)*(r02)*(sj1)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((cj2)*(x1296)))+(((IkReal(-1.00000000000000))*(sj1)*(x1297)))+(((IkReal(-1.00000000000000))*(r02)*(x1294)))+(((sj1)*(x1291)))+(((cj1)*(sj2)*(x1295)))+(((IkReal(-1.00000000000000))*(cj1)*(x1292)*(x1293)))), ((((x1294)*(x1295)))+(((cj1)*(x1291)))+(((sj1)*(sj2)*(x1293)))+(((IkReal(-1.00000000000000))*(x1292)*(x1296)))+(((IkReal(-1.00000000000000))*(x1293)*(x1294)))+(((cj2)*(r02)*(sj1)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1298=((r02)*(sj2));
IkReal x1299=((IkReal(1.00000000000000))*(sj2));
IkReal x1300=((r00)*(sj0));
IkReal x1301=((cj1)*(cj2));
IkReal x1302=((cj0)*(r01));
IkReal x1303=((sj1)*(x1302));
IkReal x1304=((IkReal(1.00000000000000))*(cj2)*(x1300));
evalcond[0]=((((IkReal(-1.00000000000000))*(r02)*(x1301)))+(((cj1)*(sj2)*(x1302)))+(((sj1)*(x1298)))+(((IkReal(-1.00000000000000))*(sj1)*(x1304)))+(((cj2)*(x1303)))+(((IkReal(-1.00000000000000))*(cj1)*(x1299)*(x1300)))+(((IkReal(-1.00000000000000))*(IKsin(j5)))));
evalcond[1]=((((sj1)*(sj2)*(x1300)))+(((IkReal(-1.00000000000000))*(x1299)*(x1303)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((cj1)*(x1298)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1300)*(x1301)))+(((x1301)*(x1302))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1305=((pz)*(sj1));
IkReal x1306=((cj0)*(py));
IkReal x1307=((IkReal(1.00000000000000))*(sj2));
IkReal x1308=((cj1)*(cj2));
IkReal x1309=((px)*(sj0));
IkReal x1310=((cj2)*(sj1));
IkReal x1311=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(-0.190890000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.312420000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((pz)*(x1311)))+(((sj1)*(sj2)*(x1309)))+(((x1306)*(x1308)))+(((IkReal(-1.00000000000000))*(sj1)*(x1306)*(x1307)))+(((IkReal(-1.00000000000000))*(x1308)*(x1309)))+(((cj2)*(x1305)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(-0.126510000000000))+(((IkReal(-1.00000000000000))*(cj1)*(x1307)*(x1309)))+(((sj2)*(x1305)))+(((IkReal(-1.00000000000000))*(pz)*(x1308)))+(((x1306)*(x1311)))+(((x1306)*(x1310)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x1309)*(x1310)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1312=((IkReal(1.00000000000000))*(sj2));
IkReal x1313=((r02)*(sj1));
IkReal x1314=((cj0)*(r01));
IkReal x1315=((IkReal(1.00000000000000))*(cj2));
IkReal x1316=((cj1)*(r02));
IkReal x1317=((cj1)*(r00)*(sj0));
IkReal x1318=((r00)*(sj0)*(sj1));
if( IKabs(((((sj2)*(x1317)))+(((cj2)*(x1316)))+(((cj2)*(x1318)))+(((IkReal(-1.00000000000000))*(sj1)*(x1314)*(x1315)))+(((IkReal(-1.00000000000000))*(x1312)*(x1313)))+(((IkReal(-1.00000000000000))*(cj1)*(x1312)*(x1314))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x1315)*(x1317)))+(((sj2)*(x1316)))+(((sj2)*(x1318)))+(((cj1)*(cj2)*(x1314)))+(((cj2)*(x1313)))+(((IkReal(-1.00000000000000))*(sj1)*(x1312)*(x1314))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((sj2)*(x1317)))+(((cj2)*(x1316)))+(((cj2)*(x1318)))+(((IkReal(-1.00000000000000))*(sj1)*(x1314)*(x1315)))+(((IkReal(-1.00000000000000))*(x1312)*(x1313)))+(((IkReal(-1.00000000000000))*(cj1)*(x1312)*(x1314)))))+IKsqr(((((IkReal(-1.00000000000000))*(x1315)*(x1317)))+(((sj2)*(x1316)))+(((sj2)*(x1318)))+(((cj1)*(cj2)*(x1314)))+(((cj2)*(x1313)))+(((IkReal(-1.00000000000000))*(sj1)*(x1312)*(x1314)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((sj2)*(x1317)))+(((cj2)*(x1316)))+(((cj2)*(x1318)))+(((IkReal(-1.00000000000000))*(sj1)*(x1314)*(x1315)))+(((IkReal(-1.00000000000000))*(x1312)*(x1313)))+(((IkReal(-1.00000000000000))*(cj1)*(x1312)*(x1314)))), ((((IkReal(-1.00000000000000))*(x1315)*(x1317)))+(((sj2)*(x1316)))+(((sj2)*(x1318)))+(((cj1)*(cj2)*(x1314)))+(((cj2)*(x1313)))+(((IkReal(-1.00000000000000))*(sj1)*(x1312)*(x1314)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1319=((r02)*(sj2));
IkReal x1320=((IkReal(1.00000000000000))*(sj2));
IkReal x1321=((r00)*(sj0));
IkReal x1322=((cj1)*(cj2));
IkReal x1323=((cj0)*(r01));
IkReal x1324=((sj1)*(x1323));
IkReal x1325=((IkReal(1.00000000000000))*(cj2)*(x1321));
evalcond[0]=((((cj1)*(sj2)*(x1323)))+(IKsin(j5))+(((IkReal(-1.00000000000000))*(sj1)*(x1325)))+(((cj2)*(x1324)))+(((IkReal(-1.00000000000000))*(cj1)*(x1320)*(x1321)))+(((sj1)*(x1319)))+(((IkReal(-1.00000000000000))*(r02)*(x1322))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1321)*(x1322)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((x1322)*(x1323)))+(((cj1)*(x1319)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1320)*(x1324)))+(((sj1)*(sj2)*(x1321))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1326=((r02)*(sj2));
IkReal x1327=((IkReal(1.00000000000000))*(sj2));
IkReal x1328=((r00)*(sj0));
IkReal x1329=((cj1)*(cj2));
IkReal x1330=((cj0)*(r01));
IkReal x1331=((sj1)*(x1330));
IkReal x1332=((IkReal(1.00000000000000))*(cj2)*(x1328));
if( IKabs(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj1)*(x1327)*(x1328)))+(((cj1)*(sj2)*(x1330)))+(((cj2)*(x1331)))+(((IkReal(-1.00000000000000))*(sj1)*(x1332)))+(((sj1)*(x1326)))+(((IkReal(-1.00000000000000))*(r02)*(x1329))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x1329)*(x1330)))+(((IkReal(-1.00000000000000))*(x1327)*(x1331)))+(((cj2)*(r02)*(sj1)))+(((cj1)*(x1326)))+(((IkReal(-1.00000000000000))*(x1328)*(x1329)))+(((sj1)*(sj2)*(x1328))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj1)*(x1327)*(x1328)))+(((cj1)*(sj2)*(x1330)))+(((cj2)*(x1331)))+(((IkReal(-1.00000000000000))*(sj1)*(x1332)))+(((sj1)*(x1326)))+(((IkReal(-1.00000000000000))*(r02)*(x1329)))))))+IKsqr(((((x1329)*(x1330)))+(((IkReal(-1.00000000000000))*(x1327)*(x1331)))+(((cj2)*(r02)*(sj1)))+(((cj1)*(x1326)))+(((IkReal(-1.00000000000000))*(x1328)*(x1329)))+(((sj1)*(sj2)*(x1328)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj1)*(x1327)*(x1328)))+(((cj1)*(sj2)*(x1330)))+(((cj2)*(x1331)))+(((IkReal(-1.00000000000000))*(sj1)*(x1332)))+(((sj1)*(x1326)))+(((IkReal(-1.00000000000000))*(r02)*(x1329)))))), ((((x1329)*(x1330)))+(((IkReal(-1.00000000000000))*(x1327)*(x1331)))+(((cj2)*(r02)*(sj1)))+(((cj1)*(x1326)))+(((IkReal(-1.00000000000000))*(x1328)*(x1329)))+(((sj1)*(sj2)*(x1328)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1333=IKsin(j5);
IkReal x1334=((r02)*(sj2));
IkReal x1335=((IkReal(1.00000000000000))*(sj2));
IkReal x1336=((r00)*(sj0));
IkReal x1337=((IkReal(1.00000000000000))*(cj2));
IkReal x1338=((IkReal(1.00000000000000))*(x1333));
IkReal x1339=((cj0)*(r01)*(sj1));
IkReal x1340=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x1338)))+(((cj0)*(r00))));
evalcond[1]=((((sj2)*(x1340)))+(((IkReal(-1.00000000000000))*(cj1)*(x1335)*(x1336)))+(((IkReal(-1.00000000000000))*(sj1)*(x1336)*(x1337)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1337)))+(((sj1)*(x1334)))+(((cj2)*(x1339)))+(((IkReal(-1.00000000000000))*(sj4)*(x1338))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1335)*(x1339)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((cj1)*(x1334)))+(((IkReal(-1.00000000000000))*(cj1)*(x1336)*(x1337)))+(((cj2)*(r02)*(sj1)))+(((sj1)*(sj2)*(x1336)))+(((cj2)*(x1340))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1341=((sj1)*(sj2));
IkReal x1342=((cj0)*(r01));
IkReal x1343=((r00)*(sj0));
IkReal x1344=((cj1)*(cj2));
if( IKabs(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x1341)*(x1342)))+(((x1341)*(x1343)))+(((x1342)*(x1344)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1343)*(x1344)))+(((cj1)*(r02)*(sj2))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))))+IKsqr(((((IkReal(-1.00000000000000))*(x1341)*(x1342)))+(((x1341)*(x1343)))+(((x1342)*(x1344)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1343)*(x1344)))+(((cj1)*(r02)*(sj2)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))), ((((IkReal(-1.00000000000000))*(x1341)*(x1342)))+(((x1341)*(x1343)))+(((x1342)*(x1344)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1343)*(x1344)))+(((cj1)*(r02)*(sj2)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1345=IKsin(j5);
IkReal x1346=((r02)*(sj2));
IkReal x1347=((IkReal(1.00000000000000))*(sj2));
IkReal x1348=((r00)*(sj0));
IkReal x1349=((IkReal(1.00000000000000))*(cj2));
IkReal x1350=((IkReal(1.00000000000000))*(x1345));
IkReal x1351=((cj0)*(r01)*(sj1));
IkReal x1352=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x1350)))+(((cj0)*(r00))));
evalcond[1]=((((sj1)*(x1346)))+(((IkReal(-1.00000000000000))*(sj4)*(x1350)))+(((IkReal(-1.00000000000000))*(cj1)*(x1347)*(x1348)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1349)))+(((sj2)*(x1352)))+(((cj2)*(x1351)))+(((IkReal(-1.00000000000000))*(sj1)*(x1348)*(x1349))));
evalcond[2]=((((cj1)*(x1346)))+(((IkReal(-1.00000000000000))*(x1347)*(x1351)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((sj1)*(sj2)*(x1348)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(x1348)*(x1349)))+(((cj2)*(x1352))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1353=((cj1)*(sj2));
IkReal x1354=((px)*(sj0));
IkReal x1355=((sj1)*(sj2));
IkReal x1356=((cj0)*(py));
IkReal x1357=((cj2)*(pz));
IkReal x1358=((IkReal(1.00000000000000))*(cj1));
IkReal x1359=((cj2)*(x1356));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(0.000790000000000000))*(cj4)))+(((cj0)*(px)))+(((py)*(sj0)))+(((IkReal(0.190890000000000))*(sj4))));
evalcond[2]=((IkReal(-0.394310000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((sj1)*(x1357)))+(((IkReal(-1.00000000000000))*(cj2)*(x1354)*(x1358)))+(((IkReal(0.000790000000000000))*(sj4)))+(((cj1)*(x1359)))+(((x1354)*(x1355)))+(((IkReal(-0.190890000000000))*(cj4)))+(((pz)*(x1353)))+(((IkReal(-0.521670000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(x1355)*(x1356))));
evalcond[3]=((IkReal(0.0588300000000000))+(((sj1)*(x1359)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x1353)*(x1354)))+(((pz)*(x1355)))+(((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x1354)))+(((IkReal(-1.00000000000000))*(x1357)*(x1358)))+(((x1353)*(x1356)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x1360=((IkReal(1.00000000000000))*(sj2));
IkReal x1361=((px)*(sj0));
IkReal x1362=((pz)*(sj2));
IkReal x1363=((cj0)*(sj1));
IkReal x1364=((cj1)*(sj2));
IkReal x1365=((sj1)*(sj2));
IkReal x1366=((cj2)*(sj1));
IkReal x1367=((r00)*(sj0));
IkReal x1368=((cj0)*(cj1)*(cj2));
IkReal x1369=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.000790000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((r02)*(x1366)))+(((r02)*(x1364)))+(((IkReal(-1.00000000000000))*(r01)*(x1360)*(x1363)))+(((x1365)*(x1367)))+(((r01)*(x1368)))+(((IkReal(-1.00000000000000))*(x1367)*(x1369))));
evalcond[3]=((IkReal(-0.585200000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((x1361)*(x1365)))+(((cj1)*(x1362)))+(((IkReal(-1.00000000000000))*(py)*(x1360)*(x1363)))+(((py)*(x1368)))+(((pz)*(x1366)))+(((IkReal(-1.00000000000000))*(x1361)*(x1369)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(0.0588300000000000))+(((IkReal(-1.00000000000000))*(pz)*(x1369)))+(((sj1)*(x1362)))+(((IkReal(0.521670000000000))*(cj2)))+(((cj2)*(py)*(x1363)))+(((IkReal(-1.00000000000000))*(x1361)*(x1366)))+(((cj0)*(py)*(x1364)))+(((IkReal(-1.00000000000000))*(cj1)*(x1360)*(x1361)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1370=((IkReal(1.00000000000000))*(sj2));
IkReal x1371=((cj0)*(r01));
IkReal x1372=((r00)*(sj0));
IkReal x1373=((cj2)*(sj1));
if( IKabs(((((r01)*(sj0)))+(((cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x1372)*(x1373)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1370)))+(((cj1)*(sj2)*(x1372)))+(((IkReal(-1.00000000000000))*(cj1)*(x1370)*(x1371)))+(((IkReal(-1.00000000000000))*(x1371)*(x1373)))+(((cj1)*(cj2)*(r02))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r01)*(sj0)))+(((cj0)*(r00)))))+IKsqr(((((x1372)*(x1373)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1370)))+(((cj1)*(sj2)*(x1372)))+(((IkReal(-1.00000000000000))*(cj1)*(x1370)*(x1371)))+(((IkReal(-1.00000000000000))*(x1371)*(x1373)))+(((cj1)*(cj2)*(r02)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((r01)*(sj0)))+(((cj0)*(r00)))), ((((x1372)*(x1373)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1370)))+(((cj1)*(sj2)*(x1372)))+(((IkReal(-1.00000000000000))*(cj1)*(x1370)*(x1371)))+(((IkReal(-1.00000000000000))*(x1371)*(x1373)))+(((cj1)*(cj2)*(r02)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1374=((cj2)*(sj1));
IkReal x1375=((cj0)*(r01));
IkReal x1376=((cj1)*(sj2));
IkReal x1377=((IkReal(1.00000000000000))*(r00)*(sj0));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((cj0)*(r00))));
evalcond[1]=((((x1375)*(x1376)))+(((x1374)*(x1375)))+(((IkReal(-1.00000000000000))*(x1374)*(x1377)))+(IKcos(j5))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(x1376)*(x1377)))+(((r02)*(sj1)*(sj2))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1378=((IkReal(1.00000000000000))*(sj2));
IkReal x1379=((px)*(sj0));
IkReal x1380=((pz)*(sj2));
IkReal x1381=((cj0)*(sj1));
IkReal x1382=((cj1)*(sj2));
IkReal x1383=((sj1)*(sj2));
IkReal x1384=((cj2)*(sj1));
IkReal x1385=((r00)*(sj0));
IkReal x1386=((cj0)*(cj1)*(cj2));
IkReal x1387=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.000790000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r01)*(x1378)*(x1381)))+(((r01)*(x1386)))+(((IkReal(-1.00000000000000))*(x1385)*(x1387)))+(((r02)*(x1382)))+(((r02)*(x1384)))+(((x1383)*(x1385))));
evalcond[3]=((IkReal(-0.203420000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((pz)*(x1384)))+(((py)*(x1386)))+(((IkReal(-1.00000000000000))*(py)*(x1378)*(x1381)))+(((x1379)*(x1383)))+(((IkReal(-0.521670000000000))*(sj2)))+(((cj1)*(x1380)))+(((IkReal(-1.00000000000000))*(x1379)*(x1387))));
evalcond[4]=((IkReal(0.0588300000000000))+(((IkReal(-1.00000000000000))*(x1379)*(x1384)))+(((IkReal(-1.00000000000000))*(cj1)*(x1378)*(x1379)))+(((sj1)*(x1380)))+(((IkReal(0.521670000000000))*(cj2)))+(((cj0)*(py)*(x1382)))+(((cj2)*(py)*(x1381)))+(((IkReal(-1.00000000000000))*(pz)*(x1387)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1388=((IkReal(1.00000000000000))*(sj2));
IkReal x1389=((cj0)*(r01));
IkReal x1390=((r00)*(sj0));
IkReal x1391=((cj2)*(sj1));
if( IKabs(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x1390)*(x1391)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1388)))+(((IkReal(-1.00000000000000))*(x1389)*(x1391)))+(((cj1)*(sj2)*(x1390)))+(((IkReal(-1.00000000000000))*(cj1)*(x1388)*(x1389)))+(((cj1)*(cj2)*(r02))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))))+IKsqr(((((x1390)*(x1391)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1388)))+(((IkReal(-1.00000000000000))*(x1389)*(x1391)))+(((cj1)*(sj2)*(x1390)))+(((IkReal(-1.00000000000000))*(cj1)*(x1388)*(x1389)))+(((cj1)*(cj2)*(r02)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))), ((((x1390)*(x1391)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1388)))+(((IkReal(-1.00000000000000))*(x1389)*(x1391)))+(((cj1)*(sj2)*(x1390)))+(((IkReal(-1.00000000000000))*(cj1)*(x1388)*(x1389)))+(((cj1)*(cj2)*(r02)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1392=((cj2)*(sj1));
IkReal x1393=((cj0)*(r01));
IkReal x1394=((cj1)*(sj2));
IkReal x1395=((IkReal(1.00000000000000))*(r00)*(sj0));
evalcond[0]=((((r01)*(sj0)))+(IKsin(j5))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1392)*(x1395)))+(((x1393)*(x1394)))+(((IkReal(-1.00000000000000))*(x1394)*(x1395)))+(IKcos(j5))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((r02)*(sj1)*(sj2)))+(((x1392)*(x1393))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1396=((pz)*(sj1));
IkReal x1397=((cj0)*(py));
IkReal x1398=((IkReal(1.00000000000000))*(sj2));
IkReal x1399=((cj1)*(cj2));
IkReal x1400=((px)*(sj0));
IkReal x1401=((cj2)*(sj1));
IkReal x1402=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(0.190890000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.393520000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((cj2)*(x1396)))+(((pz)*(x1402)))+(((IkReal(-1.00000000000000))*(sj1)*(x1397)*(x1398)))+(((x1397)*(x1399)))+(((sj1)*(sj2)*(x1400)))+(((IkReal(-0.521670000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(x1399)*(x1400))));
evalcond[4]=((IkReal(0.0588300000000000))+(((IkReal(-1.00000000000000))*(pz)*(x1399)))+(((x1397)*(x1402)))+(((x1397)*(x1401)))+(((IkReal(-1.00000000000000))*(x1400)*(x1401)))+(((IkReal(0.521670000000000))*(cj2)))+(((sj2)*(x1396)))+(((IkReal(-1.00000000000000))*(cj1)*(x1398)*(x1400)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1403=((IkReal(1.00000000000000))*(sj2));
IkReal x1404=((r02)*(sj1));
IkReal x1405=((cj0)*(r01));
IkReal x1406=((IkReal(1.00000000000000))*(cj2));
IkReal x1407=((cj1)*(r02));
IkReal x1408=((cj1)*(r00)*(sj0));
IkReal x1409=((r00)*(sj0)*(sj1));
if( IKabs(((((IkReal(-1.00000000000000))*(sj1)*(x1403)*(x1405)))+(((IkReal(-1.00000000000000))*(x1406)*(x1408)))+(((sj2)*(x1409)))+(((sj2)*(x1407)))+(((cj1)*(cj2)*(x1405)))+(((cj2)*(x1404))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((sj2)*(x1408)))+(((IkReal(-1.00000000000000))*(sj1)*(x1405)*(x1406)))+(((IkReal(-1.00000000000000))*(x1403)*(x1404)))+(((cj2)*(x1407)))+(((cj2)*(x1409)))+(((IkReal(-1.00000000000000))*(cj1)*(x1403)*(x1405))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(sj1)*(x1403)*(x1405)))+(((IkReal(-1.00000000000000))*(x1406)*(x1408)))+(((sj2)*(x1409)))+(((sj2)*(x1407)))+(((cj1)*(cj2)*(x1405)))+(((cj2)*(x1404)))))+IKsqr(((((sj2)*(x1408)))+(((IkReal(-1.00000000000000))*(sj1)*(x1405)*(x1406)))+(((IkReal(-1.00000000000000))*(x1403)*(x1404)))+(((cj2)*(x1407)))+(((cj2)*(x1409)))+(((IkReal(-1.00000000000000))*(cj1)*(x1403)*(x1405)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(sj1)*(x1403)*(x1405)))+(((IkReal(-1.00000000000000))*(x1406)*(x1408)))+(((sj2)*(x1409)))+(((sj2)*(x1407)))+(((cj1)*(cj2)*(x1405)))+(((cj2)*(x1404)))), ((((sj2)*(x1408)))+(((IkReal(-1.00000000000000))*(sj1)*(x1405)*(x1406)))+(((IkReal(-1.00000000000000))*(x1403)*(x1404)))+(((cj2)*(x1407)))+(((cj2)*(x1409)))+(((IkReal(-1.00000000000000))*(cj1)*(x1403)*(x1405)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1410=((r02)*(sj2));
IkReal x1411=((IkReal(1.00000000000000))*(sj2));
IkReal x1412=((r00)*(sj0));
IkReal x1413=((cj1)*(cj2));
IkReal x1414=((cj0)*(r01));
IkReal x1415=((sj1)*(x1414));
IkReal x1416=((IkReal(1.00000000000000))*(cj2)*(x1412));
evalcond[0]=((((cj2)*(x1415)))+(((cj1)*(sj2)*(x1414)))+(IKcos(j5))+(((IkReal(-1.00000000000000))*(cj1)*(x1411)*(x1412)))+(((IkReal(-1.00000000000000))*(r02)*(x1413)))+(((IkReal(-1.00000000000000))*(sj1)*(x1416)))+(((sj1)*(x1410))));
evalcond[1]=((((x1413)*(x1414)))+(((IkReal(-1.00000000000000))*(x1411)*(x1415)))+(((cj2)*(r02)*(sj1)))+(((cj1)*(x1410)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((sj1)*(sj2)*(x1412)))+(((IkReal(-1.00000000000000))*(x1412)*(x1413))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1417=((pz)*(sj1));
IkReal x1418=((cj0)*(py));
IkReal x1419=((IkReal(1.00000000000000))*(sj2));
IkReal x1420=((cj1)*(cj2));
IkReal x1421=((px)*(sj0));
IkReal x1422=((cj2)*(sj1));
IkReal x1423=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(-0.190890000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.395100000000000))+(((cj2)*(x1417)))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(sj1)*(x1418)*(x1419)))+(((sj1)*(sj2)*(x1421)))+(((IkReal(-1.00000000000000))*(x1420)*(x1421)))+(((x1418)*(x1420)))+(((IkReal(-0.521670000000000))*(sj2)))+(((pz)*(x1423))));
evalcond[4]=((IkReal(0.0588300000000000))+(((sj2)*(x1417)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x1421)*(x1422)))+(((x1418)*(x1422)))+(((x1418)*(x1423)))+(((IkReal(-1.00000000000000))*(cj1)*(x1419)*(x1421)))+(((IkReal(-1.00000000000000))*(pz)*(x1420)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1424=((IkReal(1.00000000000000))*(sj2));
IkReal x1425=((r02)*(sj1));
IkReal x1426=((cj0)*(r01));
IkReal x1427=((r00)*(sj0));
IkReal x1428=((cj1)*(r02));
IkReal x1429=((IkReal(1.00000000000000))*(cj2));
if( IKabs(((((cj1)*(cj2)*(x1427)))+(((sj1)*(sj2)*(x1426)))+(((IkReal(-1.00000000000000))*(x1424)*(x1428)))+(((IkReal(-1.00000000000000))*(x1425)*(x1429)))+(((IkReal(-1.00000000000000))*(sj1)*(x1424)*(x1427)))+(((IkReal(-1.00000000000000))*(cj1)*(x1426)*(x1429))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(cj1)*(x1424)*(x1426)))+(((IkReal(-1.00000000000000))*(x1424)*(x1425)))+(((cj2)*(x1428)))+(((cj2)*(sj1)*(x1427)))+(((IkReal(-1.00000000000000))*(sj1)*(x1426)*(x1429)))+(((cj1)*(sj2)*(x1427))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj1)*(cj2)*(x1427)))+(((sj1)*(sj2)*(x1426)))+(((IkReal(-1.00000000000000))*(x1424)*(x1428)))+(((IkReal(-1.00000000000000))*(x1425)*(x1429)))+(((IkReal(-1.00000000000000))*(sj1)*(x1424)*(x1427)))+(((IkReal(-1.00000000000000))*(cj1)*(x1426)*(x1429)))))+IKsqr(((((IkReal(-1.00000000000000))*(cj1)*(x1424)*(x1426)))+(((IkReal(-1.00000000000000))*(x1424)*(x1425)))+(((cj2)*(x1428)))+(((cj2)*(sj1)*(x1427)))+(((IkReal(-1.00000000000000))*(sj1)*(x1426)*(x1429)))+(((cj1)*(sj2)*(x1427)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((cj1)*(cj2)*(x1427)))+(((sj1)*(sj2)*(x1426)))+(((IkReal(-1.00000000000000))*(x1424)*(x1428)))+(((IkReal(-1.00000000000000))*(x1425)*(x1429)))+(((IkReal(-1.00000000000000))*(sj1)*(x1424)*(x1427)))+(((IkReal(-1.00000000000000))*(cj1)*(x1426)*(x1429)))), ((((IkReal(-1.00000000000000))*(cj1)*(x1424)*(x1426)))+(((IkReal(-1.00000000000000))*(x1424)*(x1425)))+(((cj2)*(x1428)))+(((cj2)*(sj1)*(x1427)))+(((IkReal(-1.00000000000000))*(sj1)*(x1426)*(x1429)))+(((cj1)*(sj2)*(x1427)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1430=((r02)*(sj2));
IkReal x1431=((IkReal(1.00000000000000))*(sj2));
IkReal x1432=((r00)*(sj0));
IkReal x1433=((cj1)*(cj2));
IkReal x1434=((cj0)*(r01));
IkReal x1435=((sj1)*(x1434));
IkReal x1436=((IkReal(1.00000000000000))*(cj2)*(x1432));
evalcond[0]=((((IkReal(-1.00000000000000))*(r02)*(x1433)))+(((IkReal(-1.00000000000000))*(cj1)*(x1431)*(x1432)))+(IKcos(j5))+(((cj1)*(sj2)*(x1434)))+(((sj1)*(x1430)))+(((cj2)*(x1435)))+(((IkReal(-1.00000000000000))*(sj1)*(x1436))));
evalcond[1]=((((x1433)*(x1434)))+(((IkReal(-1.00000000000000))*(x1431)*(x1435)))+(IKsin(j5))+(((IkReal(-1.00000000000000))*(x1432)*(x1433)))+(((cj2)*(r02)*(sj1)))+(((sj1)*(sj2)*(x1432)))+(((cj1)*(x1430))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1437=((IkReal(1.00000000000000))*(sj2));
IkReal x1438=((r02)*(sj1));
IkReal x1439=((cj0)*(r01));
IkReal x1440=((IkReal(1.00000000000000))*(cj2));
IkReal x1441=((cj1)*(r02));
IkReal x1442=((cj1)*(r00)*(sj0));
IkReal x1443=((r00)*(sj0)*(sj1));
if( IKabs(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((cj1)*(cj2)*(x1439)))+(((sj2)*(x1443)))+(((sj2)*(x1441)))+(((cj2)*(x1438)))+(((IkReal(-1.00000000000000))*(x1440)*(x1442)))+(((IkReal(-1.00000000000000))*(sj1)*(x1437)*(x1439))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x1437)*(x1438)))+(((cj2)*(x1443)))+(((cj2)*(x1441)))+(((sj2)*(x1442)))+(((IkReal(-1.00000000000000))*(sj1)*(x1439)*(x1440)))+(((IkReal(-1.00000000000000))*(cj1)*(x1437)*(x1439))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((cj1)*(cj2)*(x1439)))+(((sj2)*(x1443)))+(((sj2)*(x1441)))+(((cj2)*(x1438)))+(((IkReal(-1.00000000000000))*(x1440)*(x1442)))+(((IkReal(-1.00000000000000))*(sj1)*(x1437)*(x1439)))))))+IKsqr(((((IkReal(-1.00000000000000))*(x1437)*(x1438)))+(((cj2)*(x1443)))+(((cj2)*(x1441)))+(((sj2)*(x1442)))+(((IkReal(-1.00000000000000))*(sj1)*(x1439)*(x1440)))+(((IkReal(-1.00000000000000))*(cj1)*(x1437)*(x1439)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((cj1)*(cj2)*(x1439)))+(((sj2)*(x1443)))+(((sj2)*(x1441)))+(((cj2)*(x1438)))+(((IkReal(-1.00000000000000))*(x1440)*(x1442)))+(((IkReal(-1.00000000000000))*(sj1)*(x1437)*(x1439)))))), ((((IkReal(-1.00000000000000))*(x1437)*(x1438)))+(((cj2)*(x1443)))+(((cj2)*(x1441)))+(((sj2)*(x1442)))+(((IkReal(-1.00000000000000))*(sj1)*(x1439)*(x1440)))+(((IkReal(-1.00000000000000))*(cj1)*(x1437)*(x1439)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1444=IKsin(j5);
IkReal x1445=((r02)*(sj2));
IkReal x1446=((IkReal(1.00000000000000))*(sj2));
IkReal x1447=((r00)*(sj0));
IkReal x1448=((IkReal(1.00000000000000))*(cj2));
IkReal x1449=((IkReal(1.00000000000000))*(x1444));
IkReal x1450=((cj0)*(r01)*(sj1));
IkReal x1451=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x1449)))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1448)))+(((IkReal(-1.00000000000000))*(sj1)*(x1447)*(x1448)))+(((sj2)*(x1451)))+(((sj1)*(x1445)))+(IKcos(j5))+(((cj2)*(x1450)))+(((IkReal(-1.00000000000000))*(cj1)*(x1446)*(x1447))));
evalcond[2]=((((cj1)*(x1445)))+(((IkReal(-1.00000000000000))*(cj1)*(x1447)*(x1448)))+(((sj1)*(sj2)*(x1447)))+(((IkReal(-1.00000000000000))*(x1446)*(x1450)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(sj4)*(x1449)))+(((cj2)*(x1451))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1452=((IkReal(1.00000000000000))*(sj2));
IkReal x1453=((cj0)*(r01));
IkReal x1454=((r00)*(sj0));
IkReal x1455=((cj2)*(sj1));
if( IKabs(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x1454)*(x1455)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1452)))+(((cj1)*(sj2)*(x1454)))+(((IkReal(-1.00000000000000))*(cj1)*(x1452)*(x1453)))+(((cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(x1453)*(x1455))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))))+IKsqr(((((x1454)*(x1455)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1452)))+(((cj1)*(sj2)*(x1454)))+(((IkReal(-1.00000000000000))*(cj1)*(x1452)*(x1453)))+(((cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(x1453)*(x1455)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))), ((((x1454)*(x1455)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1452)))+(((cj1)*(sj2)*(x1454)))+(((IkReal(-1.00000000000000))*(cj1)*(x1452)*(x1453)))+(((cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(x1453)*(x1455)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1456=IKsin(j5);
IkReal x1457=((r02)*(sj2));
IkReal x1458=((IkReal(1.00000000000000))*(sj2));
IkReal x1459=((r00)*(sj0));
IkReal x1460=((IkReal(1.00000000000000))*(cj2));
IkReal x1461=((IkReal(1.00000000000000))*(x1456));
IkReal x1462=((cj0)*(r01)*(sj1));
IkReal x1463=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x1461)))+(((cj0)*(r00))));
evalcond[1]=((((cj2)*(x1462)))+(((IkReal(-1.00000000000000))*(cj1)*(x1458)*(x1459)))+(((sj2)*(x1463)))+(((IkReal(-1.00000000000000))*(sj1)*(x1459)*(x1460)))+(IKcos(j5))+(((sj1)*(x1457)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1460))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj4)*(x1461)))+(((cj2)*(x1463)))+(((cj1)*(x1457)))+(((IkReal(-1.00000000000000))*(x1458)*(x1462)))+(((IkReal(-1.00000000000000))*(cj1)*(x1459)*(x1460)))+(((sj1)*(sj2)*(x1459)))+(((cj2)*(r02)*(sj1))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1464=((cj1)*(sj2));
IkReal x1465=((px)*(sj0));
IkReal x1466=((sj1)*(sj2));
IkReal x1467=((cj0)*(py));
IkReal x1468=((cj2)*(pz));
IkReal x1469=((IkReal(1.00000000000000))*(cj1));
IkReal x1470=((cj2)*(x1467));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(0.000790000000000000))*(cj4)))+(((cj0)*(px)))+(((py)*(sj0)))+(((IkReal(0.190890000000000))*(sj4))));
evalcond[2]=((IkReal(-0.127870000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(cj2)*(x1465)*(x1469)))+(((cj1)*(x1470)))+(((pz)*(x1464)))+(((x1465)*(x1466)))+(((IkReal(0.190890000000000))*(cj4)))+(((IkReal(-1.00000000000000))*(x1466)*(x1467)))+(((IkReal(-0.000790000000000000))*(sj4)))+(((sj1)*(x1468)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[3]=((IkReal(-0.0438300000000000))+(((pz)*(x1466)))+(((sj1)*(x1470)))+(((x1464)*(x1467)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x1464)*(x1465)))+(((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x1465)))+(((IkReal(0.00982000000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(x1468)*(x1469))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x1471=((IkReal(1.00000000000000))*(sj2));
IkReal x1472=((px)*(sj0));
IkReal x1473=((pz)*(sj2));
IkReal x1474=((cj0)*(sj1));
IkReal x1475=((cj1)*(sj2));
IkReal x1476=((sj1)*(sj2));
IkReal x1477=((cj2)*(sj1));
IkReal x1478=((r00)*(sj0));
IkReal x1479=((cj0)*(cj1)*(cj2));
IkReal x1480=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.000790000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r01)*(x1471)*(x1474)))+(((r02)*(x1475)))+(((r02)*(x1477)))+(((x1476)*(x1478)))+(((r01)*(x1479)))+(((IkReal(-1.00000000000000))*(x1478)*(x1480))));
evalcond[3]=((IkReal(0.0630200000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((cj1)*(x1473)))+(((x1472)*(x1476)))+(((IkReal(-1.00000000000000))*(py)*(x1471)*(x1474)))+(((py)*(x1479)))+(((pz)*(x1477)))+(((IkReal(-1.00000000000000))*(x1472)*(x1480)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(-0.0438300000000000))+(((sj1)*(x1473)))+(((cj2)*(py)*(x1474)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(cj1)*(x1471)*(x1472)))+(((cj0)*(py)*(x1475)))+(((IkReal(0.00982000000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(pz)*(x1480)))+(((IkReal(-1.00000000000000))*(x1472)*(x1477))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1481=((cj2)*(sj1));
IkReal x1482=((cj0)*(r01));
IkReal x1483=((cj1)*(sj2));
IkReal x1484=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((r01)*(sj0)))+(((cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x1482)*(x1483)))+(((IkReal(-1.00000000000000))*(x1481)*(x1484)))+(((x1481)*(x1482)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(x1483)*(x1484)))+(((r02)*(sj1)*(sj2))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r01)*(sj0)))+(((cj0)*(r00)))))+IKsqr(((((x1482)*(x1483)))+(((IkReal(-1.00000000000000))*(x1481)*(x1484)))+(((x1481)*(x1482)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(x1483)*(x1484)))+(((r02)*(sj1)*(sj2)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((r01)*(sj0)))+(((cj0)*(r00)))), ((((x1482)*(x1483)))+(((IkReal(-1.00000000000000))*(x1481)*(x1484)))+(((x1481)*(x1482)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(x1483)*(x1484)))+(((r02)*(sj1)*(sj2)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1485=((cj2)*(sj1));
IkReal x1486=((cj0)*(r01));
IkReal x1487=((cj1)*(sj2));
IkReal x1488=((IkReal(1.00000000000000))*(r00)*(sj0));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1487)*(x1488)))+(((IkReal(-1.00000000000000))*(x1485)*(x1488)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((x1486)*(x1487)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((x1485)*(x1486)))+(((r02)*(sj1)*(sj2))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1489=((IkReal(1.00000000000000))*(sj2));
IkReal x1490=((px)*(sj0));
IkReal x1491=((pz)*(sj2));
IkReal x1492=((cj0)*(sj1));
IkReal x1493=((cj1)*(sj2));
IkReal x1494=((sj1)*(sj2));
IkReal x1495=((cj2)*(sj1));
IkReal x1496=((r00)*(sj0));
IkReal x1497=((cj0)*(cj1)*(cj2));
IkReal x1498=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.000790000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((r01)*(x1497)))+(((x1494)*(x1496)))+(((IkReal(-1.00000000000000))*(x1496)*(x1498)))+(((IkReal(-1.00000000000000))*(r01)*(x1489)*(x1492)))+(((r02)*(x1493)))+(((r02)*(x1495))));
evalcond[3]=((IkReal(-0.318760000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((pz)*(x1495)))+(((cj1)*(x1491)))+(((py)*(x1497)))+(((IkReal(-1.00000000000000))*(py)*(x1489)*(x1492)))+(((IkReal(-1.00000000000000))*(x1490)*(x1498)))+(((IkReal(-0.521670000000000))*(sj2)))+(((x1490)*(x1494))));
evalcond[4]=((IkReal(-0.0438300000000000))+(((sj1)*(x1491)))+(((cj2)*(py)*(x1492)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(cj1)*(x1489)*(x1490)))+(((cj0)*(py)*(x1493)))+(((IkReal(-1.00000000000000))*(pz)*(x1498)))+(((IkReal(-1.00000000000000))*(x1490)*(x1495)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1499=((cj2)*(sj1));
IkReal x1500=((cj0)*(r01));
IkReal x1501=((cj1)*(sj2));
IkReal x1502=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x1499)*(x1502)))+(((x1499)*(x1500)))+(((IkReal(-1.00000000000000))*(x1501)*(x1502)))+(((x1500)*(x1501)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((r02)*(sj1)*(sj2))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))))+IKsqr(((((IkReal(-1.00000000000000))*(x1499)*(x1502)))+(((x1499)*(x1500)))+(((IkReal(-1.00000000000000))*(x1501)*(x1502)))+(((x1500)*(x1501)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((r02)*(sj1)*(sj2)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))), ((((IkReal(-1.00000000000000))*(x1499)*(x1502)))+(((x1499)*(x1500)))+(((IkReal(-1.00000000000000))*(x1501)*(x1502)))+(((x1500)*(x1501)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((r02)*(sj1)*(sj2)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1503=((cj2)*(sj1));
IkReal x1504=((cj0)*(r01));
IkReal x1505=((cj1)*(sj2));
IkReal x1506=((IkReal(1.00000000000000))*(r00)*(sj0));
evalcond[0]=((((r01)*(sj0)))+(IKsin(j5))+(((cj0)*(r00))));
evalcond[1]=((((x1504)*(x1505)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((x1503)*(x1504)))+(((IkReal(-1.00000000000000))*(x1503)*(x1506)))+(((r02)*(sj1)*(sj2)))+(((IkReal(-1.00000000000000))*(x1505)*(x1506))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1507=((pz)*(sj1));
IkReal x1508=((cj0)*(py));
IkReal x1509=((IkReal(1.00000000000000))*(sj2));
IkReal x1510=((cj1)*(cj2));
IkReal x1511=((px)*(sj0));
IkReal x1512=((cj2)*(sj1));
IkReal x1513=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(0.190890000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.128660000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((x1508)*(x1510)))+(((IkReal(-1.00000000000000))*(sj1)*(x1508)*(x1509)))+(((cj2)*(x1507)))+(((IkReal(-1.00000000000000))*(x1510)*(x1511)))+(((pz)*(x1513)))+(((IkReal(-0.521670000000000))*(sj2)))+(((sj1)*(sj2)*(x1511))));
evalcond[4]=((IkReal(-0.0438300000000000))+(((IkReal(-1.00000000000000))*(x1511)*(x1512)))+(((x1508)*(x1512)))+(((x1508)*(x1513)))+(((IkReal(-1.00000000000000))*(pz)*(x1510)))+(((IkReal(-1.00000000000000))*(cj1)*(x1509)*(x1511)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(0.00982000000000000))*(sj2)))+(((sj2)*(x1507))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1514=((sj1)*(sj2));
IkReal x1515=((cj2)*(sj1));
IkReal x1516=((cj1)*(sj2));
IkReal x1517=((IkReal(1.00000000000000))*(r02));
IkReal x1518=((cj1)*(cj2));
IkReal x1519=((cj0)*(r01));
IkReal x1520=((sj1)*(x1519));
IkReal x1521=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((IkReal(-1.00000000000000))*(x1516)*(x1517)))+(((IkReal(-1.00000000000000))*(x1515)*(x1517)))+(((x1514)*(x1519)))+(((IkReal(-1.00000000000000))*(x1514)*(x1521)))+(((r00)*(sj0)*(x1518)))+(((IkReal(-1.00000000000000))*(x1518)*(x1519))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x1515)*(x1521)))+(((x1516)*(x1519)))+(((r02)*(x1514)))+(((x1515)*(x1519)))+(((IkReal(-1.00000000000000))*(x1517)*(x1518)))+(((IkReal(-1.00000000000000))*(x1516)*(x1521))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x1516)*(x1517)))+(((IkReal(-1.00000000000000))*(x1515)*(x1517)))+(((x1514)*(x1519)))+(((IkReal(-1.00000000000000))*(x1514)*(x1521)))+(((r00)*(sj0)*(x1518)))+(((IkReal(-1.00000000000000))*(x1518)*(x1519)))))+IKsqr(((((IkReal(-1.00000000000000))*(x1515)*(x1521)))+(((x1516)*(x1519)))+(((r02)*(x1514)))+(((x1515)*(x1519)))+(((IkReal(-1.00000000000000))*(x1517)*(x1518)))+(((IkReal(-1.00000000000000))*(x1516)*(x1521)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x1516)*(x1517)))+(((IkReal(-1.00000000000000))*(x1515)*(x1517)))+(((x1514)*(x1519)))+(((IkReal(-1.00000000000000))*(x1514)*(x1521)))+(((r00)*(sj0)*(x1518)))+(((IkReal(-1.00000000000000))*(x1518)*(x1519)))), ((((IkReal(-1.00000000000000))*(x1515)*(x1521)))+(((x1516)*(x1519)))+(((r02)*(x1514)))+(((x1515)*(x1519)))+(((IkReal(-1.00000000000000))*(x1517)*(x1518)))+(((IkReal(-1.00000000000000))*(x1516)*(x1521)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1522=((r02)*(sj2));
IkReal x1523=((IkReal(1.00000000000000))*(sj2));
IkReal x1524=((r00)*(sj0));
IkReal x1525=((cj1)*(cj2));
IkReal x1526=((cj0)*(r01));
IkReal x1527=((sj1)*(x1526));
IkReal x1528=((IkReal(1.00000000000000))*(cj2)*(x1524));
evalcond[0]=((((IkReal(-1.00000000000000))*(sj1)*(x1528)))+(((sj1)*(x1522)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((cj2)*(x1527)))+(((IkReal(-1.00000000000000))*(r02)*(x1525)))+(((cj1)*(sj2)*(x1526)))+(((IkReal(-1.00000000000000))*(cj1)*(x1523)*(x1524))));
evalcond[1]=((((x1525)*(x1526)))+(((sj1)*(sj2)*(x1524)))+(((cj1)*(x1522)))+(((IkReal(-1.00000000000000))*(x1524)*(x1525)))+(IKsin(j5))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1523)*(x1527))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1529=((pz)*(sj1));
IkReal x1530=((cj0)*(py));
IkReal x1531=((IkReal(1.00000000000000))*(sj2));
IkReal x1532=((cj1)*(cj2));
IkReal x1533=((px)*(sj0));
IkReal x1534=((cj2)*(sj1));
IkReal x1535=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(-0.190890000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.127080000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((sj1)*(sj2)*(x1533)))+(((IkReal(-1.00000000000000))*(x1532)*(x1533)))+(((x1530)*(x1532)))+(((cj2)*(x1529)))+(((IkReal(-1.00000000000000))*(sj1)*(x1530)*(x1531)))+(((IkReal(-0.521670000000000))*(sj2)))+(((pz)*(x1535))));
evalcond[4]=((IkReal(-0.0438300000000000))+(((IkReal(-1.00000000000000))*(pz)*(x1532)))+(((IkReal(-1.00000000000000))*(x1533)*(x1534)))+(((sj2)*(x1529)))+(((IkReal(-1.00000000000000))*(cj1)*(x1531)*(x1533)))+(((x1530)*(x1534)))+(((x1530)*(x1535)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1536=((cj2)*(sj1));
IkReal x1537=((cj0)*(r01));
IkReal x1538=((sj1)*(sj2));
IkReal x1539=((cj1)*(cj2));
IkReal x1540=((cj1)*(sj2));
IkReal x1541=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((r00)*(sj0)*(x1538)))+(((x1537)*(x1539)))+(((r02)*(x1540)))+(((IkReal(-1.00000000000000))*(x1539)*(x1541)))+(((IkReal(-1.00000000000000))*(x1537)*(x1538)))+(((r02)*(x1536))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x1540)*(x1541)))+(((x1537)*(x1540)))+(((x1536)*(x1537)))+(((IkReal(-1.00000000000000))*(x1536)*(x1541)))+(((r02)*(x1538)))+(((IkReal(-1.00000000000000))*(r02)*(x1539))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r00)*(sj0)*(x1538)))+(((x1537)*(x1539)))+(((r02)*(x1540)))+(((IkReal(-1.00000000000000))*(x1539)*(x1541)))+(((IkReal(-1.00000000000000))*(x1537)*(x1538)))+(((r02)*(x1536)))))+IKsqr(((((IkReal(-1.00000000000000))*(x1540)*(x1541)))+(((x1537)*(x1540)))+(((x1536)*(x1537)))+(((IkReal(-1.00000000000000))*(x1536)*(x1541)))+(((r02)*(x1538)))+(((IkReal(-1.00000000000000))*(r02)*(x1539)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((r00)*(sj0)*(x1538)))+(((x1537)*(x1539)))+(((r02)*(x1540)))+(((IkReal(-1.00000000000000))*(x1539)*(x1541)))+(((IkReal(-1.00000000000000))*(x1537)*(x1538)))+(((r02)*(x1536)))), ((((IkReal(-1.00000000000000))*(x1540)*(x1541)))+(((x1537)*(x1540)))+(((x1536)*(x1537)))+(((IkReal(-1.00000000000000))*(x1536)*(x1541)))+(((r02)*(x1538)))+(((IkReal(-1.00000000000000))*(r02)*(x1539)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1542=((r02)*(sj2));
IkReal x1543=((IkReal(1.00000000000000))*(sj2));
IkReal x1544=((r00)*(sj0));
IkReal x1545=((cj1)*(cj2));
IkReal x1546=((cj0)*(r01));
IkReal x1547=((sj1)*(x1546));
IkReal x1548=((IkReal(1.00000000000000))*(cj2)*(x1544));
evalcond[0]=((((cj2)*(x1547)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((sj1)*(x1542)))+(((IkReal(-1.00000000000000))*(cj1)*(x1543)*(x1544)))+(((IkReal(-1.00000000000000))*(r02)*(x1545)))+(((cj1)*(sj2)*(x1546)))+(((IkReal(-1.00000000000000))*(sj1)*(x1548))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1544)*(x1545)))+(((IkReal(-1.00000000000000))*(x1543)*(x1547)))+(((cj1)*(x1542)))+(((sj1)*(sj2)*(x1544)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((x1545)*(x1546))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1549=((sj1)*(sj2));
IkReal x1550=((cj2)*(sj1));
IkReal x1551=((cj1)*(sj2));
IkReal x1552=((IkReal(1.00000000000000))*(r02));
IkReal x1553=((cj1)*(cj2));
IkReal x1554=((cj0)*(r01));
IkReal x1555=((sj1)*(x1554));
IkReal x1556=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x1549)*(x1556)))+(((IkReal(-1.00000000000000))*(x1553)*(x1554)))+(((r00)*(sj0)*(x1553)))+(((x1549)*(x1554)))+(((IkReal(-1.00000000000000))*(x1550)*(x1552)))+(((IkReal(-1.00000000000000))*(x1551)*(x1552))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x1551)*(x1554)))+(((IkReal(-1.00000000000000))*(x1552)*(x1553)))+(((x1550)*(x1554)))+(((IkReal(-1.00000000000000))*(x1550)*(x1556)))+(((r02)*(x1549)))+(((IkReal(-1.00000000000000))*(x1551)*(x1556))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x1549)*(x1556)))+(((IkReal(-1.00000000000000))*(x1553)*(x1554)))+(((r00)*(sj0)*(x1553)))+(((x1549)*(x1554)))+(((IkReal(-1.00000000000000))*(x1550)*(x1552)))+(((IkReal(-1.00000000000000))*(x1551)*(x1552)))))))+IKsqr(((((x1551)*(x1554)))+(((IkReal(-1.00000000000000))*(x1552)*(x1553)))+(((x1550)*(x1554)))+(((IkReal(-1.00000000000000))*(x1550)*(x1556)))+(((r02)*(x1549)))+(((IkReal(-1.00000000000000))*(x1551)*(x1556)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x1549)*(x1556)))+(((IkReal(-1.00000000000000))*(x1553)*(x1554)))+(((r00)*(sj0)*(x1553)))+(((x1549)*(x1554)))+(((IkReal(-1.00000000000000))*(x1550)*(x1552)))+(((IkReal(-1.00000000000000))*(x1551)*(x1552)))))), ((((x1551)*(x1554)))+(((IkReal(-1.00000000000000))*(x1552)*(x1553)))+(((x1550)*(x1554)))+(((IkReal(-1.00000000000000))*(x1550)*(x1556)))+(((r02)*(x1549)))+(((IkReal(-1.00000000000000))*(x1551)*(x1556)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1557=IKsin(j5);
IkReal x1558=((r02)*(sj2));
IkReal x1559=((IkReal(1.00000000000000))*(sj2));
IkReal x1560=((r00)*(sj0));
IkReal x1561=((IkReal(1.00000000000000))*(cj2));
IkReal x1562=((cj0)*(r01)*(sj1));
IkReal x1563=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x1557)))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1561)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((cj2)*(x1562)))+(((IkReal(-1.00000000000000))*(cj1)*(x1559)*(x1560)))+(((sj1)*(x1558)))+(((IkReal(-1.00000000000000))*(sj1)*(x1560)*(x1561)))+(((sj2)*(x1563))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1559)*(x1562)))+(((sj4)*(x1557)))+(((cj1)*(x1558)))+(((IkReal(-1.00000000000000))*(cj1)*(x1560)*(x1561)))+(((cj2)*(x1563)))+(((sj1)*(sj2)*(x1560)))+(((cj2)*(r02)*(sj1))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1564=((cj2)*(sj1));
IkReal x1565=((cj0)*(r01));
IkReal x1566=((cj1)*(sj2));
IkReal x1567=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x1566)*(x1567)))+(((IkReal(-1.00000000000000))*(x1564)*(x1567)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((r02)*(sj1)*(sj2)))+(((x1564)*(x1565)))+(((x1565)*(x1566))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))))+IKsqr(((((IkReal(-1.00000000000000))*(x1566)*(x1567)))+(((IkReal(-1.00000000000000))*(x1564)*(x1567)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((r02)*(sj1)*(sj2)))+(((x1564)*(x1565)))+(((x1565)*(x1566)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))), ((((IkReal(-1.00000000000000))*(x1566)*(x1567)))+(((IkReal(-1.00000000000000))*(x1564)*(x1567)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((r02)*(sj1)*(sj2)))+(((x1564)*(x1565)))+(((x1565)*(x1566)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1568=IKsin(j5);
IkReal x1569=((r02)*(sj2));
IkReal x1570=((IkReal(1.00000000000000))*(sj2));
IkReal x1571=((r00)*(sj0));
IkReal x1572=((IkReal(1.00000000000000))*(cj2));
IkReal x1573=((cj0)*(r01)*(sj1));
IkReal x1574=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x1568)))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1572)))+(((IkReal(-1.00000000000000))*(cj1)*(x1570)*(x1571)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((cj2)*(x1573)))+(((sj1)*(x1569)))+(((sj2)*(x1574)))+(((IkReal(-1.00000000000000))*(sj1)*(x1571)*(x1572))));
evalcond[2]=((((cj1)*(x1569)))+(((IkReal(-1.00000000000000))*(x1570)*(x1573)))+(((sj4)*(x1568)))+(((cj2)*(x1574)))+(((sj1)*(sj2)*(x1571)))+(((IkReal(-1.00000000000000))*(cj1)*(x1571)*(x1572)))+(((cj2)*(r02)*(sj1))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1575=((cj1)*(sj2));
IkReal x1576=((px)*(sj0));
IkReal x1577=((sj1)*(sj2));
IkReal x1578=((cj0)*(py));
IkReal x1579=((cj2)*(pz));
IkReal x1580=((IkReal(1.00000000000000))*(cj1));
IkReal x1581=((cj2)*(x1578));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.000790000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((IkReal(-0.261090000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((x1576)*(x1577)))+(((cj1)*(x1581)))+(((IkReal(-1.00000000000000))*(cj2)*(x1576)*(x1580)))+(((sj1)*(x1579)))+(((IkReal(-1.00000000000000))*(x1577)*(x1578)))+(((pz)*(x1575)))+(((IkReal(0.0513300000000000))*(sj3)))+(((IkReal(-0.521670000000000))*(sj2)))+(((IkReal(-0.324110000000000))*(cj3))));
evalcond[3]=((IkReal(0.00750000000000000))+(((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x1576)))+(((x1575)*(x1578)))+(((IkReal(0.0513300000000000))*(cj3)))+(((IkReal(0.521670000000000))*(cj2)))+(((sj1)*(x1581)))+(((IkReal(-1.00000000000000))*(x1575)*(x1576)))+(((IkReal(-1.00000000000000))*(x1579)*(x1580)))+(((pz)*(x1577)))+(((IkReal(0.324110000000000))*(sj3)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1582=((cj0)*(r01));
IkReal x1583=((sj1)*(sj2));
IkReal x1584=((IkReal(1.00000000000000))*(cj1));
IkReal x1585=((r00)*(sj0));
if( IKabs(((((r01)*(sj0)))+(((cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj2)*(x1582)*(x1584)))+(((x1582)*(x1583)))+(((IkReal(-1.00000000000000))*(x1583)*(x1585)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1584)))+(((cj1)*(cj2)*(x1585))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r01)*(sj0)))+(((cj0)*(r00)))))+IKsqr(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj2)*(x1582)*(x1584)))+(((x1582)*(x1583)))+(((IkReal(-1.00000000000000))*(x1583)*(x1585)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1584)))+(((cj1)*(cj2)*(x1585)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((r01)*(sj0)))+(((cj0)*(r00)))), ((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj2)*(x1582)*(x1584)))+(((x1582)*(x1583)))+(((IkReal(-1.00000000000000))*(x1583)*(x1585)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1584)))+(((cj1)*(cj2)*(x1585)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1586=IKcos(j5);
IkReal x1587=((r02)*(sj2));
IkReal x1588=((IkReal(1.00000000000000))*(sj2));
IkReal x1589=((r00)*(sj0));
IkReal x1590=((IkReal(1.00000000000000))*(cj2));
IkReal x1591=((cj0)*(r01)*(sj1));
IkReal x1592=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((cj0)*(r00))));
evalcond[1]=((((sj2)*(x1592)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1590)))+(((IkReal(-1.00000000000000))*(cj1)*(x1588)*(x1589)))+(((cj3)*(x1586)))+(((cj2)*(x1591)))+(((sj1)*(x1587)))+(((IkReal(-1.00000000000000))*(sj1)*(x1589)*(x1590))));
evalcond[2]=((((sj3)*(x1586)))+(((cj1)*(x1587)))+(((sj1)*(sj2)*(x1589)))+(((IkReal(-1.00000000000000))*(x1588)*(x1591)))+(((IkReal(-1.00000000000000))*(cj1)*(x1589)*(x1590)))+(((cj2)*(x1592)))+(((cj2)*(r02)*(sj1))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1593=((IkReal(1.00000000000000))*(sj2));
IkReal x1594=((cj0)*(r01));
IkReal x1595=((cj2)*(sj1));
IkReal x1596=((r00)*(sj0));
if( IKabs(((((r01)*(sj0)))+(((cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj1)*(x1593)*(x1594)))+(((x1595)*(x1596)))+(((cj1)*(cj2)*(r02)))+(((cj1)*(sj2)*(x1596)))+(((IkReal(-1.00000000000000))*(x1594)*(x1595)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1593))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r01)*(sj0)))+(((cj0)*(r00)))))+IKsqr(((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj1)*(x1593)*(x1594)))+(((x1595)*(x1596)))+(((cj1)*(cj2)*(r02)))+(((cj1)*(sj2)*(x1596)))+(((IkReal(-1.00000000000000))*(x1594)*(x1595)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1593)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((r01)*(sj0)))+(((cj0)*(r00)))), ((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj1)*(x1593)*(x1594)))+(((x1595)*(x1596)))+(((cj1)*(cj2)*(r02)))+(((cj1)*(sj2)*(x1596)))+(((IkReal(-1.00000000000000))*(x1594)*(x1595)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1593)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1597=IKcos(j5);
IkReal x1598=((r02)*(sj2));
IkReal x1599=((IkReal(1.00000000000000))*(sj2));
IkReal x1600=((r00)*(sj0));
IkReal x1601=((IkReal(1.00000000000000))*(cj2));
IkReal x1602=((cj0)*(r01)*(sj1));
IkReal x1603=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((cj0)*(r00))));
evalcond[1]=((((sj2)*(x1603)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1601)))+(((IkReal(-1.00000000000000))*(cj1)*(x1599)*(x1600)))+(((cj3)*(x1597)))+(((sj1)*(x1598)))+(((cj2)*(x1602)))+(((IkReal(-1.00000000000000))*(sj1)*(x1600)*(x1601))));
evalcond[2]=((((cj1)*(x1598)))+(((IkReal(-1.00000000000000))*(cj1)*(x1600)*(x1601)))+(((IkReal(-1.00000000000000))*(x1599)*(x1602)))+(((cj2)*(x1603)))+(((cj2)*(r02)*(sj1)))+(((sj1)*(sj2)*(x1600)))+(((sj3)*(x1597))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1604=((cj1)*(sj2));
IkReal x1605=((px)*(sj0));
IkReal x1606=((sj1)*(sj2));
IkReal x1607=((cj0)*(py));
IkReal x1608=((cj2)*(pz));
IkReal x1609=((IkReal(1.00000000000000))*(cj1));
IkReal x1610=((cj2)*(x1607));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.000790000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((IkReal(-0.261090000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((sj1)*(x1608)))+(((IkReal(-1.00000000000000))*(x1606)*(x1607)))+(((IkReal(-1.00000000000000))*(cj2)*(x1605)*(x1609)))+(((x1605)*(x1606)))+(((IkReal(0.0513300000000000))*(sj3)))+(((IkReal(0.0576700000000000))*(cj3)))+(((IkReal(-0.521670000000000))*(sj2)))+(((pz)*(x1604)))+(((cj1)*(x1610))));
evalcond[3]=((IkReal(0.00750000000000000))+(((IkReal(-0.0576700000000000))*(sj3)))+(((IkReal(-1.00000000000000))*(x1604)*(x1605)))+(((sj1)*(x1610)))+(((IkReal(0.0513300000000000))*(cj3)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x1605)))+(((IkReal(-1.00000000000000))*(x1608)*(x1609)))+(((x1604)*(x1607)))+(((pz)*(x1606)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1611=((sj1)*(sj2));
IkReal x1612=((cj0)*(r01));
IkReal x1613=((r00)*(sj0));
IkReal x1614=((IkReal(1.00000000000000))*(cj1));
if( IKabs(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((cj1)*(cj2)*(x1613)))+(((IkReal(-1.00000000000000))*(x1611)*(x1613)))+(((IkReal(-1.00000000000000))*(cj2)*(x1612)*(x1614)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1614)))+(((x1611)*(x1612))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))))+IKsqr(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((cj1)*(cj2)*(x1613)))+(((IkReal(-1.00000000000000))*(x1611)*(x1613)))+(((IkReal(-1.00000000000000))*(cj2)*(x1612)*(x1614)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1614)))+(((x1611)*(x1612)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))), ((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((cj1)*(cj2)*(x1613)))+(((IkReal(-1.00000000000000))*(x1611)*(x1613)))+(((IkReal(-1.00000000000000))*(cj2)*(x1612)*(x1614)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1614)))+(((x1611)*(x1612)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1615=IKcos(j5);
IkReal x1616=((r02)*(sj2));
IkReal x1617=((IkReal(1.00000000000000))*(sj2));
IkReal x1618=((r00)*(sj0));
IkReal x1619=((IkReal(1.00000000000000))*(cj2));
IkReal x1620=((cj0)*(r01)*(sj1));
IkReal x1621=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(IKsin(j5))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1619)))+(((sj2)*(x1621)))+(((sj1)*(x1616)))+(((IkReal(-1.00000000000000))*(sj1)*(x1618)*(x1619)))+(((cj3)*(x1615)))+(((cj2)*(x1620)))+(((IkReal(-1.00000000000000))*(cj1)*(x1617)*(x1618))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj1)*(x1618)*(x1619)))+(((sj3)*(x1615)))+(((IkReal(-1.00000000000000))*(x1617)*(x1620)))+(((cj2)*(r02)*(sj1)))+(((cj2)*(x1621)))+(((sj1)*(sj2)*(x1618)))+(((cj1)*(x1616))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1622=((IkReal(1.00000000000000))*(sj2));
IkReal x1623=((cj0)*(r01));
IkReal x1624=((cj2)*(sj1));
IkReal x1625=((r00)*(sj0));
if( IKabs(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1622)))+(((IkReal(-1.00000000000000))*(cj1)*(x1622)*(x1623)))+(((cj1)*(sj2)*(x1625)))+(((IkReal(-1.00000000000000))*(x1623)*(x1624)))+(((cj1)*(cj2)*(r02)))+(((x1624)*(x1625))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))))+IKsqr(((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1622)))+(((IkReal(-1.00000000000000))*(cj1)*(x1622)*(x1623)))+(((cj1)*(sj2)*(x1625)))+(((IkReal(-1.00000000000000))*(x1623)*(x1624)))+(((cj1)*(cj2)*(r02)))+(((x1624)*(x1625)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))), ((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1622)))+(((IkReal(-1.00000000000000))*(cj1)*(x1622)*(x1623)))+(((cj1)*(sj2)*(x1625)))+(((IkReal(-1.00000000000000))*(x1623)*(x1624)))+(((cj1)*(cj2)*(r02)))+(((x1624)*(x1625)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1626=IKcos(j5);
IkReal x1627=((r02)*(sj2));
IkReal x1628=((IkReal(1.00000000000000))*(sj2));
IkReal x1629=((r00)*(sj0));
IkReal x1630=((IkReal(1.00000000000000))*(cj2));
IkReal x1631=((cj0)*(r01)*(sj1));
IkReal x1632=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(IKsin(j5))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj1)*(x1628)*(x1629)))+(((cj2)*(x1631)))+(((sj1)*(x1627)))+(((sj2)*(x1632)))+(((IkReal(-1.00000000000000))*(sj1)*(x1629)*(x1630)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1630)))+(((cj3)*(x1626))));
evalcond[2]=((((sj3)*(x1626)))+(((cj2)*(x1632)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1628)*(x1631)))+(((IkReal(-1.00000000000000))*(cj1)*(x1629)*(x1630)))+(((sj1)*(sj2)*(x1629)))+(((cj1)*(x1627))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1633=((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30);
IkReal x1634=((cj0)*(r00));
IkReal x1635=((r00)*(sj0));
IkReal x1636=((r01)*(sj0));
IkReal x1637=((cj4)*(r02));
IkReal x1638=((cj1)*(cj4)*(sj2));
IkReal x1639=((IkReal(1.00000000000000))*(sj3)*(sj4));
IkReal x1640=((IkReal(1.00000000000000))*(cj0)*(r01));
IkReal x1641=((cj2)*(cj4)*(sj1));
if( IKabs(((x1633)*(((x1634)+(x1636))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x1633)*(((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x1634)*(x1639)))+(((IkReal(-1.00000000000000))*(x1638)*(x1640)))+(((IkReal(-1.00000000000000))*(x1640)*(x1641)))+(((IkReal(-1.00000000000000))*(sj1)*(sj2)*(x1637)))+(((x1635)*(x1638)))+(((IkReal(-1.00000000000000))*(x1636)*(x1639)))+(((x1635)*(x1641)))+(((cj1)*(cj2)*(x1637))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x1633)*(((x1634)+(x1636)))))+IKsqr(((x1633)*(((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x1634)*(x1639)))+(((IkReal(-1.00000000000000))*(x1638)*(x1640)))+(((IkReal(-1.00000000000000))*(x1640)*(x1641)))+(((IkReal(-1.00000000000000))*(sj1)*(sj2)*(x1637)))+(((x1635)*(x1638)))+(((IkReal(-1.00000000000000))*(x1636)*(x1639)))+(((x1635)*(x1641)))+(((cj1)*(cj2)*(x1637)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((x1633)*(((x1634)+(x1636)))), ((x1633)*(((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x1634)*(x1639)))+(((IkReal(-1.00000000000000))*(x1638)*(x1640)))+(((IkReal(-1.00000000000000))*(x1640)*(x1641)))+(((IkReal(-1.00000000000000))*(sj1)*(sj2)*(x1637)))+(((x1635)*(x1638)))+(((IkReal(-1.00000000000000))*(x1636)*(x1639)))+(((x1635)*(x1641)))+(((cj1)*(cj2)*(x1637)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1642=IKsin(j5);
IkReal x1643=IKcos(j5);
IkReal x1644=((r02)*(sj2));
IkReal x1645=((IkReal(1.00000000000000))*(sj2));
IkReal x1646=((r00)*(sj0));
IkReal x1647=((IkReal(1.00000000000000))*(cj2));
IkReal x1648=((IkReal(1.00000000000000))*(x1642));
IkReal x1649=((cj0)*(r01)*(sj1));
IkReal x1650=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((cj0)*(r00)))+(((IkReal(-1.00000000000000))*(cj4)*(x1648))));
evalcond[1]=((((sj1)*(x1644)))+(((IkReal(-1.00000000000000))*(sj1)*(x1646)*(x1647)))+(((cj3)*(x1643)))+(((cj2)*(x1649)))+(((sj3)*(sj4)*(x1642)))+(((sj2)*(x1650)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1647)))+(((IkReal(-1.00000000000000))*(cj1)*(x1645)*(x1646))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj3)*(sj4)*(x1648)))+(((IkReal(-1.00000000000000))*(x1645)*(x1649)))+(((cj1)*(x1644)))+(((sj3)*(x1643)))+(((cj2)*(x1650)))+(((sj1)*(sj2)*(x1646)))+(((IkReal(-1.00000000000000))*(cj1)*(x1646)*(x1647)))+(((cj2)*(r02)*(sj1))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1651=((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30);
IkReal x1652=((cj0)*(r00));
IkReal x1653=((r01)*(sj0));
IkReal x1654=((cj3)*(sj4));
IkReal x1655=((cj0)*(r01));
IkReal x1656=((cj4)*(sj2));
IkReal x1657=((r00)*(sj0));
IkReal x1658=((IkReal(1.00000000000000))*(cj2)*(cj4));
if( IKabs(((x1651)*(((x1652)+(x1653))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x1651)*(((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(sj1)*(x1656)*(x1657)))+(((IkReal(-1.00000000000000))*(cj1)*(x1655)*(x1658)))+(((cj1)*(cj2)*(cj4)*(x1657)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1656)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1658)))+(((sj1)*(x1655)*(x1656)))+(((x1653)*(x1654)))+(((x1652)*(x1654))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x1651)*(((x1652)+(x1653)))))+IKsqr(((x1651)*(((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(sj1)*(x1656)*(x1657)))+(((IkReal(-1.00000000000000))*(cj1)*(x1655)*(x1658)))+(((cj1)*(cj2)*(cj4)*(x1657)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1656)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1658)))+(((sj1)*(x1655)*(x1656)))+(((x1653)*(x1654)))+(((x1652)*(x1654)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((x1651)*(((x1652)+(x1653)))), ((x1651)*(((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(sj1)*(x1656)*(x1657)))+(((IkReal(-1.00000000000000))*(cj1)*(x1655)*(x1658)))+(((cj1)*(cj2)*(cj4)*(x1657)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1656)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1658)))+(((sj1)*(x1655)*(x1656)))+(((x1653)*(x1654)))+(((x1652)*(x1654)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1659=IKsin(j5);
IkReal x1660=IKcos(j5);
IkReal x1661=((r02)*(sj2));
IkReal x1662=((IkReal(1.00000000000000))*(sj2));
IkReal x1663=((r00)*(sj0));
IkReal x1664=((IkReal(1.00000000000000))*(cj2));
IkReal x1665=((IkReal(1.00000000000000))*(x1659));
IkReal x1666=((cj0)*(r01)*(sj1));
IkReal x1667=((cj0)*(cj1)*(r01));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj4)*(x1665)))+(((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[1]=((((sj1)*(x1661)))+(((IkReal(-1.00000000000000))*(sj1)*(x1663)*(x1664)))+(((IkReal(-1.00000000000000))*(cj1)*(x1662)*(x1663)))+(((cj3)*(x1660)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1664)))+(((sj3)*(sj4)*(x1659)))+(((cj2)*(x1666)))+(((sj2)*(x1667))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1662)*(x1666)))+(((IkReal(-1.00000000000000))*(cj1)*(x1663)*(x1664)))+(((cj1)*(x1661)))+(((IkReal(-1.00000000000000))*(cj3)*(sj4)*(x1665)))+(((sj3)*(x1660)))+(((cj2)*(x1667)))+(((sj1)*(sj2)*(x1663)))+(((cj2)*(r02)*(sj1))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1668=(cj3)*(cj3);
IkReal x1669=(sj3)*(sj3);
IkReal x1670=((cj1)*(sj3));
IkReal x1671=((cj0)*(r01));
IkReal x1672=((r02)*(sj2));
IkReal x1673=((cj2)*(sj1));
IkReal x1674=((cj1)*(cj3));
IkReal x1675=((cj2)*(r02));
IkReal x1676=((cj3)*(sj1));
IkReal x1677=((IkReal(1.00000000000000))*(sj3));
IkReal x1678=((r00)*(sj0));
IkReal x1679=((IkReal(1.00000000000000))*(sj1)*(sj2));
IkReal x1680=((IkReal(1.00000000000000))*(x1678));
if( IKabs(((((IKabs(((((sj4)*(x1668)))+(((sj4)*(x1669))))) != 0)?((IkReal)1/(((((sj4)*(x1668)))+(((sj4)*(x1669)))))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(sj2)*(x1670)*(x1671)))+(((IkReal(-1.00000000000000))*(x1671)*(x1673)*(x1677)))+(((IkReal(-1.00000000000000))*(sj2)*(x1671)*(x1676)))+(((IkReal(-1.00000000000000))*(cj2)*(x1674)*(x1680)))+(((IkReal(-1.00000000000000))*(sj1)*(x1672)*(x1677)))+(((cj3)*(r02)*(x1673)))+(((x1672)*(x1674)))+(((cj2)*(x1671)*(x1674)))+(((sj3)*(x1673)*(x1678)))+(((sj2)*(x1670)*(x1678)))+(((sj2)*(x1676)*(x1678)))+(((x1670)*(x1675))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(((((IkReal(-1.00000000000000))*(x1669)))+(((IkReal(-1.00000000000000))*(x1668))))) != 0)?((IkReal)1/(((((IkReal(-1.00000000000000))*(x1669)))+(((IkReal(-1.00000000000000))*(x1668)))))):(IkReal)1.0e30))*(((((sj2)*(x1671)*(x1674)))+(((r02)*(sj3)*(x1673)))+(((cj3)*(x1671)*(x1673)))+(((IkReal(-1.00000000000000))*(x1674)*(x1675)))+(((IkReal(-1.00000000000000))*(cj3)*(x1673)*(x1680)))+(((cj2)*(x1670)*(x1671)))+(((IkReal(-1.00000000000000))*(sj2)*(x1674)*(x1680)))+(((sj1)*(sj2)*(sj3)*(x1678)))+(((IkReal(-1.00000000000000))*(sj1)*(sj2)*(x1671)*(x1677)))+(((IkReal(-1.00000000000000))*(cj2)*(x1670)*(x1680)))+(((x1672)*(x1676)))+(((x1670)*(x1672))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(((((sj4)*(x1668)))+(((sj4)*(x1669))))) != 0)?((IkReal)1/(((((sj4)*(x1668)))+(((sj4)*(x1669)))))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(sj2)*(x1670)*(x1671)))+(((IkReal(-1.00000000000000))*(x1671)*(x1673)*(x1677)))+(((IkReal(-1.00000000000000))*(sj2)*(x1671)*(x1676)))+(((IkReal(-1.00000000000000))*(cj2)*(x1674)*(x1680)))+(((IkReal(-1.00000000000000))*(sj1)*(x1672)*(x1677)))+(((cj3)*(r02)*(x1673)))+(((x1672)*(x1674)))+(((cj2)*(x1671)*(x1674)))+(((sj3)*(x1673)*(x1678)))+(((sj2)*(x1670)*(x1678)))+(((sj2)*(x1676)*(x1678)))+(((x1670)*(x1675)))))))+IKsqr(((((IKabs(((((IkReal(-1.00000000000000))*(x1669)))+(((IkReal(-1.00000000000000))*(x1668))))) != 0)?((IkReal)1/(((((IkReal(-1.00000000000000))*(x1669)))+(((IkReal(-1.00000000000000))*(x1668)))))):(IkReal)1.0e30))*(((((sj2)*(x1671)*(x1674)))+(((r02)*(sj3)*(x1673)))+(((cj3)*(x1671)*(x1673)))+(((IkReal(-1.00000000000000))*(x1674)*(x1675)))+(((IkReal(-1.00000000000000))*(cj3)*(x1673)*(x1680)))+(((cj2)*(x1670)*(x1671)))+(((IkReal(-1.00000000000000))*(sj2)*(x1674)*(x1680)))+(((sj1)*(sj2)*(sj3)*(x1678)))+(((IkReal(-1.00000000000000))*(sj1)*(sj2)*(x1671)*(x1677)))+(((IkReal(-1.00000000000000))*(cj2)*(x1670)*(x1680)))+(((x1672)*(x1676)))+(((x1670)*(x1672)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(((((sj4)*(x1668)))+(((sj4)*(x1669))))) != 0)?((IkReal)1/(((((sj4)*(x1668)))+(((sj4)*(x1669)))))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(sj2)*(x1670)*(x1671)))+(((IkReal(-1.00000000000000))*(x1671)*(x1673)*(x1677)))+(((IkReal(-1.00000000000000))*(sj2)*(x1671)*(x1676)))+(((IkReal(-1.00000000000000))*(cj2)*(x1674)*(x1680)))+(((IkReal(-1.00000000000000))*(sj1)*(x1672)*(x1677)))+(((cj3)*(r02)*(x1673)))+(((x1672)*(x1674)))+(((cj2)*(x1671)*(x1674)))+(((sj3)*(x1673)*(x1678)))+(((sj2)*(x1670)*(x1678)))+(((sj2)*(x1676)*(x1678)))+(((x1670)*(x1675)))))), ((((IKabs(((((IkReal(-1.00000000000000))*(x1669)))+(((IkReal(-1.00000000000000))*(x1668))))) != 0)?((IkReal)1/(((((IkReal(-1.00000000000000))*(x1669)))+(((IkReal(-1.00000000000000))*(x1668)))))):(IkReal)1.0e30))*(((((sj2)*(x1671)*(x1674)))+(((r02)*(sj3)*(x1673)))+(((cj3)*(x1671)*(x1673)))+(((IkReal(-1.00000000000000))*(x1674)*(x1675)))+(((IkReal(-1.00000000000000))*(cj3)*(x1673)*(x1680)))+(((cj2)*(x1670)*(x1671)))+(((IkReal(-1.00000000000000))*(sj2)*(x1674)*(x1680)))+(((sj1)*(sj2)*(sj3)*(x1678)))+(((IkReal(-1.00000000000000))*(sj1)*(sj2)*(x1671)*(x1677)))+(((IkReal(-1.00000000000000))*(cj2)*(x1670)*(x1680)))+(((x1672)*(x1676)))+(((x1670)*(x1672)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1681=IKsin(j5);
IkReal x1682=IKcos(j5);
IkReal x1683=((r02)*(sj2));
IkReal x1684=((IkReal(1.00000000000000))*(sj2));
IkReal x1685=((r00)*(sj0));
IkReal x1686=((IkReal(1.00000000000000))*(cj2));
IkReal x1687=((IkReal(1.00000000000000))*(x1681));
IkReal x1688=((cj0)*(r01)*(sj1));
IkReal x1689=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x1687)))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj1)*(x1685)*(x1686)))+(((sj3)*(sj4)*(x1681)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1686)))+(((sj1)*(x1683)))+(((IkReal(-1.00000000000000))*(cj1)*(x1684)*(x1685)))+(((cj3)*(x1682)))+(((cj2)*(x1688)))+(((sj2)*(x1689))));
evalcond[2]=((((cj1)*(x1683)))+(((IkReal(-1.00000000000000))*(cj3)*(sj4)*(x1687)))+(((sj1)*(sj2)*(x1685)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(x1685)*(x1686)))+(((sj3)*(x1682)))+(((cj2)*(x1689)))+(((IkReal(-1.00000000000000))*(x1684)*(x1688))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1690=((px)*(sj0));
IkReal x1691=((cj0)*(py));
IkReal x1692=((IkReal(954450000.000000))*(sj2));
IkReal x1693=((cj1)*(pz));
IkReal x1694=((IkReal(3950000.00000000))*(sj2));
IkReal x1695=((IkReal(954450000.000000))*(cj2));
IkReal x1696=((pz)*(sj1));
IkReal x1697=((IkReal(3950000.00000000))*(cj1)*(cj2));
IkReal x1698=((cj0)*(cj3)*(px));
IkReal x1699=((cj3)*(py)*(sj0));
if( IKabs(((gconst0)*(((IkReal(1031305.50000000))+(((IkReal(-202753.500000000))*(sj3)))+(((x1690)*(x1697)))+(((IkReal(526219.000000000))*(cj3)))+(((sj1)*(x1691)*(x1694)))+(((IkReal(-3950000.00000000))*(cj2)*(x1696)))+(((IkReal(-954450000.000000))*(x1699)))+(((IkReal(-954450000.000000))*(x1698)))+(((IkReal(-1.00000000000000))*(sj1)*(x1690)*(x1694)))+(((IkReal(-1.00000000000000))*(x1691)*(x1697)))+(((IkReal(2060596.50000000))*(sj2)))+(((IkReal(-38789.0000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x1693)*(x1694))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst0)*(((IkReal(-249197350.500000))+(((sj1)*(x1690)*(x1692)))+(((IkReal(-1.00000000000000))*(sj1)*(x1691)*(x1692)))+(((IkReal(-127151829.000000))*(cj3)))+(((x1695)*(x1696)))+(((IkReal(48991918.5000000))*(sj3)))+(((x1692)*(x1693)))+(((IkReal(-1.00000000000000))*(cj1)*(x1690)*(x1695)))+(((IkReal(9372699.00000000))*(cj2)))+(((cj1)*(x1691)*(x1695)))+(((IkReal(-3950000.00000000))*(x1699)))+(((IkReal(-3950000.00000000))*(x1698)))+(((IkReal(-497907931.500000))*(sj2))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst0)*(((IkReal(1031305.50000000))+(((IkReal(-202753.500000000))*(sj3)))+(((x1690)*(x1697)))+(((IkReal(526219.000000000))*(cj3)))+(((sj1)*(x1691)*(x1694)))+(((IkReal(-3950000.00000000))*(cj2)*(x1696)))+(((IkReal(-954450000.000000))*(x1699)))+(((IkReal(-954450000.000000))*(x1698)))+(((IkReal(-1.00000000000000))*(sj1)*(x1690)*(x1694)))+(((IkReal(-1.00000000000000))*(x1691)*(x1697)))+(((IkReal(2060596.50000000))*(sj2)))+(((IkReal(-38789.0000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x1693)*(x1694)))))), ((gconst0)*(((IkReal(-249197350.500000))+(((sj1)*(x1690)*(x1692)))+(((IkReal(-1.00000000000000))*(sj1)*(x1691)*(x1692)))+(((IkReal(-127151829.000000))*(cj3)))+(((x1695)*(x1696)))+(((IkReal(48991918.5000000))*(sj3)))+(((x1692)*(x1693)))+(((IkReal(-1.00000000000000))*(cj1)*(x1690)*(x1695)))+(((IkReal(9372699.00000000))*(cj2)))+(((cj1)*(x1691)*(x1695)))+(((IkReal(-3950000.00000000))*(x1699)))+(((IkReal(-3950000.00000000))*(x1698)))+(((IkReal(-497907931.500000))*(sj2)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[3];
IkReal x1700=IKsin(j4);
IkReal x1701=IKcos(j4);
IkReal x1702=((IkReal(1.00000000000000))*(cj1));
IkReal x1703=((pz)*(sj1));
IkReal x1704=((IkReal(1.00000000000000))*(sj1));
IkReal x1705=((cj0)*(cj2)*(py));
IkReal x1706=((px)*(sj0)*(sj2));
IkReal x1707=((IkReal(0.190890000000000))*(x1701));
IkReal x1708=((IkReal(0.000790000000000000))*(x1700));
IkReal x1709=((cj0)*(py)*(sj2));
IkReal x1710=((cj2)*(px)*(sj0));
evalcond[0]=((((IkReal(0.190890000000000))*(x1700)))+(((IkReal(0.000790000000000000))*(x1701)))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[1]=((IkReal(-0.261090000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((cj1)*(x1705)))+(((IkReal(-1.00000000000000))*(cj3)*(x1707)))+(((IkReal(-1.00000000000000))*(x1704)*(x1709)))+(((cj1)*(pz)*(sj2)))+(((IkReal(-0.133220000000000))*(cj3)))+(((cj2)*(x1703)))+(((IkReal(-1.00000000000000))*(x1702)*(x1710)))+(((cj3)*(x1708)))+(((IkReal(0.0513300000000000))*(sj3)))+(((sj1)*(x1706)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[2]=((IkReal(0.00750000000000000))+(((IkReal(-1.00000000000000))*(x1702)*(x1706)))+(((cj1)*(x1709)))+(((IkReal(-1.00000000000000))*(cj2)*(pz)*(x1702)))+(((IkReal(0.0513300000000000))*(cj3)))+(((IkReal(-1.00000000000000))*(sj3)*(x1708)))+(((IkReal(0.133220000000000))*(sj3)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x1704)*(x1710)))+(((sj2)*(x1703)))+(((sj3)*(x1707)))+(((sj1)*(x1705)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[2];
IkReal x1711=(cj3)*(cj3);
IkReal x1712=(sj3)*(sj3);
dummyeval[0]=((((sj4)*(x1711)))+(((sj4)*(x1712))));
dummyeval[1]=((((IkReal(-1.00000000000000))*(x1712)))+(((IkReal(-1.00000000000000))*(x1711))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=cj4;
dummyeval[1]=sj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=cj4;
dummyeval[1]=cj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x1713=((cj1)*(sj2));
IkReal x1714=((px)*(sj0));
IkReal x1715=((sj1)*(sj2));
IkReal x1716=((cj0)*(py));
IkReal x1717=((cj2)*(pz));
IkReal x1718=((IkReal(1.00000000000000))*(cj1));
IkReal x1719=((cj2)*(x1716));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(0.190890000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.261090000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((cj1)*(x1719)))+(((x1714)*(x1715)))+(((IkReal(-1.00000000000000))*(x1715)*(x1716)))+(((pz)*(x1713)))+(((IkReal(0.0513300000000000))*(sj3)))+(((IkReal(-0.521670000000000))*(sj2)))+(((IkReal(-0.132430000000000))*(cj3)))+(((sj1)*(x1717)))+(((IkReal(-1.00000000000000))*(cj2)*(x1714)*(x1718))));
evalcond[4]=((IkReal(0.00750000000000000))+(((IkReal(-1.00000000000000))*(x1713)*(x1714)))+(((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x1714)))+(((x1713)*(x1716)))+(((IkReal(0.0513300000000000))*(cj3)))+(((IkReal(0.521670000000000))*(cj2)))+(((pz)*(x1715)))+(((IkReal(0.132430000000000))*(sj3)))+(((IkReal(0.00982000000000000))*(sj2)))+(((sj1)*(x1719)))+(((IkReal(-1.00000000000000))*(x1717)*(x1718))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst2;
gconst2=IKsign((((sj3)*(sj3))+((cj3)*(cj3))));
dummyeval[0]=(((sj3)*(sj3))+((cj3)*(cj3)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1720=((IkReal(1.00000000000000))*(cj3));
IkReal x1721=((cj1)*(cj2));
IkReal x1722=((r00)*(sj0));
IkReal x1723=((r02)*(sj3));
IkReal x1724=((cj3)*(r02));
IkReal x1725=((cj2)*(sj1));
IkReal x1726=((IkReal(1.00000000000000))*(sj3));
IkReal x1727=((cj0)*(r01));
IkReal x1728=((cj1)*(sj2));
IkReal x1729=((sj1)*(sj2));
IkReal x1730=((sj1)*(x1727));
if( IKabs(((gconst2)*(((((x1724)*(x1725)))+(((x1724)*(x1728)))+(((sj3)*(x1722)*(x1725)))+(((sj3)*(x1722)*(x1728)))+(((IkReal(-1.00000000000000))*(x1725)*(x1726)*(x1727)))+(((IkReal(-1.00000000000000))*(x1720)*(x1721)*(x1722)))+(((IkReal(-1.00000000000000))*(x1723)*(x1729)))+(((x1721)*(x1723)))+(((cj3)*(x1721)*(x1727)))+(((IkReal(-1.00000000000000))*(x1726)*(x1727)*(x1728)))+(((cj3)*(x1722)*(x1729)))+(((IkReal(-1.00000000000000))*(x1720)*(x1727)*(x1729))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst2)*(((((IkReal(-1.00000000000000))*(x1722)*(x1726)*(x1729)))+(((IkReal(-1.00000000000000))*(x1723)*(x1725)))+(((IkReal(-1.00000000000000))*(x1723)*(x1728)))+(((x1721)*(x1724)))+(((IkReal(-1.00000000000000))*(x1721)*(x1726)*(x1727)))+(((IkReal(-1.00000000000000))*(x1720)*(x1725)*(x1727)))+(((cj3)*(x1722)*(x1728)))+(((cj3)*(x1722)*(x1725)))+(((sj3)*(x1721)*(x1722)))+(((sj3)*(x1727)*(x1729)))+(((IkReal(-1.00000000000000))*(x1720)*(x1727)*(x1728)))+(((IkReal(-1.00000000000000))*(r02)*(x1720)*(x1729))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst2)*(((((x1724)*(x1725)))+(((x1724)*(x1728)))+(((sj3)*(x1722)*(x1725)))+(((sj3)*(x1722)*(x1728)))+(((IkReal(-1.00000000000000))*(x1725)*(x1726)*(x1727)))+(((IkReal(-1.00000000000000))*(x1720)*(x1721)*(x1722)))+(((IkReal(-1.00000000000000))*(x1723)*(x1729)))+(((x1721)*(x1723)))+(((cj3)*(x1721)*(x1727)))+(((IkReal(-1.00000000000000))*(x1726)*(x1727)*(x1728)))+(((cj3)*(x1722)*(x1729)))+(((IkReal(-1.00000000000000))*(x1720)*(x1727)*(x1729)))))), ((gconst2)*(((((IkReal(-1.00000000000000))*(x1722)*(x1726)*(x1729)))+(((IkReal(-1.00000000000000))*(x1723)*(x1725)))+(((IkReal(-1.00000000000000))*(x1723)*(x1728)))+(((x1721)*(x1724)))+(((IkReal(-1.00000000000000))*(x1721)*(x1726)*(x1727)))+(((IkReal(-1.00000000000000))*(x1720)*(x1725)*(x1727)))+(((cj3)*(x1722)*(x1728)))+(((cj3)*(x1722)*(x1725)))+(((sj3)*(x1721)*(x1722)))+(((sj3)*(x1727)*(x1729)))+(((IkReal(-1.00000000000000))*(x1720)*(x1727)*(x1728)))+(((IkReal(-1.00000000000000))*(r02)*(x1720)*(x1729)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1731=IKcos(j5);
IkReal x1732=IKsin(j5);
IkReal x1733=((r02)*(sj2));
IkReal x1734=((IkReal(1.00000000000000))*(sj2));
IkReal x1735=((r00)*(sj0));
IkReal x1736=((cj1)*(cj2));
IkReal x1737=((cj0)*(r01));
IkReal x1738=((sj1)*(x1737));
IkReal x1739=((IkReal(1.00000000000000))*(cj2)*(x1735));
evalcond[0]=((((cj2)*(x1738)))+(((IkReal(-1.00000000000000))*(r02)*(x1736)))+(((cj3)*(x1731)))+(((sj1)*(x1733)))+(((IkReal(-1.00000000000000))*(cj1)*(x1734)*(x1735)))+(((cj1)*(sj2)*(x1737)))+(((IkReal(-1.00000000000000))*(sj1)*(x1739)))+(((sj3)*(x1732))));
evalcond[1]=((((x1736)*(x1737)))+(((IkReal(-1.00000000000000))*(x1735)*(x1736)))+(((cj2)*(r02)*(sj1)))+(((cj1)*(x1733)))+(((IkReal(-1.00000000000000))*(cj3)*(x1732)))+(((IkReal(-1.00000000000000))*(x1734)*(x1738)))+(((sj1)*(sj2)*(x1735)))+(((sj3)*(x1731))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1740=((cj1)*(sj2));
IkReal x1741=((px)*(sj0));
IkReal x1742=((sj1)*(sj2));
IkReal x1743=((cj0)*(py));
IkReal x1744=((cj2)*(pz));
IkReal x1745=((IkReal(1.00000000000000))*(cj1));
IkReal x1746=((cj2)*(x1743));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(-0.190890000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.261090000000000))+(((pz)*(x1740)))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(cj2)*(x1741)*(x1745)))+(((cj1)*(x1746)))+(((IkReal(-0.134010000000000))*(cj3)))+(((sj1)*(x1744)))+(((IkReal(-1.00000000000000))*(x1742)*(x1743)))+(((IkReal(0.0513300000000000))*(sj3)))+(((IkReal(-0.521670000000000))*(sj2)))+(((x1741)*(x1742))));
evalcond[4]=((IkReal(0.00750000000000000))+(((pz)*(x1742)))+(((IkReal(0.0513300000000000))*(cj3)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x1740)*(x1741)))+(((sj1)*(x1746)))+(((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x1741)))+(((IkReal(0.134010000000000))*(sj3)))+(((IkReal(-1.00000000000000))*(x1744)*(x1745)))+(((x1740)*(x1743)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst3;
gconst3=IKsign((((sj3)*(sj3))+((cj3)*(cj3))));
dummyeval[0]=(((sj3)*(sj3))+((cj3)*(cj3)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1747=((r00)*(sj0));
IkReal x1748=((sj1)*(sj2));
IkReal x1749=((r02)*(sj3));
IkReal x1750=((cj0)*(r01));
IkReal x1751=((cj3)*(r02));
IkReal x1752=((IkReal(1.00000000000000))*(cj2));
IkReal x1753=((cj1)*(sj3));
IkReal x1754=((sj1)*(sj3));
IkReal x1755=((cj3)*(sj1));
IkReal x1756=((cj1)*(cj2)*(cj3));
IkReal x1757=((IkReal(1.00000000000000))*(cj1)*(sj2));
if( IKabs(((gconst3)*(((((IkReal(-1.00000000000000))*(sj1)*(x1751)*(x1752)))+(((cj3)*(x1748)*(x1750)))+(((sj2)*(x1750)*(x1753)))+(((x1747)*(x1756)))+(((IkReal(-1.00000000000000))*(x1751)*(x1757)))+(((IkReal(-1.00000000000000))*(cj1)*(x1749)*(x1752)))+(((cj2)*(x1750)*(x1754)))+(((IkReal(-1.00000000000000))*(cj3)*(x1747)*(x1748)))+(((x1748)*(x1749)))+(((IkReal(-1.00000000000000))*(x1747)*(x1752)*(x1754)))+(((IkReal(-1.00000000000000))*(cj1)*(cj3)*(x1750)*(x1752)))+(((IkReal(-1.00000000000000))*(sj2)*(x1747)*(x1753))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst3)*(((((cj1)*(cj2)*(x1751)))+(((IkReal(-1.00000000000000))*(sj3)*(x1747)*(x1748)))+(((IkReal(-1.00000000000000))*(x1749)*(x1757)))+(((sj3)*(x1748)*(x1750)))+(((IkReal(-1.00000000000000))*(cj3)*(x1750)*(x1757)))+(((cj1)*(cj3)*(sj2)*(x1747)))+(((IkReal(-1.00000000000000))*(x1750)*(x1752)*(x1753)))+(((IkReal(-1.00000000000000))*(x1750)*(x1752)*(x1755)))+(((IkReal(-1.00000000000000))*(x1748)*(x1751)))+(((cj2)*(x1747)*(x1755)))+(((cj2)*(x1747)*(x1753)))+(((IkReal(-1.00000000000000))*(sj1)*(x1749)*(x1752))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst3)*(((((IkReal(-1.00000000000000))*(sj1)*(x1751)*(x1752)))+(((cj3)*(x1748)*(x1750)))+(((sj2)*(x1750)*(x1753)))+(((x1747)*(x1756)))+(((IkReal(-1.00000000000000))*(x1751)*(x1757)))+(((IkReal(-1.00000000000000))*(cj1)*(x1749)*(x1752)))+(((cj2)*(x1750)*(x1754)))+(((IkReal(-1.00000000000000))*(cj3)*(x1747)*(x1748)))+(((x1748)*(x1749)))+(((IkReal(-1.00000000000000))*(x1747)*(x1752)*(x1754)))+(((IkReal(-1.00000000000000))*(cj1)*(cj3)*(x1750)*(x1752)))+(((IkReal(-1.00000000000000))*(sj2)*(x1747)*(x1753)))))), ((gconst3)*(((((cj1)*(cj2)*(x1751)))+(((IkReal(-1.00000000000000))*(sj3)*(x1747)*(x1748)))+(((IkReal(-1.00000000000000))*(x1749)*(x1757)))+(((sj3)*(x1748)*(x1750)))+(((IkReal(-1.00000000000000))*(cj3)*(x1750)*(x1757)))+(((cj1)*(cj3)*(sj2)*(x1747)))+(((IkReal(-1.00000000000000))*(x1750)*(x1752)*(x1753)))+(((IkReal(-1.00000000000000))*(x1750)*(x1752)*(x1755)))+(((IkReal(-1.00000000000000))*(x1748)*(x1751)))+(((cj2)*(x1747)*(x1755)))+(((cj2)*(x1747)*(x1753)))+(((IkReal(-1.00000000000000))*(sj1)*(x1749)*(x1752)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1758=IKsin(j5);
IkReal x1759=IKcos(j5);
IkReal x1760=((r02)*(sj2));
IkReal x1761=((IkReal(1.00000000000000))*(sj2));
IkReal x1762=((r00)*(sj0));
IkReal x1763=((IkReal(1.00000000000000))*(cj2));
IkReal x1764=((cj0)*(r01)*(sj1));
IkReal x1765=((cj0)*(cj1)*(r01));
evalcond[0]=((((sj1)*(x1760)))+(((sj2)*(x1765)))+(((IkReal(-1.00000000000000))*(sj3)*(x1758)))+(((cj3)*(x1759)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1763)))+(((IkReal(-1.00000000000000))*(sj1)*(x1762)*(x1763)))+(((IkReal(-1.00000000000000))*(cj1)*(x1761)*(x1762)))+(((cj2)*(x1764))));
evalcond[1]=((((cj3)*(x1758)))+(((IkReal(-1.00000000000000))*(x1761)*(x1764)))+(((IkReal(-1.00000000000000))*(cj1)*(x1762)*(x1763)))+(((cj2)*(r02)*(sj1)))+(((sj1)*(sj2)*(x1762)))+(((sj3)*(x1759)))+(((cj2)*(x1765)))+(((cj1)*(x1760))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1766=((cj1)*(sj2));
IkReal x1767=((px)*(sj0));
IkReal x1768=((sj1)*(sj2));
IkReal x1769=((cj0)*(py));
IkReal x1770=((cj2)*(pz));
IkReal x1771=((IkReal(1.00000000000000))*(cj1));
IkReal x1772=((cj2)*(x1769));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(0.000790000000000000))*(cj4)))+(((cj0)*(px)))+(((py)*(sj0)))+(((IkReal(0.190890000000000))*(sj4))));
evalcond[2]=((IkReal(-0.209760000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(cj2)*(x1767)*(x1771)))+(((pz)*(x1766)))+(((x1767)*(x1768)))+(((IkReal(-1.00000000000000))*(x1768)*(x1769)))+(((sj1)*(x1770)))+(((IkReal(-0.521670000000000))*(sj2)))+(((cj1)*(x1772))));
evalcond[3]=((IkReal(0.140720000000000))+(((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x1767)))+(((IkReal(0.521670000000000))*(cj2)))+(((pz)*(x1768)))+(((IkReal(0.190890000000000))*(cj4)))+(((IkReal(-1.00000000000000))*(x1770)*(x1771)))+(((IkReal(-0.000790000000000000))*(sj4)))+(((sj1)*(x1772)))+(((x1766)*(x1769)))+(((IkReal(0.00982000000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(x1766)*(x1767))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x1773=((IkReal(1.00000000000000))*(sj0));
IkReal x1774=((cj1)*(sj2));
IkReal x1775=((sj1)*(sj2));
IkReal x1776=((cj2)*(sj1));
IkReal x1777=((cj0)*(r01));
IkReal x1778=((cj0)*(py));
IkReal x1779=((cj2)*(x1778));
IkReal x1780=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.000790000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r00)*(x1773)*(x1776)))+(((IkReal(-1.00000000000000))*(r00)*(x1773)*(x1774)))+(((r02)*(x1775)))+(((x1776)*(x1777)))+(((x1774)*(x1777)))+(((IkReal(-1.00000000000000))*(r02)*(x1780))));
evalcond[3]=((IkReal(-0.209760000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(px)*(x1773)))+(((px)*(sj0)*(x1775)))+(((IkReal(-1.00000000000000))*(x1775)*(x1778)))+(((IkReal(-0.521670000000000))*(sj2)))+(((pz)*(x1776)))+(((pz)*(x1774)))+(((cj1)*(x1779))));
evalcond[4]=((IkReal(0.331610000000000))+(((IkReal(-1.00000000000000))*(px)*(x1773)*(x1774)))+(((IkReal(-1.00000000000000))*(px)*(x1773)*(x1776)))+(((x1776)*(x1778)))+(((IkReal(-1.00000000000000))*(pz)*(x1780)))+(((IkReal(0.521670000000000))*(cj2)))+(((x1774)*(x1778)))+(((pz)*(x1775)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1781=((cj0)*(r01));
IkReal x1782=((sj1)*(sj2));
IkReal x1783=((IkReal(1.00000000000000))*(cj1));
IkReal x1784=((r00)*(sj0));
if( IKabs(((((r01)*(sj0)))+(((cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x1782)*(x1784)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1783)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((cj1)*(cj2)*(x1784)))+(((IkReal(-1.00000000000000))*(cj2)*(x1781)*(x1783)))+(((x1781)*(x1782))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r01)*(sj0)))+(((cj0)*(r00)))))+IKsqr(((((IkReal(-1.00000000000000))*(x1782)*(x1784)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1783)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((cj1)*(cj2)*(x1784)))+(((IkReal(-1.00000000000000))*(cj2)*(x1781)*(x1783)))+(((x1781)*(x1782)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((r01)*(sj0)))+(((cj0)*(r00)))), ((((IkReal(-1.00000000000000))*(x1782)*(x1784)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1783)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((cj1)*(cj2)*(x1784)))+(((IkReal(-1.00000000000000))*(cj2)*(x1781)*(x1783)))+(((x1781)*(x1782)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1785=((sj1)*(sj2));
IkReal x1786=((cj0)*(r01));
IkReal x1787=((r00)*(sj0));
IkReal x1788=((cj1)*(cj2));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1787)*(x1788)))+(IKcos(j5))+(((cj2)*(r02)*(sj1)))+(((x1785)*(x1787)))+(((IkReal(-1.00000000000000))*(x1785)*(x1786)))+(((x1786)*(x1788)))+(((cj1)*(r02)*(sj2))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1789=((IkReal(1.00000000000000))*(sj0));
IkReal x1790=((cj1)*(sj2));
IkReal x1791=((sj1)*(sj2));
IkReal x1792=((cj2)*(sj1));
IkReal x1793=((cj0)*(r01));
IkReal x1794=((cj0)*(py));
IkReal x1795=((cj2)*(x1794));
IkReal x1796=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.000790000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r00)*(x1789)*(x1792)))+(((IkReal(-1.00000000000000))*(r00)*(x1789)*(x1790)))+(((r02)*(x1791)))+(((x1792)*(x1793)))+(((x1790)*(x1793)))+(((IkReal(-1.00000000000000))*(r02)*(x1796))));
evalcond[3]=((IkReal(-0.209760000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((pz)*(x1790)))+(((pz)*(x1792)))+(((cj1)*(x1795)))+(((IkReal(-1.00000000000000))*(x1791)*(x1794)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(px)*(x1789)))+(((IkReal(-0.521670000000000))*(sj2)))+(((px)*(sj0)*(x1791))));
evalcond[4]=((IkReal(-0.0501700000000000))+(((IkReal(-1.00000000000000))*(px)*(x1789)*(x1792)))+(((IkReal(-1.00000000000000))*(px)*(x1789)*(x1790)))+(((pz)*(x1791)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(pz)*(x1796)))+(((x1792)*(x1794)))+(((x1790)*(x1794)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1797=((sj1)*(sj2));
IkReal x1798=((cj0)*(r01));
IkReal x1799=((r00)*(sj0));
IkReal x1800=((IkReal(1.00000000000000))*(cj1));
if( IKabs(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(cj2)*(x1798)*(x1800)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1800)))+(((x1797)*(x1798)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1797)*(x1799)))+(((cj1)*(cj2)*(x1799))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))))+IKsqr(((((IkReal(-1.00000000000000))*(cj2)*(x1798)*(x1800)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1800)))+(((x1797)*(x1798)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1797)*(x1799)))+(((cj1)*(cj2)*(x1799)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))), ((((IkReal(-1.00000000000000))*(cj2)*(x1798)*(x1800)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1800)))+(((x1797)*(x1798)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1797)*(x1799)))+(((cj1)*(cj2)*(x1799)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1801=((sj1)*(sj2));
IkReal x1802=((cj0)*(r01));
IkReal x1803=((r00)*(sj0));
IkReal x1804=((cj1)*(cj2));
evalcond[0]=((((r01)*(sj0)))+(IKsin(j5))+(((cj0)*(r00))));
evalcond[1]=((((x1802)*(x1804)))+(((x1801)*(x1803)))+(IKcos(j5))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1803)*(x1804)))+(((IkReal(-1.00000000000000))*(x1801)*(x1802)))+(((cj1)*(r02)*(sj2))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1805=((pz)*(sj1));
IkReal x1806=((cj0)*(py));
IkReal x1807=((IkReal(1.00000000000000))*(sj2));
IkReal x1808=((cj1)*(cj2));
IkReal x1809=((px)*(sj0));
IkReal x1810=((cj2)*(sj1));
IkReal x1811=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(0.190890000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.209760000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((cj2)*(x1805)))+(((x1806)*(x1808)))+(((sj1)*(sj2)*(x1809)))+(((IkReal(-1.00000000000000))*(sj1)*(x1806)*(x1807)))+(((pz)*(x1811)))+(((IkReal(-1.00000000000000))*(x1808)*(x1809)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(0.139930000000000))+(((IkReal(-1.00000000000000))*(x1809)*(x1810)))+(((IkReal(-1.00000000000000))*(cj1)*(x1807)*(x1809)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(pz)*(x1808)))+(((sj2)*(x1805)))+(((x1806)*(x1810)))+(((x1806)*(x1811)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1812=((IkReal(1.00000000000000))*(sj2));
IkReal x1813=((r02)*(sj1));
IkReal x1814=((cj0)*(r01));
IkReal x1815=((r00)*(sj0));
IkReal x1816=((cj1)*(r02));
IkReal x1817=((IkReal(1.00000000000000))*(cj2));
if( IKabs(((((IkReal(-1.00000000000000))*(cj1)*(x1812)*(x1814)))+(((cj2)*(sj1)*(x1815)))+(((cj2)*(x1816)))+(((IkReal(-1.00000000000000))*(x1812)*(x1813)))+(((cj1)*(sj2)*(x1815)))+(((IkReal(-1.00000000000000))*(sj1)*(x1814)*(x1817))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x1813)*(x1817)))+(((IkReal(-1.00000000000000))*(x1812)*(x1816)))+(((cj1)*(cj2)*(x1815)))+(((IkReal(-1.00000000000000))*(sj1)*(x1812)*(x1815)))+(((sj1)*(sj2)*(x1814)))+(((IkReal(-1.00000000000000))*(cj1)*(x1814)*(x1817))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(cj1)*(x1812)*(x1814)))+(((cj2)*(sj1)*(x1815)))+(((cj2)*(x1816)))+(((IkReal(-1.00000000000000))*(x1812)*(x1813)))+(((cj1)*(sj2)*(x1815)))+(((IkReal(-1.00000000000000))*(sj1)*(x1814)*(x1817)))))+IKsqr(((((IkReal(-1.00000000000000))*(x1813)*(x1817)))+(((IkReal(-1.00000000000000))*(x1812)*(x1816)))+(((cj1)*(cj2)*(x1815)))+(((IkReal(-1.00000000000000))*(sj1)*(x1812)*(x1815)))+(((sj1)*(sj2)*(x1814)))+(((IkReal(-1.00000000000000))*(cj1)*(x1814)*(x1817)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(cj1)*(x1812)*(x1814)))+(((cj2)*(sj1)*(x1815)))+(((cj2)*(x1816)))+(((IkReal(-1.00000000000000))*(x1812)*(x1813)))+(((cj1)*(sj2)*(x1815)))+(((IkReal(-1.00000000000000))*(sj1)*(x1814)*(x1817)))), ((((IkReal(-1.00000000000000))*(x1813)*(x1817)))+(((IkReal(-1.00000000000000))*(x1812)*(x1816)))+(((cj1)*(cj2)*(x1815)))+(((IkReal(-1.00000000000000))*(sj1)*(x1812)*(x1815)))+(((sj1)*(sj2)*(x1814)))+(((IkReal(-1.00000000000000))*(cj1)*(x1814)*(x1817)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1818=((r02)*(sj2));
IkReal x1819=((IkReal(1.00000000000000))*(sj2));
IkReal x1820=((r00)*(sj0));
IkReal x1821=((cj1)*(cj2));
IkReal x1822=((cj0)*(r01));
IkReal x1823=((sj1)*(x1822));
IkReal x1824=((IkReal(1.00000000000000))*(cj2)*(x1820));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj1)*(x1819)*(x1820)))+(((cj1)*(sj2)*(x1822)))+(IKsin(j5))+(((sj1)*(x1818)))+(((cj2)*(x1823)))+(((IkReal(-1.00000000000000))*(r02)*(x1821)))+(((IkReal(-1.00000000000000))*(sj1)*(x1824))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1820)*(x1821)))+(((sj1)*(sj2)*(x1820)))+(((IkReal(-1.00000000000000))*(x1819)*(x1823)))+(IKcos(j5))+(((x1821)*(x1822)))+(((cj2)*(r02)*(sj1)))+(((cj1)*(x1818))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1825=((pz)*(sj1));
IkReal x1826=((cj0)*(py));
IkReal x1827=((IkReal(1.00000000000000))*(sj2));
IkReal x1828=((cj1)*(cj2));
IkReal x1829=((px)*(sj0));
IkReal x1830=((cj2)*(sj1));
IkReal x1831=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(-0.190890000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.209760000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((x1826)*(x1828)))+(((sj1)*(sj2)*(x1829)))+(((cj2)*(x1825)))+(((pz)*(x1831)))+(((IkReal(-1.00000000000000))*(sj1)*(x1826)*(x1827)))+(((IkReal(-0.521670000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(x1828)*(x1829))));
evalcond[4]=((IkReal(0.141510000000000))+(((x1826)*(x1831)))+(((x1826)*(x1830)))+(((IkReal(-1.00000000000000))*(x1829)*(x1830)))+(((IkReal(-1.00000000000000))*(pz)*(x1828)))+(((IkReal(0.521670000000000))*(cj2)))+(((sj2)*(x1825)))+(((IkReal(0.00982000000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(cj1)*(x1827)*(x1829))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1832=((cj2)*(sj1));
IkReal x1833=((IkReal(1.00000000000000))*(r02));
IkReal x1834=((cj0)*(r01));
IkReal x1835=((sj1)*(sj2));
IkReal x1836=((cj1)*(cj2));
IkReal x1837=((cj1)*(sj2));
IkReal x1838=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((IkReal(-1.00000000000000))*(x1832)*(x1838)))+(((IkReal(-1.00000000000000))*(x1833)*(x1836)))+(((IkReal(-1.00000000000000))*(x1837)*(x1838)))+(((r02)*(x1835)))+(((x1832)*(x1834)))+(((x1834)*(x1837))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x1834)*(x1836)))+(((IkReal(-1.00000000000000))*(x1832)*(x1833)))+(((IkReal(-1.00000000000000))*(x1833)*(x1837)))+(((IkReal(-1.00000000000000))*(x1835)*(x1838)))+(((r00)*(sj0)*(x1836)))+(((x1834)*(x1835))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x1832)*(x1838)))+(((IkReal(-1.00000000000000))*(x1833)*(x1836)))+(((IkReal(-1.00000000000000))*(x1837)*(x1838)))+(((r02)*(x1835)))+(((x1832)*(x1834)))+(((x1834)*(x1837)))))+IKsqr(((((IkReal(-1.00000000000000))*(x1834)*(x1836)))+(((IkReal(-1.00000000000000))*(x1832)*(x1833)))+(((IkReal(-1.00000000000000))*(x1833)*(x1837)))+(((IkReal(-1.00000000000000))*(x1835)*(x1838)))+(((r00)*(sj0)*(x1836)))+(((x1834)*(x1835)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x1832)*(x1838)))+(((IkReal(-1.00000000000000))*(x1833)*(x1836)))+(((IkReal(-1.00000000000000))*(x1837)*(x1838)))+(((r02)*(x1835)))+(((x1832)*(x1834)))+(((x1834)*(x1837)))), ((((IkReal(-1.00000000000000))*(x1834)*(x1836)))+(((IkReal(-1.00000000000000))*(x1832)*(x1833)))+(((IkReal(-1.00000000000000))*(x1833)*(x1837)))+(((IkReal(-1.00000000000000))*(x1835)*(x1838)))+(((r00)*(sj0)*(x1836)))+(((x1834)*(x1835)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1839=((r02)*(sj2));
IkReal x1840=((IkReal(1.00000000000000))*(sj2));
IkReal x1841=((r00)*(sj0));
IkReal x1842=((cj1)*(cj2));
IkReal x1843=((cj0)*(r01));
IkReal x1844=((sj1)*(x1843));
IkReal x1845=((IkReal(1.00000000000000))*(cj2)*(x1841));
evalcond[0]=((((sj1)*(x1839)))+(((IkReal(-1.00000000000000))*(sj1)*(x1845)))+(((cj2)*(x1844)))+(((IkReal(-1.00000000000000))*(cj1)*(x1840)*(x1841)))+(((cj1)*(sj2)*(x1843)))+(((IkReal(-1.00000000000000))*(r02)*(x1842)))+(((IkReal(-1.00000000000000))*(IKsin(j5)))));
evalcond[1]=((IKcos(j5))+(((cj2)*(r02)*(sj1)))+(((sj1)*(sj2)*(x1841)))+(((IkReal(-1.00000000000000))*(x1840)*(x1844)))+(((x1842)*(x1843)))+(((IkReal(-1.00000000000000))*(x1841)*(x1842)))+(((cj1)*(x1839))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1846=((IkReal(1.00000000000000))*(sj2));
IkReal x1847=((r02)*(sj1));
IkReal x1848=((cj0)*(r01));
IkReal x1849=((cj1)*(r02));
IkReal x1850=((r00)*(sj0));
IkReal x1851=((IkReal(1.00000000000000))*(cj2));
if( IKabs(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((cj1)*(sj2)*(x1850)))+(((IkReal(-1.00000000000000))*(sj1)*(x1848)*(x1851)))+(((cj2)*(sj1)*(x1850)))+(((cj2)*(x1849)))+(((IkReal(-1.00000000000000))*(cj1)*(x1846)*(x1848)))+(((IkReal(-1.00000000000000))*(x1846)*(x1847))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(cj1)*(x1848)*(x1851)))+(((cj1)*(cj2)*(x1850)))+(((IkReal(-1.00000000000000))*(sj1)*(x1846)*(x1850)))+(((sj1)*(sj2)*(x1848)))+(((IkReal(-1.00000000000000))*(x1846)*(x1849)))+(((IkReal(-1.00000000000000))*(x1847)*(x1851))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((cj1)*(sj2)*(x1850)))+(((IkReal(-1.00000000000000))*(sj1)*(x1848)*(x1851)))+(((cj2)*(sj1)*(x1850)))+(((cj2)*(x1849)))+(((IkReal(-1.00000000000000))*(cj1)*(x1846)*(x1848)))+(((IkReal(-1.00000000000000))*(x1846)*(x1847)))))))+IKsqr(((((IkReal(-1.00000000000000))*(cj1)*(x1848)*(x1851)))+(((cj1)*(cj2)*(x1850)))+(((IkReal(-1.00000000000000))*(sj1)*(x1846)*(x1850)))+(((sj1)*(sj2)*(x1848)))+(((IkReal(-1.00000000000000))*(x1846)*(x1849)))+(((IkReal(-1.00000000000000))*(x1847)*(x1851)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((cj1)*(sj2)*(x1850)))+(((IkReal(-1.00000000000000))*(sj1)*(x1848)*(x1851)))+(((cj2)*(sj1)*(x1850)))+(((cj2)*(x1849)))+(((IkReal(-1.00000000000000))*(cj1)*(x1846)*(x1848)))+(((IkReal(-1.00000000000000))*(x1846)*(x1847)))))), ((((IkReal(-1.00000000000000))*(cj1)*(x1848)*(x1851)))+(((cj1)*(cj2)*(x1850)))+(((IkReal(-1.00000000000000))*(sj1)*(x1846)*(x1850)))+(((sj1)*(sj2)*(x1848)))+(((IkReal(-1.00000000000000))*(x1846)*(x1849)))+(((IkReal(-1.00000000000000))*(x1847)*(x1851)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1852=IKsin(j5);
IkReal x1853=((r02)*(sj2));
IkReal x1854=((IkReal(1.00000000000000))*(sj2));
IkReal x1855=((r00)*(sj0));
IkReal x1856=((IkReal(1.00000000000000))*(cj2));
IkReal x1857=((cj0)*(r01)*(sj1));
IkReal x1858=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x1852)))+(((cj0)*(r00))));
evalcond[1]=((((sj4)*(x1852)))+(((IkReal(-1.00000000000000))*(sj1)*(x1855)*(x1856)))+(((cj2)*(x1857)))+(((IkReal(-1.00000000000000))*(cj1)*(x1854)*(x1855)))+(((sj1)*(x1853)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1856)))+(((sj2)*(x1858))));
evalcond[2]=((((sj1)*(sj2)*(x1855)))+(((cj1)*(x1853)))+(((cj2)*(x1858)))+(IKcos(j5))+(((IkReal(-1.00000000000000))*(cj1)*(x1855)*(x1856)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1854)*(x1857))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1859=((cj0)*(r01));
IkReal x1860=((sj1)*(sj2));
IkReal x1861=((IkReal(1.00000000000000))*(cj1));
IkReal x1862=((r00)*(sj0));
if( IKabs(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(cj2)*(x1859)*(x1861)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1861)))+(((cj1)*(cj2)*(x1862)))+(((x1859)*(x1860)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1860)*(x1862))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))))+IKsqr(((((IkReal(-1.00000000000000))*(cj2)*(x1859)*(x1861)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1861)))+(((cj1)*(cj2)*(x1862)))+(((x1859)*(x1860)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1860)*(x1862)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))), ((((IkReal(-1.00000000000000))*(cj2)*(x1859)*(x1861)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1861)))+(((cj1)*(cj2)*(x1862)))+(((x1859)*(x1860)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1860)*(x1862)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1863=IKsin(j5);
IkReal x1864=((r02)*(sj2));
IkReal x1865=((IkReal(1.00000000000000))*(sj2));
IkReal x1866=((r00)*(sj0));
IkReal x1867=((IkReal(1.00000000000000))*(cj2));
IkReal x1868=((cj0)*(r01)*(sj1));
IkReal x1869=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x1863)))+(((cj0)*(r00))));
evalcond[1]=((((sj4)*(x1863)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1867)))+(((IkReal(-1.00000000000000))*(cj1)*(x1865)*(x1866)))+(((sj2)*(x1869)))+(((IkReal(-1.00000000000000))*(sj1)*(x1866)*(x1867)))+(((sj1)*(x1864)))+(((cj2)*(x1868))));
evalcond[2]=((((cj1)*(x1864)))+(((IkReal(-1.00000000000000))*(cj1)*(x1866)*(x1867)))+(((IkReal(-1.00000000000000))*(x1865)*(x1868)))+(IKcos(j5))+(((cj2)*(r02)*(sj1)))+(((sj1)*(sj2)*(x1866)))+(((cj2)*(x1869))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1870=((cj1)*(sj2));
IkReal x1871=((px)*(sj0));
IkReal x1872=((sj1)*(sj2));
IkReal x1873=((cj0)*(py));
IkReal x1874=((cj2)*(pz));
IkReal x1875=((IkReal(1.00000000000000))*(cj1));
IkReal x1876=((cj2)*(x1873));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(0.000790000000000000))*(cj4)))+(((cj0)*(px)))+(((py)*(sj0)))+(((IkReal(0.190890000000000))*(sj4))));
evalcond[2]=((IkReal(-0.312420000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(cj2)*(x1871)*(x1875)))+(((x1871)*(x1872)))+(((sj1)*(x1874)))+(((cj1)*(x1876)))+(((pz)*(x1870)))+(((IkReal(-1.00000000000000))*(x1872)*(x1873)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[3]=((IkReal(-0.125720000000000))+(((IkReal(-1.00000000000000))*(x1874)*(x1875)))+(((IkReal(0.000790000000000000))*(sj4)))+(((IkReal(0.521670000000000))*(cj2)))+(((sj1)*(x1876)))+(((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x1871)))+(((IkReal(-1.00000000000000))*(x1870)*(x1871)))+(((pz)*(x1872)))+(((IkReal(-0.190890000000000))*(cj4)))+(((x1870)*(x1873)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x1877=((IkReal(1.00000000000000))*(sj0));
IkReal x1878=((cj1)*(sj2));
IkReal x1879=((sj1)*(sj2));
IkReal x1880=((cj2)*(sj1));
IkReal x1881=((cj0)*(r01));
IkReal x1882=((cj0)*(py));
IkReal x1883=((cj2)*(x1882));
IkReal x1884=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.000790000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((r02)*(x1879)))+(((x1880)*(x1881)))+(((IkReal(-1.00000000000000))*(r02)*(x1884)))+(((x1878)*(x1881)))+(((IkReal(-1.00000000000000))*(r00)*(x1877)*(x1880)))+(((IkReal(-1.00000000000000))*(r00)*(x1877)*(x1878))));
evalcond[3]=((IkReal(-0.312420000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x1879)*(x1882)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(px)*(x1877)))+(((pz)*(x1880)))+(((cj1)*(x1883)))+(((pz)*(x1878)))+(((px)*(sj0)*(x1879)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(-0.316610000000000))+(((IkReal(-1.00000000000000))*(px)*(x1877)*(x1880)))+(((x1880)*(x1882)))+(((x1878)*(x1882)))+(((IkReal(0.521670000000000))*(cj2)))+(((pz)*(x1879)))+(((IkReal(-1.00000000000000))*(px)*(x1877)*(x1878)))+(((IkReal(-1.00000000000000))*(pz)*(x1884)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1885=((sj1)*(sj2));
IkReal x1886=((cj0)*(r01));
IkReal x1887=((r00)*(sj0));
IkReal x1888=((cj1)*(cj2));
if( IKabs(((((r01)*(sj0)))+(((cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x1887)*(x1888)))+(((IkReal(-1.00000000000000))*(x1885)*(x1886)))+(((cj2)*(r02)*(sj1)))+(((x1885)*(x1887)))+(((x1886)*(x1888)))+(((cj1)*(r02)*(sj2))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r01)*(sj0)))+(((cj0)*(r00)))))+IKsqr(((((IkReal(-1.00000000000000))*(x1887)*(x1888)))+(((IkReal(-1.00000000000000))*(x1885)*(x1886)))+(((cj2)*(r02)*(sj1)))+(((x1885)*(x1887)))+(((x1886)*(x1888)))+(((cj1)*(r02)*(sj2)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((r01)*(sj0)))+(((cj0)*(r00)))), ((((IkReal(-1.00000000000000))*(x1887)*(x1888)))+(((IkReal(-1.00000000000000))*(x1885)*(x1886)))+(((cj2)*(r02)*(sj1)))+(((x1885)*(x1887)))+(((x1886)*(x1888)))+(((cj1)*(r02)*(sj2)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1889=((sj1)*(sj2));
IkReal x1890=((cj0)*(r01));
IkReal x1891=((r00)*(sj0));
IkReal x1892=((cj1)*(cj2));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1891)*(x1892)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((IkReal(-1.00000000000000))*(x1889)*(x1890)))+(((cj2)*(r02)*(sj1)))+(((x1889)*(x1891)))+(((cj1)*(r02)*(sj2)))+(((x1890)*(x1892))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1893=((IkReal(1.00000000000000))*(sj0));
IkReal x1894=((cj1)*(sj2));
IkReal x1895=((sj1)*(sj2));
IkReal x1896=((cj2)*(sj1));
IkReal x1897=((cj0)*(r01));
IkReal x1898=((cj0)*(py));
IkReal x1899=((cj2)*(x1898));
IkReal x1900=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.000790000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((r02)*(x1895)))+(((x1896)*(x1897)))+(((IkReal(-1.00000000000000))*(r00)*(x1893)*(x1894)))+(((IkReal(-1.00000000000000))*(r00)*(x1893)*(x1896)))+(((x1894)*(x1897)))+(((IkReal(-1.00000000000000))*(r02)*(x1900))));
evalcond[3]=((IkReal(-0.312420000000000))+(((px)*(sj0)*(x1895)))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x1895)*(x1898)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(px)*(x1893)))+(((cj1)*(x1899)))+(((pz)*(x1896)))+(((pz)*(x1894)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(0.0651700000000000))+(((IkReal(-1.00000000000000))*(pz)*(x1900)))+(((x1896)*(x1898)))+(((IkReal(-1.00000000000000))*(px)*(x1893)*(x1896)))+(((IkReal(-1.00000000000000))*(px)*(x1893)*(x1894)))+(((pz)*(x1895)))+(((IkReal(0.521670000000000))*(cj2)))+(((x1894)*(x1898)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1901=((r00)*(sj0));
IkReal x1902=((cj1)*(cj2));
IkReal x1903=((sj1)*(sj2));
IkReal x1904=((cj0)*(r01));
if( IKabs(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x1901)*(x1903)))+(((IkReal(-1.00000000000000))*(x1903)*(x1904)))+(((IkReal(-1.00000000000000))*(x1901)*(x1902)))+(((cj2)*(r02)*(sj1)))+(((x1902)*(x1904)))+(((cj1)*(r02)*(sj2))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))))+IKsqr(((((x1901)*(x1903)))+(((IkReal(-1.00000000000000))*(x1903)*(x1904)))+(((IkReal(-1.00000000000000))*(x1901)*(x1902)))+(((cj2)*(r02)*(sj1)))+(((x1902)*(x1904)))+(((cj1)*(r02)*(sj2)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))), ((((x1901)*(x1903)))+(((IkReal(-1.00000000000000))*(x1903)*(x1904)))+(((IkReal(-1.00000000000000))*(x1901)*(x1902)))+(((cj2)*(r02)*(sj1)))+(((x1902)*(x1904)))+(((cj1)*(r02)*(sj2)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1905=((sj1)*(sj2));
IkReal x1906=((cj0)*(r01));
IkReal x1907=((r00)*(sj0));
IkReal x1908=((cj1)*(cj2));
evalcond[0]=((((r01)*(sj0)))+(IKsin(j5))+(((cj0)*(r00))));
evalcond[1]=((((x1905)*(x1907)))+(((IkReal(-1.00000000000000))*(x1905)*(x1906)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((x1906)*(x1908)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1907)*(x1908)))+(((cj1)*(r02)*(sj2))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1909=((pz)*(sj1));
IkReal x1910=((cj0)*(py));
IkReal x1911=((IkReal(1.00000000000000))*(sj2));
IkReal x1912=((cj1)*(cj2));
IkReal x1913=((px)*(sj0));
IkReal x1914=((cj2)*(sj1));
IkReal x1915=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(0.190890000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.312420000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((sj1)*(sj2)*(x1913)))+(((IkReal(-1.00000000000000))*(x1912)*(x1913)))+(((pz)*(x1915)))+(((x1910)*(x1912)))+(((cj2)*(x1909)))+(((IkReal(-1.00000000000000))*(sj1)*(x1910)*(x1911)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(-0.124930000000000))+(((IkReal(-1.00000000000000))*(x1913)*(x1914)))+(((x1910)*(x1914)))+(((x1910)*(x1915)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(pz)*(x1912)))+(((IkReal(-1.00000000000000))*(cj1)*(x1911)*(x1913)))+(((IkReal(0.00982000000000000))*(sj2)))+(((sj2)*(x1909))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1916=((r02)*(sj2));
IkReal x1917=((IkReal(1.00000000000000))*(sj2));
IkReal x1918=((r00)*(sj0));
IkReal x1919=((cj1)*(cj2));
IkReal x1920=((cj0)*(r01));
IkReal x1921=((sj1)*(x1920));
IkReal x1922=((IkReal(1.00000000000000))*(cj2)*(x1918));
if( IKabs(((((IkReal(-1.00000000000000))*(cj1)*(x1917)*(x1918)))+(((cj2)*(x1921)))+(((sj1)*(x1916)))+(((IkReal(-1.00000000000000))*(sj1)*(x1922)))+(((IkReal(-1.00000000000000))*(r02)*(x1919)))+(((cj1)*(sj2)*(x1920))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((sj1)*(sj2)*(x1918)))+(((IkReal(-1.00000000000000))*(x1918)*(x1919)))+(((IkReal(-1.00000000000000))*(x1917)*(x1921)))+(((cj1)*(x1916)))+(((cj2)*(r02)*(sj1)))+(((x1919)*(x1920))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(cj1)*(x1917)*(x1918)))+(((cj2)*(x1921)))+(((sj1)*(x1916)))+(((IkReal(-1.00000000000000))*(sj1)*(x1922)))+(((IkReal(-1.00000000000000))*(r02)*(x1919)))+(((cj1)*(sj2)*(x1920)))))+IKsqr(((((sj1)*(sj2)*(x1918)))+(((IkReal(-1.00000000000000))*(x1918)*(x1919)))+(((IkReal(-1.00000000000000))*(x1917)*(x1921)))+(((cj1)*(x1916)))+(((cj2)*(r02)*(sj1)))+(((x1919)*(x1920)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(cj1)*(x1917)*(x1918)))+(((cj2)*(x1921)))+(((sj1)*(x1916)))+(((IkReal(-1.00000000000000))*(sj1)*(x1922)))+(((IkReal(-1.00000000000000))*(r02)*(x1919)))+(((cj1)*(sj2)*(x1920)))), ((((sj1)*(sj2)*(x1918)))+(((IkReal(-1.00000000000000))*(x1918)*(x1919)))+(((IkReal(-1.00000000000000))*(x1917)*(x1921)))+(((cj1)*(x1916)))+(((cj2)*(r02)*(sj1)))+(((x1919)*(x1920)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1923=((r02)*(sj2));
IkReal x1924=((IkReal(1.00000000000000))*(sj2));
IkReal x1925=((r00)*(sj0));
IkReal x1926=((cj1)*(cj2));
IkReal x1927=((cj0)*(r01));
IkReal x1928=((sj1)*(x1927));
IkReal x1929=((IkReal(1.00000000000000))*(cj2)*(x1925));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj1)*(x1924)*(x1925)))+(((IkReal(-1.00000000000000))*(r02)*(x1926)))+(((cj2)*(x1928)))+(((IkReal(-1.00000000000000))*(sj1)*(x1929)))+(((cj1)*(sj2)*(x1927)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((sj1)*(x1923))));
evalcond[1]=((((cj1)*(x1923)))+(((IkReal(-1.00000000000000))*(x1925)*(x1926)))+(((sj1)*(sj2)*(x1925)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1924)*(x1928)))+(((x1926)*(x1927))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1930=((pz)*(sj1));
IkReal x1931=((cj0)*(py));
IkReal x1932=((IkReal(1.00000000000000))*(sj2));
IkReal x1933=((cj1)*(cj2));
IkReal x1934=((px)*(sj0));
IkReal x1935=((cj2)*(sj1));
IkReal x1936=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(-0.190890000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.312420000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((sj1)*(sj2)*(x1934)))+(((x1931)*(x1933)))+(((pz)*(x1936)))+(((cj2)*(x1930)))+(((IkReal(-1.00000000000000))*(sj1)*(x1931)*(x1932)))+(((IkReal(-1.00000000000000))*(x1933)*(x1934)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(-0.126510000000000))+(((sj2)*(x1930)))+(((IkReal(-1.00000000000000))*(cj1)*(x1932)*(x1934)))+(((IkReal(-1.00000000000000))*(pz)*(x1933)))+(((x1931)*(x1935)))+(((x1931)*(x1936)))+(((IkReal(-1.00000000000000))*(x1934)*(x1935)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1937=((IkReal(1.00000000000000))*(sj2));
IkReal x1938=((r02)*(sj1));
IkReal x1939=((cj0)*(r01));
IkReal x1940=((IkReal(1.00000000000000))*(cj2));
IkReal x1941=((cj1)*(r02));
IkReal x1942=((cj1)*(r00)*(sj0));
IkReal x1943=((r00)*(sj0)*(sj1));
if( IKabs(((((IkReal(-1.00000000000000))*(cj1)*(x1937)*(x1939)))+(((IkReal(-1.00000000000000))*(x1937)*(x1938)))+(((sj2)*(x1942)))+(((cj2)*(x1943)))+(((cj2)*(x1941)))+(((IkReal(-1.00000000000000))*(sj1)*(x1939)*(x1940))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((sj2)*(x1943)))+(((sj2)*(x1941)))+(((IkReal(-1.00000000000000))*(x1940)*(x1942)))+(((cj1)*(cj2)*(x1939)))+(((cj2)*(x1938)))+(((IkReal(-1.00000000000000))*(sj1)*(x1937)*(x1939))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(cj1)*(x1937)*(x1939)))+(((IkReal(-1.00000000000000))*(x1937)*(x1938)))+(((sj2)*(x1942)))+(((cj2)*(x1943)))+(((cj2)*(x1941)))+(((IkReal(-1.00000000000000))*(sj1)*(x1939)*(x1940)))))+IKsqr(((((sj2)*(x1943)))+(((sj2)*(x1941)))+(((IkReal(-1.00000000000000))*(x1940)*(x1942)))+(((cj1)*(cj2)*(x1939)))+(((cj2)*(x1938)))+(((IkReal(-1.00000000000000))*(sj1)*(x1937)*(x1939)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(cj1)*(x1937)*(x1939)))+(((IkReal(-1.00000000000000))*(x1937)*(x1938)))+(((sj2)*(x1942)))+(((cj2)*(x1943)))+(((cj2)*(x1941)))+(((IkReal(-1.00000000000000))*(sj1)*(x1939)*(x1940)))), ((((sj2)*(x1943)))+(((sj2)*(x1941)))+(((IkReal(-1.00000000000000))*(x1940)*(x1942)))+(((cj1)*(cj2)*(x1939)))+(((cj2)*(x1938)))+(((IkReal(-1.00000000000000))*(sj1)*(x1937)*(x1939)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1944=((r02)*(sj2));
IkReal x1945=((IkReal(1.00000000000000))*(sj2));
IkReal x1946=((r00)*(sj0));
IkReal x1947=((cj1)*(cj2));
IkReal x1948=((cj0)*(r01));
IkReal x1949=((sj1)*(x1948));
IkReal x1950=((IkReal(1.00000000000000))*(cj2)*(x1946));
evalcond[0]=((((cj1)*(sj2)*(x1948)))+(((IkReal(-1.00000000000000))*(sj1)*(x1950)))+(((cj2)*(x1949)))+(IKsin(j5))+(((sj1)*(x1944)))+(((IkReal(-1.00000000000000))*(r02)*(x1947)))+(((IkReal(-1.00000000000000))*(cj1)*(x1945)*(x1946))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1945)*(x1949)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((cj1)*(x1944)))+(((cj2)*(r02)*(sj1)))+(((sj1)*(sj2)*(x1946)))+(((x1947)*(x1948)))+(((IkReal(-1.00000000000000))*(x1946)*(x1947))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1951=((r02)*(sj2));
IkReal x1952=((IkReal(1.00000000000000))*(sj2));
IkReal x1953=((r00)*(sj0));
IkReal x1954=((cj1)*(cj2));
IkReal x1955=((cj0)*(r01));
IkReal x1956=((sj1)*(x1955));
IkReal x1957=((IkReal(1.00000000000000))*(cj2)*(x1953));
if( IKabs(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((cj1)*(sj2)*(x1955)))+(((IkReal(-1.00000000000000))*(sj1)*(x1957)))+(((cj2)*(x1956)))+(((sj1)*(x1951)))+(((IkReal(-1.00000000000000))*(r02)*(x1954)))+(((IkReal(-1.00000000000000))*(cj1)*(x1952)*(x1953))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x1952)*(x1956)))+(((cj1)*(x1951)))+(((x1954)*(x1955)))+(((cj2)*(r02)*(sj1)))+(((sj1)*(sj2)*(x1953)))+(((IkReal(-1.00000000000000))*(x1953)*(x1954))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((cj1)*(sj2)*(x1955)))+(((IkReal(-1.00000000000000))*(sj1)*(x1957)))+(((cj2)*(x1956)))+(((sj1)*(x1951)))+(((IkReal(-1.00000000000000))*(r02)*(x1954)))+(((IkReal(-1.00000000000000))*(cj1)*(x1952)*(x1953)))))))+IKsqr(((((IkReal(-1.00000000000000))*(x1952)*(x1956)))+(((cj1)*(x1951)))+(((x1954)*(x1955)))+(((cj2)*(r02)*(sj1)))+(((sj1)*(sj2)*(x1953)))+(((IkReal(-1.00000000000000))*(x1953)*(x1954)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((cj1)*(sj2)*(x1955)))+(((IkReal(-1.00000000000000))*(sj1)*(x1957)))+(((cj2)*(x1956)))+(((sj1)*(x1951)))+(((IkReal(-1.00000000000000))*(r02)*(x1954)))+(((IkReal(-1.00000000000000))*(cj1)*(x1952)*(x1953)))))), ((((IkReal(-1.00000000000000))*(x1952)*(x1956)))+(((cj1)*(x1951)))+(((x1954)*(x1955)))+(((cj2)*(r02)*(sj1)))+(((sj1)*(sj2)*(x1953)))+(((IkReal(-1.00000000000000))*(x1953)*(x1954)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1958=IKsin(j5);
IkReal x1959=((r02)*(sj2));
IkReal x1960=((IkReal(1.00000000000000))*(sj2));
IkReal x1961=((r00)*(sj0));
IkReal x1962=((IkReal(1.00000000000000))*(cj2));
IkReal x1963=((IkReal(1.00000000000000))*(x1958));
IkReal x1964=((cj0)*(r01)*(sj1));
IkReal x1965=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x1963)))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj1)*(x1961)*(x1962)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1962)))+(((sj2)*(x1965)))+(((IkReal(-1.00000000000000))*(sj4)*(x1963)))+(((cj2)*(x1964)))+(((IkReal(-1.00000000000000))*(cj1)*(x1960)*(x1961)))+(((sj1)*(x1959))));
evalcond[2]=((((IkReal(-1.00000000000000))*(IKcos(j5))))+(((cj2)*(x1965)))+(((cj1)*(x1959)))+(((IkReal(-1.00000000000000))*(cj1)*(x1961)*(x1962)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1960)*(x1964)))+(((sj1)*(sj2)*(x1961))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1966=((sj1)*(sj2));
IkReal x1967=((cj0)*(r01));
IkReal x1968=((r00)*(sj0));
IkReal x1969=((cj1)*(cj2));
if( IKabs(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1966)*(x1967)))+(((x1966)*(x1968)))+(((IkReal(-1.00000000000000))*(x1968)*(x1969)))+(((cj1)*(r02)*(sj2)))+(((x1967)*(x1969))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))))+IKsqr(((((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1966)*(x1967)))+(((x1966)*(x1968)))+(((IkReal(-1.00000000000000))*(x1968)*(x1969)))+(((cj1)*(r02)*(sj2)))+(((x1967)*(x1969)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))), ((((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1966)*(x1967)))+(((x1966)*(x1968)))+(((IkReal(-1.00000000000000))*(x1968)*(x1969)))+(((cj1)*(r02)*(sj2)))+(((x1967)*(x1969)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1970=IKsin(j5);
IkReal x1971=((r02)*(sj2));
IkReal x1972=((IkReal(1.00000000000000))*(sj2));
IkReal x1973=((r00)*(sj0));
IkReal x1974=((IkReal(1.00000000000000))*(cj2));
IkReal x1975=((IkReal(1.00000000000000))*(x1970));
IkReal x1976=((cj0)*(r01)*(sj1));
IkReal x1977=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x1975)))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj1)*(x1973)*(x1974)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1974)))+(((sj2)*(x1977)))+(((IkReal(-1.00000000000000))*(sj4)*(x1975)))+(((cj2)*(x1976)))+(((sj1)*(x1971)))+(((IkReal(-1.00000000000000))*(cj1)*(x1972)*(x1973))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj1)*(x1973)*(x1974)))+(((cj1)*(x1971)))+(((cj2)*(x1977)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((IkReal(-1.00000000000000))*(x1972)*(x1976)))+(((cj2)*(r02)*(sj1)))+(((sj1)*(sj2)*(x1973))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1978=((cj1)*(sj2));
IkReal x1979=((px)*(sj0));
IkReal x1980=((sj1)*(sj2));
IkReal x1981=((cj0)*(py));
IkReal x1982=((cj2)*(pz));
IkReal x1983=((IkReal(1.00000000000000))*(cj1));
IkReal x1984=((cj2)*(x1981));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(0.000790000000000000))*(cj4)))+(((cj0)*(px)))+(((py)*(sj0)))+(((IkReal(0.190890000000000))*(sj4))));
evalcond[2]=((IkReal(-0.394310000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(0.000790000000000000))*(sj4)))+(((pz)*(x1978)))+(((sj1)*(x1982)))+(((x1979)*(x1980)))+(((cj1)*(x1984)))+(((IkReal(-1.00000000000000))*(cj2)*(x1979)*(x1983)))+(((IkReal(-0.190890000000000))*(cj4)))+(((IkReal(-1.00000000000000))*(x1980)*(x1981)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[3]=((IkReal(0.0588300000000000))+(((IkReal(-1.00000000000000))*(x1978)*(x1979)))+(((x1978)*(x1981)))+(((IkReal(0.521670000000000))*(cj2)))+(((pz)*(x1980)))+(((sj1)*(x1984)))+(((IkReal(-1.00000000000000))*(x1982)*(x1983)))+(((IkReal(0.00982000000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x1979))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x1985=((IkReal(1.00000000000000))*(sj2));
IkReal x1986=((px)*(sj0));
IkReal x1987=((pz)*(sj2));
IkReal x1988=((cj0)*(sj1));
IkReal x1989=((cj1)*(sj2));
IkReal x1990=((sj1)*(sj2));
IkReal x1991=((cj2)*(sj1));
IkReal x1992=((r00)*(sj0));
IkReal x1993=((cj0)*(cj1)*(cj2));
IkReal x1994=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.000790000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((r02)*(x1991)))+(((IkReal(-1.00000000000000))*(r01)*(x1985)*(x1988)))+(((IkReal(-1.00000000000000))*(x1992)*(x1994)))+(((r01)*(x1993)))+(((x1990)*(x1992)))+(((r02)*(x1989))));
evalcond[3]=((IkReal(-0.585200000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x1986)*(x1994)))+(((IkReal(-1.00000000000000))*(py)*(x1985)*(x1988)))+(((x1986)*(x1990)))+(((cj1)*(x1987)))+(((pz)*(x1991)))+(((IkReal(-0.521670000000000))*(sj2)))+(((py)*(x1993))));
evalcond[4]=((IkReal(0.0588300000000000))+(((cj0)*(py)*(x1989)))+(((cj2)*(py)*(x1988)))+(((IkReal(-1.00000000000000))*(cj1)*(x1985)*(x1986)))+(((IkReal(0.521670000000000))*(cj2)))+(((sj1)*(x1987)))+(((IkReal(-1.00000000000000))*(x1986)*(x1991)))+(((IkReal(-1.00000000000000))*(pz)*(x1994)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1995=((IkReal(1.00000000000000))*(sj2));
IkReal x1996=((cj0)*(r01));
IkReal x1997=((r00)*(sj0));
IkReal x1998=((cj2)*(sj1));
if( IKabs(((((r01)*(sj0)))+(((cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1995)))+(((cj1)*(sj2)*(x1997)))+(((IkReal(-1.00000000000000))*(x1996)*(x1998)))+(((IkReal(-1.00000000000000))*(cj1)*(x1995)*(x1996)))+(((cj1)*(cj2)*(r02)))+(((x1997)*(x1998))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r01)*(sj0)))+(((cj0)*(r00)))))+IKsqr(((((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1995)))+(((cj1)*(sj2)*(x1997)))+(((IkReal(-1.00000000000000))*(x1996)*(x1998)))+(((IkReal(-1.00000000000000))*(cj1)*(x1995)*(x1996)))+(((cj1)*(cj2)*(r02)))+(((x1997)*(x1998)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((r01)*(sj0)))+(((cj0)*(r00)))), ((((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1995)))+(((cj1)*(sj2)*(x1997)))+(((IkReal(-1.00000000000000))*(x1996)*(x1998)))+(((IkReal(-1.00000000000000))*(cj1)*(x1995)*(x1996)))+(((cj1)*(cj2)*(r02)))+(((x1997)*(x1998)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1999=((cj2)*(sj1));
IkReal x2000=((cj0)*(r01));
IkReal x2001=((cj1)*(sj2));
IkReal x2002=((IkReal(1.00000000000000))*(r00)*(sj0));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((cj0)*(r00))));
evalcond[1]=((((x1999)*(x2000)))+(((x2000)*(x2001)))+(((IkReal(-1.00000000000000))*(x2001)*(x2002)))+(IKcos(j5))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((r02)*(sj1)*(sj2)))+(((IkReal(-1.00000000000000))*(x1999)*(x2002))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x2003=((IkReal(1.00000000000000))*(sj2));
IkReal x2004=((px)*(sj0));
IkReal x2005=((pz)*(sj2));
IkReal x2006=((cj0)*(sj1));
IkReal x2007=((cj1)*(sj2));
IkReal x2008=((sj1)*(sj2));
IkReal x2009=((cj2)*(sj1));
IkReal x2010=((r00)*(sj0));
IkReal x2011=((cj0)*(cj1)*(cj2));
IkReal x2012=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.000790000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2010)*(x2012)))+(((r02)*(x2009)))+(((r02)*(x2007)))+(((r01)*(x2011)))+(((x2008)*(x2010)))+(((IkReal(-1.00000000000000))*(r01)*(x2003)*(x2006))));
evalcond[3]=((IkReal(-0.203420000000000))+(((py)*(x2011)))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(py)*(x2003)*(x2006)))+(((IkReal(-1.00000000000000))*(x2004)*(x2012)))+(((pz)*(x2009)))+(((x2004)*(x2008)))+(((IkReal(-0.521670000000000))*(sj2)))+(((cj1)*(x2005))));
evalcond[4]=((IkReal(0.0588300000000000))+(((IkReal(-1.00000000000000))*(pz)*(x2012)))+(((IkReal(-1.00000000000000))*(cj1)*(x2003)*(x2004)))+(((cj0)*(py)*(x2007)))+(((IkReal(0.521670000000000))*(cj2)))+(((sj1)*(x2005)))+(((cj2)*(py)*(x2006)))+(((IkReal(-1.00000000000000))*(x2004)*(x2009)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2013=((IkReal(1.00000000000000))*(sj2));
IkReal x2014=((cj0)*(r01));
IkReal x2015=((r00)*(sj0));
IkReal x2016=((cj2)*(sj1));
if( IKabs(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x2015)*(x2016)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x2013)))+(((IkReal(-1.00000000000000))*(cj1)*(x2013)*(x2014)))+(((cj1)*(cj2)*(r02)))+(((cj1)*(sj2)*(x2015)))+(((IkReal(-1.00000000000000))*(x2014)*(x2016))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))))+IKsqr(((((x2015)*(x2016)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x2013)))+(((IkReal(-1.00000000000000))*(cj1)*(x2013)*(x2014)))+(((cj1)*(cj2)*(r02)))+(((cj1)*(sj2)*(x2015)))+(((IkReal(-1.00000000000000))*(x2014)*(x2016)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))), ((((x2015)*(x2016)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x2013)))+(((IkReal(-1.00000000000000))*(cj1)*(x2013)*(x2014)))+(((cj1)*(cj2)*(r02)))+(((cj1)*(sj2)*(x2015)))+(((IkReal(-1.00000000000000))*(x2014)*(x2016)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x2017=((cj2)*(sj1));
IkReal x2018=((cj0)*(r01));
IkReal x2019=((cj1)*(sj2));
IkReal x2020=((IkReal(1.00000000000000))*(r00)*(sj0));
evalcond[0]=((((r01)*(sj0)))+(IKsin(j5))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2017)*(x2020)))+(((IkReal(-1.00000000000000))*(x2019)*(x2020)))+(IKcos(j5))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((x2017)*(x2018)))+(((r02)*(sj1)*(sj2)))+(((x2018)*(x2019))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x2021=((pz)*(sj1));
IkReal x2022=((cj0)*(py));
IkReal x2023=((IkReal(1.00000000000000))*(sj2));
IkReal x2024=((cj1)*(cj2));
IkReal x2025=((px)*(sj0));
IkReal x2026=((cj2)*(sj1));
IkReal x2027=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(0.190890000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.393520000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x2024)*(x2025)))+(((IkReal(-1.00000000000000))*(sj1)*(x2022)*(x2023)))+(((x2022)*(x2024)))+(((pz)*(x2027)))+(((cj2)*(x2021)))+(((IkReal(-0.521670000000000))*(sj2)))+(((sj1)*(sj2)*(x2025))));
evalcond[4]=((IkReal(0.0588300000000000))+(((IkReal(-1.00000000000000))*(pz)*(x2024)))+(((sj2)*(x2021)))+(((x2022)*(x2027)))+(((x2022)*(x2026)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x2025)*(x2026)))+(((IkReal(0.00982000000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(cj1)*(x2023)*(x2025))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2028=((IkReal(1.00000000000000))*(sj2));
IkReal x2029=((r02)*(sj1));
IkReal x2030=((cj0)*(r01));
IkReal x2031=((IkReal(1.00000000000000))*(cj2));
IkReal x2032=((cj1)*(r02));
IkReal x2033=((cj1)*(r00)*(sj0));
IkReal x2034=((r00)*(sj0)*(sj1));
if( IKabs(((((sj2)*(x2034)))+(((sj2)*(x2032)))+(((IkReal(-1.00000000000000))*(sj1)*(x2028)*(x2030)))+(((cj1)*(cj2)*(x2030)))+(((cj2)*(x2029)))+(((IkReal(-1.00000000000000))*(x2031)*(x2033))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((sj2)*(x2033)))+(((IkReal(-1.00000000000000))*(sj1)*(x2030)*(x2031)))+(((cj2)*(x2034)))+(((cj2)*(x2032)))+(((IkReal(-1.00000000000000))*(cj1)*(x2028)*(x2030)))+(((IkReal(-1.00000000000000))*(x2028)*(x2029))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((sj2)*(x2034)))+(((sj2)*(x2032)))+(((IkReal(-1.00000000000000))*(sj1)*(x2028)*(x2030)))+(((cj1)*(cj2)*(x2030)))+(((cj2)*(x2029)))+(((IkReal(-1.00000000000000))*(x2031)*(x2033)))))+IKsqr(((((sj2)*(x2033)))+(((IkReal(-1.00000000000000))*(sj1)*(x2030)*(x2031)))+(((cj2)*(x2034)))+(((cj2)*(x2032)))+(((IkReal(-1.00000000000000))*(cj1)*(x2028)*(x2030)))+(((IkReal(-1.00000000000000))*(x2028)*(x2029)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((sj2)*(x2034)))+(((sj2)*(x2032)))+(((IkReal(-1.00000000000000))*(sj1)*(x2028)*(x2030)))+(((cj1)*(cj2)*(x2030)))+(((cj2)*(x2029)))+(((IkReal(-1.00000000000000))*(x2031)*(x2033)))), ((((sj2)*(x2033)))+(((IkReal(-1.00000000000000))*(sj1)*(x2030)*(x2031)))+(((cj2)*(x2034)))+(((cj2)*(x2032)))+(((IkReal(-1.00000000000000))*(cj1)*(x2028)*(x2030)))+(((IkReal(-1.00000000000000))*(x2028)*(x2029)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x2035=((r02)*(sj2));
IkReal x2036=((IkReal(1.00000000000000))*(sj2));
IkReal x2037=((r00)*(sj0));
IkReal x2038=((cj1)*(cj2));
IkReal x2039=((cj0)*(r01));
IkReal x2040=((sj1)*(x2039));
IkReal x2041=((IkReal(1.00000000000000))*(cj2)*(x2037));
evalcond[0]=((((IkReal(-1.00000000000000))*(sj1)*(x2041)))+(IKcos(j5))+(((sj1)*(x2035)))+(((cj2)*(x2040)))+(((cj1)*(sj2)*(x2039)))+(((IkReal(-1.00000000000000))*(r02)*(x2038)))+(((IkReal(-1.00000000000000))*(cj1)*(x2036)*(x2037))));
evalcond[1]=((((x2038)*(x2039)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x2036)*(x2040)))+(((sj1)*(sj2)*(x2037)))+(((IkReal(-1.00000000000000))*(x2037)*(x2038)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((cj1)*(x2035))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x2042=((pz)*(sj1));
IkReal x2043=((cj0)*(py));
IkReal x2044=((IkReal(1.00000000000000))*(sj2));
IkReal x2045=((cj1)*(cj2));
IkReal x2046=((px)*(sj0));
IkReal x2047=((cj2)*(sj1));
IkReal x2048=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(-0.190890000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.395100000000000))+(((sj1)*(sj2)*(x2046)))+(((IkReal(0.00982000000000000))*(cj2)))+(((x2043)*(x2045)))+(((IkReal(-1.00000000000000))*(x2045)*(x2046)))+(((pz)*(x2048)))+(((IkReal(-1.00000000000000))*(sj1)*(x2043)*(x2044)))+(((cj2)*(x2042)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(0.0588300000000000))+(((IkReal(-1.00000000000000))*(cj1)*(x2044)*(x2046)))+(((x2043)*(x2047)))+(((x2043)*(x2048)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(pz)*(x2045)))+(((sj2)*(x2042)))+(((IkReal(-1.00000000000000))*(x2046)*(x2047)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2049=((IkReal(1.00000000000000))*(sj2));
IkReal x2050=((r02)*(sj1));
IkReal x2051=((cj0)*(r01));
IkReal x2052=((r00)*(sj0));
IkReal x2053=((cj1)*(r02));
IkReal x2054=((IkReal(1.00000000000000))*(cj2));
if( IKabs(((((cj1)*(cj2)*(x2052)))+(((IkReal(-1.00000000000000))*(cj1)*(x2051)*(x2054)))+(((IkReal(-1.00000000000000))*(x2049)*(x2053)))+(((IkReal(-1.00000000000000))*(x2050)*(x2054)))+(((IkReal(-1.00000000000000))*(sj1)*(x2049)*(x2052)))+(((sj1)*(sj2)*(x2051))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(sj1)*(x2051)*(x2054)))+(((cj2)*(sj1)*(x2052)))+(((IkReal(-1.00000000000000))*(x2049)*(x2050)))+(((cj1)*(sj2)*(x2052)))+(((IkReal(-1.00000000000000))*(cj1)*(x2049)*(x2051)))+(((cj2)*(x2053))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj1)*(cj2)*(x2052)))+(((IkReal(-1.00000000000000))*(cj1)*(x2051)*(x2054)))+(((IkReal(-1.00000000000000))*(x2049)*(x2053)))+(((IkReal(-1.00000000000000))*(x2050)*(x2054)))+(((IkReal(-1.00000000000000))*(sj1)*(x2049)*(x2052)))+(((sj1)*(sj2)*(x2051)))))+IKsqr(((((IkReal(-1.00000000000000))*(sj1)*(x2051)*(x2054)))+(((cj2)*(sj1)*(x2052)))+(((IkReal(-1.00000000000000))*(x2049)*(x2050)))+(((cj1)*(sj2)*(x2052)))+(((IkReal(-1.00000000000000))*(cj1)*(x2049)*(x2051)))+(((cj2)*(x2053)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((cj1)*(cj2)*(x2052)))+(((IkReal(-1.00000000000000))*(cj1)*(x2051)*(x2054)))+(((IkReal(-1.00000000000000))*(x2049)*(x2053)))+(((IkReal(-1.00000000000000))*(x2050)*(x2054)))+(((IkReal(-1.00000000000000))*(sj1)*(x2049)*(x2052)))+(((sj1)*(sj2)*(x2051)))), ((((IkReal(-1.00000000000000))*(sj1)*(x2051)*(x2054)))+(((cj2)*(sj1)*(x2052)))+(((IkReal(-1.00000000000000))*(x2049)*(x2050)))+(((cj1)*(sj2)*(x2052)))+(((IkReal(-1.00000000000000))*(cj1)*(x2049)*(x2051)))+(((cj2)*(x2053)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x2055=((r02)*(sj2));
IkReal x2056=((IkReal(1.00000000000000))*(sj2));
IkReal x2057=((r00)*(sj0));
IkReal x2058=((cj1)*(cj2));
IkReal x2059=((cj0)*(r01));
IkReal x2060=((sj1)*(x2059));
IkReal x2061=((IkReal(1.00000000000000))*(cj2)*(x2057));
evalcond[0]=((((IkReal(-1.00000000000000))*(r02)*(x2058)))+(((IkReal(-1.00000000000000))*(cj1)*(x2056)*(x2057)))+(((sj1)*(x2055)))+(((IkReal(-1.00000000000000))*(sj1)*(x2061)))+(IKcos(j5))+(((cj1)*(sj2)*(x2059)))+(((cj2)*(x2060))));
evalcond[1]=((IKsin(j5))+(((IkReal(-1.00000000000000))*(x2057)*(x2058)))+(((IkReal(-1.00000000000000))*(x2056)*(x2060)))+(((cj2)*(r02)*(sj1)))+(((cj1)*(x2055)))+(((x2058)*(x2059)))+(((sj1)*(sj2)*(x2057))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2062=((IkReal(1.00000000000000))*(sj2));
IkReal x2063=((r02)*(sj1));
IkReal x2064=((cj0)*(r01));
IkReal x2065=((IkReal(1.00000000000000))*(cj2));
IkReal x2066=((cj1)*(r02));
IkReal x2067=((cj1)*(r00)*(sj0));
IkReal x2068=((r00)*(sj0)*(sj1));
if( IKabs(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((cj1)*(cj2)*(x2064)))+(((sj2)*(x2068)))+(((sj2)*(x2066)))+(((IkReal(-1.00000000000000))*(sj1)*(x2062)*(x2064)))+(((IkReal(-1.00000000000000))*(x2065)*(x2067)))+(((cj2)*(x2063))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((sj2)*(x2067)))+(((IkReal(-1.00000000000000))*(sj1)*(x2064)*(x2065)))+(((IkReal(-1.00000000000000))*(cj1)*(x2062)*(x2064)))+(((IkReal(-1.00000000000000))*(x2062)*(x2063)))+(((cj2)*(x2066)))+(((cj2)*(x2068))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((cj1)*(cj2)*(x2064)))+(((sj2)*(x2068)))+(((sj2)*(x2066)))+(((IkReal(-1.00000000000000))*(sj1)*(x2062)*(x2064)))+(((IkReal(-1.00000000000000))*(x2065)*(x2067)))+(((cj2)*(x2063)))))))+IKsqr(((((sj2)*(x2067)))+(((IkReal(-1.00000000000000))*(sj1)*(x2064)*(x2065)))+(((IkReal(-1.00000000000000))*(cj1)*(x2062)*(x2064)))+(((IkReal(-1.00000000000000))*(x2062)*(x2063)))+(((cj2)*(x2066)))+(((cj2)*(x2068)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((cj1)*(cj2)*(x2064)))+(((sj2)*(x2068)))+(((sj2)*(x2066)))+(((IkReal(-1.00000000000000))*(sj1)*(x2062)*(x2064)))+(((IkReal(-1.00000000000000))*(x2065)*(x2067)))+(((cj2)*(x2063)))))), ((((sj2)*(x2067)))+(((IkReal(-1.00000000000000))*(sj1)*(x2064)*(x2065)))+(((IkReal(-1.00000000000000))*(cj1)*(x2062)*(x2064)))+(((IkReal(-1.00000000000000))*(x2062)*(x2063)))+(((cj2)*(x2066)))+(((cj2)*(x2068)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x2069=IKsin(j5);
IkReal x2070=((r02)*(sj2));
IkReal x2071=((IkReal(1.00000000000000))*(sj2));
IkReal x2072=((r00)*(sj0));
IkReal x2073=((IkReal(1.00000000000000))*(cj2));
IkReal x2074=((IkReal(1.00000000000000))*(x2069));
IkReal x2075=((cj0)*(r01)*(sj1));
IkReal x2076=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x2074)))+(((cj0)*(r00))));
evalcond[1]=((((sj2)*(x2076)))+(((IkReal(-1.00000000000000))*(sj1)*(x2072)*(x2073)))+(((IkReal(-1.00000000000000))*(cj1)*(x2071)*(x2072)))+(IKcos(j5))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x2073)))+(((sj1)*(x2070)))+(((cj2)*(x2075))));
evalcond[2]=((((sj1)*(sj2)*(x2072)))+(((IkReal(-1.00000000000000))*(sj4)*(x2074)))+(((IkReal(-1.00000000000000))*(x2071)*(x2075)))+(((IkReal(-1.00000000000000))*(cj1)*(x2072)*(x2073)))+(((cj2)*(r02)*(sj1)))+(((cj1)*(x2070)))+(((cj2)*(x2076))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2077=((IkReal(1.00000000000000))*(sj2));
IkReal x2078=((cj0)*(r01));
IkReal x2079=((r00)*(sj0));
IkReal x2080=((cj2)*(sj1));
if( IKabs(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x2078)*(x2080)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x2077)))+(((cj1)*(sj2)*(x2079)))+(((x2079)*(x2080)))+(((cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(cj1)*(x2077)*(x2078))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))))+IKsqr(((((IkReal(-1.00000000000000))*(x2078)*(x2080)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x2077)))+(((cj1)*(sj2)*(x2079)))+(((x2079)*(x2080)))+(((cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(cj1)*(x2077)*(x2078)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))), ((((IkReal(-1.00000000000000))*(x2078)*(x2080)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x2077)))+(((cj1)*(sj2)*(x2079)))+(((x2079)*(x2080)))+(((cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(cj1)*(x2077)*(x2078)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x2081=IKsin(j5);
IkReal x2082=((r02)*(sj2));
IkReal x2083=((IkReal(1.00000000000000))*(sj2));
IkReal x2084=((r00)*(sj0));
IkReal x2085=((IkReal(1.00000000000000))*(cj2));
IkReal x2086=((IkReal(1.00000000000000))*(x2081));
IkReal x2087=((cj0)*(r01)*(sj1));
IkReal x2088=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x2086)))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj1)*(x2084)*(x2085)))+(((sj1)*(x2082)))+(IKcos(j5))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x2085)))+(((sj2)*(x2088)))+(((IkReal(-1.00000000000000))*(cj1)*(x2083)*(x2084)))+(((cj2)*(x2087))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj1)*(x2084)*(x2085)))+(((sj1)*(sj2)*(x2084)))+(((cj1)*(x2082)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x2083)*(x2087)))+(((cj2)*(x2088)))+(((IkReal(-1.00000000000000))*(sj4)*(x2086))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x2089=((cj1)*(sj2));
IkReal x2090=((px)*(sj0));
IkReal x2091=((sj1)*(sj2));
IkReal x2092=((cj0)*(py));
IkReal x2093=((cj2)*(pz));
IkReal x2094=((IkReal(1.00000000000000))*(cj1));
IkReal x2095=((cj2)*(x2092));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(0.000790000000000000))*(cj4)))+(((cj0)*(px)))+(((py)*(sj0)))+(((IkReal(0.190890000000000))*(sj4))));
evalcond[2]=((IkReal(-0.127870000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((cj1)*(x2095)))+(((IkReal(-1.00000000000000))*(cj2)*(x2090)*(x2094)))+(((sj1)*(x2093)))+(((pz)*(x2089)))+(((IkReal(-1.00000000000000))*(x2091)*(x2092)))+(((x2090)*(x2091)))+(((IkReal(0.190890000000000))*(cj4)))+(((IkReal(-0.000790000000000000))*(sj4)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[3]=((IkReal(-0.0438300000000000))+(((sj1)*(x2095)))+(((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x2090)))+(((IkReal(-1.00000000000000))*(x2089)*(x2090)))+(((IkReal(-1.00000000000000))*(x2093)*(x2094)))+(((IkReal(0.521670000000000))*(cj2)))+(((x2089)*(x2092)))+(((IkReal(0.00982000000000000))*(sj2)))+(((pz)*(x2091))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x2096=((IkReal(1.00000000000000))*(sj2));
IkReal x2097=((px)*(sj0));
IkReal x2098=((pz)*(sj2));
IkReal x2099=((cj0)*(sj1));
IkReal x2100=((cj1)*(sj2));
IkReal x2101=((sj1)*(sj2));
IkReal x2102=((cj2)*(sj1));
IkReal x2103=((r00)*(sj0));
IkReal x2104=((cj0)*(cj1)*(cj2));
IkReal x2105=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.000790000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2103)*(x2105)))+(((IkReal(-1.00000000000000))*(r01)*(x2096)*(x2099)))+(((r02)*(x2102)))+(((r02)*(x2100)))+(((x2101)*(x2103)))+(((r01)*(x2104))));
evalcond[3]=((IkReal(0.0630200000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((cj1)*(x2098)))+(((IkReal(-1.00000000000000))*(x2097)*(x2105)))+(((pz)*(x2102)))+(((py)*(x2104)))+(((x2097)*(x2101)))+(((IkReal(-1.00000000000000))*(py)*(x2096)*(x2099)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(-0.0438300000000000))+(((sj1)*(x2098)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x2097)*(x2102)))+(((IkReal(-1.00000000000000))*(cj1)*(x2096)*(x2097)))+(((cj2)*(py)*(x2099)))+(((IkReal(-1.00000000000000))*(pz)*(x2105)))+(((cj0)*(py)*(x2100)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2106=((cj2)*(sj1));
IkReal x2107=((cj0)*(r01));
IkReal x2108=((cj1)*(sj2));
IkReal x2109=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((r01)*(sj0)))+(((cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x2106)*(x2109)))+(((x2107)*(x2108)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((x2106)*(x2107)))+(((IkReal(-1.00000000000000))*(x2108)*(x2109)))+(((r02)*(sj1)*(sj2))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r01)*(sj0)))+(((cj0)*(r00)))))+IKsqr(((((IkReal(-1.00000000000000))*(x2106)*(x2109)))+(((x2107)*(x2108)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((x2106)*(x2107)))+(((IkReal(-1.00000000000000))*(x2108)*(x2109)))+(((r02)*(sj1)*(sj2)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((r01)*(sj0)))+(((cj0)*(r00)))), ((((IkReal(-1.00000000000000))*(x2106)*(x2109)))+(((x2107)*(x2108)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((x2106)*(x2107)))+(((IkReal(-1.00000000000000))*(x2108)*(x2109)))+(((r02)*(sj1)*(sj2)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x2110=((cj2)*(sj1));
IkReal x2111=((cj0)*(r01));
IkReal x2112=((cj1)*(sj2));
IkReal x2113=((IkReal(1.00000000000000))*(r00)*(sj0));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2112)*(x2113)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((x2111)*(x2112)))+(((x2110)*(x2111)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(x2110)*(x2113)))+(((r02)*(sj1)*(sj2))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x2114=((IkReal(1.00000000000000))*(sj2));
IkReal x2115=((px)*(sj0));
IkReal x2116=((pz)*(sj2));
IkReal x2117=((cj0)*(sj1));
IkReal x2118=((cj1)*(sj2));
IkReal x2119=((sj1)*(sj2));
IkReal x2120=((cj2)*(sj1));
IkReal x2121=((r00)*(sj0));
IkReal x2122=((cj0)*(cj1)*(cj2));
IkReal x2123=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.000790000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r01)*(x2114)*(x2117)))+(((r02)*(x2120)))+(((IkReal(-1.00000000000000))*(x2121)*(x2123)))+(((r02)*(x2118)))+(((x2119)*(x2121)))+(((r01)*(x2122))));
evalcond[3]=((IkReal(-0.318760000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x2115)*(x2123)))+(((IkReal(-1.00000000000000))*(py)*(x2114)*(x2117)))+(((py)*(x2122)))+(((pz)*(x2120)))+(((x2115)*(x2119)))+(((cj1)*(x2116)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(-0.0438300000000000))+(((cj0)*(py)*(x2118)))+(((sj1)*(x2116)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(cj1)*(x2114)*(x2115)))+(((IkReal(-1.00000000000000))*(x2115)*(x2120)))+(((cj2)*(py)*(x2117)))+(((IkReal(-1.00000000000000))*(pz)*(x2123)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2124=((cj2)*(sj1));
IkReal x2125=((cj0)*(r01));
IkReal x2126=((cj1)*(sj2));
IkReal x2127=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x2125)*(x2126)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((x2124)*(x2125)))+(((IkReal(-1.00000000000000))*(x2124)*(x2127)))+(((r02)*(sj1)*(sj2)))+(((IkReal(-1.00000000000000))*(x2126)*(x2127))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))))+IKsqr(((((x2125)*(x2126)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((x2124)*(x2125)))+(((IkReal(-1.00000000000000))*(x2124)*(x2127)))+(((r02)*(sj1)*(sj2)))+(((IkReal(-1.00000000000000))*(x2126)*(x2127)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))), ((((x2125)*(x2126)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((x2124)*(x2125)))+(((IkReal(-1.00000000000000))*(x2124)*(x2127)))+(((r02)*(sj1)*(sj2)))+(((IkReal(-1.00000000000000))*(x2126)*(x2127)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x2128=((cj2)*(sj1));
IkReal x2129=((cj0)*(r01));
IkReal x2130=((cj1)*(sj2));
IkReal x2131=((IkReal(1.00000000000000))*(r00)*(sj0));
evalcond[0]=((((r01)*(sj0)))+(IKsin(j5))+(((cj0)*(r00))));
evalcond[1]=((((x2128)*(x2129)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((IkReal(-1.00000000000000))*(x2128)*(x2131)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(x2130)*(x2131)))+(((x2129)*(x2130)))+(((r02)*(sj1)*(sj2))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x2132=((pz)*(sj1));
IkReal x2133=((cj0)*(py));
IkReal x2134=((IkReal(1.00000000000000))*(sj2));
IkReal x2135=((cj1)*(cj2));
IkReal x2136=((px)*(sj0));
IkReal x2137=((cj2)*(sj1));
IkReal x2138=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(0.190890000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.128660000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((pz)*(x2138)))+(((sj1)*(sj2)*(x2136)))+(((cj2)*(x2132)))+(((IkReal(-1.00000000000000))*(sj1)*(x2133)*(x2134)))+(((x2133)*(x2135)))+(((IkReal(-0.521670000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(x2135)*(x2136))));
evalcond[4]=((IkReal(-0.0438300000000000))+(((IkReal(-1.00000000000000))*(x2136)*(x2137)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(cj1)*(x2134)*(x2136)))+(((sj2)*(x2132)))+(((x2133)*(x2138)))+(((x2133)*(x2137)))+(((IkReal(0.00982000000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(pz)*(x2135))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2139=((sj1)*(sj2));
IkReal x2140=((cj2)*(sj1));
IkReal x2141=((cj1)*(sj2));
IkReal x2142=((IkReal(1.00000000000000))*(r02));
IkReal x2143=((cj1)*(cj2));
IkReal x2144=((cj0)*(r01));
IkReal x2145=((sj1)*(x2144));
IkReal x2146=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((IkReal(-1.00000000000000))*(x2143)*(x2144)))+(((IkReal(-1.00000000000000))*(x2140)*(x2142)))+(((IkReal(-1.00000000000000))*(x2139)*(x2146)))+(((IkReal(-1.00000000000000))*(x2141)*(x2142)))+(((r00)*(sj0)*(x2143)))+(((x2139)*(x2144))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((r02)*(x2139)))+(((IkReal(-1.00000000000000))*(x2142)*(x2143)))+(((x2140)*(x2144)))+(((IkReal(-1.00000000000000))*(x2140)*(x2146)))+(((x2141)*(x2144)))+(((IkReal(-1.00000000000000))*(x2141)*(x2146))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x2143)*(x2144)))+(((IkReal(-1.00000000000000))*(x2140)*(x2142)))+(((IkReal(-1.00000000000000))*(x2139)*(x2146)))+(((IkReal(-1.00000000000000))*(x2141)*(x2142)))+(((r00)*(sj0)*(x2143)))+(((x2139)*(x2144)))))+IKsqr(((((r02)*(x2139)))+(((IkReal(-1.00000000000000))*(x2142)*(x2143)))+(((x2140)*(x2144)))+(((IkReal(-1.00000000000000))*(x2140)*(x2146)))+(((x2141)*(x2144)))+(((IkReal(-1.00000000000000))*(x2141)*(x2146)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x2143)*(x2144)))+(((IkReal(-1.00000000000000))*(x2140)*(x2142)))+(((IkReal(-1.00000000000000))*(x2139)*(x2146)))+(((IkReal(-1.00000000000000))*(x2141)*(x2142)))+(((r00)*(sj0)*(x2143)))+(((x2139)*(x2144)))), ((((r02)*(x2139)))+(((IkReal(-1.00000000000000))*(x2142)*(x2143)))+(((x2140)*(x2144)))+(((IkReal(-1.00000000000000))*(x2140)*(x2146)))+(((x2141)*(x2144)))+(((IkReal(-1.00000000000000))*(x2141)*(x2146)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x2147=((r02)*(sj2));
IkReal x2148=((IkReal(1.00000000000000))*(sj2));
IkReal x2149=((r00)*(sj0));
IkReal x2150=((cj1)*(cj2));
IkReal x2151=((cj0)*(r01));
IkReal x2152=((sj1)*(x2151));
IkReal x2153=((IkReal(1.00000000000000))*(cj2)*(x2149));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj1)*(x2148)*(x2149)))+(((cj2)*(x2152)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((IkReal(-1.00000000000000))*(sj1)*(x2153)))+(((IkReal(-1.00000000000000))*(r02)*(x2150)))+(((cj1)*(sj2)*(x2151)))+(((sj1)*(x2147))));
evalcond[1]=((((cj1)*(x2147)))+(((IkReal(-1.00000000000000))*(x2148)*(x2152)))+(((sj1)*(sj2)*(x2149)))+(IKsin(j5))+(((x2150)*(x2151)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x2149)*(x2150))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x2154=((pz)*(sj1));
IkReal x2155=((cj0)*(py));
IkReal x2156=((IkReal(1.00000000000000))*(sj2));
IkReal x2157=((cj1)*(cj2));
IkReal x2158=((px)*(sj0));
IkReal x2159=((cj2)*(sj1));
IkReal x2160=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(-0.190890000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.127080000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x2157)*(x2158)))+(((x2155)*(x2157)))+(((sj1)*(sj2)*(x2158)))+(((cj2)*(x2154)))+(((IkReal(-1.00000000000000))*(sj1)*(x2155)*(x2156)))+(((pz)*(x2160)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(-0.0438300000000000))+(((sj2)*(x2154)))+(((IkReal(-1.00000000000000))*(pz)*(x2157)))+(((x2155)*(x2159)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(cj1)*(x2156)*(x2158)))+(((x2155)*(x2160)))+(((IkReal(-1.00000000000000))*(x2158)*(x2159)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2161=((cj2)*(sj1));
IkReal x2162=((cj0)*(r01));
IkReal x2163=((sj1)*(sj2));
IkReal x2164=((cj1)*(cj2));
IkReal x2165=((cj1)*(sj2));
IkReal x2166=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((IkReal(-1.00000000000000))*(x2162)*(x2163)))+(((r02)*(x2165)))+(((r02)*(x2161)))+(((r00)*(sj0)*(x2163)))+(((IkReal(-1.00000000000000))*(x2164)*(x2166)))+(((x2162)*(x2164))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r02)*(x2164)))+(((IkReal(-1.00000000000000))*(x2161)*(x2166)))+(((x2161)*(x2162)))+(((r02)*(x2163)))+(((x2162)*(x2165)))+(((IkReal(-1.00000000000000))*(x2165)*(x2166))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x2162)*(x2163)))+(((r02)*(x2165)))+(((r02)*(x2161)))+(((r00)*(sj0)*(x2163)))+(((IkReal(-1.00000000000000))*(x2164)*(x2166)))+(((x2162)*(x2164)))))+IKsqr(((((IkReal(-1.00000000000000))*(r02)*(x2164)))+(((IkReal(-1.00000000000000))*(x2161)*(x2166)))+(((x2161)*(x2162)))+(((r02)*(x2163)))+(((x2162)*(x2165)))+(((IkReal(-1.00000000000000))*(x2165)*(x2166)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x2162)*(x2163)))+(((r02)*(x2165)))+(((r02)*(x2161)))+(((r00)*(sj0)*(x2163)))+(((IkReal(-1.00000000000000))*(x2164)*(x2166)))+(((x2162)*(x2164)))), ((((IkReal(-1.00000000000000))*(r02)*(x2164)))+(((IkReal(-1.00000000000000))*(x2161)*(x2166)))+(((x2161)*(x2162)))+(((r02)*(x2163)))+(((x2162)*(x2165)))+(((IkReal(-1.00000000000000))*(x2165)*(x2166)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x2167=((r02)*(sj2));
IkReal x2168=((IkReal(1.00000000000000))*(sj2));
IkReal x2169=((r00)*(sj0));
IkReal x2170=((cj1)*(cj2));
IkReal x2171=((cj0)*(r01));
IkReal x2172=((sj1)*(x2171));
IkReal x2173=((IkReal(1.00000000000000))*(cj2)*(x2169));
evalcond[0]=((((cj2)*(x2172)))+(((sj1)*(x2167)))+(((IkReal(-1.00000000000000))*(sj1)*(x2173)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((cj1)*(sj2)*(x2171)))+(((IkReal(-1.00000000000000))*(r02)*(x2170)))+(((IkReal(-1.00000000000000))*(cj1)*(x2168)*(x2169))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2168)*(x2172)))+(((x2170)*(x2171)))+(((IkReal(-1.00000000000000))*(x2169)*(x2170)))+(((cj2)*(r02)*(sj1)))+(((cj1)*(x2167)))+(((sj1)*(sj2)*(x2169)))+(((IkReal(-1.00000000000000))*(IKsin(j5)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2174=((sj1)*(sj2));
IkReal x2175=((cj2)*(sj1));
IkReal x2176=((cj1)*(sj2));
IkReal x2177=((IkReal(1.00000000000000))*(r02));
IkReal x2178=((cj1)*(cj2));
IkReal x2179=((cj0)*(r01));
IkReal x2180=((sj1)*(x2179));
IkReal x2181=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x2176)*(x2177)))+(((x2174)*(x2179)))+(((r00)*(sj0)*(x2178)))+(((IkReal(-1.00000000000000))*(x2175)*(x2177)))+(((IkReal(-1.00000000000000))*(x2178)*(x2179)))+(((IkReal(-1.00000000000000))*(x2174)*(x2181))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x2175)*(x2181)))+(((x2176)*(x2179)))+(((x2175)*(x2179)))+(((r02)*(x2174)))+(((IkReal(-1.00000000000000))*(x2176)*(x2181)))+(((IkReal(-1.00000000000000))*(x2177)*(x2178))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x2176)*(x2177)))+(((x2174)*(x2179)))+(((r00)*(sj0)*(x2178)))+(((IkReal(-1.00000000000000))*(x2175)*(x2177)))+(((IkReal(-1.00000000000000))*(x2178)*(x2179)))+(((IkReal(-1.00000000000000))*(x2174)*(x2181)))))))+IKsqr(((((IkReal(-1.00000000000000))*(x2175)*(x2181)))+(((x2176)*(x2179)))+(((x2175)*(x2179)))+(((r02)*(x2174)))+(((IkReal(-1.00000000000000))*(x2176)*(x2181)))+(((IkReal(-1.00000000000000))*(x2177)*(x2178)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x2176)*(x2177)))+(((x2174)*(x2179)))+(((r00)*(sj0)*(x2178)))+(((IkReal(-1.00000000000000))*(x2175)*(x2177)))+(((IkReal(-1.00000000000000))*(x2178)*(x2179)))+(((IkReal(-1.00000000000000))*(x2174)*(x2181)))))), ((((IkReal(-1.00000000000000))*(x2175)*(x2181)))+(((x2176)*(x2179)))+(((x2175)*(x2179)))+(((r02)*(x2174)))+(((IkReal(-1.00000000000000))*(x2176)*(x2181)))+(((IkReal(-1.00000000000000))*(x2177)*(x2178)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x2182=IKsin(j5);
IkReal x2183=((r02)*(sj2));
IkReal x2184=((IkReal(1.00000000000000))*(sj2));
IkReal x2185=((r00)*(sj0));
IkReal x2186=((IkReal(1.00000000000000))*(cj2));
IkReal x2187=((cj0)*(r01)*(sj1));
IkReal x2188=((cj0)*(cj1)*(r01));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj4)*(x2182)))+(((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj1)*(x2185)*(x2186)))+(((IkReal(-1.00000000000000))*(cj1)*(x2184)*(x2185)))+(((sj2)*(x2188)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x2186)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((sj1)*(x2183)))+(((cj2)*(x2187))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj1)*(x2185)*(x2186)))+(((cj1)*(x2183)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x2184)*(x2187)))+(((sj4)*(x2182)))+(((sj1)*(sj2)*(x2185)))+(((cj2)*(x2188))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2189=((cj2)*(sj1));
IkReal x2190=((cj0)*(r01));
IkReal x2191=((cj1)*(sj2));
IkReal x2192=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x2189)*(x2192)))+(((IkReal(-1.00000000000000))*(x2191)*(x2192)))+(((x2190)*(x2191)))+(((x2189)*(x2190)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((r02)*(sj1)*(sj2))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))))+IKsqr(((((IkReal(-1.00000000000000))*(x2189)*(x2192)))+(((IkReal(-1.00000000000000))*(x2191)*(x2192)))+(((x2190)*(x2191)))+(((x2189)*(x2190)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((r02)*(sj1)*(sj2)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))), ((((IkReal(-1.00000000000000))*(x2189)*(x2192)))+(((IkReal(-1.00000000000000))*(x2191)*(x2192)))+(((x2190)*(x2191)))+(((x2189)*(x2190)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((r02)*(sj1)*(sj2)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x2193=IKsin(j5);
IkReal x2194=((r02)*(sj2));
IkReal x2195=((IkReal(1.00000000000000))*(sj2));
IkReal x2196=((r00)*(sj0));
IkReal x2197=((IkReal(1.00000000000000))*(cj2));
IkReal x2198=((cj0)*(r01)*(sj1));
IkReal x2199=((cj0)*(cj1)*(r01));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj4)*(x2193)))+(((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[1]=((((cj2)*(x2198)))+(((IkReal(-1.00000000000000))*(sj1)*(x2196)*(x2197)))+(((IkReal(-1.00000000000000))*(cj1)*(x2195)*(x2196)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x2197)))+(((sj2)*(x2199)))+(((sj1)*(x2194)))+(((IkReal(-1.00000000000000))*(IKcos(j5)))));
evalcond[2]=((((sj1)*(sj2)*(x2196)))+(((cj2)*(x2199)))+(((IkReal(-1.00000000000000))*(x2195)*(x2198)))+(((cj1)*(x2194)))+(((IkReal(-1.00000000000000))*(cj1)*(x2196)*(x2197)))+(((cj2)*(r02)*(sj1)))+(((sj4)*(x2193))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x2200=((cj1)*(sj2));
IkReal x2201=((px)*(sj0));
IkReal x2202=((sj1)*(sj2));
IkReal x2203=((cj0)*(py));
IkReal x2204=((cj2)*(pz));
IkReal x2205=((IkReal(1.00000000000000))*(cj1));
IkReal x2206=((cj2)*(x2203));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.000790000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((IkReal(-0.261090000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((cj1)*(x2206)))+(((IkReal(-1.00000000000000))*(cj2)*(x2201)*(x2205)))+(((x2201)*(x2202)))+(((IkReal(-1.00000000000000))*(x2202)*(x2203)))+(((sj1)*(x2204)))+(((pz)*(x2200)))+(((IkReal(0.0513300000000000))*(sj3)))+(((IkReal(-0.521670000000000))*(sj2)))+(((IkReal(-0.324110000000000))*(cj3))));
evalcond[3]=((IkReal(0.00750000000000000))+(((IkReal(-1.00000000000000))*(x2204)*(x2205)))+(((x2200)*(x2203)))+(((IkReal(0.0513300000000000))*(cj3)))+(((IkReal(0.521670000000000))*(cj2)))+(((sj1)*(x2206)))+(((IkReal(-1.00000000000000))*(x2200)*(x2201)))+(((pz)*(x2202)))+(((IkReal(0.324110000000000))*(sj3)))+(((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x2201)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2207=((cj0)*(r01));
IkReal x2208=((sj1)*(sj2));
IkReal x2209=((IkReal(1.00000000000000))*(cj1));
IkReal x2210=((r00)*(sj0));
if( IKabs(((((r01)*(sj0)))+(((cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x2208)*(x2210)))+(((cj1)*(cj2)*(x2210)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((x2207)*(x2208)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x2209)))+(((IkReal(-1.00000000000000))*(cj2)*(x2207)*(x2209))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r01)*(sj0)))+(((cj0)*(r00)))))+IKsqr(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x2208)*(x2210)))+(((cj1)*(cj2)*(x2210)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((x2207)*(x2208)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x2209)))+(((IkReal(-1.00000000000000))*(cj2)*(x2207)*(x2209)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((r01)*(sj0)))+(((cj0)*(r00)))), ((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x2208)*(x2210)))+(((cj1)*(cj2)*(x2210)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((x2207)*(x2208)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x2209)))+(((IkReal(-1.00000000000000))*(cj2)*(x2207)*(x2209)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x2211=IKcos(j5);
IkReal x2212=((r02)*(sj2));
IkReal x2213=((IkReal(1.00000000000000))*(sj2));
IkReal x2214=((r00)*(sj0));
IkReal x2215=((IkReal(1.00000000000000))*(cj2));
IkReal x2216=((cj0)*(r01)*(sj1));
IkReal x2217=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((cj0)*(r00))));
evalcond[1]=((((sj2)*(x2217)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x2215)))+(((IkReal(-1.00000000000000))*(sj1)*(x2214)*(x2215)))+(((cj2)*(x2216)))+(((cj3)*(x2211)))+(((sj1)*(x2212)))+(((IkReal(-1.00000000000000))*(cj1)*(x2213)*(x2214))));
evalcond[2]=((((sj3)*(x2211)))+(((cj1)*(x2212)))+(((cj2)*(x2217)))+(((IkReal(-1.00000000000000))*(x2213)*(x2216)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(x2214)*(x2215)))+(((sj1)*(sj2)*(x2214))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2218=((IkReal(1.00000000000000))*(sj2));
IkReal x2219=((cj0)*(r01));
IkReal x2220=((cj2)*(sj1));
IkReal x2221=((r00)*(sj0));
if( IKabs(((((r01)*(sj0)))+(((cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r02)*(sj1)*(x2218)))+(((cj1)*(sj2)*(x2221)))+(((IkReal(-1.00000000000000))*(x2219)*(x2220)))+(((x2220)*(x2221)))+(((cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(cj1)*(x2218)*(x2219))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r01)*(sj0)))+(((cj0)*(r00)))))+IKsqr(((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r02)*(sj1)*(x2218)))+(((cj1)*(sj2)*(x2221)))+(((IkReal(-1.00000000000000))*(x2219)*(x2220)))+(((x2220)*(x2221)))+(((cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(cj1)*(x2218)*(x2219)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((r01)*(sj0)))+(((cj0)*(r00)))), ((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r02)*(sj1)*(x2218)))+(((cj1)*(sj2)*(x2221)))+(((IkReal(-1.00000000000000))*(x2219)*(x2220)))+(((x2220)*(x2221)))+(((cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(cj1)*(x2218)*(x2219)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x2222=IKcos(j5);
IkReal x2223=((r02)*(sj2));
IkReal x2224=((IkReal(1.00000000000000))*(sj2));
IkReal x2225=((r00)*(sj0));
IkReal x2226=((IkReal(1.00000000000000))*(cj2));
IkReal x2227=((cj0)*(r01)*(sj1));
IkReal x2228=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj1)*(x2225)*(x2226)))+(((sj1)*(x2223)))+(((sj2)*(x2228)))+(((IkReal(-1.00000000000000))*(cj1)*(x2224)*(x2225)))+(((cj3)*(x2222)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x2226)))+(((cj2)*(x2227))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2224)*(x2227)))+(((sj3)*(x2222)))+(((sj1)*(sj2)*(x2225)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(x2225)*(x2226)))+(((cj1)*(x2223)))+(((cj2)*(x2228))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x2229=((cj1)*(sj2));
IkReal x2230=((px)*(sj0));
IkReal x2231=((sj1)*(sj2));
IkReal x2232=((cj0)*(py));
IkReal x2233=((cj2)*(pz));
IkReal x2234=((IkReal(1.00000000000000))*(cj1));
IkReal x2235=((cj2)*(x2232));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.000790000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((IkReal(-0.261090000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x2231)*(x2232)))+(((sj1)*(x2233)))+(((x2230)*(x2231)))+(((IkReal(0.0513300000000000))*(sj3)))+(((IkReal(0.0576700000000000))*(cj3)))+(((IkReal(-0.521670000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(cj2)*(x2230)*(x2234)))+(((cj1)*(x2235)))+(((pz)*(x2229))));
evalcond[3]=((IkReal(0.00750000000000000))+(((pz)*(x2231)))+(((IkReal(-0.0576700000000000))*(sj3)))+(((x2229)*(x2232)))+(((sj1)*(x2235)))+(((IkReal(0.0513300000000000))*(cj3)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x2229)*(x2230)))+(((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x2230)))+(((IkReal(-1.00000000000000))*(x2233)*(x2234)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2236=((sj1)*(sj2));
IkReal x2237=((cj0)*(r01));
IkReal x2238=((r00)*(sj0));
IkReal x2239=((IkReal(1.00000000000000))*(cj1));
if( IKabs(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r02)*(sj2)*(x2239)))+(((x2236)*(x2237)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x2236)*(x2238)))+(((IkReal(-1.00000000000000))*(cj2)*(x2237)*(x2239)))+(((cj1)*(cj2)*(x2238))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))))+IKsqr(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r02)*(sj2)*(x2239)))+(((x2236)*(x2237)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x2236)*(x2238)))+(((IkReal(-1.00000000000000))*(cj2)*(x2237)*(x2239)))+(((cj1)*(cj2)*(x2238)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))), ((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r02)*(sj2)*(x2239)))+(((x2236)*(x2237)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x2236)*(x2238)))+(((IkReal(-1.00000000000000))*(cj2)*(x2237)*(x2239)))+(((cj1)*(cj2)*(x2238)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x2240=IKcos(j5);
IkReal x2241=((r02)*(sj2));
IkReal x2242=((IkReal(1.00000000000000))*(sj2));
IkReal x2243=((r00)*(sj0));
IkReal x2244=((IkReal(1.00000000000000))*(cj2));
IkReal x2245=((cj0)*(r01)*(sj1));
IkReal x2246=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(IKsin(j5))+(((cj0)*(r00))));
evalcond[1]=((((sj2)*(x2246)))+(((cj2)*(x2245)))+(((IkReal(-1.00000000000000))*(sj1)*(x2243)*(x2244)))+(((cj3)*(x2240)))+(((IkReal(-1.00000000000000))*(cj1)*(x2242)*(x2243)))+(((sj1)*(x2241)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x2244))));
evalcond[2]=((((cj1)*(x2241)))+(((cj2)*(x2246)))+(((sj3)*(x2240)))+(((sj1)*(sj2)*(x2243)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x2242)*(x2245)))+(((IkReal(-1.00000000000000))*(cj1)*(x2243)*(x2244))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2247=((IkReal(1.00000000000000))*(sj2));
IkReal x2248=((cj0)*(r01));
IkReal x2249=((cj2)*(sj1));
IkReal x2250=((r00)*(sj0));
if( IKabs(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r02)*(sj1)*(x2247)))+(((IkReal(-1.00000000000000))*(x2248)*(x2249)))+(((x2249)*(x2250)))+(((cj1)*(sj2)*(x2250)))+(((cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(cj1)*(x2247)*(x2248))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))))+IKsqr(((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r02)*(sj1)*(x2247)))+(((IkReal(-1.00000000000000))*(x2248)*(x2249)))+(((x2249)*(x2250)))+(((cj1)*(sj2)*(x2250)))+(((cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(cj1)*(x2247)*(x2248)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))), ((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r02)*(sj1)*(x2247)))+(((IkReal(-1.00000000000000))*(x2248)*(x2249)))+(((x2249)*(x2250)))+(((cj1)*(sj2)*(x2250)))+(((cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(cj1)*(x2247)*(x2248)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x2251=IKcos(j5);
IkReal x2252=((r02)*(sj2));
IkReal x2253=((IkReal(1.00000000000000))*(sj2));
IkReal x2254=((r00)*(sj0));
IkReal x2255=((IkReal(1.00000000000000))*(cj2));
IkReal x2256=((cj0)*(r01)*(sj1));
IkReal x2257=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(IKsin(j5))+(((cj0)*(r00))));
evalcond[1]=((((cj3)*(x2251)))+(((sj2)*(x2257)))+(((cj2)*(x2256)))+(((sj1)*(x2252)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x2255)))+(((IkReal(-1.00000000000000))*(sj1)*(x2254)*(x2255)))+(((IkReal(-1.00000000000000))*(cj1)*(x2253)*(x2254))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj1)*(x2254)*(x2255)))+(((sj3)*(x2251)))+(((IkReal(-1.00000000000000))*(x2253)*(x2256)))+(((cj2)*(x2257)))+(((cj1)*(x2252)))+(((sj1)*(sj2)*(x2254)))+(((cj2)*(r02)*(sj1))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2258=((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30);
IkReal x2259=((cj0)*(r00));
IkReal x2260=((r00)*(sj0));
IkReal x2261=((r01)*(sj0));
IkReal x2262=((cj4)*(r02));
IkReal x2263=((cj1)*(cj4)*(sj2));
IkReal x2264=((IkReal(1.00000000000000))*(sj3)*(sj4));
IkReal x2265=((IkReal(1.00000000000000))*(cj0)*(r01));
IkReal x2266=((cj2)*(cj4)*(sj1));
if( IKabs(((x2258)*(((x2261)+(x2259))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x2258)*(((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((x2260)*(x2266)))+(((x2260)*(x2263)))+(((IkReal(-1.00000000000000))*(x2259)*(x2264)))+(((IkReal(-1.00000000000000))*(x2263)*(x2265)))+(((IkReal(-1.00000000000000))*(x2261)*(x2264)))+(((cj1)*(cj2)*(x2262)))+(((IkReal(-1.00000000000000))*(sj1)*(sj2)*(x2262)))+(((IkReal(-1.00000000000000))*(x2265)*(x2266))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x2258)*(((x2261)+(x2259)))))+IKsqr(((x2258)*(((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((x2260)*(x2266)))+(((x2260)*(x2263)))+(((IkReal(-1.00000000000000))*(x2259)*(x2264)))+(((IkReal(-1.00000000000000))*(x2263)*(x2265)))+(((IkReal(-1.00000000000000))*(x2261)*(x2264)))+(((cj1)*(cj2)*(x2262)))+(((IkReal(-1.00000000000000))*(sj1)*(sj2)*(x2262)))+(((IkReal(-1.00000000000000))*(x2265)*(x2266)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((x2258)*(((x2261)+(x2259)))), ((x2258)*(((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((x2260)*(x2266)))+(((x2260)*(x2263)))+(((IkReal(-1.00000000000000))*(x2259)*(x2264)))+(((IkReal(-1.00000000000000))*(x2263)*(x2265)))+(((IkReal(-1.00000000000000))*(x2261)*(x2264)))+(((cj1)*(cj2)*(x2262)))+(((IkReal(-1.00000000000000))*(sj1)*(sj2)*(x2262)))+(((IkReal(-1.00000000000000))*(x2265)*(x2266)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x2267=IKsin(j5);
IkReal x2268=IKcos(j5);
IkReal x2269=((r02)*(sj2));
IkReal x2270=((IkReal(1.00000000000000))*(sj2));
IkReal x2271=((r00)*(sj0));
IkReal x2272=((IkReal(1.00000000000000))*(cj2));
IkReal x2273=((IkReal(1.00000000000000))*(x2267));
IkReal x2274=((cj0)*(r01)*(sj1));
IkReal x2275=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x2273)))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj1)*(r02)*(x2272)))+(((sj1)*(x2269)))+(((IkReal(-1.00000000000000))*(sj1)*(x2271)*(x2272)))+(((sj3)*(sj4)*(x2267)))+(((cj2)*(x2274)))+(((cj3)*(x2268)))+(((sj2)*(x2275)))+(((IkReal(-1.00000000000000))*(cj1)*(x2270)*(x2271))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj1)*(x2271)*(x2272)))+(((sj1)*(sj2)*(x2271)))+(((cj1)*(x2269)))+(((IkReal(-1.00000000000000))*(x2270)*(x2274)))+(((IkReal(-1.00000000000000))*(cj3)*(sj4)*(x2273)))+(((cj2)*(r02)*(sj1)))+(((cj2)*(x2275)))+(((sj3)*(x2268))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2276=((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30);
IkReal x2277=((cj0)*(r00));
IkReal x2278=((r01)*(sj0));
IkReal x2279=((cj3)*(sj4));
IkReal x2280=((cj0)*(r01));
IkReal x2281=((cj4)*(sj2));
IkReal x2282=((r00)*(sj0));
IkReal x2283=((IkReal(1.00000000000000))*(cj2)*(cj4));
if( IKabs(((x2276)*(((x2277)+(x2278))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x2276)*(((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj1)*(r02)*(x2281)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x2283)))+(((IkReal(-1.00000000000000))*(sj1)*(x2281)*(x2282)))+(((cj1)*(cj2)*(cj4)*(x2282)))+(((IkReal(-1.00000000000000))*(cj1)*(x2280)*(x2283)))+(((x2277)*(x2279)))+(((sj1)*(x2280)*(x2281)))+(((x2278)*(x2279))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x2276)*(((x2277)+(x2278)))))+IKsqr(((x2276)*(((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj1)*(r02)*(x2281)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x2283)))+(((IkReal(-1.00000000000000))*(sj1)*(x2281)*(x2282)))+(((cj1)*(cj2)*(cj4)*(x2282)))+(((IkReal(-1.00000000000000))*(cj1)*(x2280)*(x2283)))+(((x2277)*(x2279)))+(((sj1)*(x2280)*(x2281)))+(((x2278)*(x2279)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((x2276)*(((x2277)+(x2278)))), ((x2276)*(((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj1)*(r02)*(x2281)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x2283)))+(((IkReal(-1.00000000000000))*(sj1)*(x2281)*(x2282)))+(((cj1)*(cj2)*(cj4)*(x2282)))+(((IkReal(-1.00000000000000))*(cj1)*(x2280)*(x2283)))+(((x2277)*(x2279)))+(((sj1)*(x2280)*(x2281)))+(((x2278)*(x2279)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x2284=IKsin(j5);
IkReal x2285=IKcos(j5);
IkReal x2286=((r02)*(sj2));
IkReal x2287=((IkReal(1.00000000000000))*(sj2));
IkReal x2288=((r00)*(sj0));
IkReal x2289=((IkReal(1.00000000000000))*(cj2));
IkReal x2290=((IkReal(1.00000000000000))*(x2284));
IkReal x2291=((cj0)*(r01)*(sj1));
IkReal x2292=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x2290)))+(((cj0)*(r00))));
evalcond[1]=((((cj2)*(x2291)))+(((cj3)*(x2285)))+(((IkReal(-1.00000000000000))*(cj1)*(x2287)*(x2288)))+(((IkReal(-1.00000000000000))*(sj1)*(x2288)*(x2289)))+(((sj1)*(x2286)))+(((sj2)*(x2292)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x2289)))+(((sj3)*(sj4)*(x2284))));
evalcond[2]=((((cj2)*(x2292)))+(((sj3)*(x2285)))+(((IkReal(-1.00000000000000))*(x2287)*(x2291)))+(((IkReal(-1.00000000000000))*(cj1)*(x2288)*(x2289)))+(((cj2)*(r02)*(sj1)))+(((cj1)*(x2286)))+(((IkReal(-1.00000000000000))*(cj3)*(sj4)*(x2290)))+(((sj1)*(sj2)*(x2288))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2293=(cj3)*(cj3);
IkReal x2294=(sj3)*(sj3);
IkReal x2295=((cj1)*(sj3));
IkReal x2296=((cj0)*(r01));
IkReal x2297=((r02)*(sj2));
IkReal x2298=((cj2)*(sj1));
IkReal x2299=((cj1)*(cj3));
IkReal x2300=((cj2)*(r02));
IkReal x2301=((cj3)*(sj1));
IkReal x2302=((IkReal(1.00000000000000))*(sj3));
IkReal x2303=((r00)*(sj0));
IkReal x2304=((IkReal(1.00000000000000))*(sj1)*(sj2));
IkReal x2305=((IkReal(1.00000000000000))*(x2303));
if( IKabs(((((IKabs(((((sj4)*(x2293)))+(((sj4)*(x2294))))) != 0)?((IkReal)1/(((((sj4)*(x2293)))+(((sj4)*(x2294)))))):(IkReal)1.0e30))*(((((sj3)*(x2298)*(x2303)))+(((IkReal(-1.00000000000000))*(x2296)*(x2298)*(x2302)))+(((cj2)*(x2296)*(x2299)))+(((x2295)*(x2300)))+(((IkReal(-1.00000000000000))*(cj2)*(x2299)*(x2305)))+(((sj2)*(x2301)*(x2303)))+(((IkReal(-1.00000000000000))*(sj2)*(x2296)*(x2301)))+(((IkReal(-1.00000000000000))*(sj2)*(x2295)*(x2296)))+(((cj3)*(r02)*(x2298)))+(((sj2)*(x2295)*(x2303)))+(((IkReal(-1.00000000000000))*(sj1)*(x2297)*(x2302)))+(((x2297)*(x2299))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(((((IkReal(-1.00000000000000))*(x2294)))+(((IkReal(-1.00000000000000))*(x2293))))) != 0)?((IkReal)1/(((((IkReal(-1.00000000000000))*(x2294)))+(((IkReal(-1.00000000000000))*(x2293)))))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj3)*(x2298)*(x2305)))+(((x2295)*(x2297)))+(((IkReal(-1.00000000000000))*(cj2)*(x2295)*(x2305)))+(((sj1)*(sj2)*(sj3)*(x2303)))+(((r02)*(sj3)*(x2298)))+(((x2297)*(x2301)))+(((IkReal(-1.00000000000000))*(x2299)*(x2300)))+(((IkReal(-1.00000000000000))*(sj2)*(x2299)*(x2305)))+(((IkReal(-1.00000000000000))*(sj1)*(sj2)*(x2296)*(x2302)))+(((cj3)*(x2296)*(x2298)))+(((cj2)*(x2295)*(x2296)))+(((sj2)*(x2296)*(x2299))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(((((sj4)*(x2293)))+(((sj4)*(x2294))))) != 0)?((IkReal)1/(((((sj4)*(x2293)))+(((sj4)*(x2294)))))):(IkReal)1.0e30))*(((((sj3)*(x2298)*(x2303)))+(((IkReal(-1.00000000000000))*(x2296)*(x2298)*(x2302)))+(((cj2)*(x2296)*(x2299)))+(((x2295)*(x2300)))+(((IkReal(-1.00000000000000))*(cj2)*(x2299)*(x2305)))+(((sj2)*(x2301)*(x2303)))+(((IkReal(-1.00000000000000))*(sj2)*(x2296)*(x2301)))+(((IkReal(-1.00000000000000))*(sj2)*(x2295)*(x2296)))+(((cj3)*(r02)*(x2298)))+(((sj2)*(x2295)*(x2303)))+(((IkReal(-1.00000000000000))*(sj1)*(x2297)*(x2302)))+(((x2297)*(x2299)))))))+IKsqr(((((IKabs(((((IkReal(-1.00000000000000))*(x2294)))+(((IkReal(-1.00000000000000))*(x2293))))) != 0)?((IkReal)1/(((((IkReal(-1.00000000000000))*(x2294)))+(((IkReal(-1.00000000000000))*(x2293)))))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj3)*(x2298)*(x2305)))+(((x2295)*(x2297)))+(((IkReal(-1.00000000000000))*(cj2)*(x2295)*(x2305)))+(((sj1)*(sj2)*(sj3)*(x2303)))+(((r02)*(sj3)*(x2298)))+(((x2297)*(x2301)))+(((IkReal(-1.00000000000000))*(x2299)*(x2300)))+(((IkReal(-1.00000000000000))*(sj2)*(x2299)*(x2305)))+(((IkReal(-1.00000000000000))*(sj1)*(sj2)*(x2296)*(x2302)))+(((cj3)*(x2296)*(x2298)))+(((cj2)*(x2295)*(x2296)))+(((sj2)*(x2296)*(x2299)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(((((sj4)*(x2293)))+(((sj4)*(x2294))))) != 0)?((IkReal)1/(((((sj4)*(x2293)))+(((sj4)*(x2294)))))):(IkReal)1.0e30))*(((((sj3)*(x2298)*(x2303)))+(((IkReal(-1.00000000000000))*(x2296)*(x2298)*(x2302)))+(((cj2)*(x2296)*(x2299)))+(((x2295)*(x2300)))+(((IkReal(-1.00000000000000))*(cj2)*(x2299)*(x2305)))+(((sj2)*(x2301)*(x2303)))+(((IkReal(-1.00000000000000))*(sj2)*(x2296)*(x2301)))+(((IkReal(-1.00000000000000))*(sj2)*(x2295)*(x2296)))+(((cj3)*(r02)*(x2298)))+(((sj2)*(x2295)*(x2303)))+(((IkReal(-1.00000000000000))*(sj1)*(x2297)*(x2302)))+(((x2297)*(x2299)))))), ((((IKabs(((((IkReal(-1.00000000000000))*(x2294)))+(((IkReal(-1.00000000000000))*(x2293))))) != 0)?((IkReal)1/(((((IkReal(-1.00000000000000))*(x2294)))+(((IkReal(-1.00000000000000))*(x2293)))))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj3)*(x2298)*(x2305)))+(((x2295)*(x2297)))+(((IkReal(-1.00000000000000))*(cj2)*(x2295)*(x2305)))+(((sj1)*(sj2)*(sj3)*(x2303)))+(((r02)*(sj3)*(x2298)))+(((x2297)*(x2301)))+(((IkReal(-1.00000000000000))*(x2299)*(x2300)))+(((IkReal(-1.00000000000000))*(sj2)*(x2299)*(x2305)))+(((IkReal(-1.00000000000000))*(sj1)*(sj2)*(x2296)*(x2302)))+(((cj3)*(x2296)*(x2298)))+(((cj2)*(x2295)*(x2296)))+(((sj2)*(x2296)*(x2299)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x2306=IKsin(j5);
IkReal x2307=IKcos(j5);
IkReal x2308=((r02)*(sj2));
IkReal x2309=((IkReal(1.00000000000000))*(sj2));
IkReal x2310=((r00)*(sj0));
IkReal x2311=((IkReal(1.00000000000000))*(cj2));
IkReal x2312=((IkReal(1.00000000000000))*(x2306));
IkReal x2313=((cj0)*(r01)*(sj1));
IkReal x2314=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x2312)))+(((cj0)*(r00))));
evalcond[1]=((((sj1)*(x2308)))+(((sj2)*(x2314)))+(((cj2)*(x2313)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x2311)))+(((IkReal(-1.00000000000000))*(cj1)*(x2309)*(x2310)))+(((IkReal(-1.00000000000000))*(sj1)*(x2310)*(x2311)))+(((sj3)*(sj4)*(x2306)))+(((cj3)*(x2307))));
evalcond[2]=((((cj2)*(x2314)))+(((IkReal(-1.00000000000000))*(cj3)*(sj4)*(x2312)))+(((IkReal(-1.00000000000000))*(x2309)*(x2313)))+(((IkReal(-1.00000000000000))*(cj1)*(x2310)*(x2311)))+(((sj1)*(sj2)*(x2310)))+(((sj3)*(x2307)))+(((cj1)*(x2308)))+(((cj2)*(r02)*(sj1))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
    }
}
return solutions.GetNumSolutions()>0;
}

static inline bool checkconsistency8(const IkReal* Breal)
{
    IkReal norm = 0.1;
    for(int i = 0; i < 7; ++i) {
        norm += IKabs(Breal[i]);
    }
    IkReal tol = 1e-5*norm; // have to increase the threshold since many computations are involved
    return IKabs(Breal[0]*Breal[1]-Breal[2]) < tol && IKabs(Breal[1]*Breal[1]-Breal[3]) < tol && IKabs(Breal[0]*Breal[3]-Breal[4]) < tol && IKabs(Breal[1]*Breal[3]-Breal[5]) < tol && IKabs(Breal[0]*Breal[5]-Breal[6]) < tol;
}
/// \brief Solve the det Ax^2+Bx+C = 0 problem using the Manocha and Canny method (1994)
///
/// matcoeffs is of length 54*3, for 3 matrices
static inline void solvedialyticpoly8qep(const IkReal* matcoeffs, IkReal* rawroots, int& numroots)
{
    const IkReal tol = 128.0*std::numeric_limits<IkReal>::epsilon();
    IkReal IKFAST_ALIGNED16(M[16*16]) = {0};
    IkReal IKFAST_ALIGNED16(A[8*8]);
    IkReal IKFAST_ALIGNED16(work[16*16*15]);
    int ipiv[8];
    int info, coeffindex;
    const int worksize=16*16*15;
    const int matrixdim = 8;
    const int matrixdim2 = 16;
    numroots = 0;
    // first setup M = [0 I; -C -B] and A
    coeffindex = 0;
    for(int j = 0; j < 4; ++j) {
        for(int k = 0; k < 6; ++k) {
            M[matrixdim+(j+4)+2*matrixdim*k] = M[matrixdim+j+2*matrixdim*(k+2)] = -matcoeffs[coeffindex++];
        }
    }
    for(int j = 0; j < 4; ++j) {
        for(int k = 0; k < 6; ++k) {
            M[matrixdim+(j+4)+2*matrixdim*k+matrixdim*2*matrixdim] = M[matrixdim+j+2*matrixdim*(k+2)+matrixdim*2*matrixdim] = -matcoeffs[coeffindex++];
        }
    }
    for(int j = 0; j < 4; ++j) {
        for(int k = 0; k < 6; ++k) {
            A[(j+4)+matrixdim*k] = A[j+matrixdim*(k+2)] = matcoeffs[coeffindex++];
        }
        for(int k = 0; k < 2; ++k) {
            A[j+matrixdim*k] = A[(j+4)+matrixdim*(k+6)] = 0;
        }
    }
    const IkReal lfpossibilities[4][4] = {{1,-1,1,1},{1,0,-2,1},{1,1,2,0},{1,-1,4,1}};
    int lfindex = -1;
    bool bsingular = true;
    do {
        dgetrf_(&matrixdim,&matrixdim,A,&matrixdim,&ipiv[0],&info);
        if( info == 0 ) {
            bsingular = false;
            for(int j = 0; j < matrixdim; ++j) {
                if( IKabs(A[j*matrixdim+j]) < 100*tol ) {
                    bsingular = true;
                    break;
                }
            }
            if( !bsingular ) {
                break;
            }
        }
        if( lfindex == 3 ) {
            break;
        }
        // transform by the linear functional
        lfindex++;
        const IkReal* lf = lfpossibilities[lfindex];
        // have to reinitialize A
        coeffindex = 0;
        for(int j = 0; j < 4; ++j) {
            for(int k = 0; k < 6; ++k) {
                IkReal a = matcoeffs[coeffindex+48], b = matcoeffs[coeffindex+24], c = matcoeffs[coeffindex];
                A[(j+4)+matrixdim*k] = A[j+matrixdim*(k+2)] = lf[0]*lf[0]*a+lf[0]*lf[2]*b+lf[2]*lf[2]*c;
                M[matrixdim+(j+4)+2*matrixdim*k] = M[matrixdim+j+2*matrixdim*(k+2)] = -(lf[1]*lf[1]*a + lf[1]*lf[3]*b + lf[3]*lf[3]*c);
                M[matrixdim+(j+4)+2*matrixdim*k+matrixdim*2*matrixdim] = M[matrixdim+j+2*matrixdim*(k+2)+matrixdim*2*matrixdim] = -(2*lf[0]*lf[1]*a + (lf[0]*lf[3]+lf[1]*lf[2])*b + 2*lf[2]*lf[3]*c);
                coeffindex++;
            }
            for(int k = 0; k < 2; ++k) {
                A[j+matrixdim*k] = A[(j+4)+matrixdim*(k+6)] = 0;
            }
        }
    } while(lfindex<4);

    if( bsingular ) {
        return;
    }
    dgetrs_("No transpose", &matrixdim, &matrixdim2, A, &matrixdim, &ipiv[0], &M[matrixdim], &matrixdim2, &info);
    if( info != 0 ) {
        return;
    }

    // set identity in upper corner
    for(int j = 0; j < matrixdim; ++j) {
        M[matrixdim*2*matrixdim+j+matrixdim*2*j] = 1;
    }
    IkReal IKFAST_ALIGNED16(wr[16]);
    IkReal IKFAST_ALIGNED16(wi[16]);
    IkReal IKFAST_ALIGNED16(vr[16*16]);
    int one=1;
    dgeev_("N", "V", &matrixdim2, M, &matrixdim2, wr, wi,NULL, &one, vr, &matrixdim2, work, &worksize, &info);
    if( info != 0 ) {
        return;
    }
    IkReal Breal[matrixdim-1];
    for(int i = 0; i < matrixdim2; ++i) {
        if( IKabs(wi[i]) < tol*100 ) {
            IkReal* ev = vr+matrixdim2*i;
            if( IKabs(wr[i]) > 1 ) {
                ev += matrixdim;
            }
            // consistency has to be checked!!
            if( IKabs(ev[0]) < tol ) {
                continue;
            }
            IkReal iconst = 1/ev[0];
            for(int j = 1; j < matrixdim; ++j) {
                Breal[j-1] = ev[j]*iconst;
            }
            if( checkconsistency8(Breal) ) {
                if( lfindex >= 0 ) {
                    const IkReal* lf = lfpossibilities[lfindex];
                    rawroots[numroots++] = (wr[i]*lf[0]+lf[1])/(wr[i]*lf[2]+lf[3]);
                }
                else {
                    rawroots[numroots++] = wr[i];
                }
                bool bsmall0=IKabs(ev[0]) > IKabs(ev[2]);
                bool bsmall1=IKabs(ev[0]) > IKabs(ev[1]);
                if( bsmall0 && bsmall1 ) {
                    rawroots[numroots++] = ev[2]/ev[0];
                    rawroots[numroots++] = ev[1]/ev[0];
                }
                else if( bsmall0 && !bsmall1 ) {
                    rawroots[numroots++] = ev[3]/ev[1];
                    rawroots[numroots++] = ev[1]/ev[0];
                }
                else if( !bsmall0 && bsmall1 ) {
                    rawroots[numroots++] = ev[6]/ev[4];
                    rawroots[numroots++] = ev[7]/ev[6];
                }
                else if( !bsmall0 && !bsmall1 ) {
                    rawroots[numroots++] = ev[7]/ev[5];
                    rawroots[numroots++] = ev[7]/ev[6];
                }
            }
        }
    }
}};


/// solves the inverse kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
IKSolver solver;
return solver.ComputeIk(eetrans,eerot,pfree,solutions);
}

IKFAST_API const char* GetKinematicsHash() { return "<robot:GenericRobot - grips_simple_gripper (0ded24523eb0e17e4eab3bcad02e5819)>"; }

IKFAST_API const char* GetIkFastVersion() { return IKFAST_STRINGIZE(IKFAST_VERSION); }

#ifdef IKFAST_NAMESPACE
} // end namespace
#endif

#ifndef IKFAST_NO_MAIN
#include <stdio.h>
#include <stdlib.h>
#ifdef IKFAST_NAMESPACE
using namespace IKFAST_NAMESPACE;
#endif
int main(int argc, char** argv)
{
    if( argc != 12+GetNumFreeParameters()+1 ) {
        printf("\nUsage: ./ik r00 r01 r02 t0 r10 r11 r12 t1 r20 r21 r22 t2 free0 ...\n\n"
               "Returns the ik solutions given the transformation of the end effector specified by\n"
               "a 3x3 rotation R (rXX), and a 3x1 translation (tX).\n"
               "There are %d free parameters that have to be specified.\n\n",GetNumFreeParameters());
        return 1;
    }

    IkSolutionList<IkReal> solutions;
    std::vector<IkReal> vfree(GetNumFreeParameters());
    IkReal eerot[9],eetrans[3];
    eerot[0] = atof(argv[1]); eerot[1] = atof(argv[2]); eerot[2] = atof(argv[3]); eetrans[0] = atof(argv[4]);
    eerot[3] = atof(argv[5]); eerot[4] = atof(argv[6]); eerot[5] = atof(argv[7]); eetrans[1] = atof(argv[8]);
    eerot[6] = atof(argv[9]); eerot[7] = atof(argv[10]); eerot[8] = atof(argv[11]); eetrans[2] = atof(argv[12]);
    for(std::size_t i = 0; i < vfree.size(); ++i)
        vfree[i] = atof(argv[13+i]);
    bool bSuccess = ComputeIk(eetrans, eerot, vfree.size() > 0 ? &vfree[0] : NULL, solutions);

    if( !bSuccess ) {
        fprintf(stderr,"Failed to get ik solution\n");
        return -1;
    }

    printf("Found %d ik solutions:\n", (int)solutions.GetNumSolutions());
    std::vector<IkReal> solvalues(GetNumJoints());
    for(std::size_t i = 0; i < solutions.GetNumSolutions(); ++i) {
        const IkSolutionBase<IkReal>& sol = solutions.GetSolution(i);
        printf("sol%d (free=%d): ", (int)i, (int)sol.GetFree().size());
        std::vector<IkReal> vsolfree(sol.GetFree().size());
        sol.GetSolution(&solvalues[0],vsolfree.size()>0?&vsolfree[0]:NULL);
        for( std::size_t j = 0; j < solvalues.size(); ++j)
            printf("%.15f, ", solvalues[j]);
        printf("\n");
    }
    return 0;
}

#endif
