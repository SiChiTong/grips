/// autogenerated analytical inverse kinematics code from ikfast program part of OpenRAVE
/// \author Rosen Diankov
///
/// Licensed under the Apache License, Version 2.0 (the "License");
/// you may not use this file except in compliance with the License.
/// You may obtain a copy of the License at
///     http://www.apache.org/licenses/LICENSE-2.0
/// 
/// Unless required by applicable law or agreed to in writing, software
/// distributed under the License is distributed on an "AS IS" BASIS,
/// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
/// See the License for the specific language governing permissions and
/// limitations under the License.
///
/// ikfast version 61 generated on 2013-08-28 18:47:10.887644
/// To compile with gcc:
///     gcc -lstdc++ ik.cpp
/// To compile without any main function as a shared object (might need -llapack):
///     gcc -fPIC -lstdc++ -DIKFAST_NO_MAIN -DIKFAST_CLIBRARY -shared -Wl,-soname,libik.so -o libik.so ik.cpp
#define IKFAST_HAS_LIBRARY
#include "ikfast.h" // found inside share/openrave-X.Y/python/ikfast.h
using namespace ikfast;

// check if the included ikfast version matches what this file was compiled with
#define IKFAST_COMPILE_ASSERT(x) extern int __dummy[(int)x]
IKFAST_COMPILE_ASSERT(IKFAST_VERSION==61);

#include <cmath>
#include <vector>
#include <limits>
#include <algorithm>
#include <complex>

#define IKFAST_STRINGIZE2(s) #s
#define IKFAST_STRINGIZE(s) IKFAST_STRINGIZE2(s)

#ifndef IKFAST_ASSERT
#include <stdexcept>
#include <sstream>
#include <iostream>

#ifdef _MSC_VER
#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __FUNCDNAME__
#endif
#endif

#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __func__
#endif

#define IKFAST_ASSERT(b) { if( !(b) ) { std::stringstream ss; ss << "ikfast exception: " << __FILE__ << ":" << __LINE__ << ": " <<__PRETTY_FUNCTION__ << ": Assertion '" << #b << "' failed"; throw std::runtime_error(ss.str()); } }

#endif

#if defined(_MSC_VER)
#define IKFAST_ALIGNED16(x) __declspec(align(16)) x
#else
#define IKFAST_ALIGNED16(x) x __attribute((aligned(16)))
#endif

#define IK2PI  ((IkReal)6.28318530717959)
#define IKPI  ((IkReal)3.14159265358979)
#define IKPI_2  ((IkReal)1.57079632679490)

#ifdef _MSC_VER
#ifndef isnan
#define isnan _isnan
#endif
#endif // _MSC_VER

// lapack routines
extern "C" {
  void dgetrf_ (const int* m, const int* n, double* a, const int* lda, int* ipiv, int* info);
  void zgetrf_ (const int* m, const int* n, std::complex<double>* a, const int* lda, int* ipiv, int* info);
  void dgetri_(const int* n, const double* a, const int* lda, int* ipiv, double* work, const int* lwork, int* info);
  void dgesv_ (const int* n, const int* nrhs, double* a, const int* lda, int* ipiv, double* b, const int* ldb, int* info);
  void dgetrs_(const char *trans, const int *n, const int *nrhs, double *a, const int *lda, int *ipiv, double *b, const int *ldb, int *info);
  void dgeev_(const char *jobvl, const char *jobvr, const int *n, double *a, const int *lda, double *wr, double *wi,double *vl, const int *ldvl, double *vr, const int *ldvr, double *work, const int *lwork, int *info);
}

using namespace std; // necessary to get std math routines

#ifdef IKFAST_NAMESPACE
namespace IKFAST_NAMESPACE {
#endif

inline float IKabs(float f) { return fabsf(f); }
inline double IKabs(double f) { return fabs(f); }

inline float IKsqr(float f) { return f*f; }
inline double IKsqr(double f) { return f*f; }

inline float IKlog(float f) { return logf(f); }
inline double IKlog(double f) { return log(f); }

// allows asin and acos to exceed 1
#ifndef IKFAST_SINCOS_THRESH
#define IKFAST_SINCOS_THRESH ((IkReal)0.000001)
#endif

// used to check input to atan2 for degenerate cases
#ifndef IKFAST_ATAN2_MAGTHRESH
#define IKFAST_ATAN2_MAGTHRESH ((IkReal)2e-6)
#endif

// minimum distance of separate solutions
#ifndef IKFAST_SOLUTION_THRESH
#define IKFAST_SOLUTION_THRESH ((IkReal)1e-6)
#endif

inline float IKasin(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(-IKPI_2);
else if( f >= 1 ) return float(IKPI_2);
return asinf(f);
}
inline double IKasin(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return -IKPI_2;
else if( f >= 1 ) return IKPI_2;
return asin(f);
}

// return positive value in [0,y)
inline float IKfmod(float x, float y)
{
    while(x < 0) {
        x += y;
    }
    return fmodf(x,y);
}

// return positive value in [0,y)
inline double IKfmod(double x, double y)
{
    while(x < 0) {
        x += y;
    }
    return fmod(x,y);
}

inline float IKacos(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(IKPI);
else if( f >= 1 ) return float(0);
return acosf(f);
}
inline double IKacos(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return IKPI;
else if( f >= 1 ) return 0;
return acos(f);
}
inline float IKsin(float f) { return sinf(f); }
inline double IKsin(double f) { return sin(f); }
inline float IKcos(float f) { return cosf(f); }
inline double IKcos(double f) { return cos(f); }
inline float IKtan(float f) { return tanf(f); }
inline double IKtan(double f) { return tan(f); }
inline float IKsqrt(float f) { if( f <= 0.0f ) return 0.0f; return sqrtf(f); }
inline double IKsqrt(double f) { if( f <= 0.0 ) return 0.0; return sqrt(f); }
inline float IKatan2(float fy, float fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return float(IKPI_2);
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2f(fy,fx);
}
inline double IKatan2(double fy, double fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return IKPI_2;
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2(fy,fx);
}

inline float IKsign(float f) {
    if( f > 0 ) {
        return float(1);
    }
    else if( f < 0 ) {
        return float(-1);
    }
    return 0;
}

inline double IKsign(double f) {
    if( f > 0 ) {
        return 1.0;
    }
    else if( f < 0 ) {
        return -1.0;
    }
    return 0;
}

/// solves the forward kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API void ComputeFk(const IkReal* j, IkReal* eetrans, IkReal* eerot) {
IkReal x0,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,x31,x32,x33,x34,x35,x36,x37,x38,x39,x40,x41,x42,x43,x44,x45,x46,x47,x48,x49;
x0=IKsin(j[0]);
x1=IKcos(j[1]);
x2=IKsin(j[1]);
x3=IKsin(j[2]);
x4=IKcos(j[2]);
x5=IKcos(j[3]);
x6=IKsin(j[3]);
x7=IKsin(j[4]);
x8=IKcos(j[0]);
x9=IKcos(j[4]);
x10=IKcos(j[5]);
x11=IKsin(j[5]);
x12=((IkReal(0.133220000000000))*(x4));
x13=((IkReal(0.190890000000000))*(x7));
x14=((IkReal(0.133220000000000))*(x8));
x15=((IkReal(0.00750000000000000))*(x0));
x16=((IkReal(0.00750000000000000))*(x8));
x17=((IkReal(0.521670000000000))*(x2));
x18=((IkReal(1.00000000000000))*(x0));
x19=((IkReal(0.0513300000000000))*(x8));
x20=((IkReal(0.133220000000000))*(x0));
x21=((IkReal(0.190890000000000))*(x5));
x22=((IkReal(0.0513300000000000))*(x0));
x23=((IkReal(0.261090000000000))*(x0));
x24=((IkReal(1.00000000000000))*(x5));
x25=((IkReal(1.00000000000000))*(x8));
x26=((IkReal(1.00000000000000))*(x6));
x27=((IkReal(0.190890000000000))*(x6));
x28=((x1)*(x3));
x29=((x2)*(x4));
x30=((x1)*(x8));
x31=((x0)*(x9));
x32=((x1)*(x4));
x33=((x2)*(x3));
x34=((x0)*(x1));
x35=((x8)*(x9));
x36=((IkReal(-0.000790000000000000))*(x5));
x37=((IkReal(1.00000000000000))*(x32));
x38=((x28)+(x29));
x39=((((IkReal(-1.00000000000000))*(x33)))+(x37));
x40=((x38)*(x5));
x41=((x39)*(x6));
x42=((((IkReal(-1.00000000000000))*(x18)*(x32)))+(((x0)*(x33))));
x43=((((x30)*(x4)))+(((IkReal(-1.00000000000000))*(x25)*(x33))));
x44=((x18)*(((x28)+(x29))));
x45=((x25)*(((((IkReal(-1.00000000000000))*(x28)))+(((IkReal(-1.00000000000000))*(x29))))));
x46=((x43)*(x5));
x47=((x42)*(x5));
x48=((x44)*(x6));
x49=((x45)*(x6));
eetrans[0]=((((x0)*(x17)))+(((IkReal(-0.000790000000000000))*(x35)))+(((x23)*(x33)))+(((x7)*(((((IkReal(-0.000790000000000000))*(x48)))+(((x36)*(x42)))))))+(((x5)*(((((x20)*(x33)))+(((IkReal(-1.00000000000000))*(x12)*(x34)))))))+(((x5)*(((((x22)*(x29)))+(((x22)*(x28)))))))+(((x9)*(((((x27)*(x44)))+(((x21)*(x42)))))))+(((IkReal(-1.00000000000000))*(x23)*(x32)))+(((x6)*(((((x0)*(x12)*(x2)))+(((x20)*(x28)))))))+(((x6)*(((((x22)*(x32)))+(((IkReal(-1.00000000000000))*(x22)*(x33)))))))+(((x15)*(x28)))+(((x15)*(x29)))+(((IkReal(0.00982000000000000))*(x34)))+(((IkReal(-1.00000000000000))*(x13)*(x8))));
IkReal x50=((IkReal(1.00000000000000))*(x28));
IkReal x51=((IkReal(1.00000000000000))*(x8));
IkReal x52=((IkReal(1.00000000000000))*(x29));
eetrans[1]=((((IkReal(-1.00000000000000))*(x17)*(x51)))+(((IkReal(-1.00000000000000))*(x16)*(x50)))+(((IkReal(-1.00000000000000))*(x16)*(x52)))+(((IkReal(-0.261090000000000))*(x33)*(x8)))+(((IkReal(-0.000790000000000000))*(x31)))+(((IkReal(-0.00982000000000000))*(x30)))+(((x7)*(((((IkReal(-0.000790000000000000))*(x49)))+(((x36)*(x43)))))))+(((IkReal(-1.00000000000000))*(x0)*(x13)))+(((x6)*(((((IkReal(-1.00000000000000))*(x14)*(x50)))+(((IkReal(-1.00000000000000))*(x12)*(x2)*(x51)))))))+(((x5)*(((((IkReal(-1.00000000000000))*(x14)*(x33)))+(((x12)*(x30)))))))+(((x9)*(((((x27)*(x45)))+(((x21)*(x43)))))))+(((x6)*(((((x19)*(x33)))+(((IkReal(-1.00000000000000))*(x19)*(x32)))))))+(((x5)*(((((IkReal(-1.00000000000000))*(x19)*(x52)))+(((IkReal(-1.00000000000000))*(x19)*(x50)))))))+(((IkReal(0.261090000000000))*(x30)*(x4))));
eetrans[2]=((IkReal(0.353360000000000))+(((x6)*(((((IkReal(-0.0513300000000000))*(x28)))+(((IkReal(-0.0513300000000000))*(x29)))))))+(((x9)*(((((x27)*(x39)))+(((x21)*(x38)))))))+(((x7)*(((((IkReal(-0.000790000000000000))*(x41)))+(((IkReal(-0.000790000000000000))*(x40)))))))+(((IkReal(0.261090000000000))*(x28)))+(((IkReal(0.261090000000000))*(x29)))+(((IkReal(0.00750000000000000))*(x32)))+(((IkReal(-0.00750000000000000))*(x33)))+(((x5)*(((((IkReal(0.133220000000000))*(x28)))+(((x12)*(x2)))))))+(((x5)*(((((IkReal(-0.0513300000000000))*(x33)))+(((IkReal(0.0513300000000000))*(x32)))))))+(((IkReal(0.521670000000000))*(x1)))+(((x6)*(((((x1)*(x12)))+(((IkReal(-0.133220000000000))*(x33)))))))+(((IkReal(-0.00982000000000000))*(x2))));
eerot[0]=((((x10)*(((((IkReal(-1.00000000000000))*(x42)*(x6)))+(((IkReal(1.00000000000000))*(x44)*(x5)))))))+(((x11)*(((x35)+(((x7)*(((x48)+(x47))))))))));
eerot[1]=((((x11)*(((x31)+(((x7)*(((x49)+(x46)))))))))+(((x10)*(((((IkReal(-1.00000000000000))*(x26)*(x43)))+(((IkReal(-1.00000000000000))*(x24)*(((((x29)*(x8)))+(((x28)*(x8))))))))))));
eerot[2]=((((IkReal(-1.00000000000000))*(x10)*(((((x26)*(x38)))+(((x24)*(((((IkReal(-1.00000000000000))*(x37)))+(x33)))))))))+(((x11)*(x7)*(((x40)+(x41))))));
}

IKFAST_API int GetNumFreeParameters() { return 1; }
IKFAST_API int* GetFreeParameters() { static int freeparams[] = {1}; return freeparams; }
IKFAST_API int GetNumJoints() { return 6; }

IKFAST_API int GetIkRealSize() { return sizeof(IkReal); }

IKFAST_API int GetIkType() { return 0x56000007; }

class IKSolver {
public:
IkReal j0,cj0,sj0,htj0,j2,cj2,sj2,htj2,j3,cj3,sj3,htj3,j4,cj4,sj4,htj4,j5,cj5,sj5,htj5,j1,cj1,sj1,htj1,new_r00,r00,rxp0_0,new_r01,r01,rxp0_1,new_r02,r02,rxp0_2,new_px,px,npx,new_py,py,npy,new_pz,pz,npz,pp;
unsigned char _ij0[2], _nj0,_ij2[2], _nj2,_ij3[2], _nj3,_ij4[2], _nj4,_ij5[2], _nj5,_ij1[2], _nj1;

bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
j0=numeric_limits<IkReal>::quiet_NaN(); _ij0[0] = -1; _ij0[1] = -1; _nj0 = -1; j2=numeric_limits<IkReal>::quiet_NaN(); _ij2[0] = -1; _ij2[1] = -1; _nj2 = -1; j3=numeric_limits<IkReal>::quiet_NaN(); _ij3[0] = -1; _ij3[1] = -1; _nj3 = -1; j4=numeric_limits<IkReal>::quiet_NaN(); _ij4[0] = -1; _ij4[1] = -1; _nj4 = -1; j5=numeric_limits<IkReal>::quiet_NaN(); _ij5[0] = -1; _ij5[1] = -1; _nj5 = -1;  _ij1[0] = -1; _ij1[1] = -1; _nj1 = 0; 
for(int dummyiter = 0; dummyiter < 1; ++dummyiter) {
    solutions.Clear();
px = eetrans[0]; py = eetrans[1]; pz = eetrans[2];

j1=pfree[0]; cj1=cos(pfree[0]); sj1=sin(pfree[0]);
r00 = eerot[0];
r01 = eerot[1];
r02 = eerot[2];
px = eetrans[0]; py = eetrans[1]; pz = eetrans[2];
new_r00=r00;
new_px=px;
new_r01=r01;
new_py=py;
new_r02=r02;
new_pz=((IkReal(-0.353360000000000))+(pz));
r00 = new_r00; r01 = new_r01; r02 = new_r02; px = new_px; py = new_py; pz = new_pz;

pp=(((px)*(px))+((py)*(py))+((pz)*(pz)));
IkReal op[72], zeror[48];
int numroots;
IkReal x53=((IkReal(1.00000000000000))*(pp));
IkReal x54=(pz)*(pz);
IkReal x55=(py)*(py);
IkReal x56=((IkReal(0.000443272747006129))*(r00));
IkReal x57=(px)*(px);
IkReal x58=((IkReal(0.000886545494012258))*(r01));
IkReal x59=((IkReal(0.00173324448348787))*(r00));
IkReal x60=((IkReal(5.01546454502593e-5))*(r00));
IkReal x61=((IkReal(0.00226426988131385))*(r00));
IkReal x62=((IkReal(0.00126764661210645))*(r00));
IkReal x63=((IkReal(5.84988829482948e-5))*(r00));
IkReal x64=((IkReal(0.000163354168819739))*(r00));
IkReal x65=((IkReal(0.00128359884633559))*(r00));
IkReal x66=((IkReal(0.00224758140631777))*(r00));
IkReal x67=((IkReal(0.000171698406317775))*(r00));
IkReal x68=((IkReal(0.00170454646896642))*(r00));
IkReal x69=((cj1)*(px));
IkReal x70=((r00)*(sj1));
IkReal x71=((px)*(r02));
IkReal x72=((py)*(r02));
IkReal x73=((px)*(sj1));
IkReal x74=((pz)*(sj1));
IkReal x75=((cj1)*(r00));
IkReal x76=((IkReal(2.00000000000000))*(pp));
IkReal x77=((cj1)*(pz));
IkReal x78=((py)*(r01));
IkReal x79=((r02)*(sj1));
IkReal x80=((px)*(r00));
IkReal x81=((pz)*(r00));
IkReal x82=((cj1)*(r02));
IkReal x83=((r01)*(sj1));
IkReal x84=((cj1)*(r01));
IkReal x85=((px)*(py));
IkReal x86=((cj1)*(py));
IkReal x87=((pz)*(r01));
IkReal x88=((px)*(pz));
IkReal x89=((py)*(r00));
IkReal x90=((py)*(sj1));
IkReal x91=((pz)*(r02));
IkReal x92=((IkReal(0.000849718686154330))*(r01));
IkReal x93=((IkReal(4.00000000000000))*(pp));
IkReal x94=((IkReal(0.266440000000000))*(x90));
IkReal x95=((IkReal(0.266440000000000))*(x77));
IkReal x96=((IkReal(1.05834000000000))*(x77));
IkReal x97=((IkReal(0.0300000000000000))*(x86));
IkReal x98=((IkReal(0.0300000000000000))*(x74));
IkReal x99=((IkReal(1.02834000000000))*(x77));
IkReal x100=((IkReal(1.02834000000000))*(x90));
IkReal x101=((IkReal(0.00413850908900414))*(pp)*(r00));
IkReal x102=((IkReal(1.05834000000000))*(x80));
IkReal x103=((IkReal(1.05834000000000))*(x91));
IkReal x104=((IkReal(1.05834000000000))*(x78));
IkReal x105=((pp)*(x82));
IkReal x106=((IkReal(0.502540000000000))*(x78));
IkReal x107=((IkReal(0.502540000000000))*(x91));
IkReal x108=((IkReal(0.502540000000000))*(x80));
IkReal x109=((IkReal(0.0392800000000000))*(x78));
IkReal x110=((IkReal(2.08668000000000))*(x87));
IkReal x111=((IkReal(0.0392800000000000))*(x80));
IkReal x112=((IkReal(0.0392800000000000))*(x91));
IkReal x113=((IkReal(2.08668000000000))*(x72));
IkReal x114=((IkReal(0.0392800000000000))*(x87));
IkReal x115=((IkReal(0.0392800000000000))*(x72));
IkReal x116=((IkReal(2.08668000000000))*(x91));
IkReal x117=((IkReal(2.08668000000000))*(x78));
IkReal x118=((IkReal(2.08668000000000))*(x80));
IkReal x119=((pp)*(x83));
IkReal x120=((IkReal(1.02834000000000))*(x78));
IkReal x121=((IkReal(1.02834000000000))*(x91));
IkReal x122=((IkReal(1.02834000000000))*(x80));
IkReal x123=((pp)*(x79));
IkReal x124=((pp)*(x84));
IkReal x125=((IkReal(0.541820000000000))*(x80));
IkReal x126=((IkReal(0.541820000000000))*(x91));
IkReal x127=((IkReal(0.541820000000000))*(x78));
IkReal x128=((IkReal(0.532880000000000))*(x73));
IkReal x129=((IkReal(2.11668000000000))*(x73));
IkReal x130=((IkReal(1.06576000000000))*(x69));
IkReal x131=((IkReal(0.0600000000000000))*(x69));
IkReal x132=((IkReal(2.05668000000000))*(x73));
IkReal x133=((IkReal(0.00827701817800828))*(pp)*(r01));
IkReal x134=((IkReal(4.17336000000000))*(x71));
IkReal x135=((IkReal(4.17336000000000))*(x81));
IkReal x136=((IkReal(0.0785600000000000))*(x71));
IkReal x137=((IkReal(0.0785600000000000))*(x81));
IkReal x138=((IkReal(0.768980000000000))*(x74));
IkReal x139=((IkReal(1.05834000000000))*(x90));
IkReal x140=((IkReal(0.768980000000000))*(x86));
IkReal x141=((IkReal(1.57724000000000))*(x77));
IkReal x142=((IkReal(1.57724000000000))*(x90));
IkReal x143=((IkReal(0.532880000000000))*(x86));
IkReal x144=((IkReal(0.532880000000000))*(x74));
IkReal x145=((IkReal(0.808260000000000))*(x86));
IkReal x146=((IkReal(0.808260000000000))*(x74));
IkReal x147=((IkReal(0.236100000000000))*(x74));
IkReal x148=((IkReal(0.236100000000000))*(x86));
IkReal x149=((IkReal(0.511480000000000))*(x77));
IkReal x150=((IkReal(0.511480000000000))*(x90));
IkReal x151=((IkReal(0.275380000000000))*(x86));
IkReal x152=((IkReal(0.275380000000000))*(x74));
IkReal x153=((IkReal(0.255151589300000))*(x84));
IkReal x154=((IkReal(0.291724470000000))*(x83));
IkReal x155=((IkReal(0.291724470000000))*(x82));
IkReal x156=((IkReal(1.16100000000000))*(x72));
IkReal x157=((IkReal(1.16100000000000))*(x87));
IkReal x158=((IkReal(0.255151589300000))*(x79));
IkReal x159=((IkReal(0.236100000000000))*(x87));
IkReal x160=((IkReal(0.299889933700000))*(x83));
IkReal x161=((IkReal(0.124937037000000))*(x79));
IkReal x162=((IkReal(0.299889933700000))*(x82));
IkReal x163=((IkReal(0.236100000000000))*(x72));
IkReal x164=((IkReal(0.124937037000000))*(x84));
IkReal x165=((IkReal(0.0819308964000000))*(x84));
IkReal x166=((IkReal(0.710884447000000))*(x82));
IkReal x167=((IkReal(0.710884447000000))*(x83));
IkReal x168=((IkReal(0.0819308964000000))*(x79));
IkReal x169=((IkReal(0.0243272976000000))*(x83));
IkReal x170=((IkReal(0.0243272976000000))*(x82));
IkReal x171=((IkReal(0.509065592200000))*(x79));
IkReal x172=((IkReal(0.509065592200000))*(x84));
IkReal x173=((IkReal(0.122136589700000))*(x79));
IkReal x174=((IkReal(0.925680000000000))*(x87));
IkReal x175=((IkReal(0.250775968800000))*(x82));
IkReal x176=((IkReal(0.250775968800000))*(x83));
IkReal x177=((IkReal(0.925680000000000))*(x72));
IkReal x178=((IkReal(0.122136589700000))*(x84));
IkReal x179=((IkReal(0.275380000000000))*(x87));
IkReal x180=((IkReal(0.141592134600000))*(x79));
IkReal x181=((IkReal(0.141592134600000))*(x84));
IkReal x182=((IkReal(0.275380000000000))*(x72));
IkReal x183=((IkReal(0.279217100100000))*(x83));
IkReal x184=((IkReal(0.279217100100000))*(x82));
IkReal x185=((IkReal(0.406921146600000))*(x84));
IkReal x186=((IkReal(0.768980000000000))*(x72));
IkReal x187=((IkReal(0.768980000000000))*(x87));
IkReal x188=((IkReal(0.406921146600000))*(x79));
IkReal x189=((IkReal(0.165993176100000))*(x83));
IkReal x190=((IkReal(0.165993176100000))*(x82));
IkReal x191=((IkReal(0.955680000000000))*(x72));
IkReal x192=((IkReal(0.240133713600000))*(x83));
IkReal x193=((IkReal(0.240133713600000))*(x82));
IkReal x194=((IkReal(0.146502404900000))*(x84));
IkReal x195=((IkReal(0.955680000000000))*(x87));
IkReal x196=((IkReal(0.146502404900000))*(x79));
IkReal x197=((IkReal(0.787324870600000))*(x84));
IkReal x198=((IkReal(0.0323204976000000))*(x82));
IkReal x199=((IkReal(0.787324870600000))*(x79));
IkReal x200=((IkReal(0.0323204976000000))*(x83));
IkReal x201=((IkReal(0.713964247000000))*(x82));
IkReal x202=((IkReal(0.713964247000000))*(x83));
IkReal x203=((IkReal(0.0252831012000000))*(x79));
IkReal x204=((IkReal(0.0252831012000000))*(x84));
IkReal x205=((IkReal(0.134854579300000))*(x82));
IkReal x206=((IkReal(0.134854579300000))*(x83));
IkReal x207=((IkReal(0.808260000000000))*(x72));
IkReal x208=((IkReal(0.415583044200000))*(x84));
IkReal x209=((IkReal(0.808260000000000))*(x87));
IkReal x210=((IkReal(0.415583044200000))*(x79));
IkReal x211=((IkReal(0.306399210000000))*(x83));
IkReal x212=((IkReal(1.13100000000000))*(x87));
IkReal x213=((IkReal(0.306399210000000))*(x82));
IkReal x214=((IkReal(0.227705974100000))*(x79));
IkReal x215=((IkReal(1.13100000000000))*(x72));
IkReal x216=((IkReal(0.227705974100000))*(x84));
IkReal x217=((IkReal(4.00000000000000))*(x57));
IkReal x218=((IkReal(4.00000000000000))*(x54));
IkReal x219=((IkReal(2.00000000000000))*(x54));
IkReal x220=((IkReal(4.00000000000000))*(x55));
IkReal x221=((IkReal(8.00000000000000))*(x57));
IkReal x222=((IkReal(2.00000000000000))*(x55));
IkReal x223=((IkReal(0.00827701817800828))*(r00)*(x57));
IkReal x224=((IkReal(0.00827701817800828))*(px)*(x78));
IkReal x225=((IkReal(0.00827701817800828))*(pz)*(x71));
IkReal x226=((IkReal(0.000424859343077165))*(sj1)*(x71));
IkReal x227=((IkReal(0.000424859343077165))*(r01)*(x69));
IkReal x228=((IkReal(0.000424859343077165))*(pz)*(x70));
IkReal x229=((IkReal(0.000424859343077165))*(py)*(x75));
IkReal x230=((x53)*(x83));
IkReal x231=((IkReal(0.00207976635758814))*(py)*(x75));
IkReal x232=((IkReal(0.00207976635758814))*(pz)*(x70));
IkReal x233=((x53)*(x84));
IkReal x234=((IkReal(0.00207976635758814))*(sj1)*(x71));
IkReal x235=((IkReal(0.00207976635758814))*(r01)*(x69));
IkReal x236=((x53)*(x79));
IkReal x237=((IkReal(0.000849718686154330))*(py)*(x70));
IkReal x238=((IkReal(0.000849718686154330))*(r02)*(x69));
IkReal x239=((x73)*(x92));
IkReal x240=((IkReal(0.000849718686154330))*(pz)*(x75));
IkReal x241=((x76)*(x79));
IkReal x242=((x76)*(x84));
IkReal x243=((x76)*(x83));
IkReal x244=((IkReal(0.00432209335219236))*(r01)*(x73));
IkReal x245=((IkReal(0.00432209335219236))*(pz)*(x75));
IkReal x246=((IkReal(0.00432209335219236))*(r02)*(x69));
IkReal x247=((x76)*(x82));
IkReal x248=((IkReal(0.00432209335219236))*(py)*(x70));
IkReal x249=((x53)*(x82));
IkReal x250=((IkReal(0.00224232699460422))*(sj1)*(x71));
IkReal x251=((IkReal(0.00224232699460422))*(r01)*(x69));
IkReal x252=((IkReal(0.00224232699460422))*(py)*(x75));
IkReal x253=((IkReal(0.00224232699460422))*(pz)*(x70));
IkReal x254=((IkReal(-0.532880000000000))*(x73));
IkReal x255=((IkReal(0.0165540363560166))*(py)*(x80));
IkReal x256=((x75)*(x76));
IkReal x257=((IkReal(0.0165540363560166))*(r01)*(x55));
IkReal x258=((IkReal(0.0165540363560166))*(pz)*(x72));
IkReal x259=((x70)*(x76));
IkReal x260=((IkReal(0.000849718686154330))*(sj1)*(x72));
IkReal x261=((x74)*(x92));
IkReal x262=((IkReal(0.00415953271517628))*(r01)*(x74));
IkReal x263=((IkReal(0.00415953271517628))*(sj1)*(x72));
IkReal x264=((x75)*(x93));
IkReal x265=((IkReal(0.00169943737230866))*(cj1)*(x72));
IkReal x266=((IkReal(0.00169943737230866))*(r01)*(x77));
IkReal x267=((IkReal(0.00864418670438472))*(r01)*(x77));
IkReal x268=((x70)*(x93));
IkReal x269=((IkReal(0.00864418670438472))*(cj1)*(x72));
IkReal x270=((IkReal(0.00448465398920844))*(sj1)*(x72));
IkReal x271=((IkReal(0.00448465398920844))*(r01)*(x74));
IkReal x272=((IkReal(0.00480480905233380))*(pz)*(x75));
IkReal x273=((IkReal(0.00480480905233380))*(py)*(x70));
IkReal x274=((IkReal(0.00480480905233380))*(r01)*(x73));
IkReal x275=((IkReal(0.00480480905233380))*(r02)*(x69));
IkReal x276=((IkReal(0.000973873958824454))*(py)*(x75));
IkReal x277=((IkReal(0.000973873958824454))*(sj1)*(x71));
IkReal x278=((IkReal(0.000973873958824454))*(pz)*(x70));
IkReal x279=((IkReal(0.000973873958824454))*(r01)*(x69));
IkReal x280=((IkReal(0.00383093509350935))*(py)*(x70));
IkReal x281=((IkReal(0.00383093509350935))*(pz)*(x75));
IkReal x282=((IkReal(0.00383093509350935))*(r02)*(x69));
IkReal x283=((IkReal(0.00383093509350935))*(r01)*(x73));
IkReal x284=((IkReal(0.00395509036617948))*(r01)*(x73));
IkReal x285=((IkReal(0.00395509036617948))*(r02)*(x69));
IkReal x286=((IkReal(0.00395509036617948))*(pz)*(x75));
IkReal x287=((IkReal(0.00395509036617948))*(py)*(x70));
IkReal x288=((IkReal(0.000725563413484206))*(sj1)*(x71));
IkReal x289=((IkReal(0.000725563413484206))*(py)*(x75));
IkReal x290=((IkReal(0.000725563413484206))*(r01)*(x69));
IkReal x291=((IkReal(0.000725563413484206))*(pz)*(x70));
IkReal x292=((IkReal(0.00468065377966368))*(r02)*(x69));
IkReal x293=((IkReal(0.00468065377966368))*(r01)*(x73));
IkReal x294=((IkReal(0.00468065377966368))*(py)*(x70));
IkReal x295=((IkReal(0.00468065377966368))*(pz)*(x75));
IkReal x296=((IkReal(-0.267118371600000))+(x149));
IkReal x297=((IkReal(-0.244254939900000))+(x99));
IkReal x298=((IkReal(-0.388779063900000))+(x138));
IkReal x299=((IkReal(-0.823093390800000))+(x141));
IkReal x300=((IkReal(-0.388617460700000))+(x99));
IkReal x301=((IkReal(-0.254882306300000))+(x147));
IkReal x302=((x139)+(x53));
IkReal x303=((IkReal(2.00000000000000))*(x72)*(x77));
IkReal x304=((x219)*(x79));
IkReal x305=((IkReal(2.00000000000000))*(x69)*(x89));
IkReal x306=((IkReal(2.00000000000000))*(x74)*(x78));
IkReal x307=((x222)*(x84));
IkReal x308=((IkReal(2.00000000000000))*(x70)*(x88));
IkReal x309=((IkReal(2.00000000000000))*(x72)*(x74));
IkReal x310=((IkReal(2.00000000000000))*(x70)*(x85));
IkReal x311=((x222)*(x83));
IkReal x312=((IkReal(2.00000000000000))*(x77)*(x78));
IkReal x313=((IkReal(2.00000000000000))*(x69)*(x81));
IkReal x314=((x219)*(x82));
IkReal x315=((x220)*(x84));
IkReal x316=((IkReal(4.00000000000000))*(x72)*(x77));
IkReal x317=((IkReal(4.00000000000000))*(x69)*(x89));
IkReal x318=((x218)*(x79));
IkReal x319=((IkReal(4.00000000000000))*(x74)*(x78));
IkReal x320=((IkReal(4.00000000000000))*(x70)*(x88));
IkReal x321=((x218)*(x82));
IkReal x322=((IkReal(4.00000000000000))*(x77)*(x78));
IkReal x323=((IkReal(4.00000000000000))*(x69)*(x81));
IkReal x324=((x220)*(x83));
IkReal x325=((IkReal(4.00000000000000))*(x70)*(x85));
IkReal x326=((IkReal(4.00000000000000))*(x72)*(x74));
IkReal x327=((x217)*(x75));
IkReal x328=((IkReal(4.00000000000000))*(x69)*(x78));
IkReal x329=((IkReal(4.00000000000000))*(x69)*(x91));
IkReal x330=((x217)*(x70));
IkReal x331=((IkReal(4.00000000000000))*(x73)*(x78));
IkReal x332=((IkReal(4.00000000000000))*(x71)*(x74));
IkReal x333=((IkReal(8.00000000000000))*(x69)*(x91));
IkReal x334=((IkReal(8.00000000000000))*(x69)*(x78));
IkReal x335=((x221)*(x75));
IkReal x336=((x221)*(x70));
IkReal x337=((IkReal(8.00000000000000))*(x73)*(x78));
IkReal x338=((IkReal(8.00000000000000))*(x71)*(x74));
IkReal x339=((x179)+(x63));
IkReal x340=((x209)+(x67));
IkReal x341=((x152)+(x53));
IkReal x342=((x146)+(x53));
IkReal x343=((IkReal(-0.00523288160000000))+(((IkReal(-1.00000000000000))*(x144)))+(((IkReal(-1.00000000000000))*(x143))));
IkReal x344=((IkReal(-0.00523288160000000))+(((IkReal(-1.00000000000000))*(x144)))+(x143));
IkReal x345=((x95)+(x94));
IkReal x346=((x171)+(x170));
IkReal x347=((x150)+(x97));
IkReal x348=((x151)+(x100));
IkReal x349=((x139)+(x96));
IkReal x350=((x119)+(x105));
IkReal x351=((x124)+(x123));
IkReal x352=((x199)+(x198));
IkReal x353=((x163)+(x164));
IkReal x354=((x185)+(x186));
IkReal x355=((x145)+(x100));
IkReal x356=((x190)+(x188));
IkReal x357=((x142)+(x97));
IkReal x358=((x162)+(x161));
IkReal x359=((x133)+(x256));
IkReal x360=((x158)+(x274));
IkReal x361=((x193)+(x284));
IkReal x362=((x101)+(x233));
IkReal x363=((x137)+(x268));
IkReal x364=((x119)+(x228));
IkReal x365=((x259)+(x260));
IkReal x366=((x250)+(x252));
IkReal x367=((x230)+(x249));
IkReal x368=((x187)+(x189)+(x64));
IkReal x369=((x239)+(x241));
IkReal x370=((x228)+(x230));
IkReal x371=((x160)+(x159)+(x60));
IkReal x372=((x157)+(x275)+(x59));
IkReal x373=((x181)+(x182)+(x183));
IkReal x374=((x207)+(x206)+(x208));
IkReal x375=((x173)+(x175)+(x280));
IkReal x376=((x174)+(x176)+(x281));
IkReal x377=((x215)+(x216)+(x295));
IkReal x378=((x196)+(x235)+(x287));
IkReal x379=((x195)+(x232)+(x286));
IkReal x380=((x101)+(x231)+(x234));
IkReal x381=((x166)+(x276)+(x248));
IkReal x382=((x155)+(x235)+(x273));
IkReal x383=((x223)+(x225)+(x224));
IkReal x384=((x108)+(x106)+(x107)+(x236));
IkReal x385=((x134)+(x265)+(x264)+(x58));
IkReal x386=((x126)+(x127)+(x125)+(x294));
IkReal x387=((x104)+(x102)+(x103)+(x227));
IkReal x388=((x122)+(x120)+(x121)+(x227));
IkReal x389=((x202)+(x246)+(x288)+(x66));
IkReal x390=((x213)+(x214)+(x251)+(x293));
IkReal x391=((x167)+(x165)+(x277)+(x245));
IkReal x392=((x113)+(x197)+(x242)+(x240));
IkReal x393=((x172)+(x113)+(x242)+(x240));
IkReal x394=((x203)+(x201)+(x244)+(x289));
IkReal x395=((x307)+(x305)+(x303));
IkReal x396=((x308)+(x306)+(x304));
IkReal x397=((x327)+(x328)+(x329));
IkReal x398=((x192)+(x191)+(x194)+(x285)+(x65));
IkReal x399=((x321)+(x322)+(x323));
IkReal x400=((x258)+(x255)+(x257)+(x270));
IkReal x401=((x258)+(x255)+(x257)+(x262));
IkReal x402=((x178)+(x177)+(x253)+(x282)+(x62));
IkReal x403=((x114)+(x278)+(x243)+(x246)+(x61));
IkReal x404=((x388)+(x228));
IkReal x405=((x387)+(x228));
IkReal x406=((x156)+(x154)+(x153)+(x232)+(x272));
IkReal x407=((x126)+(x127)+(x125)+(x251)+(x283));
IkReal x408=((x123)+(x395));
IkReal x409=((x115)+(x324)+(x325)+(x326));
IkReal x410=((x136)+(x338)+(x337)+(x336));
IkReal x411=((x114)+(x204)+(x291)+(x243)+(x245));
IkReal x412=((x101)+(x211)+(x212)+(x253)+(x292)+(x68));
IkReal x413=((x332)+(x331)+(x330)+(x261));
IkReal x414=((x309)+(x311)+(x310)+(x226));
IkReal x415=((x314)+(x313)+(x312)+(x229));
IkReal x416=((x117)+(x116)+(x118)+(x290)+(x247)+(x248));
IkReal x417=((x135)+(x333)+(x335)+(x334)+(x266));
IkReal x418=((x168)+(x117)+(x116)+(x118)+(x279)+(x247)+(x244));
IkReal x419=((x110)+(x315)+(x317)+(x316)+(x238)+(x56));
IkReal x420=((x112)+(x111)+(x109)+(x320)+(x319)+(x318)+(x237));
IkReal x421=((x369)+(x419));
op[0]=((x140)+(x298)+(x96)+(((IkReal(-1.00000000000000))*(x302))));
op[1]=((IkReal(-0.127315689600000))+(x95)+(((IkReal(-1.00000000000000))*(x94))));
op[2]=((((IkReal(-1.00000000000000))*(x357)))+(x299)+(((IkReal(-1.00000000000000))*(x98))));
op[3]=x343;
op[4]=((((IkReal(-1.00000000000000))*(x355)))+(x300)+(((IkReal(-1.00000000000000))*(x342))));
op[5]=((IkReal(0.150671820000000))+(x94)+(((IkReal(-1.00000000000000))*(x95))));
op[6]=((IkReal(-0.154668420000000))+(x95)+(((IkReal(-1.00000000000000))*(x94))));
op[7]=((x148)+(x301)+(x96)+(((IkReal(-1.00000000000000))*(x302))));
op[8]=x343;
op[9]=((x296)+(((IkReal(-1.00000000000000))*(x98)))+(((IkReal(-1.00000000000000))*(x347))));
op[10]=((IkReal(0.123319089600000))+(x94)+(((IkReal(-1.00000000000000))*(x95))));
op[11]=((x297)+(((IkReal(-1.00000000000000))*(x341)))+(((IkReal(-1.00000000000000))*(x348))));
op[12]=((((IkReal(-1.00000000000000))*(x360)))+(x101)+(x382)+(x372)+(x395)+(x396)+(((IkReal(-1.00000000000000))*(x233)))+(((IkReal(-1.00000000000000))*(x231)))+(x234)+(((IkReal(-1.00000000000000))*(x383)))+(((IkReal(-1.00000000000000))*(x384)))+(((IkReal(-1.00000000000000))*(x406))));
op[13]=((((IkReal(-1.00000000000000))*(x371)))+(x353)+(x358)+(x364)+(x415)+(((IkReal(-1.00000000000000))*(x387)))+(((IkReal(-1.00000000000000))*(x249)))+(((IkReal(-1.00000000000000))*(x414))));
op[14]=((((IkReal(-1.00000000000000))*(x391)))+(x381)+(x399)+(x403)+(((IkReal(-1.00000000000000))*(x418)))+(((IkReal(-1.00000000000000))*(x409))));
op[15]=((((IkReal(-1.00000000000000))*(x169)))+(((IkReal(-1.00000000000000))*(x420)))+(x346)+(x369)+(x393)+(((IkReal(-1.00000000000000))*(x419))));
op[16]=((((IkReal(-1.00000000000000))*(x395)))+(((IkReal(-1.00000000000000))*(x396)))+(((IkReal(-1.00000000000000))*(x376)))+(x101)+(x351)+(x375)+(x252)+(x402)+(((IkReal(-1.00000000000000))*(x383)))+(((IkReal(-1.00000000000000))*(x407)))+(((IkReal(-1.00000000000000))*(x250))));
op[17]=((((IkReal(-1.00000000000000))*(x184)))+(((IkReal(-1.00000000000000))*(x370)))+(x105)+(x180)+(x388)+(x373)+(x414)+(((IkReal(-1.00000000000000))*(x339)))+(((IkReal(-1.00000000000000))*(x415))));
op[18]=((((IkReal(-1.00000000000000))*(x356)))+(((IkReal(-1.00000000000000))*(x354)))+(((IkReal(-1.00000000000000))*(x370)))+(x105)+(x387)+(x368)+(x414)+(((IkReal(-1.00000000000000))*(x415))));
op[19]=((((IkReal(-1.00000000000000))*(x398)))+(((IkReal(-1.00000000000000))*(x362)))+(((IkReal(-1.00000000000000))*(x378)))+(x383)+(x379)+(x361)+(x395)+(x396)+(((IkReal(-1.00000000000000))*(x234)))+(x231)+(((IkReal(-1.00000000000000))*(x384))));
op[20]=((((IkReal(-1.00000000000000))*(x392)))+(((IkReal(-1.00000000000000))*(x369)))+(((IkReal(-1.00000000000000))*(x352)))+(x200)+(x419)+(x420));
op[21]=((x394)+(x399)+(x411)+(((IkReal(-1.00000000000000))*(x389)))+(((IkReal(-1.00000000000000))*(x416)))+(((IkReal(-1.00000000000000))*(x409))));
op[22]=((((IkReal(-1.00000000000000))*(x374)))+(x340)+(x364)+(x205)+(x415)+(((IkReal(-1.00000000000000))*(x388)))+(((IkReal(-1.00000000000000))*(x249)))+(((IkReal(-1.00000000000000))*(x210)))+(((IkReal(-1.00000000000000))*(x414))));
op[23]=((((IkReal(-1.00000000000000))*(x395)))+(((IkReal(-1.00000000000000))*(x396)))+(x351)+(x383)+(x377)+(x390)+(x250)+(((IkReal(-1.00000000000000))*(x386)))+(((IkReal(-1.00000000000000))*(x412)))+(((IkReal(-1.00000000000000))*(x252))));
op[24]=((((IkReal(-1.53796000000000))*(x69)))+(x129));
op[25]=x128;
op[26]=((((IkReal(3.15448000000000))*(x73)))+(x131));
op[27]=x130;
op[28]=((((IkReal(1.61652000000000))*(x69)))+(x132));
op[29]=x254;
op[30]=x128;
op[31]=((((IkReal(-0.472200000000000))*(x69)))+(x129));
op[32]=x130;
op[33]=((((IkReal(1.02296000000000))*(x73)))+(x131));
op[34]=x254;
op[35]=((((IkReal(0.550760000000000))*(x69)))+(x132));
op[36]=((((IkReal(-1.00000000000000))*(x397)))+(((IkReal(2.32200000000000))*(x71)))+(((IkReal(0.00346648896697575))*(r01)))+(((IkReal(-2.32200000000000))*(x81)))+(x359)+(x263)+(((IkReal(0.510303178600000))*(x75)))+(((IkReal(0.00960961810466761))*(cj1)*(x72)))+(((IkReal(0.583448940000000))*(x70)))+(((IkReal(-0.00960961810466761))*(r01)*(x77)))+(((IkReal(-1.00000000000000))*(x401))));
op[37]=((((IkReal(0.599779867400000))*(x70)))+(((IkReal(-1.00000000000000))*(x365)))+(((IkReal(-0.249874074000000))*(x75)))+(x413)+(((IkReal(0.472200000000000))*(x81)))+(((IkReal(-0.000100309290900519))*(r01)))+(((IkReal(-0.472200000000000))*(x71))));
op[38]=((((IkReal(0.163861792800000))*(x75)))+(((IkReal(0.00194774791764891))*(r01)*(x74)))+(((IkReal(-1.00000000000000))*(x363)))+(x269)+(x410)+(((IkReal(-0.00194774791764891))*(sj1)*(x72)))+(((IkReal(-1.00000000000000))*(x267)))+(((IkReal(1.42176889400000))*(x70)))+(((IkReal(0.00452853976262769))*(r01))));
op[39]=((((IkReal(0.0486545952000000))*(x70)))+(((IkReal(-1.01813118440000))*(x75)))+(x417)+(((IkReal(-1.00000000000000))*(x385))));
op[40]=((((IkReal(0.00253529322421290))*(r01)))+(((IkReal(-0.00766187018701870))*(r01)*(x77)))+(((IkReal(0.501551937600000))*(x70)))+(((IkReal(1.85136000000000))*(x81)))+(((IkReal(-0.244273179400000))*(x75)))+(x133)+(x397)+(x271)+(((IkReal(-1.85136000000000))*(x71)))+(((IkReal(0.00766187018701870))*(cj1)*(x72)))+(((IkReal(-1.00000000000000))*(x400)))+(((IkReal(-1.00000000000000))*(x256))));
op[41]=((((IkReal(-0.550760000000000))*(x71)))+(((IkReal(-0.000116997765896590))*(r01)))+(x365)+(((IkReal(-0.558434200200000))*(x70)))+(((IkReal(-0.283184269200000))*(x75)))+(((IkReal(0.550760000000000))*(x81)))+(((IkReal(-1.00000000000000))*(x413))));
op[42]=((((IkReal(1.53796000000000))*(x71)))+(x365)+(((IkReal(0.000326708337639478))*(r01)))+(((IkReal(-1.53796000000000))*(x81)))+(((IkReal(0.813842293200000))*(x75)))+(((IkReal(-1.00000000000000))*(x413)))+(((IkReal(-0.331986352200000))*(x70))));
op[43]=((((IkReal(-1.00000000000000))*(x397)))+(((IkReal(-1.91136000000000))*(x81)))+(((IkReal(-0.00791018073235895))*(cj1)*(x72)))+(((IkReal(0.480267427200000))*(x70)))+(((IkReal(0.00791018073235895))*(r01)*(x77)))+(((IkReal(0.293004809800000))*(x75)))+(((IkReal(-1.00000000000000))*(x133)))+(x256)+(x401)+(((IkReal(-1.00000000000000))*(x263)))+(((IkReal(1.91136000000000))*(x71)))+(((IkReal(-0.00256719769267117))*(r01))));
op[44]=((((IkReal(1.57464974120000))*(x75)))+(x385)+(((IkReal(-1.00000000000000))*(x417)))+(((IkReal(-0.0646409952000000))*(x70))));
op[45]=((((IkReal(-0.0505662024000000))*(x75)))+(((IkReal(-1.00000000000000))*(x363)))+(((IkReal(-0.00145112682696841))*(sj1)*(x72)))+(x267)+(x410)+(((IkReal(0.00145112682696841))*(r01)*(x74)))+(((IkReal(-0.00449516281263555))*(r01)))+(((IkReal(-1.00000000000000))*(x269)))+(((IkReal(1.42792849400000))*(x70))));
op[46]=((((IkReal(0.269709158600000))*(x70)))+(((IkReal(-1.00000000000000))*(x365)))+(((IkReal(0.000343396812635549))*(r01)))+(((IkReal(0.831166088400000))*(x75)))+(((IkReal(1.61652000000000))*(x71)))+(x413)+(((IkReal(-1.61652000000000))*(x81))));
op[47]=((((IkReal(2.26200000000000))*(x81)))+(((IkReal(-0.00340909293793284))*(r01)))+(((IkReal(-0.455411948200000))*(x75)))+(((IkReal(-1.00000000000000))*(x359)))+(((IkReal(0.00936130755932736))*(r01)*(x77)))+(((IkReal(0.612798420000000))*(x70)))+(x397)+(x400)+(((IkReal(-0.00936130755932736))*(cj1)*(x72)))+(((IkReal(-1.00000000000000))*(x271)))+(((IkReal(-2.26200000000000))*(x71))));
op[48]=((((IkReal(-1.00000000000000))*(x140)))+(x349)+(x298)+(((IkReal(-1.00000000000000))*(x53))));
op[49]=((IkReal(-0.127315689600000))+(x345));
op[50]=((x357)+(x299)+(((IkReal(-1.00000000000000))*(x98))));
op[51]=x344;
op[52]=((x300)+(x355)+(((IkReal(-1.00000000000000))*(x342))));
op[53]=((IkReal(0.150671820000000))+(((IkReal(-1.00000000000000))*(x345))));
op[54]=((IkReal(-0.154668420000000))+(x345));
op[55]=((((IkReal(-1.00000000000000))*(x148)))+(x301)+(x349)+(((IkReal(-1.00000000000000))*(x53))));
op[56]=x344;
op[57]=((x347)+(x296)+(((IkReal(-1.00000000000000))*(x98))));
op[58]=((IkReal(0.123319089600000))+(((IkReal(-1.00000000000000))*(x345))));
op[59]=((x348)+(x297)+(((IkReal(-1.00000000000000))*(x341))));
op[60]=((((IkReal(-1.00000000000000))*(x395)))+(((IkReal(-1.00000000000000))*(x360)))+(((IkReal(-1.00000000000000))*(x372)))+(x124)+(x382)+(x383)+(x396)+(x406)+(((IkReal(-1.00000000000000))*(x384)))+(((IkReal(-1.00000000000000))*(x380))));
op[61]=((((IkReal(-1.00000000000000))*(x367)))+(((IkReal(-1.00000000000000))*(x353)))+(x358)+(x371)+(x414)+(x415)+(((IkReal(-1.00000000000000))*(x405))));
op[62]=((x381)+(x391)+(x399)+(x409)+(((IkReal(-1.00000000000000))*(x418)))+(((IkReal(-1.00000000000000))*(x403))));
op[63]=((((IkReal(-1.00000000000000))*(x393)))+(((IkReal(-1.00000000000000))*(x420)))+(x169)+(x346)+(x421));
op[64]=((((IkReal(-1.00000000000000))*(x396)))+(((IkReal(-1.00000000000000))*(x362)))+(x383)+(x376)+(x375)+(x366)+(x408)+(((IkReal(-1.00000000000000))*(x407)))+(((IkReal(-1.00000000000000))*(x402))));
op[65]=((((IkReal(-1.00000000000000))*(x184)))+(((IkReal(-1.00000000000000))*(x373)))+(x180)+(x339)+(x350)+(x404)+(((IkReal(-1.00000000000000))*(x415)))+(((IkReal(-1.00000000000000))*(x414))));
op[66]=((((IkReal(-1.00000000000000))*(x368)))+(((IkReal(-1.00000000000000))*(x356)))+(x350)+(x354)+(x405)+(((IkReal(-1.00000000000000))*(x415)))+(((IkReal(-1.00000000000000))*(x414))));
op[67]=((((IkReal(-1.00000000000000))*(x395)))+(((IkReal(-1.00000000000000))*(x379)))+(((IkReal(-1.00000000000000))*(x378)))+(x124)+(x380)+(x361)+(x396)+(x398)+(((IkReal(-1.00000000000000))*(x383)))+(((IkReal(-1.00000000000000))*(x384))));
op[68]=((((IkReal(-1.00000000000000))*(x421)))+(((IkReal(-1.00000000000000))*(x352)))+(((IkReal(-1.00000000000000))*(x200)))+(x392)+(x420));
op[69]=((x389)+(x394)+(x399)+(x409)+(((IkReal(-1.00000000000000))*(x416)))+(((IkReal(-1.00000000000000))*(x411))));
op[70]=((((IkReal(-1.00000000000000))*(x367)))+(x374)+(x205)+(x414)+(x415)+(((IkReal(-1.00000000000000))*(x210)))+(((IkReal(-1.00000000000000))*(x340)))+(((IkReal(-1.00000000000000))*(x404))));
op[71]=((((IkReal(-1.00000000000000))*(x396)))+(((IkReal(-1.00000000000000))*(x366)))+(((IkReal(-1.00000000000000))*(x377)))+(x390)+(((IkReal(-1.00000000000000))*(x233)))+(x408)+(x412)+(((IkReal(-1.00000000000000))*(x383)))+(((IkReal(-1.00000000000000))*(x386))));
solvedialyticpoly8qep(op,zeror,numroots);
IkReal j0array[16], cj0array[16], sj0array[16], j2array[16], cj2array[16], sj2array[16], j3array[16], cj3array[16], sj3array[16];
int numsolutions = 0;
for(int ij0 = 0; ij0 < numroots; ij0 += 3)
{
IkReal htj0 = zeror[ij0+0], htj2 = zeror[ij0+1], htj3 = zeror[ij0+2];
j0array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj0)));
j2array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj2)));
j3array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj3)));
IkReal x422=(htj0)*(htj0);
IkReal x423=(htj2)*(htj2);
IkReal x424=(htj3)*(htj3);
cj0array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x422))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x422)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x422))))));
cj2array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x423))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x423)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x423))))));
cj3array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x424))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x424)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x424))))));
sj0array[numsolutions]=((IkReal(2.00000000000000))*(htj0)*(((IKabs(((IkReal(1.00000000000000))+((htj0)*(htj0)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj0)*(htj0))))):(IkReal)1.0e30)));
sj2array[numsolutions]=((IkReal(2.00000000000000))*(htj2)*(((IKabs(((IkReal(1.00000000000000))+((htj2)*(htj2)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj2)*(htj2))))):(IkReal)1.0e30)));
sj3array[numsolutions]=((IkReal(2.00000000000000))*(htj3)*(((IKabs(((IkReal(1.00000000000000))+((htj3)*(htj3)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj3)*(htj3))))):(IkReal)1.0e30)));
if( j0array[numsolutions] > IKPI )
{
    j0array[numsolutions]-=IK2PI;
}
else if( j0array[numsolutions] < -IKPI )
{
    j0array[numsolutions]+=IK2PI;
}
if( j2array[numsolutions] > IKPI )
{
    j2array[numsolutions]-=IK2PI;
}
else if( j2array[numsolutions] < -IKPI )
{
    j2array[numsolutions]+=IK2PI;
}
if( j3array[numsolutions] > IKPI )
{
    j3array[numsolutions]-=IK2PI;
}
else if( j3array[numsolutions] < -IKPI )
{
    j3array[numsolutions]+=IK2PI;
}
numsolutions++;
}
bool j0valid[16]={true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true};
_nj0 = 16;
_nj2 = 1;
_nj3 = 1;
for(int ij0 = 0; ij0 < numsolutions; ++ij0)
    {
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
_ij2[0] = 0; _ij2[1] = -1;
_ij3[0] = 0; _ij3[1] = -1;
for(int iij0 = ij0+1; iij0 < numsolutions; ++iij0)
{
if( !j0valid[iij0] ) { continue; }
if( IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(cj2array[ij0]-cj2array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij0]-sj2array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(cj3array[ij0]-cj3array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij0]-sj3array[iij0]) < IKFAST_SOLUTION_THRESH &&  1 )
{
    j0valid[iij0]=false; _ij0[1] = iij0; _ij2[1] = 0; _ij3[1] = 0;  break; 
}
}
    j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

    j2 = j2array[ij0]; cj2 = cj2array[ij0]; sj2 = sj2array[ij0];

    j3 = j3array[ij0]; cj3 = cj3array[ij0]; sj3 = sj3array[ij0];

{
IkReal dummyeval[1];
IkReal gconst0;
gconst0=IKsign(cj3);
dummyeval[0]=cj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst1;
gconst1=IKsign(sj3);
dummyeval[0]=sj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[2];
IkReal x425=((cj1)*(sj2));
IkReal x426=((cj2)*(sj1));
IkReal x427=((cj0)*(py));
IkReal x428=((IkReal(1.00000000000000))*(px)*(sj0));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0588300000000000))+(((x426)*(x427)))+(((x425)*(x427)))+(((pz)*(sj1)*(sj2)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x426)*(x428)))+(((IkReal(-1.00000000000000))*(x425)*(x428)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(pz)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x429=((IkReal(5.23852937836376))*(cj0));
IkReal x430=((IkReal(5.23852937836376))*(cj1));
IkReal x431=((pz)*(sj2));
IkReal x432=((IkReal(0.0216797014453736))*(sj0));
IkReal x433=((cj2)*(px));
IkReal x434=((IkReal(0.0216797014453736))*(cj0));
IkReal x435=((IkReal(5.23852937836376))*(sj1));
IkReal x436=((px)*(sj2));
IkReal x437=((cj2)*(pz));
IkReal x438=((py)*(sj1)*(sj2));
IkReal x439=((cj1)*(cj2)*(py));
if( IKabs(((IkReal(0.00854852307692527))+(((IkReal(-1.00000000000000))*(sj1)*(x432)*(x436)))+(((IkReal(-1.00000000000000))*(px)*(x429)))+(((x434)*(x438)))+(((IkReal(-1.00000000000000))*(x434)*(x439)))+(((IkReal(-0.000212894668193569))*(cj2)))+(((IkReal(-5.23852937836376))*(py)*(sj0)))+(((IkReal(-0.0216797014453736))*(sj1)*(x437)))+(((IkReal(0.0113096498530081))*(sj2)))+(((IkReal(-0.0216797014453736))*(cj1)*(x431)))+(((cj1)*(x432)*(x433))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-2.06560451918261))+(((x429)*(x439)))+(((IkReal(-1.00000000000000))*(sj0)*(x430)*(x433)))+(((IkReal(-1.00000000000000))*(x429)*(x438)))+(((IkReal(0.0514423584955321))*(cj2)))+(((IkReal(-2.73278362081102))*(sj2)))+(((x430)*(x431)))+(((IkReal(-1.00000000000000))*(py)*(x432)))+(((sj0)*(x435)*(x436)))+(((x435)*(x437)))+(((IkReal(-1.00000000000000))*(px)*(x434))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.00854852307692527))+(((IkReal(-1.00000000000000))*(sj1)*(x432)*(x436)))+(((IkReal(-1.00000000000000))*(px)*(x429)))+(((x434)*(x438)))+(((IkReal(-1.00000000000000))*(x434)*(x439)))+(((IkReal(-0.000212894668193569))*(cj2)))+(((IkReal(-5.23852937836376))*(py)*(sj0)))+(((IkReal(-0.0216797014453736))*(sj1)*(x437)))+(((IkReal(0.0113096498530081))*(sj2)))+(((IkReal(-0.0216797014453736))*(cj1)*(x431)))+(((cj1)*(x432)*(x433)))))+IKsqr(((IkReal(-2.06560451918261))+(((x429)*(x439)))+(((IkReal(-1.00000000000000))*(sj0)*(x430)*(x433)))+(((IkReal(-1.00000000000000))*(x429)*(x438)))+(((IkReal(0.0514423584955321))*(cj2)))+(((IkReal(-2.73278362081102))*(sj2)))+(((x430)*(x431)))+(((IkReal(-1.00000000000000))*(py)*(x432)))+(((sj0)*(x435)*(x436)))+(((x435)*(x437)))+(((IkReal(-1.00000000000000))*(px)*(x434)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((IkReal(0.00854852307692527))+(((IkReal(-1.00000000000000))*(sj1)*(x432)*(x436)))+(((IkReal(-1.00000000000000))*(px)*(x429)))+(((x434)*(x438)))+(((IkReal(-1.00000000000000))*(x434)*(x439)))+(((IkReal(-0.000212894668193569))*(cj2)))+(((IkReal(-5.23852937836376))*(py)*(sj0)))+(((IkReal(-0.0216797014453736))*(sj1)*(x437)))+(((IkReal(0.0113096498530081))*(sj2)))+(((IkReal(-0.0216797014453736))*(cj1)*(x431)))+(((cj1)*(x432)*(x433)))), ((IkReal(-2.06560451918261))+(((x429)*(x439)))+(((IkReal(-1.00000000000000))*(sj0)*(x430)*(x433)))+(((IkReal(-1.00000000000000))*(x429)*(x438)))+(((IkReal(0.0514423584955321))*(cj2)))+(((IkReal(-2.73278362081102))*(sj2)))+(((x430)*(x431)))+(((IkReal(-1.00000000000000))*(py)*(x432)))+(((sj0)*(x435)*(x436)))+(((x435)*(x437)))+(((IkReal(-1.00000000000000))*(px)*(x434)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[2];
IkReal x440=IKsin(j4);
IkReal x441=IKcos(j4);
IkReal x442=((cj1)*(cj2));
IkReal x443=((px)*(sj0));
IkReal x444=((cj0)*(py));
IkReal x445=((sj1)*(sj2));
evalcond[0]=((((IkReal(0.190890000000000))*(x440)))+(((IkReal(0.000790000000000000))*(x441)))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[1]=((IkReal(-0.394310000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-0.190890000000000))*(x441)))+(((IkReal(0.000790000000000000))*(x440)))+(((IkReal(-1.00000000000000))*(x444)*(x445)))+(((cj2)*(pz)*(sj1)))+(((cj1)*(pz)*(sj2)))+(((IkReal(-1.00000000000000))*(x442)*(x443)))+(((x442)*(x444)))+(((x443)*(x445)))+(((IkReal(-0.521670000000000))*(sj2))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
dummyeval[0]=cj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x446=((IkReal(1.00000000000000))*(sj2));
IkReal x447=((px)*(sj0));
IkReal x448=((pz)*(sj2));
IkReal x449=((cj0)*(sj1));
IkReal x450=((cj1)*(sj2));
IkReal x451=((sj1)*(sj2));
IkReal x452=((cj2)*(sj1));
IkReal x453=((r00)*(sj0));
IkReal x454=((cj0)*(cj1)*(cj2));
IkReal x455=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.000790000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x453)*(x455)))+(((r02)*(x452)))+(((r02)*(x450)))+(((x451)*(x453)))+(((IkReal(-1.00000000000000))*(r01)*(x446)*(x449)))+(((r01)*(x454))));
evalcond[3]=((IkReal(-0.585200000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(py)*(x446)*(x449)))+(((cj1)*(x448)))+(((x447)*(x451)))+(((IkReal(-1.00000000000000))*(x447)*(x455)))+(((pz)*(x452)))+(((py)*(x454)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(0.0588300000000000))+(((sj1)*(x448)))+(((IkReal(-1.00000000000000))*(x447)*(x452)))+(((IkReal(0.521670000000000))*(cj2)))+(((cj2)*(py)*(x449)))+(((IkReal(-1.00000000000000))*(pz)*(x455)))+(((cj0)*(py)*(x450)))+(((IkReal(0.00982000000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(cj1)*(x446)*(x447))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x456=((IkReal(1.00000000000000))*(sj2));
IkReal x457=((cj0)*(r01));
IkReal x458=((r00)*(sj0));
IkReal x459=((cj2)*(sj1));
if( IKabs(((((r01)*(sj0)))+(((cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(cj1)*(x456)*(x457)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x456)))+(((x458)*(x459)))+(((cj1)*(sj2)*(x458)))+(((cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(x457)*(x459))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r01)*(sj0)))+(((cj0)*(r00)))))+IKsqr(((((IkReal(-1.00000000000000))*(cj1)*(x456)*(x457)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x456)))+(((x458)*(x459)))+(((cj1)*(sj2)*(x458)))+(((cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(x457)*(x459)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((r01)*(sj0)))+(((cj0)*(r00)))), ((((IkReal(-1.00000000000000))*(cj1)*(x456)*(x457)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x456)))+(((x458)*(x459)))+(((cj1)*(sj2)*(x458)))+(((cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(x457)*(x459)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x460=((cj2)*(sj1));
IkReal x461=((cj0)*(r01));
IkReal x462=((cj1)*(sj2));
IkReal x463=((IkReal(1.00000000000000))*(r00)*(sj0));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x462)*(x463)))+(((x461)*(x462)))+(((IkReal(-1.00000000000000))*(x460)*(x463)))+(IKcos(j5))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((x460)*(x461)))+(((r02)*(sj1)*(sj2))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x464=((IkReal(1.00000000000000))*(sj2));
IkReal x465=((px)*(sj0));
IkReal x466=((pz)*(sj2));
IkReal x467=((cj0)*(sj1));
IkReal x468=((cj1)*(sj2));
IkReal x469=((sj1)*(sj2));
IkReal x470=((cj2)*(sj1));
IkReal x471=((r00)*(sj0));
IkReal x472=((cj0)*(cj1)*(cj2));
IkReal x473=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.000790000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((x469)*(x471)))+(((r02)*(x470)))+(((r02)*(x468)))+(((IkReal(-1.00000000000000))*(x471)*(x473)))+(((IkReal(-1.00000000000000))*(r01)*(x464)*(x467)))+(((r01)*(x472))));
evalcond[3]=((IkReal(-0.203420000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((x465)*(x469)))+(((cj1)*(x466)))+(((pz)*(x470)))+(((py)*(x472)))+(((IkReal(-1.00000000000000))*(py)*(x464)*(x467)))+(((IkReal(-0.521670000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(x465)*(x473))));
evalcond[4]=((IkReal(0.0588300000000000))+(((cj2)*(py)*(x467)))+(((IkReal(-1.00000000000000))*(pz)*(x473)))+(((IkReal(0.521670000000000))*(cj2)))+(((sj1)*(x466)))+(((cj0)*(py)*(x468)))+(((IkReal(-1.00000000000000))*(cj1)*(x464)*(x465)))+(((IkReal(-1.00000000000000))*(x465)*(x470)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x474=((IkReal(1.00000000000000))*(sj2));
IkReal x475=((cj0)*(r01));
IkReal x476=((r00)*(sj0));
IkReal x477=((cj2)*(sj1));
if( IKabs(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj1)*(sj2)*(x476)))+(((IkReal(-1.00000000000000))*(x475)*(x477)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x474)))+(((IkReal(-1.00000000000000))*(cj1)*(x474)*(x475)))+(((cj1)*(cj2)*(r02)))+(((x476)*(x477))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))))+IKsqr(((((cj1)*(sj2)*(x476)))+(((IkReal(-1.00000000000000))*(x475)*(x477)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x474)))+(((IkReal(-1.00000000000000))*(cj1)*(x474)*(x475)))+(((cj1)*(cj2)*(r02)))+(((x476)*(x477)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))), ((((cj1)*(sj2)*(x476)))+(((IkReal(-1.00000000000000))*(x475)*(x477)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x474)))+(((IkReal(-1.00000000000000))*(cj1)*(x474)*(x475)))+(((cj1)*(cj2)*(r02)))+(((x476)*(x477)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x478=((cj2)*(sj1));
IkReal x479=((cj0)*(r01));
IkReal x480=((cj1)*(sj2));
IkReal x481=((IkReal(1.00000000000000))*(r00)*(sj0));
evalcond[0]=((((r01)*(sj0)))+(IKsin(j5))+(((cj0)*(r00))));
evalcond[1]=((((x478)*(x479)))+(IKcos(j5))+(((IkReal(-1.00000000000000))*(x480)*(x481)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((x479)*(x480)))+(((r02)*(sj1)*(sj2)))+(((IkReal(-1.00000000000000))*(x478)*(x481))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x482=((pz)*(sj1));
IkReal x483=((cj0)*(py));
IkReal x484=((IkReal(1.00000000000000))*(sj2));
IkReal x485=((cj1)*(cj2));
IkReal x486=((px)*(sj0));
IkReal x487=((cj2)*(sj1));
IkReal x488=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(0.190890000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.393520000000000))+(((sj1)*(sj2)*(x486)))+(((cj2)*(x482)))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x485)*(x486)))+(((pz)*(x488)))+(((x483)*(x485)))+(((IkReal(-1.00000000000000))*(sj1)*(x483)*(x484)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(0.0588300000000000))+(((IkReal(-1.00000000000000))*(x486)*(x487)))+(((x483)*(x488)))+(((x483)*(x487)))+(((IkReal(-1.00000000000000))*(pz)*(x485)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(cj1)*(x484)*(x486)))+(((sj2)*(x482)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x489=((IkReal(1.00000000000000))*(sj2));
IkReal x490=((r02)*(sj1));
IkReal x491=((cj0)*(r01));
IkReal x492=((IkReal(1.00000000000000))*(cj2));
IkReal x493=((cj1)*(r02));
IkReal x494=((cj1)*(r00)*(sj0));
IkReal x495=((r00)*(sj0)*(sj1));
if( IKabs(((((cj1)*(cj2)*(x491)))+(((sj2)*(x493)))+(((sj2)*(x495)))+(((IkReal(-1.00000000000000))*(sj1)*(x489)*(x491)))+(((cj2)*(x490)))+(((IkReal(-1.00000000000000))*(x492)*(x494))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(cj1)*(x489)*(x491)))+(((IkReal(-1.00000000000000))*(x489)*(x490)))+(((IkReal(-1.00000000000000))*(sj1)*(x491)*(x492)))+(((sj2)*(x494)))+(((cj2)*(x495)))+(((cj2)*(x493))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj1)*(cj2)*(x491)))+(((sj2)*(x493)))+(((sj2)*(x495)))+(((IkReal(-1.00000000000000))*(sj1)*(x489)*(x491)))+(((cj2)*(x490)))+(((IkReal(-1.00000000000000))*(x492)*(x494)))))+IKsqr(((((IkReal(-1.00000000000000))*(cj1)*(x489)*(x491)))+(((IkReal(-1.00000000000000))*(x489)*(x490)))+(((IkReal(-1.00000000000000))*(sj1)*(x491)*(x492)))+(((sj2)*(x494)))+(((cj2)*(x495)))+(((cj2)*(x493)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((cj1)*(cj2)*(x491)))+(((sj2)*(x493)))+(((sj2)*(x495)))+(((IkReal(-1.00000000000000))*(sj1)*(x489)*(x491)))+(((cj2)*(x490)))+(((IkReal(-1.00000000000000))*(x492)*(x494)))), ((((IkReal(-1.00000000000000))*(cj1)*(x489)*(x491)))+(((IkReal(-1.00000000000000))*(x489)*(x490)))+(((IkReal(-1.00000000000000))*(sj1)*(x491)*(x492)))+(((sj2)*(x494)))+(((cj2)*(x495)))+(((cj2)*(x493)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x496=((r02)*(sj2));
IkReal x497=((IkReal(1.00000000000000))*(sj2));
IkReal x498=((r00)*(sj0));
IkReal x499=((cj1)*(cj2));
IkReal x500=((cj0)*(r01));
IkReal x501=((sj1)*(x500));
IkReal x502=((IkReal(1.00000000000000))*(cj2)*(x498));
evalcond[0]=((((IkReal(-1.00000000000000))*(sj1)*(x502)))+(((cj2)*(x501)))+(((sj1)*(x496)))+(IKcos(j5))+(((cj1)*(sj2)*(x500)))+(((IkReal(-1.00000000000000))*(cj1)*(x497)*(x498)))+(((IkReal(-1.00000000000000))*(r02)*(x499))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x497)*(x501)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x498)*(x499)))+(((cj1)*(x496)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((x499)*(x500)))+(((sj1)*(sj2)*(x498))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x503=((pz)*(sj1));
IkReal x504=((cj0)*(py));
IkReal x505=((IkReal(1.00000000000000))*(sj2));
IkReal x506=((cj1)*(cj2));
IkReal x507=((px)*(sj0));
IkReal x508=((cj2)*(sj1));
IkReal x509=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(-0.190890000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.395100000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x506)*(x507)))+(((cj2)*(x503)))+(((IkReal(-1.00000000000000))*(sj1)*(x504)*(x505)))+(((sj1)*(sj2)*(x507)))+(((IkReal(-0.521670000000000))*(sj2)))+(((x504)*(x506)))+(((pz)*(x509))));
evalcond[4]=((IkReal(0.0588300000000000))+(((sj2)*(x503)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(cj1)*(x505)*(x507)))+(((x504)*(x508)))+(((x504)*(x509)))+(((IkReal(-1.00000000000000))*(x507)*(x508)))+(((IkReal(-1.00000000000000))*(pz)*(x506)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x510=((IkReal(1.00000000000000))*(sj2));
IkReal x511=((r02)*(sj1));
IkReal x512=((cj0)*(r01));
IkReal x513=((r00)*(sj0));
IkReal x514=((cj1)*(r02));
IkReal x515=((IkReal(1.00000000000000))*(cj2));
if( IKabs(((((IkReal(-1.00000000000000))*(x511)*(x515)))+(((cj1)*(cj2)*(x513)))+(((IkReal(-1.00000000000000))*(cj1)*(x512)*(x515)))+(((IkReal(-1.00000000000000))*(sj1)*(x510)*(x513)))+(((sj1)*(sj2)*(x512)))+(((IkReal(-1.00000000000000))*(x510)*(x514))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj1)*(sj2)*(x513)))+(((IkReal(-1.00000000000000))*(cj1)*(x510)*(x512)))+(((IkReal(-1.00000000000000))*(sj1)*(x512)*(x515)))+(((cj2)*(sj1)*(x513)))+(((cj2)*(x514)))+(((IkReal(-1.00000000000000))*(x510)*(x511))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x511)*(x515)))+(((cj1)*(cj2)*(x513)))+(((IkReal(-1.00000000000000))*(cj1)*(x512)*(x515)))+(((IkReal(-1.00000000000000))*(sj1)*(x510)*(x513)))+(((sj1)*(sj2)*(x512)))+(((IkReal(-1.00000000000000))*(x510)*(x514)))))+IKsqr(((((cj1)*(sj2)*(x513)))+(((IkReal(-1.00000000000000))*(cj1)*(x510)*(x512)))+(((IkReal(-1.00000000000000))*(sj1)*(x512)*(x515)))+(((cj2)*(sj1)*(x513)))+(((cj2)*(x514)))+(((IkReal(-1.00000000000000))*(x510)*(x511)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x511)*(x515)))+(((cj1)*(cj2)*(x513)))+(((IkReal(-1.00000000000000))*(cj1)*(x512)*(x515)))+(((IkReal(-1.00000000000000))*(sj1)*(x510)*(x513)))+(((sj1)*(sj2)*(x512)))+(((IkReal(-1.00000000000000))*(x510)*(x514)))), ((((cj1)*(sj2)*(x513)))+(((IkReal(-1.00000000000000))*(cj1)*(x510)*(x512)))+(((IkReal(-1.00000000000000))*(sj1)*(x512)*(x515)))+(((cj2)*(sj1)*(x513)))+(((cj2)*(x514)))+(((IkReal(-1.00000000000000))*(x510)*(x511)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x516=((r02)*(sj2));
IkReal x517=((IkReal(1.00000000000000))*(sj2));
IkReal x518=((r00)*(sj0));
IkReal x519=((cj1)*(cj2));
IkReal x520=((cj0)*(r01));
IkReal x521=((sj1)*(x520));
IkReal x522=((IkReal(1.00000000000000))*(cj2)*(x518));
evalcond[0]=((((cj1)*(sj2)*(x520)))+(((IkReal(-1.00000000000000))*(sj1)*(x522)))+(((IkReal(-1.00000000000000))*(r02)*(x519)))+(IKcos(j5))+(((IkReal(-1.00000000000000))*(cj1)*(x517)*(x518)))+(((cj2)*(x521)))+(((sj1)*(x516))));
evalcond[1]=((((x519)*(x520)))+(IKsin(j5))+(((IkReal(-1.00000000000000))*(x518)*(x519)))+(((IkReal(-1.00000000000000))*(x517)*(x521)))+(((cj2)*(r02)*(sj1)))+(((cj1)*(x516)))+(((sj1)*(sj2)*(x518))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x523=((IkReal(1.00000000000000))*(sj2));
IkReal x524=((r02)*(sj1));
IkReal x525=((cj0)*(r01));
IkReal x526=((IkReal(1.00000000000000))*(cj2));
IkReal x527=((cj1)*(r02));
IkReal x528=((cj1)*(r00)*(sj0));
IkReal x529=((r00)*(sj0)*(sj1));
if( IKabs(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(sj1)*(x523)*(x525)))+(((IkReal(-1.00000000000000))*(x526)*(x528)))+(((sj2)*(x529)))+(((sj2)*(x527)))+(((cj1)*(cj2)*(x525)))+(((cj2)*(x524))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x523)*(x524)))+(((sj2)*(x528)))+(((cj2)*(x529)))+(((cj2)*(x527)))+(((IkReal(-1.00000000000000))*(cj1)*(x523)*(x525)))+(((IkReal(-1.00000000000000))*(sj1)*(x525)*(x526))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(sj1)*(x523)*(x525)))+(((IkReal(-1.00000000000000))*(x526)*(x528)))+(((sj2)*(x529)))+(((sj2)*(x527)))+(((cj1)*(cj2)*(x525)))+(((cj2)*(x524)))))))+IKsqr(((((IkReal(-1.00000000000000))*(x523)*(x524)))+(((sj2)*(x528)))+(((cj2)*(x529)))+(((cj2)*(x527)))+(((IkReal(-1.00000000000000))*(cj1)*(x523)*(x525)))+(((IkReal(-1.00000000000000))*(sj1)*(x525)*(x526)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(sj1)*(x523)*(x525)))+(((IkReal(-1.00000000000000))*(x526)*(x528)))+(((sj2)*(x529)))+(((sj2)*(x527)))+(((cj1)*(cj2)*(x525)))+(((cj2)*(x524)))))), ((((IkReal(-1.00000000000000))*(x523)*(x524)))+(((sj2)*(x528)))+(((cj2)*(x529)))+(((cj2)*(x527)))+(((IkReal(-1.00000000000000))*(cj1)*(x523)*(x525)))+(((IkReal(-1.00000000000000))*(sj1)*(x525)*(x526)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x530=IKsin(j5);
IkReal x531=((r02)*(sj2));
IkReal x532=((IkReal(1.00000000000000))*(sj2));
IkReal x533=((r00)*(sj0));
IkReal x534=((IkReal(1.00000000000000))*(cj2));
IkReal x535=((IkReal(1.00000000000000))*(x530));
IkReal x536=((cj0)*(r01)*(sj1));
IkReal x537=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x535)))+(((cj0)*(r00))));
evalcond[1]=((((sj1)*(x531)))+(((sj2)*(x537)))+(((IkReal(-1.00000000000000))*(cj1)*(x532)*(x533)))+(IKcos(j5))+(((IkReal(-1.00000000000000))*(sj1)*(x533)*(x534)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x534)))+(((cj2)*(x536))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x532)*(x536)))+(((IkReal(-1.00000000000000))*(sj4)*(x535)))+(((cj1)*(x531)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(x533)*(x534)))+(((cj2)*(x537)))+(((sj1)*(sj2)*(x533))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x538=((IkReal(1.00000000000000))*(sj2));
IkReal x539=((cj0)*(r01));
IkReal x540=((r00)*(sj0));
IkReal x541=((cj2)*(sj1));
if( IKabs(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj1)*(sj2)*(x540)))+(((IkReal(-1.00000000000000))*(x539)*(x541)))+(((x540)*(x541)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x538)))+(((cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(cj1)*(x538)*(x539))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))))+IKsqr(((((cj1)*(sj2)*(x540)))+(((IkReal(-1.00000000000000))*(x539)*(x541)))+(((x540)*(x541)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x538)))+(((cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(cj1)*(x538)*(x539)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))), ((((cj1)*(sj2)*(x540)))+(((IkReal(-1.00000000000000))*(x539)*(x541)))+(((x540)*(x541)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x538)))+(((cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(cj1)*(x538)*(x539)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x542=IKsin(j5);
IkReal x543=((r02)*(sj2));
IkReal x544=((IkReal(1.00000000000000))*(sj2));
IkReal x545=((r00)*(sj0));
IkReal x546=((IkReal(1.00000000000000))*(cj2));
IkReal x547=((IkReal(1.00000000000000))*(x542));
IkReal x548=((cj0)*(r01)*(sj1));
IkReal x549=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x547)))+(((cj0)*(r00))));
evalcond[1]=((((sj1)*(x543)))+(((sj2)*(x549)))+(((IkReal(-1.00000000000000))*(sj1)*(x545)*(x546)))+(((IkReal(-1.00000000000000))*(cj1)*(x544)*(x545)))+(IKcos(j5))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x546)))+(((cj2)*(x548))));
evalcond[2]=((((sj1)*(sj2)*(x545)))+(((IkReal(-1.00000000000000))*(x544)*(x548)))+(((IkReal(-1.00000000000000))*(cj1)*(x545)*(x546)))+(((IkReal(-1.00000000000000))*(sj4)*(x547)))+(((cj1)*(x543)))+(((cj2)*(r02)*(sj1)))+(((cj2)*(x549))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x550=((cj1)*(sj2));
IkReal x551=((cj2)*(sj1));
IkReal x552=((cj0)*(py));
IkReal x553=((IkReal(1.00000000000000))*(px)*(sj0));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0438300000000000))+(((IkReal(-1.00000000000000))*(x550)*(x553)))+(((pz)*(sj1)*(sj2)))+(((IkReal(-1.00000000000000))*(x551)*(x553)))+(((IkReal(0.521670000000000))*(cj2)))+(((x550)*(x552)))+(((x551)*(x552)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(pz)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x554=((IkReal(5.23852937836376))*(cj0));
IkReal x555=((IkReal(0.0216797014453736))*(sj0));
IkReal x556=((IkReal(0.0216797014453736))*(cj0));
IkReal x557=((IkReal(5.23852937836376))*(sj0));
IkReal x558=((py)*(sj1)*(sj2));
IkReal x559=((cj1)*(cj2)*(px));
IkReal x560=((cj1)*(pz)*(sj2));
IkReal x561=((px)*(sj1)*(sj2));
IkReal x562=((cj1)*(cj2)*(py));
IkReal x563=((cj2)*(pz)*(sj1));
if( IKabs(((IkReal(-0.00277218342381993))+(((IkReal(-1.00000000000000))*(x555)*(x559)))+(((IkReal(-1.00000000000000))*(x556)*(x558)))+(((IkReal(0.0216797014453736))*(x563)))+(((IkReal(0.0216797014453736))*(x560)))+(((x556)*(x562)))+(((IkReal(-0.0113096498530081))*(sj2)))+(((IkReal(-1.00000000000000))*(px)*(x554)))+(((IkReal(0.000212894668193569))*(cj2)))+(((IkReal(-1.00000000000000))*(py)*(x557)))+(((x555)*(x561))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(0.669850751611374))+(((IkReal(-5.23852937836376))*(x560)))+(((IkReal(-5.23852937836376))*(x563)))+(((x557)*(x559)))+(((x554)*(x558)))+(((IkReal(-0.0514423584955321))*(cj2)))+(((IkReal(-1.00000000000000))*(x557)*(x561)))+(((IkReal(-1.00000000000000))*(px)*(x556)))+(((IkReal(-1.00000000000000))*(x554)*(x562)))+(((IkReal(-1.00000000000000))*(py)*(x555)))+(((IkReal(2.73278362081102))*(sj2))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(-0.00277218342381993))+(((IkReal(-1.00000000000000))*(x555)*(x559)))+(((IkReal(-1.00000000000000))*(x556)*(x558)))+(((IkReal(0.0216797014453736))*(x563)))+(((IkReal(0.0216797014453736))*(x560)))+(((x556)*(x562)))+(((IkReal(-0.0113096498530081))*(sj2)))+(((IkReal(-1.00000000000000))*(px)*(x554)))+(((IkReal(0.000212894668193569))*(cj2)))+(((IkReal(-1.00000000000000))*(py)*(x557)))+(((x555)*(x561)))))+IKsqr(((IkReal(0.669850751611374))+(((IkReal(-5.23852937836376))*(x560)))+(((IkReal(-5.23852937836376))*(x563)))+(((x557)*(x559)))+(((x554)*(x558)))+(((IkReal(-0.0514423584955321))*(cj2)))+(((IkReal(-1.00000000000000))*(x557)*(x561)))+(((IkReal(-1.00000000000000))*(px)*(x556)))+(((IkReal(-1.00000000000000))*(x554)*(x562)))+(((IkReal(-1.00000000000000))*(py)*(x555)))+(((IkReal(2.73278362081102))*(sj2)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((IkReal(-0.00277218342381993))+(((IkReal(-1.00000000000000))*(x555)*(x559)))+(((IkReal(-1.00000000000000))*(x556)*(x558)))+(((IkReal(0.0216797014453736))*(x563)))+(((IkReal(0.0216797014453736))*(x560)))+(((x556)*(x562)))+(((IkReal(-0.0113096498530081))*(sj2)))+(((IkReal(-1.00000000000000))*(px)*(x554)))+(((IkReal(0.000212894668193569))*(cj2)))+(((IkReal(-1.00000000000000))*(py)*(x557)))+(((x555)*(x561)))), ((IkReal(0.669850751611374))+(((IkReal(-5.23852937836376))*(x560)))+(((IkReal(-5.23852937836376))*(x563)))+(((x557)*(x559)))+(((x554)*(x558)))+(((IkReal(-0.0514423584955321))*(cj2)))+(((IkReal(-1.00000000000000))*(x557)*(x561)))+(((IkReal(-1.00000000000000))*(px)*(x556)))+(((IkReal(-1.00000000000000))*(x554)*(x562)))+(((IkReal(-1.00000000000000))*(py)*(x555)))+(((IkReal(2.73278362081102))*(sj2)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[2];
IkReal x564=IKcos(j4);
IkReal x565=IKsin(j4);
IkReal x566=((cj1)*(cj2));
IkReal x567=((px)*(sj0));
IkReal x568=((cj0)*(py));
IkReal x569=((sj1)*(sj2));
evalcond[0]=((((IkReal(0.000790000000000000))*(x564)))+(((IkReal(0.190890000000000))*(x565)))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[1]=((IkReal(-0.127870000000000))+(((x566)*(x568)))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(0.190890000000000))*(x564)))+(((IkReal(-1.00000000000000))*(x566)*(x567)))+(((IkReal(-1.00000000000000))*(x568)*(x569)))+(((IkReal(-0.000790000000000000))*(x565)))+(((x567)*(x569)))+(((cj2)*(pz)*(sj1)))+(((cj1)*(pz)*(sj2)))+(((IkReal(-0.521670000000000))*(sj2))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
dummyeval[0]=cj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x570=((IkReal(1.00000000000000))*(sj2));
IkReal x571=((px)*(sj0));
IkReal x572=((pz)*(sj2));
IkReal x573=((cj0)*(sj1));
IkReal x574=((cj1)*(sj2));
IkReal x575=((sj1)*(sj2));
IkReal x576=((cj2)*(sj1));
IkReal x577=((r00)*(sj0));
IkReal x578=((cj0)*(cj1)*(cj2));
IkReal x579=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.000790000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((r01)*(x578)))+(((IkReal(-1.00000000000000))*(x577)*(x579)))+(((r02)*(x576)))+(((r02)*(x574)))+(((x575)*(x577)))+(((IkReal(-1.00000000000000))*(r01)*(x570)*(x573))));
evalcond[3]=((IkReal(0.0630200000000000))+(((x571)*(x575)))+(((IkReal(0.00982000000000000))*(cj2)))+(((py)*(x578)))+(((pz)*(x576)))+(((IkReal(-1.00000000000000))*(x571)*(x579)))+(((IkReal(-1.00000000000000))*(py)*(x570)*(x573)))+(((cj1)*(x572)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(-0.0438300000000000))+(((sj1)*(x572)))+(((IkReal(-1.00000000000000))*(cj1)*(x570)*(x571)))+(((IkReal(-1.00000000000000))*(x571)*(x576)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(pz)*(x579)))+(((cj2)*(py)*(x573)))+(((cj0)*(py)*(x574)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x580=((cj2)*(sj1));
IkReal x581=((cj0)*(r01));
IkReal x582=((cj1)*(sj2));
IkReal x583=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((r01)*(sj0)))+(((cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x580)*(x583)))+(((x581)*(x582)))+(((x580)*(x581)))+(((IkReal(-1.00000000000000))*(x582)*(x583)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((r02)*(sj1)*(sj2))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r01)*(sj0)))+(((cj0)*(r00)))))+IKsqr(((((IkReal(-1.00000000000000))*(x580)*(x583)))+(((x581)*(x582)))+(((x580)*(x581)))+(((IkReal(-1.00000000000000))*(x582)*(x583)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((r02)*(sj1)*(sj2)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((r01)*(sj0)))+(((cj0)*(r00)))), ((((IkReal(-1.00000000000000))*(x580)*(x583)))+(((x581)*(x582)))+(((x580)*(x581)))+(((IkReal(-1.00000000000000))*(x582)*(x583)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((r02)*(sj1)*(sj2)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x584=((cj2)*(sj1));
IkReal x585=((cj0)*(r01));
IkReal x586=((cj1)*(sj2));
IkReal x587=((IkReal(1.00000000000000))*(r00)*(sj0));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((cj0)*(r00))));
evalcond[1]=((((x584)*(x585)))+(((IkReal(-1.00000000000000))*(x584)*(x587)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((IkReal(-1.00000000000000))*(x586)*(x587)))+(((x585)*(x586)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((r02)*(sj1)*(sj2))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x588=((IkReal(1.00000000000000))*(sj2));
IkReal x589=((px)*(sj0));
IkReal x590=((pz)*(sj2));
IkReal x591=((cj0)*(sj1));
IkReal x592=((cj1)*(sj2));
IkReal x593=((sj1)*(sj2));
IkReal x594=((cj2)*(sj1));
IkReal x595=((r00)*(sj0));
IkReal x596=((cj0)*(cj1)*(cj2));
IkReal x597=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.000790000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((r01)*(x596)))+(((r02)*(x594)))+(((r02)*(x592)))+(((IkReal(-1.00000000000000))*(r01)*(x588)*(x591)))+(((IkReal(-1.00000000000000))*(x595)*(x597)))+(((x593)*(x595))));
evalcond[3]=((IkReal(-0.318760000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((py)*(x596)))+(((IkReal(-1.00000000000000))*(x589)*(x597)))+(((pz)*(x594)))+(((cj1)*(x590)))+(((IkReal(-1.00000000000000))*(py)*(x588)*(x591)))+(((IkReal(-0.521670000000000))*(sj2)))+(((x589)*(x593))));
evalcond[4]=((IkReal(-0.0438300000000000))+(((IkReal(-1.00000000000000))*(x589)*(x594)))+(((IkReal(-1.00000000000000))*(pz)*(x597)))+(((IkReal(0.521670000000000))*(cj2)))+(((cj2)*(py)*(x591)))+(((IkReal(-1.00000000000000))*(cj1)*(x588)*(x589)))+(((sj1)*(x590)))+(((cj0)*(py)*(x592)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x598=((cj2)*(sj1));
IkReal x599=((cj0)*(r01));
IkReal x600=((cj1)*(sj2));
IkReal x601=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x598)*(x599)))+(((IkReal(-1.00000000000000))*(x598)*(x601)))+(((IkReal(-1.00000000000000))*(x600)*(x601)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((x599)*(x600)))+(((r02)*(sj1)*(sj2))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))))+IKsqr(((((x598)*(x599)))+(((IkReal(-1.00000000000000))*(x598)*(x601)))+(((IkReal(-1.00000000000000))*(x600)*(x601)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((x599)*(x600)))+(((r02)*(sj1)*(sj2)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))), ((((x598)*(x599)))+(((IkReal(-1.00000000000000))*(x598)*(x601)))+(((IkReal(-1.00000000000000))*(x600)*(x601)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((x599)*(x600)))+(((r02)*(sj1)*(sj2)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x602=((cj2)*(sj1));
IkReal x603=((cj0)*(r01));
IkReal x604=((cj1)*(sj2));
IkReal x605=((IkReal(1.00000000000000))*(r00)*(sj0));
evalcond[0]=((((r01)*(sj0)))+(IKsin(j5))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x602)*(x605)))+(((IkReal(-1.00000000000000))*(x604)*(x605)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((x603)*(x604)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((x602)*(x603)))+(((r02)*(sj1)*(sj2))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x606=((pz)*(sj1));
IkReal x607=((cj0)*(py));
IkReal x608=((IkReal(1.00000000000000))*(sj2));
IkReal x609=((cj1)*(cj2));
IkReal x610=((px)*(sj0));
IkReal x611=((cj2)*(sj1));
IkReal x612=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(0.190890000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.128660000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(sj1)*(x607)*(x608)))+(((cj2)*(x606)))+(((sj1)*(sj2)*(x610)))+(((x607)*(x609)))+(((pz)*(x612)))+(((IkReal(-1.00000000000000))*(x609)*(x610)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(-0.0438300000000000))+(((IkReal(-1.00000000000000))*(pz)*(x609)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x610)*(x611)))+(((x607)*(x611)))+(((x607)*(x612)))+(((sj2)*(x606)))+(((IkReal(0.00982000000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(cj1)*(x608)*(x610))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x613=((sj1)*(sj2));
IkReal x614=((cj2)*(sj1));
IkReal x615=((cj1)*(sj2));
IkReal x616=((IkReal(1.00000000000000))*(r02));
IkReal x617=((cj1)*(cj2));
IkReal x618=((cj0)*(r01));
IkReal x619=((sj1)*(x618));
IkReal x620=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((IkReal(-1.00000000000000))*(x614)*(x616)))+(((r00)*(sj0)*(x617)))+(((x613)*(x618)))+(((IkReal(-1.00000000000000))*(x617)*(x618)))+(((IkReal(-1.00000000000000))*(x615)*(x616)))+(((IkReal(-1.00000000000000))*(x613)*(x620))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((r02)*(x613)))+(((IkReal(-1.00000000000000))*(x614)*(x620)))+(((x614)*(x618)))+(((x615)*(x618)))+(((IkReal(-1.00000000000000))*(x615)*(x620)))+(((IkReal(-1.00000000000000))*(x616)*(x617))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x614)*(x616)))+(((r00)*(sj0)*(x617)))+(((x613)*(x618)))+(((IkReal(-1.00000000000000))*(x617)*(x618)))+(((IkReal(-1.00000000000000))*(x615)*(x616)))+(((IkReal(-1.00000000000000))*(x613)*(x620)))))+IKsqr(((((r02)*(x613)))+(((IkReal(-1.00000000000000))*(x614)*(x620)))+(((x614)*(x618)))+(((x615)*(x618)))+(((IkReal(-1.00000000000000))*(x615)*(x620)))+(((IkReal(-1.00000000000000))*(x616)*(x617)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x614)*(x616)))+(((r00)*(sj0)*(x617)))+(((x613)*(x618)))+(((IkReal(-1.00000000000000))*(x617)*(x618)))+(((IkReal(-1.00000000000000))*(x615)*(x616)))+(((IkReal(-1.00000000000000))*(x613)*(x620)))), ((((r02)*(x613)))+(((IkReal(-1.00000000000000))*(x614)*(x620)))+(((x614)*(x618)))+(((x615)*(x618)))+(((IkReal(-1.00000000000000))*(x615)*(x620)))+(((IkReal(-1.00000000000000))*(x616)*(x617)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x621=((r02)*(sj2));
IkReal x622=((IkReal(1.00000000000000))*(sj2));
IkReal x623=((r00)*(sj0));
IkReal x624=((cj1)*(cj2));
IkReal x625=((cj0)*(r01));
IkReal x626=((sj1)*(x625));
IkReal x627=((IkReal(1.00000000000000))*(cj2)*(x623));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj1)*(x622)*(x623)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((cj1)*(sj2)*(x625)))+(((sj1)*(x621)))+(((IkReal(-1.00000000000000))*(sj1)*(x627)))+(((IkReal(-1.00000000000000))*(r02)*(x624)))+(((cj2)*(x626))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x622)*(x626)))+(((IkReal(-1.00000000000000))*(x623)*(x624)))+(IKsin(j5))+(((cj2)*(r02)*(sj1)))+(((x624)*(x625)))+(((sj1)*(sj2)*(x623)))+(((cj1)*(x621))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x628=((pz)*(sj1));
IkReal x629=((cj0)*(py));
IkReal x630=((IkReal(1.00000000000000))*(sj2));
IkReal x631=((cj1)*(cj2));
IkReal x632=((px)*(sj0));
IkReal x633=((cj2)*(sj1));
IkReal x634=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(-0.190890000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.127080000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((pz)*(x634)))+(((x629)*(x631)))+(((IkReal(-1.00000000000000))*(sj1)*(x629)*(x630)))+(((IkReal(-1.00000000000000))*(x631)*(x632)))+(((sj1)*(sj2)*(x632)))+(((IkReal(-0.521670000000000))*(sj2)))+(((cj2)*(x628))));
evalcond[4]=((IkReal(-0.0438300000000000))+(((IkReal(-1.00000000000000))*(pz)*(x631)))+(((x629)*(x633)))+(((x629)*(x634)))+(((sj2)*(x628)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x632)*(x633)))+(((IkReal(-1.00000000000000))*(cj1)*(x630)*(x632)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x635=((cj2)*(sj1));
IkReal x636=((cj0)*(r01));
IkReal x637=((sj1)*(sj2));
IkReal x638=((cj1)*(cj2));
IkReal x639=((cj1)*(sj2));
IkReal x640=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((r02)*(x635)))+(((r02)*(x639)))+(((x636)*(x638)))+(((r00)*(sj0)*(x637)))+(((IkReal(-1.00000000000000))*(x638)*(x640)))+(((IkReal(-1.00000000000000))*(x636)*(x637))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((r02)*(x637)))+(((x635)*(x636)))+(((x636)*(x639)))+(((IkReal(-1.00000000000000))*(x639)*(x640)))+(((IkReal(-1.00000000000000))*(x635)*(x640)))+(((IkReal(-1.00000000000000))*(r02)*(x638))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r02)*(x635)))+(((r02)*(x639)))+(((x636)*(x638)))+(((r00)*(sj0)*(x637)))+(((IkReal(-1.00000000000000))*(x638)*(x640)))+(((IkReal(-1.00000000000000))*(x636)*(x637)))))+IKsqr(((((r02)*(x637)))+(((x635)*(x636)))+(((x636)*(x639)))+(((IkReal(-1.00000000000000))*(x639)*(x640)))+(((IkReal(-1.00000000000000))*(x635)*(x640)))+(((IkReal(-1.00000000000000))*(r02)*(x638)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((r02)*(x635)))+(((r02)*(x639)))+(((x636)*(x638)))+(((r00)*(sj0)*(x637)))+(((IkReal(-1.00000000000000))*(x638)*(x640)))+(((IkReal(-1.00000000000000))*(x636)*(x637)))), ((((r02)*(x637)))+(((x635)*(x636)))+(((x636)*(x639)))+(((IkReal(-1.00000000000000))*(x639)*(x640)))+(((IkReal(-1.00000000000000))*(x635)*(x640)))+(((IkReal(-1.00000000000000))*(r02)*(x638)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x641=((r02)*(sj2));
IkReal x642=((IkReal(1.00000000000000))*(sj2));
IkReal x643=((r00)*(sj0));
IkReal x644=((cj1)*(cj2));
IkReal x645=((cj0)*(r01));
IkReal x646=((sj1)*(x645));
IkReal x647=((IkReal(1.00000000000000))*(cj2)*(x643));
evalcond[0]=((((cj1)*(sj2)*(x645)))+(((sj1)*(x641)))+(((IkReal(-1.00000000000000))*(sj1)*(x647)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((IkReal(-1.00000000000000))*(r02)*(x644)))+(((cj2)*(x646)))+(((IkReal(-1.00000000000000))*(cj1)*(x642)*(x643))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x642)*(x646)))+(((x644)*(x645)))+(((cj1)*(x641)))+(((IkReal(-1.00000000000000))*(x643)*(x644)))+(((cj2)*(r02)*(sj1)))+(((sj1)*(sj2)*(x643)))+(((IkReal(-1.00000000000000))*(IKsin(j5)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x648=((sj1)*(sj2));
IkReal x649=((cj2)*(sj1));
IkReal x650=((cj1)*(sj2));
IkReal x651=((IkReal(1.00000000000000))*(r02));
IkReal x652=((cj1)*(cj2));
IkReal x653=((cj0)*(r01));
IkReal x654=((sj1)*(x653));
IkReal x655=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((x648)*(x653)))+(((IkReal(-1.00000000000000))*(x650)*(x651)))+(((IkReal(-1.00000000000000))*(x649)*(x651)))+(((IkReal(-1.00000000000000))*(x648)*(x655)))+(((r00)*(sj0)*(x652)))+(((IkReal(-1.00000000000000))*(x652)*(x653))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x651)*(x652)))+(((x649)*(x653)))+(((r02)*(x648)))+(((IkReal(-1.00000000000000))*(x650)*(x655)))+(((IkReal(-1.00000000000000))*(x649)*(x655)))+(((x650)*(x653))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((x648)*(x653)))+(((IkReal(-1.00000000000000))*(x650)*(x651)))+(((IkReal(-1.00000000000000))*(x649)*(x651)))+(((IkReal(-1.00000000000000))*(x648)*(x655)))+(((r00)*(sj0)*(x652)))+(((IkReal(-1.00000000000000))*(x652)*(x653)))))))+IKsqr(((((IkReal(-1.00000000000000))*(x651)*(x652)))+(((x649)*(x653)))+(((r02)*(x648)))+(((IkReal(-1.00000000000000))*(x650)*(x655)))+(((IkReal(-1.00000000000000))*(x649)*(x655)))+(((x650)*(x653)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((x648)*(x653)))+(((IkReal(-1.00000000000000))*(x650)*(x651)))+(((IkReal(-1.00000000000000))*(x649)*(x651)))+(((IkReal(-1.00000000000000))*(x648)*(x655)))+(((r00)*(sj0)*(x652)))+(((IkReal(-1.00000000000000))*(x652)*(x653)))))), ((((IkReal(-1.00000000000000))*(x651)*(x652)))+(((x649)*(x653)))+(((r02)*(x648)))+(((IkReal(-1.00000000000000))*(x650)*(x655)))+(((IkReal(-1.00000000000000))*(x649)*(x655)))+(((x650)*(x653)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x656=IKsin(j5);
IkReal x657=((r02)*(sj2));
IkReal x658=((IkReal(1.00000000000000))*(sj2));
IkReal x659=((r00)*(sj0));
IkReal x660=((IkReal(1.00000000000000))*(cj2));
IkReal x661=((cj0)*(r01)*(sj1));
IkReal x662=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x656)))+(((cj0)*(r00))));
evalcond[1]=((((cj2)*(x661)))+(((sj1)*(x657)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x660)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((IkReal(-1.00000000000000))*(cj1)*(x658)*(x659)))+(((sj2)*(x662)))+(((IkReal(-1.00000000000000))*(sj1)*(x659)*(x660))));
evalcond[2]=((((sj4)*(x656)))+(((cj2)*(x662)))+(((IkReal(-1.00000000000000))*(cj1)*(x659)*(x660)))+(((cj1)*(x657)))+(((IkReal(-1.00000000000000))*(x658)*(x661)))+(((cj2)*(r02)*(sj1)))+(((sj1)*(sj2)*(x659))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x663=((cj2)*(sj1));
IkReal x664=((cj0)*(r01));
IkReal x665=((cj1)*(sj2));
IkReal x666=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x665)*(x666)))+(((x664)*(x665)))+(((IkReal(-1.00000000000000))*(x663)*(x666)))+(((x663)*(x664)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((r02)*(sj1)*(sj2))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))))+IKsqr(((((IkReal(-1.00000000000000))*(x665)*(x666)))+(((x664)*(x665)))+(((IkReal(-1.00000000000000))*(x663)*(x666)))+(((x663)*(x664)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((r02)*(sj1)*(sj2)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))), ((((IkReal(-1.00000000000000))*(x665)*(x666)))+(((x664)*(x665)))+(((IkReal(-1.00000000000000))*(x663)*(x666)))+(((x663)*(x664)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((r02)*(sj1)*(sj2)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x667=IKsin(j5);
IkReal x668=((r02)*(sj2));
IkReal x669=((IkReal(1.00000000000000))*(sj2));
IkReal x670=((r00)*(sj0));
IkReal x671=((IkReal(1.00000000000000))*(cj2));
IkReal x672=((cj0)*(r01)*(sj1));
IkReal x673=((cj0)*(cj1)*(r01));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj4)*(x667)))+(((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj1)*(x670)*(x671)))+(((cj2)*(x672)))+(((IkReal(-1.00000000000000))*(cj1)*(x669)*(x670)))+(((sj2)*(x673)))+(((sj1)*(x668)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x671))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj1)*(x670)*(x671)))+(((cj2)*(x673)))+(((sj1)*(sj2)*(x670)))+(((sj4)*(x667)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x669)*(x672)))+(((cj1)*(x668))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x674=((cj1)*(cj2));
IkReal x675=((cj0)*(py));
IkReal x676=((px)*(sj0));
IkReal x677=((sj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.209760000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x675)*(x677)))+(((x674)*(x675)))+(((IkReal(-1.00000000000000))*(x674)*(x676)))+(((x676)*(x677)))+(((cj2)*(pz)*(sj1)))+(((cj1)*(pz)*(sj2)))+(((IkReal(-0.521670000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x678=((IkReal(0.0216797014453736))*(sj1));
IkReal x679=((cj0)*(py));
IkReal x680=((pz)*(sj2));
IkReal x681=((IkReal(5.23852937836376))*(px));
IkReal x682=((cj1)*(sj2));
IkReal x683=((IkReal(5.23852937836376))*(sj1));
IkReal x684=((py)*(sj0));
IkReal x685=((IkReal(0.0216797014453736))*(px));
IkReal x686=((cj2)*(px)*(sj0));
IkReal x687=((cj1)*(cj2)*(pz));
if( IKabs(((IkReal(0.00305076758739298))+(((IkReal(-0.0216797014453736))*(x687)))+(((x678)*(x680)))+(((IkReal(0.000212894668193569))*(sj2)))+(((IkReal(0.0216797014453736))*(x679)*(x682)))+(((IkReal(0.0113096498530081))*(cj2)))+(((IkReal(-1.00000000000000))*(x678)*(x686)))+(((IkReal(-1.00000000000000))*(sj0)*(x682)*(x685)))+(((cj2)*(x678)*(x679)))+(((IkReal(-1.00000000000000))*(cj0)*(x681)))+(((IkReal(-5.23852937836376))*(x684))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.737165854123348))+(((IkReal(-0.0216797014453736))*(x684)))+(((sj0)*(x681)*(x682)))+(((IkReal(-1.00000000000000))*(x680)*(x683)))+(((IkReal(-1.00000000000000))*(cj2)*(x679)*(x683)))+(((IkReal(5.23852937836376))*(x687)))+(((IkReal(-5.23852937836376))*(x679)*(x682)))+(((IkReal(-2.73278362081102))*(cj2)))+(((cj2)*(sj0)*(sj1)*(x681)))+(((IkReal(-0.0514423584955321))*(sj2)))+(((IkReal(-1.00000000000000))*(cj0)*(x685))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.00305076758739298))+(((IkReal(-0.0216797014453736))*(x687)))+(((x678)*(x680)))+(((IkReal(0.000212894668193569))*(sj2)))+(((IkReal(0.0216797014453736))*(x679)*(x682)))+(((IkReal(0.0113096498530081))*(cj2)))+(((IkReal(-1.00000000000000))*(x678)*(x686)))+(((IkReal(-1.00000000000000))*(sj0)*(x682)*(x685)))+(((cj2)*(x678)*(x679)))+(((IkReal(-1.00000000000000))*(cj0)*(x681)))+(((IkReal(-5.23852937836376))*(x684)))))+IKsqr(((IkReal(-0.737165854123348))+(((IkReal(-0.0216797014453736))*(x684)))+(((sj0)*(x681)*(x682)))+(((IkReal(-1.00000000000000))*(x680)*(x683)))+(((IkReal(-1.00000000000000))*(cj2)*(x679)*(x683)))+(((IkReal(5.23852937836376))*(x687)))+(((IkReal(-5.23852937836376))*(x679)*(x682)))+(((IkReal(-2.73278362081102))*(cj2)))+(((cj2)*(sj0)*(sj1)*(x681)))+(((IkReal(-0.0514423584955321))*(sj2)))+(((IkReal(-1.00000000000000))*(cj0)*(x685)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((IkReal(0.00305076758739298))+(((IkReal(-0.0216797014453736))*(x687)))+(((x678)*(x680)))+(((IkReal(0.000212894668193569))*(sj2)))+(((IkReal(0.0216797014453736))*(x679)*(x682)))+(((IkReal(0.0113096498530081))*(cj2)))+(((IkReal(-1.00000000000000))*(x678)*(x686)))+(((IkReal(-1.00000000000000))*(sj0)*(x682)*(x685)))+(((cj2)*(x678)*(x679)))+(((IkReal(-1.00000000000000))*(cj0)*(x681)))+(((IkReal(-5.23852937836376))*(x684)))), ((IkReal(-0.737165854123348))+(((IkReal(-0.0216797014453736))*(x684)))+(((sj0)*(x681)*(x682)))+(((IkReal(-1.00000000000000))*(x680)*(x683)))+(((IkReal(-1.00000000000000))*(cj2)*(x679)*(x683)))+(((IkReal(5.23852937836376))*(x687)))+(((IkReal(-5.23852937836376))*(x679)*(x682)))+(((IkReal(-2.73278362081102))*(cj2)))+(((cj2)*(sj0)*(sj1)*(x681)))+(((IkReal(-0.0514423584955321))*(sj2)))+(((IkReal(-1.00000000000000))*(cj0)*(x685)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[2];
IkReal x688=IKcos(j4);
IkReal x689=IKsin(j4);
IkReal x690=((cj1)*(sj2));
IkReal x691=((cj2)*(sj1));
IkReal x692=((cj0)*(py));
IkReal x693=((IkReal(1.00000000000000))*(px)*(sj0));
evalcond[0]=((((IkReal(0.190890000000000))*(x689)))+(((IkReal(0.000790000000000000))*(x688)))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[1]=((IkReal(0.140720000000000))+(((x690)*(x692)))+(((x691)*(x692)))+(((pz)*(sj1)*(sj2)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(0.190890000000000))*(x688)))+(((IkReal(-1.00000000000000))*(x690)*(x693)))+(((IkReal(-1.00000000000000))*(x691)*(x693)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(pz)))+(((IkReal(-0.000790000000000000))*(x689)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
dummyeval[0]=cj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x694=((IkReal(1.00000000000000))*(sj0));
IkReal x695=((cj1)*(sj2));
IkReal x696=((sj1)*(sj2));
IkReal x697=((cj2)*(sj1));
IkReal x698=((cj0)*(r01));
IkReal x699=((cj0)*(py));
IkReal x700=((cj2)*(x699));
IkReal x701=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.000790000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r02)*(x701)))+(((x695)*(x698)))+(((x697)*(x698)))+(((r02)*(x696)))+(((IkReal(-1.00000000000000))*(r00)*(x694)*(x697)))+(((IkReal(-1.00000000000000))*(r00)*(x694)*(x695))));
evalcond[3]=((IkReal(-0.209760000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x696)*(x699)))+(((pz)*(x697)))+(((pz)*(x695)))+(((px)*(sj0)*(x696)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(px)*(x694)))+(((cj1)*(x700)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(0.331610000000000))+(((IkReal(-1.00000000000000))*(pz)*(x701)))+(((x695)*(x699)))+(((IkReal(-1.00000000000000))*(px)*(x694)*(x695)))+(((IkReal(-1.00000000000000))*(px)*(x694)*(x697)))+(((pz)*(x696)))+(((x697)*(x699)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x702=((cj0)*(r01));
IkReal x703=((sj1)*(sj2));
IkReal x704=((IkReal(1.00000000000000))*(cj1));
IkReal x705=((r00)*(sj0));
if( IKabs(((((r01)*(sj0)))+(((cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x703)*(x705)))+(((x702)*(x703)))+(((IkReal(-1.00000000000000))*(cj2)*(x702)*(x704)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x704)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((cj1)*(cj2)*(x705))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r01)*(sj0)))+(((cj0)*(r00)))))+IKsqr(((((IkReal(-1.00000000000000))*(x703)*(x705)))+(((x702)*(x703)))+(((IkReal(-1.00000000000000))*(cj2)*(x702)*(x704)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x704)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((cj1)*(cj2)*(x705)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((r01)*(sj0)))+(((cj0)*(r00)))), ((((IkReal(-1.00000000000000))*(x703)*(x705)))+(((x702)*(x703)))+(((IkReal(-1.00000000000000))*(cj2)*(x702)*(x704)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x704)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((cj1)*(cj2)*(x705)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x706=((sj1)*(sj2));
IkReal x707=((cj0)*(r01));
IkReal x708=((r00)*(sj0));
IkReal x709=((cj1)*(cj2));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x706)*(x707)))+(((x706)*(x708)))+(((x707)*(x709)))+(((IkReal(-1.00000000000000))*(x708)*(x709)))+(IKcos(j5))+(((cj2)*(r02)*(sj1)))+(((cj1)*(r02)*(sj2))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x710=((IkReal(1.00000000000000))*(sj0));
IkReal x711=((cj1)*(sj2));
IkReal x712=((sj1)*(sj2));
IkReal x713=((cj2)*(sj1));
IkReal x714=((cj0)*(r01));
IkReal x715=((cj0)*(py));
IkReal x716=((cj2)*(x715));
IkReal x717=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.000790000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r02)*(x717)))+(((x711)*(x714)))+(((IkReal(-1.00000000000000))*(r00)*(x710)*(x713)))+(((IkReal(-1.00000000000000))*(r00)*(x710)*(x711)))+(((r02)*(x712)))+(((x713)*(x714))));
evalcond[3]=((IkReal(-0.209760000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((px)*(sj0)*(x712)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(px)*(x710)))+(((IkReal(-1.00000000000000))*(x712)*(x715)))+(((IkReal(-0.521670000000000))*(sj2)))+(((pz)*(x713)))+(((pz)*(x711)))+(((cj1)*(x716))));
evalcond[4]=((IkReal(-0.0501700000000000))+(((IkReal(-1.00000000000000))*(pz)*(x717)))+(((x711)*(x715)))+(((IkReal(-1.00000000000000))*(px)*(x710)*(x711)))+(((IkReal(-1.00000000000000))*(px)*(x710)*(x713)))+(((IkReal(0.521670000000000))*(cj2)))+(((pz)*(x712)))+(((IkReal(0.00982000000000000))*(sj2)))+(((x713)*(x715))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x718=((sj1)*(sj2));
IkReal x719=((cj0)*(r01));
IkReal x720=((r00)*(sj0));
IkReal x721=((IkReal(1.00000000000000))*(cj1));
if( IKabs(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj1)*(cj2)*(x720)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x721)))+(((IkReal(-1.00000000000000))*(cj2)*(x719)*(x721)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((x718)*(x719)))+(((IkReal(-1.00000000000000))*(x718)*(x720))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))))+IKsqr(((((cj1)*(cj2)*(x720)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x721)))+(((IkReal(-1.00000000000000))*(cj2)*(x719)*(x721)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((x718)*(x719)))+(((IkReal(-1.00000000000000))*(x718)*(x720)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))), ((((cj1)*(cj2)*(x720)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x721)))+(((IkReal(-1.00000000000000))*(cj2)*(x719)*(x721)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((x718)*(x719)))+(((IkReal(-1.00000000000000))*(x718)*(x720)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x722=((sj1)*(sj2));
IkReal x723=((cj0)*(r01));
IkReal x724=((r00)*(sj0));
IkReal x725=((cj1)*(cj2));
evalcond[0]=((((r01)*(sj0)))+(IKsin(j5))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x724)*(x725)))+(((x723)*(x725)))+(((x722)*(x724)))+(((IkReal(-1.00000000000000))*(x722)*(x723)))+(IKcos(j5))+(((cj2)*(r02)*(sj1)))+(((cj1)*(r02)*(sj2))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x726=((pz)*(sj1));
IkReal x727=((cj0)*(py));
IkReal x728=((IkReal(1.00000000000000))*(sj2));
IkReal x729=((cj1)*(cj2));
IkReal x730=((px)*(sj0));
IkReal x731=((cj2)*(sj1));
IkReal x732=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(0.190890000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.209760000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((x727)*(x729)))+(((cj2)*(x726)))+(((pz)*(x732)))+(((sj1)*(sj2)*(x730)))+(((IkReal(-1.00000000000000))*(x729)*(x730)))+(((IkReal(-0.521670000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(sj1)*(x727)*(x728))));
evalcond[4]=((IkReal(0.139930000000000))+(((IkReal(-1.00000000000000))*(cj1)*(x728)*(x730)))+(((x727)*(x732)))+(((x727)*(x731)))+(((IkReal(-1.00000000000000))*(x730)*(x731)))+(((sj2)*(x726)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(pz)*(x729)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x733=((IkReal(1.00000000000000))*(sj2));
IkReal x734=((r02)*(sj1));
IkReal x735=((cj0)*(r01));
IkReal x736=((r00)*(sj0));
IkReal x737=((cj1)*(r02));
IkReal x738=((IkReal(1.00000000000000))*(cj2));
if( IKabs(((((IkReal(-1.00000000000000))*(cj1)*(x733)*(x735)))+(((IkReal(-1.00000000000000))*(x733)*(x734)))+(((IkReal(-1.00000000000000))*(sj1)*(x735)*(x738)))+(((cj2)*(x737)))+(((cj2)*(sj1)*(x736)))+(((cj1)*(sj2)*(x736))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(cj1)*(x735)*(x738)))+(((IkReal(-1.00000000000000))*(x734)*(x738)))+(((IkReal(-1.00000000000000))*(x733)*(x737)))+(((IkReal(-1.00000000000000))*(sj1)*(x733)*(x736)))+(((sj1)*(sj2)*(x735)))+(((cj1)*(cj2)*(x736))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(cj1)*(x733)*(x735)))+(((IkReal(-1.00000000000000))*(x733)*(x734)))+(((IkReal(-1.00000000000000))*(sj1)*(x735)*(x738)))+(((cj2)*(x737)))+(((cj2)*(sj1)*(x736)))+(((cj1)*(sj2)*(x736)))))+IKsqr(((((IkReal(-1.00000000000000))*(cj1)*(x735)*(x738)))+(((IkReal(-1.00000000000000))*(x734)*(x738)))+(((IkReal(-1.00000000000000))*(x733)*(x737)))+(((IkReal(-1.00000000000000))*(sj1)*(x733)*(x736)))+(((sj1)*(sj2)*(x735)))+(((cj1)*(cj2)*(x736)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(cj1)*(x733)*(x735)))+(((IkReal(-1.00000000000000))*(x733)*(x734)))+(((IkReal(-1.00000000000000))*(sj1)*(x735)*(x738)))+(((cj2)*(x737)))+(((cj2)*(sj1)*(x736)))+(((cj1)*(sj2)*(x736)))), ((((IkReal(-1.00000000000000))*(cj1)*(x735)*(x738)))+(((IkReal(-1.00000000000000))*(x734)*(x738)))+(((IkReal(-1.00000000000000))*(x733)*(x737)))+(((IkReal(-1.00000000000000))*(sj1)*(x733)*(x736)))+(((sj1)*(sj2)*(x735)))+(((cj1)*(cj2)*(x736)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x739=((r02)*(sj2));
IkReal x740=((IkReal(1.00000000000000))*(sj2));
IkReal x741=((r00)*(sj0));
IkReal x742=((cj1)*(cj2));
IkReal x743=((cj0)*(r01));
IkReal x744=((sj1)*(x743));
IkReal x745=((IkReal(1.00000000000000))*(cj2)*(x741));
evalcond[0]=((((IkReal(-1.00000000000000))*(r02)*(x742)))+(((IkReal(-1.00000000000000))*(sj1)*(x745)))+(((cj1)*(sj2)*(x743)))+(((cj2)*(x744)))+(IKsin(j5))+(((IkReal(-1.00000000000000))*(cj1)*(x740)*(x741)))+(((sj1)*(x739))));
evalcond[1]=((((x742)*(x743)))+(((sj1)*(sj2)*(x741)))+(IKcos(j5))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x740)*(x744)))+(((cj1)*(x739)))+(((IkReal(-1.00000000000000))*(x741)*(x742))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x746=((pz)*(sj1));
IkReal x747=((cj0)*(py));
IkReal x748=((IkReal(1.00000000000000))*(sj2));
IkReal x749=((cj1)*(cj2));
IkReal x750=((px)*(sj0));
IkReal x751=((cj2)*(sj1));
IkReal x752=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(-0.190890000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.209760000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((pz)*(x752)))+(((IkReal(-1.00000000000000))*(sj1)*(x747)*(x748)))+(((x747)*(x749)))+(((cj2)*(x746)))+(((sj1)*(sj2)*(x750)))+(((IkReal(-0.521670000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(x749)*(x750))));
evalcond[4]=((IkReal(0.141510000000000))+(((IkReal(-1.00000000000000))*(pz)*(x749)))+(((x747)*(x751)))+(((x747)*(x752)))+(((IkReal(-1.00000000000000))*(x750)*(x751)))+(((IkReal(0.521670000000000))*(cj2)))+(((sj2)*(x746)))+(((IkReal(0.00982000000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(cj1)*(x748)*(x750))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x753=((cj2)*(sj1));
IkReal x754=((IkReal(1.00000000000000))*(r02));
IkReal x755=((cj0)*(r01));
IkReal x756=((sj1)*(sj2));
IkReal x757=((cj1)*(cj2));
IkReal x758=((cj1)*(sj2));
IkReal x759=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((r02)*(x756)))+(((IkReal(-1.00000000000000))*(x754)*(x757)))+(((IkReal(-1.00000000000000))*(x753)*(x759)))+(((x755)*(x758)))+(((IkReal(-1.00000000000000))*(x758)*(x759)))+(((x753)*(x755))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x754)*(x758)))+(((IkReal(-1.00000000000000))*(x753)*(x754)))+(((r00)*(sj0)*(x757)))+(((IkReal(-1.00000000000000))*(x756)*(x759)))+(((IkReal(-1.00000000000000))*(x755)*(x757)))+(((x755)*(x756))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r02)*(x756)))+(((IkReal(-1.00000000000000))*(x754)*(x757)))+(((IkReal(-1.00000000000000))*(x753)*(x759)))+(((x755)*(x758)))+(((IkReal(-1.00000000000000))*(x758)*(x759)))+(((x753)*(x755)))))+IKsqr(((((IkReal(-1.00000000000000))*(x754)*(x758)))+(((IkReal(-1.00000000000000))*(x753)*(x754)))+(((r00)*(sj0)*(x757)))+(((IkReal(-1.00000000000000))*(x756)*(x759)))+(((IkReal(-1.00000000000000))*(x755)*(x757)))+(((x755)*(x756)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((r02)*(x756)))+(((IkReal(-1.00000000000000))*(x754)*(x757)))+(((IkReal(-1.00000000000000))*(x753)*(x759)))+(((x755)*(x758)))+(((IkReal(-1.00000000000000))*(x758)*(x759)))+(((x753)*(x755)))), ((((IkReal(-1.00000000000000))*(x754)*(x758)))+(((IkReal(-1.00000000000000))*(x753)*(x754)))+(((r00)*(sj0)*(x757)))+(((IkReal(-1.00000000000000))*(x756)*(x759)))+(((IkReal(-1.00000000000000))*(x755)*(x757)))+(((x755)*(x756)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x760=((r02)*(sj2));
IkReal x761=((IkReal(1.00000000000000))*(sj2));
IkReal x762=((r00)*(sj0));
IkReal x763=((cj1)*(cj2));
IkReal x764=((cj0)*(r01));
IkReal x765=((sj1)*(x764));
IkReal x766=((IkReal(1.00000000000000))*(cj2)*(x762));
evalcond[0]=((((IkReal(-1.00000000000000))*(sj1)*(x766)))+(((cj2)*(x765)))+(((sj1)*(x760)))+(((IkReal(-1.00000000000000))*(cj1)*(x761)*(x762)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((cj1)*(sj2)*(x764)))+(((IkReal(-1.00000000000000))*(r02)*(x763))));
evalcond[1]=((((cj1)*(x760)))+(((sj1)*(sj2)*(x762)))+(((x763)*(x764)))+(IKcos(j5))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x762)*(x763)))+(((IkReal(-1.00000000000000))*(x761)*(x765))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x767=((IkReal(1.00000000000000))*(sj2));
IkReal x768=((r02)*(sj1));
IkReal x769=((cj0)*(r01));
IkReal x770=((cj1)*(r02));
IkReal x771=((r00)*(sj0));
IkReal x772=((IkReal(1.00000000000000))*(cj2));
if( IKabs(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((cj1)*(sj2)*(x771)))+(((cj2)*(x770)))+(((IkReal(-1.00000000000000))*(x767)*(x768)))+(((IkReal(-1.00000000000000))*(sj1)*(x769)*(x772)))+(((cj2)*(sj1)*(x771)))+(((IkReal(-1.00000000000000))*(cj1)*(x767)*(x769))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x768)*(x772)))+(((IkReal(-1.00000000000000))*(cj1)*(x769)*(x772)))+(((sj1)*(sj2)*(x769)))+(((IkReal(-1.00000000000000))*(x767)*(x770)))+(((cj1)*(cj2)*(x771)))+(((IkReal(-1.00000000000000))*(sj1)*(x767)*(x771))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((cj1)*(sj2)*(x771)))+(((cj2)*(x770)))+(((IkReal(-1.00000000000000))*(x767)*(x768)))+(((IkReal(-1.00000000000000))*(sj1)*(x769)*(x772)))+(((cj2)*(sj1)*(x771)))+(((IkReal(-1.00000000000000))*(cj1)*(x767)*(x769)))))))+IKsqr(((((IkReal(-1.00000000000000))*(x768)*(x772)))+(((IkReal(-1.00000000000000))*(cj1)*(x769)*(x772)))+(((sj1)*(sj2)*(x769)))+(((IkReal(-1.00000000000000))*(x767)*(x770)))+(((cj1)*(cj2)*(x771)))+(((IkReal(-1.00000000000000))*(sj1)*(x767)*(x771)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((cj1)*(sj2)*(x771)))+(((cj2)*(x770)))+(((IkReal(-1.00000000000000))*(x767)*(x768)))+(((IkReal(-1.00000000000000))*(sj1)*(x769)*(x772)))+(((cj2)*(sj1)*(x771)))+(((IkReal(-1.00000000000000))*(cj1)*(x767)*(x769)))))), ((((IkReal(-1.00000000000000))*(x768)*(x772)))+(((IkReal(-1.00000000000000))*(cj1)*(x769)*(x772)))+(((sj1)*(sj2)*(x769)))+(((IkReal(-1.00000000000000))*(x767)*(x770)))+(((cj1)*(cj2)*(x771)))+(((IkReal(-1.00000000000000))*(sj1)*(x767)*(x771)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x773=IKsin(j5);
IkReal x774=((r02)*(sj2));
IkReal x775=((IkReal(1.00000000000000))*(sj2));
IkReal x776=((r00)*(sj0));
IkReal x777=((IkReal(1.00000000000000))*(cj2));
IkReal x778=((cj0)*(r01)*(sj1));
IkReal x779=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x773)))+(((cj0)*(r00))));
evalcond[1]=((((sj4)*(x773)))+(((cj2)*(x778)))+(((sj1)*(x774)))+(((IkReal(-1.00000000000000))*(sj1)*(x776)*(x777)))+(((sj2)*(x779)))+(((IkReal(-1.00000000000000))*(cj1)*(x775)*(x776)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x777))));
evalcond[2]=((((cj1)*(x774)))+(((sj1)*(sj2)*(x776)))+(((cj2)*(x779)))+(IKcos(j5))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x775)*(x778)))+(((IkReal(-1.00000000000000))*(cj1)*(x776)*(x777))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x780=((cj0)*(r01));
IkReal x781=((sj1)*(sj2));
IkReal x782=((IkReal(1.00000000000000))*(cj1));
IkReal x783=((r00)*(sj0));
if( IKabs(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x781)*(x783)))+(((IkReal(-1.00000000000000))*(cj2)*(x780)*(x782)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x782)))+(((x780)*(x781)))+(((cj1)*(cj2)*(x783))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))))+IKsqr(((((IkReal(-1.00000000000000))*(x781)*(x783)))+(((IkReal(-1.00000000000000))*(cj2)*(x780)*(x782)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x782)))+(((x780)*(x781)))+(((cj1)*(cj2)*(x783)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))), ((((IkReal(-1.00000000000000))*(x781)*(x783)))+(((IkReal(-1.00000000000000))*(cj2)*(x780)*(x782)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x782)))+(((x780)*(x781)))+(((cj1)*(cj2)*(x783)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x784=IKsin(j5);
IkReal x785=((r02)*(sj2));
IkReal x786=((IkReal(1.00000000000000))*(sj2));
IkReal x787=((r00)*(sj0));
IkReal x788=((IkReal(1.00000000000000))*(cj2));
IkReal x789=((cj0)*(r01)*(sj1));
IkReal x790=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x784)))+(((cj0)*(r00))));
evalcond[1]=((((sj1)*(x785)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x788)))+(((IkReal(-1.00000000000000))*(cj1)*(x786)*(x787)))+(((sj4)*(x784)))+(((IkReal(-1.00000000000000))*(sj1)*(x787)*(x788)))+(((cj2)*(x789)))+(((sj2)*(x790))));
evalcond[2]=((((sj1)*(sj2)*(x787)))+(((cj1)*(x785)))+(((IkReal(-1.00000000000000))*(cj1)*(x787)*(x788)))+(IKcos(j5))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x786)*(x789)))+(((cj2)*(x790))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x791=((cj1)*(cj2));
IkReal x792=((cj0)*(py));
IkReal x793=((px)*(sj0));
IkReal x794=((sj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.312420000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((x793)*(x794)))+(((cj2)*(pz)*(sj1)))+(((cj1)*(pz)*(sj2)))+(((IkReal(-1.00000000000000))*(x791)*(x793)))+(((IkReal(-1.00000000000000))*(x792)*(x794)))+(((IkReal(-0.521670000000000))*(sj2)))+(((x791)*(x792))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x795=((IkReal(5.23852937836376))*(cj0));
IkReal x796=((IkReal(0.0216797014453736))*(pz));
IkReal x797=((sj1)*(sj2));
IkReal x798=((IkReal(0.0216797014453736))*(sj0));
IkReal x799=((cj1)*(sj2));
IkReal x800=((cj1)*(cj2));
IkReal x801=((cj2)*(sj1));
IkReal x802=((IkReal(5.23852937836376))*(sj0));
IkReal x803=((IkReal(0.0216797014453736))*(cj0));
IkReal x804=((IkReal(5.23852937836376))*(pz));
if( IKabs(((IkReal(0.00272557206571237))+(((IkReal(-1.00000000000000))*(x796)*(x797)))+(((IkReal(-1.00000000000000))*(px)*(x795)))+(((px)*(x798)*(x799)))+(((IkReal(-1.00000000000000))*(py)*(x801)*(x803)))+(((IkReal(-0.000212894668193569))*(sj2)))+(((IkReal(-1.00000000000000))*(py)*(x799)*(x803)))+(((px)*(x798)*(x801)))+(((IkReal(-1.00000000000000))*(py)*(x802)))+(((IkReal(-0.0113096498530081))*(cj2)))+(((x796)*(x800))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.658587913447892))+(((IkReal(-1.00000000000000))*(px)*(x803)))+(((py)*(x795)*(x801)))+(((IkReal(-1.00000000000000))*(px)*(x801)*(x802)))+(((x797)*(x804)))+(((IkReal(-1.00000000000000))*(x800)*(x804)))+(((IkReal(0.0514423584955321))*(sj2)))+(((IkReal(-1.00000000000000))*(px)*(x799)*(x802)))+(((IkReal(2.73278362081102))*(cj2)))+(((IkReal(-1.00000000000000))*(py)*(x798)))+(((py)*(x795)*(x799))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.00272557206571237))+(((IkReal(-1.00000000000000))*(x796)*(x797)))+(((IkReal(-1.00000000000000))*(px)*(x795)))+(((px)*(x798)*(x799)))+(((IkReal(-1.00000000000000))*(py)*(x801)*(x803)))+(((IkReal(-0.000212894668193569))*(sj2)))+(((IkReal(-1.00000000000000))*(py)*(x799)*(x803)))+(((px)*(x798)*(x801)))+(((IkReal(-1.00000000000000))*(py)*(x802)))+(((IkReal(-0.0113096498530081))*(cj2)))+(((x796)*(x800)))))+IKsqr(((IkReal(-0.658587913447892))+(((IkReal(-1.00000000000000))*(px)*(x803)))+(((py)*(x795)*(x801)))+(((IkReal(-1.00000000000000))*(px)*(x801)*(x802)))+(((x797)*(x804)))+(((IkReal(-1.00000000000000))*(x800)*(x804)))+(((IkReal(0.0514423584955321))*(sj2)))+(((IkReal(-1.00000000000000))*(px)*(x799)*(x802)))+(((IkReal(2.73278362081102))*(cj2)))+(((IkReal(-1.00000000000000))*(py)*(x798)))+(((py)*(x795)*(x799)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((IkReal(0.00272557206571237))+(((IkReal(-1.00000000000000))*(x796)*(x797)))+(((IkReal(-1.00000000000000))*(px)*(x795)))+(((px)*(x798)*(x799)))+(((IkReal(-1.00000000000000))*(py)*(x801)*(x803)))+(((IkReal(-0.000212894668193569))*(sj2)))+(((IkReal(-1.00000000000000))*(py)*(x799)*(x803)))+(((px)*(x798)*(x801)))+(((IkReal(-1.00000000000000))*(py)*(x802)))+(((IkReal(-0.0113096498530081))*(cj2)))+(((x796)*(x800)))), ((IkReal(-0.658587913447892))+(((IkReal(-1.00000000000000))*(px)*(x803)))+(((py)*(x795)*(x801)))+(((IkReal(-1.00000000000000))*(px)*(x801)*(x802)))+(((x797)*(x804)))+(((IkReal(-1.00000000000000))*(x800)*(x804)))+(((IkReal(0.0514423584955321))*(sj2)))+(((IkReal(-1.00000000000000))*(px)*(x799)*(x802)))+(((IkReal(2.73278362081102))*(cj2)))+(((IkReal(-1.00000000000000))*(py)*(x798)))+(((py)*(x795)*(x799)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[2];
IkReal x805=IKsin(j4);
IkReal x806=IKcos(j4);
IkReal x807=((cj1)*(sj2));
IkReal x808=((cj2)*(sj1));
IkReal x809=((cj0)*(py));
IkReal x810=((IkReal(1.00000000000000))*(px)*(sj0));
evalcond[0]=((((IkReal(0.190890000000000))*(x805)))+(((IkReal(0.000790000000000000))*(x806)))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[1]=((IkReal(-0.125720000000000))+(((IkReal(-1.00000000000000))*(x808)*(x810)))+(((IkReal(0.000790000000000000))*(x805)))+(((pz)*(sj1)*(sj2)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x807)*(x810)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(pz)))+(((x808)*(x809)))+(((IkReal(0.00982000000000000))*(sj2)))+(((IkReal(-0.190890000000000))*(x806)))+(((x807)*(x809))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
dummyeval[0]=cj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x811=((IkReal(1.00000000000000))*(sj0));
IkReal x812=((cj1)*(sj2));
IkReal x813=((sj1)*(sj2));
IkReal x814=((cj2)*(sj1));
IkReal x815=((cj0)*(r01));
IkReal x816=((cj0)*(py));
IkReal x817=((cj2)*(x816));
IkReal x818=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.000790000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r00)*(x811)*(x812)))+(((IkReal(-1.00000000000000))*(r00)*(x811)*(x814)))+(((x812)*(x815)))+(((x814)*(x815)))+(((IkReal(-1.00000000000000))*(r02)*(x818)))+(((r02)*(x813))));
evalcond[3]=((IkReal(-0.312420000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((px)*(sj0)*(x813)))+(((pz)*(x812)))+(((pz)*(x814)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(px)*(x811)))+(((cj1)*(x817)))+(((IkReal(-0.521670000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(x813)*(x816))));
evalcond[4]=((IkReal(-0.316610000000000))+(((pz)*(x813)))+(((x812)*(x816)))+(((IkReal(-1.00000000000000))*(pz)*(x818)))+(((IkReal(-1.00000000000000))*(px)*(x811)*(x812)))+(((IkReal(-1.00000000000000))*(px)*(x811)*(x814)))+(((IkReal(0.521670000000000))*(cj2)))+(((x814)*(x816)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x819=((sj1)*(sj2));
IkReal x820=((cj0)*(r01));
IkReal x821=((r00)*(sj0));
IkReal x822=((cj1)*(cj2));
if( IKabs(((((r01)*(sj0)))+(((cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x820)*(x822)))+(((x819)*(x821)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x819)*(x820)))+(((IkReal(-1.00000000000000))*(x821)*(x822)))+(((cj1)*(r02)*(sj2))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r01)*(sj0)))+(((cj0)*(r00)))))+IKsqr(((((x820)*(x822)))+(((x819)*(x821)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x819)*(x820)))+(((IkReal(-1.00000000000000))*(x821)*(x822)))+(((cj1)*(r02)*(sj2)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((r01)*(sj0)))+(((cj0)*(r00)))), ((((x820)*(x822)))+(((x819)*(x821)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x819)*(x820)))+(((IkReal(-1.00000000000000))*(x821)*(x822)))+(((cj1)*(r02)*(sj2)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x823=((sj1)*(sj2));
IkReal x824=((cj0)*(r01));
IkReal x825=((r00)*(sj0));
IkReal x826=((cj1)*(cj2));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x823)*(x824)))+(((x824)*(x826)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((IkReal(-1.00000000000000))*(x825)*(x826)))+(((cj2)*(r02)*(sj1)))+(((x823)*(x825)))+(((cj1)*(r02)*(sj2))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x827=((IkReal(1.00000000000000))*(sj0));
IkReal x828=((cj1)*(sj2));
IkReal x829=((sj1)*(sj2));
IkReal x830=((cj2)*(sj1));
IkReal x831=((cj0)*(r01));
IkReal x832=((cj0)*(py));
IkReal x833=((cj2)*(x832));
IkReal x834=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.000790000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r02)*(x834)))+(((IkReal(-1.00000000000000))*(r00)*(x827)*(x830)))+(((x830)*(x831)))+(((IkReal(-1.00000000000000))*(r00)*(x827)*(x828)))+(((x828)*(x831)))+(((r02)*(x829))));
evalcond[3]=((IkReal(-0.312420000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((pz)*(x828)))+(((pz)*(x830)))+(((IkReal(-1.00000000000000))*(x829)*(x832)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(px)*(x827)))+(((IkReal(-0.521670000000000))*(sj2)))+(((px)*(sj0)*(x829)))+(((cj1)*(x833))));
evalcond[4]=((IkReal(0.0651700000000000))+(((pz)*(x829)))+(((IkReal(-1.00000000000000))*(pz)*(x834)))+(((IkReal(-1.00000000000000))*(px)*(x827)*(x828)))+(((IkReal(0.521670000000000))*(cj2)))+(((x830)*(x832)))+(((IkReal(-1.00000000000000))*(px)*(x827)*(x830)))+(((x828)*(x832)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x835=((r00)*(sj0));
IkReal x836=((cj1)*(cj2));
IkReal x837=((sj1)*(sj2));
IkReal x838=((cj0)*(r01));
if( IKabs(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x835)*(x837)))+(((x836)*(x838)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x837)*(x838)))+(((IkReal(-1.00000000000000))*(x835)*(x836)))+(((cj1)*(r02)*(sj2))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))))+IKsqr(((((x835)*(x837)))+(((x836)*(x838)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x837)*(x838)))+(((IkReal(-1.00000000000000))*(x835)*(x836)))+(((cj1)*(r02)*(sj2)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))), ((((x835)*(x837)))+(((x836)*(x838)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x837)*(x838)))+(((IkReal(-1.00000000000000))*(x835)*(x836)))+(((cj1)*(r02)*(sj2)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x839=((sj1)*(sj2));
IkReal x840=((cj0)*(r01));
IkReal x841=((r00)*(sj0));
IkReal x842=((cj1)*(cj2));
evalcond[0]=((((r01)*(sj0)))+(IKsin(j5))+(((cj0)*(r00))));
evalcond[1]=((((x840)*(x842)))+(((x839)*(x841)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x841)*(x842)))+(((IkReal(-1.00000000000000))*(x839)*(x840)))+(((cj1)*(r02)*(sj2))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x843=((pz)*(sj1));
IkReal x844=((cj0)*(py));
IkReal x845=((IkReal(1.00000000000000))*(sj2));
IkReal x846=((cj1)*(cj2));
IkReal x847=((px)*(sj0));
IkReal x848=((cj2)*(sj1));
IkReal x849=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(0.190890000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.312420000000000))+(((sj1)*(sj2)*(x847)))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x846)*(x847)))+(((IkReal(-1.00000000000000))*(sj1)*(x844)*(x845)))+(((pz)*(x849)))+(((cj2)*(x843)))+(((IkReal(-0.521670000000000))*(sj2)))+(((x844)*(x846))));
evalcond[4]=((IkReal(-0.124930000000000))+(((IkReal(-1.00000000000000))*(cj1)*(x845)*(x847)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x847)*(x848)))+(((sj2)*(x843)))+(((IkReal(-1.00000000000000))*(pz)*(x846)))+(((x844)*(x848)))+(((x844)*(x849)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x850=((r02)*(sj2));
IkReal x851=((IkReal(1.00000000000000))*(sj2));
IkReal x852=((r00)*(sj0));
IkReal x853=((cj1)*(cj2));
IkReal x854=((cj0)*(r01));
IkReal x855=((sj1)*(x854));
IkReal x856=((IkReal(1.00000000000000))*(cj2)*(x852));
if( IKabs(((((IkReal(-1.00000000000000))*(cj1)*(x851)*(x852)))+(((cj2)*(x855)))+(((sj1)*(x850)))+(((IkReal(-1.00000000000000))*(sj1)*(x856)))+(((IkReal(-1.00000000000000))*(r02)*(x853)))+(((cj1)*(sj2)*(x854))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x852)*(x853)))+(((cj1)*(x850)))+(((cj2)*(r02)*(sj1)))+(((sj1)*(sj2)*(x852)))+(((IkReal(-1.00000000000000))*(x851)*(x855)))+(((x853)*(x854))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(cj1)*(x851)*(x852)))+(((cj2)*(x855)))+(((sj1)*(x850)))+(((IkReal(-1.00000000000000))*(sj1)*(x856)))+(((IkReal(-1.00000000000000))*(r02)*(x853)))+(((cj1)*(sj2)*(x854)))))+IKsqr(((((IkReal(-1.00000000000000))*(x852)*(x853)))+(((cj1)*(x850)))+(((cj2)*(r02)*(sj1)))+(((sj1)*(sj2)*(x852)))+(((IkReal(-1.00000000000000))*(x851)*(x855)))+(((x853)*(x854)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(cj1)*(x851)*(x852)))+(((cj2)*(x855)))+(((sj1)*(x850)))+(((IkReal(-1.00000000000000))*(sj1)*(x856)))+(((IkReal(-1.00000000000000))*(r02)*(x853)))+(((cj1)*(sj2)*(x854)))), ((((IkReal(-1.00000000000000))*(x852)*(x853)))+(((cj1)*(x850)))+(((cj2)*(r02)*(sj1)))+(((sj1)*(sj2)*(x852)))+(((IkReal(-1.00000000000000))*(x851)*(x855)))+(((x853)*(x854)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x857=((r02)*(sj2));
IkReal x858=((IkReal(1.00000000000000))*(sj2));
IkReal x859=((r00)*(sj0));
IkReal x860=((cj1)*(cj2));
IkReal x861=((cj0)*(r01));
IkReal x862=((sj1)*(x861));
IkReal x863=((IkReal(1.00000000000000))*(cj2)*(x859));
evalcond[0]=((((cj1)*(sj2)*(x861)))+(((cj2)*(x862)))+(((IkReal(-1.00000000000000))*(cj1)*(x858)*(x859)))+(((sj1)*(x857)))+(((IkReal(-1.00000000000000))*(sj1)*(x863)))+(((IkReal(-1.00000000000000))*(r02)*(x860)))+(((IkReal(-1.00000000000000))*(IKsin(j5)))));
evalcond[1]=((((IkReal(-1.00000000000000))*(IKcos(j5))))+(((cj1)*(x857)))+(((cj2)*(r02)*(sj1)))+(((sj1)*(sj2)*(x859)))+(((IkReal(-1.00000000000000))*(x858)*(x862)))+(((x860)*(x861)))+(((IkReal(-1.00000000000000))*(x859)*(x860))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x864=((pz)*(sj1));
IkReal x865=((cj0)*(py));
IkReal x866=((IkReal(1.00000000000000))*(sj2));
IkReal x867=((cj1)*(cj2));
IkReal x868=((px)*(sj0));
IkReal x869=((cj2)*(sj1));
IkReal x870=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(-0.190890000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.312420000000000))+(((IkReal(-1.00000000000000))*(sj1)*(x865)*(x866)))+(((IkReal(0.00982000000000000))*(cj2)))+(((cj2)*(x864)))+(((IkReal(-1.00000000000000))*(x867)*(x868)))+(((sj1)*(sj2)*(x868)))+(((x865)*(x867)))+(((pz)*(x870)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(-0.126510000000000))+(((sj2)*(x864)))+(((IkReal(-1.00000000000000))*(cj1)*(x866)*(x868)))+(((IkReal(-1.00000000000000))*(x868)*(x869)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(pz)*(x867)))+(((x865)*(x869)))+(((x865)*(x870)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x871=((IkReal(1.00000000000000))*(sj2));
IkReal x872=((r02)*(sj1));
IkReal x873=((cj0)*(r01));
IkReal x874=((IkReal(1.00000000000000))*(cj2));
IkReal x875=((cj1)*(r02));
IkReal x876=((cj1)*(r00)*(sj0));
IkReal x877=((r00)*(sj0)*(sj1));
if( IKabs(((((sj2)*(x876)))+(((cj2)*(x877)))+(((cj2)*(x875)))+(((IkReal(-1.00000000000000))*(x871)*(x872)))+(((IkReal(-1.00000000000000))*(sj1)*(x873)*(x874)))+(((IkReal(-1.00000000000000))*(cj1)*(x871)*(x873))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj1)*(cj2)*(x873)))+(((sj2)*(x877)))+(((sj2)*(x875)))+(((IkReal(-1.00000000000000))*(sj1)*(x871)*(x873)))+(((cj2)*(x872)))+(((IkReal(-1.00000000000000))*(x874)*(x876))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((sj2)*(x876)))+(((cj2)*(x877)))+(((cj2)*(x875)))+(((IkReal(-1.00000000000000))*(x871)*(x872)))+(((IkReal(-1.00000000000000))*(sj1)*(x873)*(x874)))+(((IkReal(-1.00000000000000))*(cj1)*(x871)*(x873)))))+IKsqr(((((cj1)*(cj2)*(x873)))+(((sj2)*(x877)))+(((sj2)*(x875)))+(((IkReal(-1.00000000000000))*(sj1)*(x871)*(x873)))+(((cj2)*(x872)))+(((IkReal(-1.00000000000000))*(x874)*(x876)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((sj2)*(x876)))+(((cj2)*(x877)))+(((cj2)*(x875)))+(((IkReal(-1.00000000000000))*(x871)*(x872)))+(((IkReal(-1.00000000000000))*(sj1)*(x873)*(x874)))+(((IkReal(-1.00000000000000))*(cj1)*(x871)*(x873)))), ((((cj1)*(cj2)*(x873)))+(((sj2)*(x877)))+(((sj2)*(x875)))+(((IkReal(-1.00000000000000))*(sj1)*(x871)*(x873)))+(((cj2)*(x872)))+(((IkReal(-1.00000000000000))*(x874)*(x876)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x878=((r02)*(sj2));
IkReal x879=((IkReal(1.00000000000000))*(sj2));
IkReal x880=((r00)*(sj0));
IkReal x881=((cj1)*(cj2));
IkReal x882=((cj0)*(r01));
IkReal x883=((sj1)*(x882));
IkReal x884=((IkReal(1.00000000000000))*(cj2)*(x880));
evalcond[0]=((((cj2)*(x883)))+(((cj1)*(sj2)*(x882)))+(((IkReal(-1.00000000000000))*(cj1)*(x879)*(x880)))+(IKsin(j5))+(((sj1)*(x878)))+(((IkReal(-1.00000000000000))*(sj1)*(x884)))+(((IkReal(-1.00000000000000))*(r02)*(x881))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x879)*(x883)))+(((x881)*(x882)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((sj1)*(sj2)*(x880)))+(((cj1)*(x878)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x880)*(x881))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x885=((r02)*(sj2));
IkReal x886=((IkReal(1.00000000000000))*(sj2));
IkReal x887=((r00)*(sj0));
IkReal x888=((cj1)*(cj2));
IkReal x889=((cj0)*(r01));
IkReal x890=((sj1)*(x889));
IkReal x891=((IkReal(1.00000000000000))*(cj2)*(x887));
if( IKabs(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((cj2)*(x890)))+(((sj1)*(x885)))+(((cj1)*(sj2)*(x889)))+(((IkReal(-1.00000000000000))*(cj1)*(x886)*(x887)))+(((IkReal(-1.00000000000000))*(sj1)*(x891)))+(((IkReal(-1.00000000000000))*(r02)*(x888))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x887)*(x888)))+(((sj1)*(sj2)*(x887)))+(((cj2)*(r02)*(sj1)))+(((cj1)*(x885)))+(((x888)*(x889)))+(((IkReal(-1.00000000000000))*(x886)*(x890))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((cj2)*(x890)))+(((sj1)*(x885)))+(((cj1)*(sj2)*(x889)))+(((IkReal(-1.00000000000000))*(cj1)*(x886)*(x887)))+(((IkReal(-1.00000000000000))*(sj1)*(x891)))+(((IkReal(-1.00000000000000))*(r02)*(x888)))))))+IKsqr(((((IkReal(-1.00000000000000))*(x887)*(x888)))+(((sj1)*(sj2)*(x887)))+(((cj2)*(r02)*(sj1)))+(((cj1)*(x885)))+(((x888)*(x889)))+(((IkReal(-1.00000000000000))*(x886)*(x890)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((cj2)*(x890)))+(((sj1)*(x885)))+(((cj1)*(sj2)*(x889)))+(((IkReal(-1.00000000000000))*(cj1)*(x886)*(x887)))+(((IkReal(-1.00000000000000))*(sj1)*(x891)))+(((IkReal(-1.00000000000000))*(r02)*(x888)))))), ((((IkReal(-1.00000000000000))*(x887)*(x888)))+(((sj1)*(sj2)*(x887)))+(((cj2)*(r02)*(sj1)))+(((cj1)*(x885)))+(((x888)*(x889)))+(((IkReal(-1.00000000000000))*(x886)*(x890)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x892=IKsin(j5);
IkReal x893=((r02)*(sj2));
IkReal x894=((IkReal(1.00000000000000))*(sj2));
IkReal x895=((r00)*(sj0));
IkReal x896=((IkReal(1.00000000000000))*(cj2));
IkReal x897=((IkReal(1.00000000000000))*(x892));
IkReal x898=((cj0)*(r01)*(sj1));
IkReal x899=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x897)))+(((cj0)*(r00))));
evalcond[1]=((((cj2)*(x898)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x896)))+(((sj1)*(x893)))+(((IkReal(-1.00000000000000))*(cj1)*(x894)*(x895)))+(((IkReal(-1.00000000000000))*(sj1)*(x895)*(x896)))+(((IkReal(-1.00000000000000))*(sj4)*(x897)))+(((sj2)*(x899))));
evalcond[2]=((((cj2)*(x899)))+(((IkReal(-1.00000000000000))*(cj1)*(x895)*(x896)))+(((sj1)*(sj2)*(x895)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x894)*(x898)))+(((cj1)*(x893))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x900=((sj1)*(sj2));
IkReal x901=((cj0)*(r01));
IkReal x902=((r00)*(sj0));
IkReal x903=((cj1)*(cj2));
if( IKabs(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x902)*(x903)))+(((IkReal(-1.00000000000000))*(x900)*(x901)))+(((x901)*(x903)))+(((x900)*(x902)))+(((cj2)*(r02)*(sj1)))+(((cj1)*(r02)*(sj2))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))))+IKsqr(((((IkReal(-1.00000000000000))*(x902)*(x903)))+(((IkReal(-1.00000000000000))*(x900)*(x901)))+(((x901)*(x903)))+(((x900)*(x902)))+(((cj2)*(r02)*(sj1)))+(((cj1)*(r02)*(sj2)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))), ((((IkReal(-1.00000000000000))*(x902)*(x903)))+(((IkReal(-1.00000000000000))*(x900)*(x901)))+(((x901)*(x903)))+(((x900)*(x902)))+(((cj2)*(r02)*(sj1)))+(((cj1)*(r02)*(sj2)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x904=IKsin(j5);
IkReal x905=((r02)*(sj2));
IkReal x906=((IkReal(1.00000000000000))*(sj2));
IkReal x907=((r00)*(sj0));
IkReal x908=((IkReal(1.00000000000000))*(cj2));
IkReal x909=((IkReal(1.00000000000000))*(x904));
IkReal x910=((cj0)*(r01)*(sj1));
IkReal x911=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x909)))+(((cj0)*(r00))));
evalcond[1]=((((sj2)*(x911)))+(((cj2)*(x910)))+(((IkReal(-1.00000000000000))*(sj1)*(x907)*(x908)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x908)))+(((IkReal(-1.00000000000000))*(sj4)*(x909)))+(((IkReal(-1.00000000000000))*(cj1)*(x906)*(x907)))+(((sj1)*(x905))));
evalcond[2]=((((cj1)*(x905)))+(((IkReal(-1.00000000000000))*(x906)*(x910)))+(((sj1)*(sj2)*(x907)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((cj2)*(x911)))+(((IkReal(-1.00000000000000))*(cj1)*(x907)*(x908)))+(((cj2)*(r02)*(sj1))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x912=((px)*(sj0));
IkReal x913=((cj0)*(py));
IkReal x914=((IkReal(3950000.00000000))*(sj2));
IkReal x915=((IkReal(954450000.000000))*(sj3));
IkReal x916=((py)*(sj0));
IkReal x917=((pz)*(sj1));
IkReal x918=((cj0)*(px));
IkReal x919=((IkReal(954450000.000000))*(cj1));
IkReal x920=((cj2)*(pz));
IkReal x921=((IkReal(3950000.00000000))*(sj3));
IkReal x922=((IkReal(3950000.00000000))*(cj2)*(sj1));
IkReal x923=((IkReal(954450000.000000))*(cj2)*(sj1));
if( IKabs(((gconst1)*(((IkReal(29625.0000000000))+(((cj1)*(x913)*(x914)))+(((IkReal(-1.00000000000000))*(x912)*(x922)))+(((IkReal(526219.000000000))*(sj3)))+(((x914)*(x917)))+(((IkReal(-3950000.00000000))*(cj1)*(x920)))+(((IkReal(2060596.50000000))*(cj2)))+(((IkReal(38789.0000000000))*(sj2)))+(((IkReal(202753.500000000))*(cj3)))+(((IkReal(-1.00000000000000))*(x915)*(x916)))+(((IkReal(-1.00000000000000))*(x915)*(x918)))+(((x913)*(x922)))+(((IkReal(-1.00000000000000))*(cj1)*(x912)*(x914))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst1)*(((IkReal(-7158375.00000000))+(((x919)*(x920)))+(((IkReal(-127151829.000000))*(sj3)))+(((IkReal(-48991918.5000000))*(cj3)))+(((IkReal(-497907931.500000))*(cj2)))+(((IkReal(-954450000.000000))*(sj2)*(x917)))+(((IkReal(-1.00000000000000))*(x918)*(x921)))+(((IkReal(-1.00000000000000))*(x913)*(x923)))+(((sj2)*(x912)*(x919)))+(((IkReal(-1.00000000000000))*(sj2)*(x913)*(x919)))+(((IkReal(-1.00000000000000))*(x916)*(x921)))+(((IkReal(-9372699.00000000))*(sj2)))+(((x912)*(x923))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst1)*(((IkReal(29625.0000000000))+(((cj1)*(x913)*(x914)))+(((IkReal(-1.00000000000000))*(x912)*(x922)))+(((IkReal(526219.000000000))*(sj3)))+(((x914)*(x917)))+(((IkReal(-3950000.00000000))*(cj1)*(x920)))+(((IkReal(2060596.50000000))*(cj2)))+(((IkReal(38789.0000000000))*(sj2)))+(((IkReal(202753.500000000))*(cj3)))+(((IkReal(-1.00000000000000))*(x915)*(x916)))+(((IkReal(-1.00000000000000))*(x915)*(x918)))+(((x913)*(x922)))+(((IkReal(-1.00000000000000))*(cj1)*(x912)*(x914)))))), ((gconst1)*(((IkReal(-7158375.00000000))+(((x919)*(x920)))+(((IkReal(-127151829.000000))*(sj3)))+(((IkReal(-48991918.5000000))*(cj3)))+(((IkReal(-497907931.500000))*(cj2)))+(((IkReal(-954450000.000000))*(sj2)*(x917)))+(((IkReal(-1.00000000000000))*(x918)*(x921)))+(((IkReal(-1.00000000000000))*(x913)*(x923)))+(((sj2)*(x912)*(x919)))+(((IkReal(-1.00000000000000))*(sj2)*(x913)*(x919)))+(((IkReal(-1.00000000000000))*(x916)*(x921)))+(((IkReal(-9372699.00000000))*(sj2)))+(((x912)*(x923)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[3];
IkReal x924=IKsin(j4);
IkReal x925=IKcos(j4);
IkReal x926=((IkReal(1.00000000000000))*(cj1));
IkReal x927=((pz)*(sj1));
IkReal x928=((IkReal(1.00000000000000))*(sj1));
IkReal x929=((cj0)*(cj2)*(py));
IkReal x930=((px)*(sj0)*(sj2));
IkReal x931=((IkReal(0.190890000000000))*(x925));
IkReal x932=((IkReal(0.000790000000000000))*(x924));
IkReal x933=((cj0)*(py)*(sj2));
IkReal x934=((cj2)*(px)*(sj0));
evalcond[0]=((((IkReal(0.000790000000000000))*(x925)))+(((IkReal(0.190890000000000))*(x924)))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[1]=((IkReal(-0.261090000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(cj3)*(x931)))+(((IkReal(-1.00000000000000))*(x928)*(x933)))+(((sj1)*(x930)))+(((cj2)*(x927)))+(((IkReal(-1.00000000000000))*(x926)*(x934)))+(((cj1)*(pz)*(sj2)))+(((IkReal(-0.133220000000000))*(cj3)))+(((cj3)*(x932)))+(((cj1)*(x929)))+(((IkReal(0.0513300000000000))*(sj3)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[2]=((IkReal(0.00750000000000000))+(((IkReal(-1.00000000000000))*(cj2)*(pz)*(x926)))+(((IkReal(-1.00000000000000))*(sj3)*(x932)))+(((IkReal(-1.00000000000000))*(x928)*(x934)))+(((IkReal(0.0513300000000000))*(cj3)))+(((sj1)*(x929)))+(((IkReal(0.133220000000000))*(sj3)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x926)*(x930)))+(((cj1)*(x933)))+(((sj2)*(x927)))+(((IkReal(0.00982000000000000))*(sj2)))+(((sj3)*(x931))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[2];
IkReal x935=(cj3)*(cj3);
IkReal x936=(sj3)*(sj3);
dummyeval[0]=((((sj4)*(x935)))+(((sj4)*(x936))));
dummyeval[1]=((((IkReal(-1.00000000000000))*(x936)))+(((IkReal(-1.00000000000000))*(x935))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=cj4;
dummyeval[1]=sj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=cj4;
dummyeval[1]=cj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x937=((cj1)*(sj2));
IkReal x938=((px)*(sj0));
IkReal x939=((sj1)*(sj2));
IkReal x940=((cj0)*(py));
IkReal x941=((cj2)*(pz));
IkReal x942=((IkReal(1.00000000000000))*(cj1));
IkReal x943=((cj2)*(x940));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(0.190890000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.261090000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((sj1)*(x941)))+(((IkReal(-1.00000000000000))*(x939)*(x940)))+(((cj1)*(x943)))+(((x938)*(x939)))+(((pz)*(x937)))+(((IkReal(0.0513300000000000))*(sj3)))+(((IkReal(-0.521670000000000))*(sj2)))+(((IkReal(-0.132430000000000))*(cj3)))+(((IkReal(-1.00000000000000))*(cj2)*(x938)*(x942))));
evalcond[4]=((IkReal(0.00750000000000000))+(((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x938)))+(((sj1)*(x943)))+(((x937)*(x940)))+(((IkReal(0.0513300000000000))*(cj3)))+(((IkReal(-1.00000000000000))*(x941)*(x942)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x937)*(x938)))+(((pz)*(x939)))+(((IkReal(0.132430000000000))*(sj3)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst2;
gconst2=IKsign((((sj3)*(sj3))+((cj3)*(cj3))));
dummyeval[0]=(((sj3)*(sj3))+((cj3)*(cj3)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x944=((IkReal(1.00000000000000))*(cj3));
IkReal x945=((cj1)*(cj2));
IkReal x946=((r00)*(sj0));
IkReal x947=((r02)*(sj3));
IkReal x948=((cj3)*(r02));
IkReal x949=((cj2)*(sj1));
IkReal x950=((IkReal(1.00000000000000))*(sj3));
IkReal x951=((cj0)*(r01));
IkReal x952=((cj1)*(sj2));
IkReal x953=((sj1)*(sj2));
IkReal x954=((sj1)*(x951));
if( IKabs(((gconst2)*(((((x948)*(x949)))+(((x945)*(x947)))+(((sj3)*(x946)*(x952)))+(((IkReal(-1.00000000000000))*(x947)*(x953)))+(((IkReal(-1.00000000000000))*(x944)*(x945)*(x946)))+(((x948)*(x952)))+(((cj3)*(x946)*(x953)))+(((IkReal(-1.00000000000000))*(x944)*(x951)*(x953)))+(((sj3)*(x946)*(x949)))+(((cj3)*(x945)*(x951)))+(((IkReal(-1.00000000000000))*(x949)*(x950)*(x951)))+(((IkReal(-1.00000000000000))*(x950)*(x951)*(x952))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst2)*(((((IkReal(-1.00000000000000))*(r02)*(x944)*(x953)))+(((IkReal(-1.00000000000000))*(x947)*(x949)))+(((x945)*(x948)))+(((cj3)*(x946)*(x949)))+(((IkReal(-1.00000000000000))*(x945)*(x950)*(x951)))+(((IkReal(-1.00000000000000))*(x947)*(x952)))+(((sj3)*(x945)*(x946)))+(((cj3)*(x946)*(x952)))+(((IkReal(-1.00000000000000))*(x944)*(x951)*(x952)))+(((IkReal(-1.00000000000000))*(x944)*(x949)*(x951)))+(((IkReal(-1.00000000000000))*(x946)*(x950)*(x953)))+(((sj3)*(x951)*(x953))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst2)*(((((x948)*(x949)))+(((x945)*(x947)))+(((sj3)*(x946)*(x952)))+(((IkReal(-1.00000000000000))*(x947)*(x953)))+(((IkReal(-1.00000000000000))*(x944)*(x945)*(x946)))+(((x948)*(x952)))+(((cj3)*(x946)*(x953)))+(((IkReal(-1.00000000000000))*(x944)*(x951)*(x953)))+(((sj3)*(x946)*(x949)))+(((cj3)*(x945)*(x951)))+(((IkReal(-1.00000000000000))*(x949)*(x950)*(x951)))+(((IkReal(-1.00000000000000))*(x950)*(x951)*(x952)))))), ((gconst2)*(((((IkReal(-1.00000000000000))*(r02)*(x944)*(x953)))+(((IkReal(-1.00000000000000))*(x947)*(x949)))+(((x945)*(x948)))+(((cj3)*(x946)*(x949)))+(((IkReal(-1.00000000000000))*(x945)*(x950)*(x951)))+(((IkReal(-1.00000000000000))*(x947)*(x952)))+(((sj3)*(x945)*(x946)))+(((cj3)*(x946)*(x952)))+(((IkReal(-1.00000000000000))*(x944)*(x951)*(x952)))+(((IkReal(-1.00000000000000))*(x944)*(x949)*(x951)))+(((IkReal(-1.00000000000000))*(x946)*(x950)*(x953)))+(((sj3)*(x951)*(x953)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x955=IKcos(j5);
IkReal x956=IKsin(j5);
IkReal x957=((r02)*(sj2));
IkReal x958=((IkReal(1.00000000000000))*(sj2));
IkReal x959=((r00)*(sj0));
IkReal x960=((cj1)*(cj2));
IkReal x961=((cj0)*(r01));
IkReal x962=((sj1)*(x961));
IkReal x963=((IkReal(1.00000000000000))*(cj2)*(x959));
evalcond[0]=((((cj2)*(x962)))+(((sj1)*(x957)))+(((cj3)*(x955)))+(((IkReal(-1.00000000000000))*(sj1)*(x963)))+(((IkReal(-1.00000000000000))*(cj1)*(x958)*(x959)))+(((sj3)*(x956)))+(((cj1)*(sj2)*(x961)))+(((IkReal(-1.00000000000000))*(r02)*(x960))));
evalcond[1]=((((sj1)*(sj2)*(x959)))+(((IkReal(-1.00000000000000))*(cj3)*(x956)))+(((IkReal(-1.00000000000000))*(x959)*(x960)))+(((cj1)*(x957)))+(((x960)*(x961)))+(((IkReal(-1.00000000000000))*(x958)*(x962)))+(((cj2)*(r02)*(sj1)))+(((sj3)*(x955))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x964=((cj1)*(sj2));
IkReal x965=((px)*(sj0));
IkReal x966=((sj1)*(sj2));
IkReal x967=((cj0)*(py));
IkReal x968=((cj2)*(pz));
IkReal x969=((IkReal(1.00000000000000))*(cj1));
IkReal x970=((cj2)*(x967));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(-0.190890000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.261090000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((cj1)*(x970)))+(((IkReal(-0.134010000000000))*(cj3)))+(((pz)*(x964)))+(((x965)*(x966)))+(((sj1)*(x968)))+(((IkReal(0.0513300000000000))*(sj3)))+(((IkReal(-0.521670000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(x966)*(x967)))+(((IkReal(-1.00000000000000))*(cj2)*(x965)*(x969))));
evalcond[4]=((IkReal(0.00750000000000000))+(((IkReal(-1.00000000000000))*(x964)*(x965)))+(((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x965)))+(((IkReal(0.0513300000000000))*(cj3)))+(((IkReal(0.521670000000000))*(cj2)))+(((sj1)*(x970)))+(((pz)*(x966)))+(((x964)*(x967)))+(((IkReal(0.134010000000000))*(sj3)))+(((IkReal(-1.00000000000000))*(x968)*(x969)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst3;
gconst3=IKsign((((sj3)*(sj3))+((cj3)*(cj3))));
dummyeval[0]=(((sj3)*(sj3))+((cj3)*(cj3)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x971=((r00)*(sj0));
IkReal x972=((sj1)*(sj2));
IkReal x973=((r02)*(sj3));
IkReal x974=((cj0)*(r01));
IkReal x975=((cj3)*(r02));
IkReal x976=((IkReal(1.00000000000000))*(cj2));
IkReal x977=((cj1)*(sj3));
IkReal x978=((sj1)*(sj3));
IkReal x979=((cj3)*(sj1));
IkReal x980=((cj1)*(cj2)*(cj3));
IkReal x981=((IkReal(1.00000000000000))*(cj1)*(sj2));
if( IKabs(((gconst3)*(((((cj2)*(x974)*(x978)))+(((IkReal(-1.00000000000000))*(sj2)*(x971)*(x977)))+(((IkReal(-1.00000000000000))*(cj3)*(x971)*(x972)))+(((cj3)*(x972)*(x974)))+(((IkReal(-1.00000000000000))*(x971)*(x976)*(x978)))+(((IkReal(-1.00000000000000))*(cj1)*(x973)*(x976)))+(((sj2)*(x974)*(x977)))+(((IkReal(-1.00000000000000))*(sj1)*(x975)*(x976)))+(((x971)*(x980)))+(((IkReal(-1.00000000000000))*(x975)*(x981)))+(((x972)*(x973)))+(((IkReal(-1.00000000000000))*(cj1)*(cj3)*(x974)*(x976))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst3)*(((((cj1)*(cj3)*(sj2)*(x971)))+(((sj3)*(x972)*(x974)))+(((IkReal(-1.00000000000000))*(cj3)*(x974)*(x981)))+(((cj2)*(x971)*(x977)))+(((cj2)*(x971)*(x979)))+(((IkReal(-1.00000000000000))*(sj1)*(x973)*(x976)))+(((IkReal(-1.00000000000000))*(x974)*(x976)*(x977)))+(((IkReal(-1.00000000000000))*(x974)*(x976)*(x979)))+(((IkReal(-1.00000000000000))*(x972)*(x975)))+(((cj1)*(cj2)*(x975)))+(((IkReal(-1.00000000000000))*(x973)*(x981)))+(((IkReal(-1.00000000000000))*(sj3)*(x971)*(x972))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst3)*(((((cj2)*(x974)*(x978)))+(((IkReal(-1.00000000000000))*(sj2)*(x971)*(x977)))+(((IkReal(-1.00000000000000))*(cj3)*(x971)*(x972)))+(((cj3)*(x972)*(x974)))+(((IkReal(-1.00000000000000))*(x971)*(x976)*(x978)))+(((IkReal(-1.00000000000000))*(cj1)*(x973)*(x976)))+(((sj2)*(x974)*(x977)))+(((IkReal(-1.00000000000000))*(sj1)*(x975)*(x976)))+(((x971)*(x980)))+(((IkReal(-1.00000000000000))*(x975)*(x981)))+(((x972)*(x973)))+(((IkReal(-1.00000000000000))*(cj1)*(cj3)*(x974)*(x976)))))), ((gconst3)*(((((cj1)*(cj3)*(sj2)*(x971)))+(((sj3)*(x972)*(x974)))+(((IkReal(-1.00000000000000))*(cj3)*(x974)*(x981)))+(((cj2)*(x971)*(x977)))+(((cj2)*(x971)*(x979)))+(((IkReal(-1.00000000000000))*(sj1)*(x973)*(x976)))+(((IkReal(-1.00000000000000))*(x974)*(x976)*(x977)))+(((IkReal(-1.00000000000000))*(x974)*(x976)*(x979)))+(((IkReal(-1.00000000000000))*(x972)*(x975)))+(((cj1)*(cj2)*(x975)))+(((IkReal(-1.00000000000000))*(x973)*(x981)))+(((IkReal(-1.00000000000000))*(sj3)*(x971)*(x972)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x982=IKsin(j5);
IkReal x983=IKcos(j5);
IkReal x984=((r02)*(sj2));
IkReal x985=((IkReal(1.00000000000000))*(sj2));
IkReal x986=((r00)*(sj0));
IkReal x987=((IkReal(1.00000000000000))*(cj2));
IkReal x988=((cj0)*(r01)*(sj1));
IkReal x989=((cj0)*(cj1)*(r01));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj1)*(r02)*(x987)))+(((sj1)*(x984)))+(((IkReal(-1.00000000000000))*(cj1)*(x985)*(x986)))+(((IkReal(-1.00000000000000))*(sj3)*(x982)))+(((cj3)*(x983)))+(((cj2)*(x988)))+(((sj2)*(x989)))+(((IkReal(-1.00000000000000))*(sj1)*(x986)*(x987))));
evalcond[1]=((((cj1)*(x984)))+(((sj1)*(sj2)*(x986)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(x986)*(x987)))+(((cj3)*(x982)))+(((cj2)*(x989)))+(((sj3)*(x983)))+(((IkReal(-1.00000000000000))*(x985)*(x988))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x990=((cj1)*(sj2));
IkReal x991=((px)*(sj0));
IkReal x992=((sj1)*(sj2));
IkReal x993=((cj0)*(py));
IkReal x994=((cj2)*(pz));
IkReal x995=((IkReal(1.00000000000000))*(cj1));
IkReal x996=((cj2)*(x993));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(0.000790000000000000))*(cj4)))+(((cj0)*(px)))+(((py)*(sj0)))+(((IkReal(0.190890000000000))*(sj4))));
evalcond[2]=((IkReal(-0.209760000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((x991)*(x992)))+(((cj1)*(x996)))+(((pz)*(x990)))+(((IkReal(-1.00000000000000))*(x992)*(x993)))+(((IkReal(-1.00000000000000))*(cj2)*(x991)*(x995)))+(((IkReal(-0.521670000000000))*(sj2)))+(((sj1)*(x994))));
evalcond[3]=((IkReal(0.140720000000000))+(((IkReal(-1.00000000000000))*(x994)*(x995)))+(((pz)*(x992)))+(((x990)*(x993)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(0.190890000000000))*(cj4)))+(((IkReal(-0.000790000000000000))*(sj4)))+(((IkReal(-1.00000000000000))*(x990)*(x991)))+(((sj1)*(x996)))+(((IkReal(0.00982000000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x991))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x997=((IkReal(1.00000000000000))*(sj0));
IkReal x998=((cj1)*(sj2));
IkReal x999=((sj1)*(sj2));
IkReal x1000=((cj2)*(sj1));
IkReal x1001=((cj0)*(r01));
IkReal x1002=((cj0)*(py));
IkReal x1003=((cj2)*(x1002));
IkReal x1004=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.000790000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((x1000)*(x1001)))+(((r02)*(x999)))+(((IkReal(-1.00000000000000))*(r00)*(x1000)*(x997)))+(((IkReal(-1.00000000000000))*(r02)*(x1004)))+(((x1001)*(x998)))+(((IkReal(-1.00000000000000))*(r00)*(x997)*(x998))));
evalcond[3]=((IkReal(-0.209760000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((px)*(sj0)*(x999)))+(((pz)*(x998)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(px)*(x997)))+(((IkReal(-1.00000000000000))*(x1002)*(x999)))+(((pz)*(x1000)))+(((cj1)*(x1003)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(0.331610000000000))+(((IkReal(-1.00000000000000))*(pz)*(x1004)))+(((IkReal(-1.00000000000000))*(px)*(x1000)*(x997)))+(((pz)*(x999)))+(((x1000)*(x1002)))+(((IkReal(-1.00000000000000))*(px)*(x997)*(x998)))+(((IkReal(0.521670000000000))*(cj2)))+(((x1002)*(x998)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1005=((cj0)*(r01));
IkReal x1006=((sj1)*(sj2));
IkReal x1007=((IkReal(1.00000000000000))*(cj1));
IkReal x1008=((r00)*(sj0));
if( IKabs(((((r01)*(sj0)))+(((cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x1006)*(x1008)))+(((IkReal(-1.00000000000000))*(cj2)*(x1005)*(x1007)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1007)))+(((cj1)*(cj2)*(x1008)))+(((x1005)*(x1006))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r01)*(sj0)))+(((cj0)*(r00)))))+IKsqr(((((IkReal(-1.00000000000000))*(x1006)*(x1008)))+(((IkReal(-1.00000000000000))*(cj2)*(x1005)*(x1007)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1007)))+(((cj1)*(cj2)*(x1008)))+(((x1005)*(x1006)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((r01)*(sj0)))+(((cj0)*(r00)))), ((((IkReal(-1.00000000000000))*(x1006)*(x1008)))+(((IkReal(-1.00000000000000))*(cj2)*(x1005)*(x1007)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1007)))+(((cj1)*(cj2)*(x1008)))+(((x1005)*(x1006)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1009=((sj1)*(sj2));
IkReal x1010=((cj0)*(r01));
IkReal x1011=((r00)*(sj0));
IkReal x1012=((cj1)*(cj2));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((cj0)*(r00))));
evalcond[1]=((((x1009)*(x1011)))+(((IkReal(-1.00000000000000))*(x1009)*(x1010)))+(((IkReal(-1.00000000000000))*(x1011)*(x1012)))+(IKcos(j5))+(((cj2)*(r02)*(sj1)))+(((x1010)*(x1012)))+(((cj1)*(r02)*(sj2))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1013=((IkReal(1.00000000000000))*(sj0));
IkReal x1014=((cj1)*(sj2));
IkReal x1015=((sj1)*(sj2));
IkReal x1016=((cj2)*(sj1));
IkReal x1017=((cj0)*(r01));
IkReal x1018=((cj0)*(py));
IkReal x1019=((cj2)*(x1018));
IkReal x1020=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.000790000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((x1014)*(x1017)))+(((x1016)*(x1017)))+(((IkReal(-1.00000000000000))*(r00)*(x1013)*(x1014)))+(((IkReal(-1.00000000000000))*(r00)*(x1013)*(x1016)))+(((r02)*(x1015)))+(((IkReal(-1.00000000000000))*(r02)*(x1020))));
evalcond[3]=((IkReal(-0.209760000000000))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(px)*(x1013)))+(((IkReal(0.00982000000000000))*(cj2)))+(((px)*(sj0)*(x1015)))+(((IkReal(-1.00000000000000))*(x1015)*(x1018)))+(((pz)*(x1016)))+(((pz)*(x1014)))+(((cj1)*(x1019)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(-0.0501700000000000))+(((x1014)*(x1018)))+(((x1016)*(x1018)))+(((IkReal(-1.00000000000000))*(pz)*(x1020)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(px)*(x1013)*(x1016)))+(((IkReal(-1.00000000000000))*(px)*(x1013)*(x1014)))+(((pz)*(x1015)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1021=((sj1)*(sj2));
IkReal x1022=((cj0)*(r01));
IkReal x1023=((r00)*(sj0));
IkReal x1024=((IkReal(1.00000000000000))*(cj1));
if( IKabs(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj1)*(cj2)*(x1023)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1024)))+(((IkReal(-1.00000000000000))*(x1021)*(x1023)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((x1021)*(x1022)))+(((IkReal(-1.00000000000000))*(cj2)*(x1022)*(x1024))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))))+IKsqr(((((cj1)*(cj2)*(x1023)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1024)))+(((IkReal(-1.00000000000000))*(x1021)*(x1023)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((x1021)*(x1022)))+(((IkReal(-1.00000000000000))*(cj2)*(x1022)*(x1024)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))), ((((cj1)*(cj2)*(x1023)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1024)))+(((IkReal(-1.00000000000000))*(x1021)*(x1023)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((x1021)*(x1022)))+(((IkReal(-1.00000000000000))*(cj2)*(x1022)*(x1024)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1025=((sj1)*(sj2));
IkReal x1026=((cj0)*(r01));
IkReal x1027=((r00)*(sj0));
IkReal x1028=((cj1)*(cj2));
evalcond[0]=((((r01)*(sj0)))+(IKsin(j5))+(((cj0)*(r00))));
evalcond[1]=((((x1026)*(x1028)))+(IKcos(j5))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1027)*(x1028)))+(((x1025)*(x1027)))+(((IkReal(-1.00000000000000))*(x1025)*(x1026)))+(((cj1)*(r02)*(sj2))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1029=((pz)*(sj1));
IkReal x1030=((cj0)*(py));
IkReal x1031=((IkReal(1.00000000000000))*(sj2));
IkReal x1032=((cj1)*(cj2));
IkReal x1033=((px)*(sj0));
IkReal x1034=((cj2)*(sj1));
IkReal x1035=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(0.190890000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.209760000000000))+(((cj2)*(x1029)))+(((IkReal(0.00982000000000000))*(cj2)))+(((x1030)*(x1032)))+(((sj1)*(sj2)*(x1033)))+(((IkReal(-1.00000000000000))*(x1032)*(x1033)))+(((IkReal(-1.00000000000000))*(sj1)*(x1030)*(x1031)))+(((pz)*(x1035)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(0.139930000000000))+(((IkReal(-1.00000000000000))*(cj1)*(x1031)*(x1033)))+(((x1030)*(x1034)))+(((x1030)*(x1035)))+(((IkReal(-1.00000000000000))*(x1033)*(x1034)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(pz)*(x1032)))+(((IkReal(0.00982000000000000))*(sj2)))+(((sj2)*(x1029))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1036=((IkReal(1.00000000000000))*(sj2));
IkReal x1037=((r02)*(sj1));
IkReal x1038=((cj0)*(r01));
IkReal x1039=((r00)*(sj0));
IkReal x1040=((cj1)*(r02));
IkReal x1041=((IkReal(1.00000000000000))*(cj2));
if( IKabs(((((cj1)*(sj2)*(x1039)))+(((IkReal(-1.00000000000000))*(x1036)*(x1037)))+(((cj2)*(x1040)))+(((IkReal(-1.00000000000000))*(sj1)*(x1038)*(x1041)))+(((cj2)*(sj1)*(x1039)))+(((IkReal(-1.00000000000000))*(cj1)*(x1036)*(x1038))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(cj1)*(x1038)*(x1041)))+(((sj1)*(sj2)*(x1038)))+(((IkReal(-1.00000000000000))*(x1037)*(x1041)))+(((cj1)*(cj2)*(x1039)))+(((IkReal(-1.00000000000000))*(sj1)*(x1036)*(x1039)))+(((IkReal(-1.00000000000000))*(x1036)*(x1040))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj1)*(sj2)*(x1039)))+(((IkReal(-1.00000000000000))*(x1036)*(x1037)))+(((cj2)*(x1040)))+(((IkReal(-1.00000000000000))*(sj1)*(x1038)*(x1041)))+(((cj2)*(sj1)*(x1039)))+(((IkReal(-1.00000000000000))*(cj1)*(x1036)*(x1038)))))+IKsqr(((((IkReal(-1.00000000000000))*(cj1)*(x1038)*(x1041)))+(((sj1)*(sj2)*(x1038)))+(((IkReal(-1.00000000000000))*(x1037)*(x1041)))+(((cj1)*(cj2)*(x1039)))+(((IkReal(-1.00000000000000))*(sj1)*(x1036)*(x1039)))+(((IkReal(-1.00000000000000))*(x1036)*(x1040)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((cj1)*(sj2)*(x1039)))+(((IkReal(-1.00000000000000))*(x1036)*(x1037)))+(((cj2)*(x1040)))+(((IkReal(-1.00000000000000))*(sj1)*(x1038)*(x1041)))+(((cj2)*(sj1)*(x1039)))+(((IkReal(-1.00000000000000))*(cj1)*(x1036)*(x1038)))), ((((IkReal(-1.00000000000000))*(cj1)*(x1038)*(x1041)))+(((sj1)*(sj2)*(x1038)))+(((IkReal(-1.00000000000000))*(x1037)*(x1041)))+(((cj1)*(cj2)*(x1039)))+(((IkReal(-1.00000000000000))*(sj1)*(x1036)*(x1039)))+(((IkReal(-1.00000000000000))*(x1036)*(x1040)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1042=((r02)*(sj2));
IkReal x1043=((IkReal(1.00000000000000))*(sj2));
IkReal x1044=((r00)*(sj0));
IkReal x1045=((cj1)*(cj2));
IkReal x1046=((cj0)*(r01));
IkReal x1047=((sj1)*(x1046));
IkReal x1048=((IkReal(1.00000000000000))*(cj2)*(x1044));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj1)*(x1043)*(x1044)))+(((IkReal(-1.00000000000000))*(r02)*(x1045)))+(IKsin(j5))+(((IkReal(-1.00000000000000))*(sj1)*(x1048)))+(((cj2)*(x1047)))+(((sj1)*(x1042)))+(((cj1)*(sj2)*(x1046))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1043)*(x1047)))+(((cj1)*(x1042)))+(IKcos(j5))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1044)*(x1045)))+(((sj1)*(sj2)*(x1044)))+(((x1045)*(x1046))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1049=((pz)*(sj1));
IkReal x1050=((cj0)*(py));
IkReal x1051=((IkReal(1.00000000000000))*(sj2));
IkReal x1052=((cj1)*(cj2));
IkReal x1053=((px)*(sj0));
IkReal x1054=((cj2)*(sj1));
IkReal x1055=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(-0.190890000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.209760000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((pz)*(x1055)))+(((x1050)*(x1052)))+(((cj2)*(x1049)))+(((IkReal(-1.00000000000000))*(sj1)*(x1050)*(x1051)))+(((IkReal(-1.00000000000000))*(x1052)*(x1053)))+(((sj1)*(sj2)*(x1053)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(0.141510000000000))+(((IkReal(-1.00000000000000))*(pz)*(x1052)))+(((IkReal(-1.00000000000000))*(cj1)*(x1051)*(x1053)))+(((sj2)*(x1049)))+(((x1050)*(x1054)))+(((x1050)*(x1055)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x1053)*(x1054)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1056=((cj2)*(sj1));
IkReal x1057=((IkReal(1.00000000000000))*(r02));
IkReal x1058=((cj0)*(r01));
IkReal x1059=((sj1)*(sj2));
IkReal x1060=((cj1)*(cj2));
IkReal x1061=((cj1)*(sj2));
IkReal x1062=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((r02)*(x1059)))+(((x1056)*(x1058)))+(((IkReal(-1.00000000000000))*(x1057)*(x1060)))+(((IkReal(-1.00000000000000))*(x1061)*(x1062)))+(((IkReal(-1.00000000000000))*(x1056)*(x1062)))+(((x1058)*(x1061))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x1059)*(x1062)))+(((r00)*(sj0)*(x1060)))+(((IkReal(-1.00000000000000))*(x1057)*(x1061)))+(((IkReal(-1.00000000000000))*(x1056)*(x1057)))+(((IkReal(-1.00000000000000))*(x1058)*(x1060)))+(((x1058)*(x1059))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r02)*(x1059)))+(((x1056)*(x1058)))+(((IkReal(-1.00000000000000))*(x1057)*(x1060)))+(((IkReal(-1.00000000000000))*(x1061)*(x1062)))+(((IkReal(-1.00000000000000))*(x1056)*(x1062)))+(((x1058)*(x1061)))))+IKsqr(((((IkReal(-1.00000000000000))*(x1059)*(x1062)))+(((r00)*(sj0)*(x1060)))+(((IkReal(-1.00000000000000))*(x1057)*(x1061)))+(((IkReal(-1.00000000000000))*(x1056)*(x1057)))+(((IkReal(-1.00000000000000))*(x1058)*(x1060)))+(((x1058)*(x1059)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((r02)*(x1059)))+(((x1056)*(x1058)))+(((IkReal(-1.00000000000000))*(x1057)*(x1060)))+(((IkReal(-1.00000000000000))*(x1061)*(x1062)))+(((IkReal(-1.00000000000000))*(x1056)*(x1062)))+(((x1058)*(x1061)))), ((((IkReal(-1.00000000000000))*(x1059)*(x1062)))+(((r00)*(sj0)*(x1060)))+(((IkReal(-1.00000000000000))*(x1057)*(x1061)))+(((IkReal(-1.00000000000000))*(x1056)*(x1057)))+(((IkReal(-1.00000000000000))*(x1058)*(x1060)))+(((x1058)*(x1059)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1063=((r02)*(sj2));
IkReal x1064=((IkReal(1.00000000000000))*(sj2));
IkReal x1065=((r00)*(sj0));
IkReal x1066=((cj1)*(cj2));
IkReal x1067=((cj0)*(r01));
IkReal x1068=((sj1)*(x1067));
IkReal x1069=((IkReal(1.00000000000000))*(cj2)*(x1065));
evalcond[0]=((((IkReal(-1.00000000000000))*(r02)*(x1066)))+(((IkReal(-1.00000000000000))*(cj1)*(x1064)*(x1065)))+(((cj2)*(x1068)))+(((IkReal(-1.00000000000000))*(sj1)*(x1069)))+(((sj1)*(x1063)))+(((cj1)*(sj2)*(x1067)))+(((IkReal(-1.00000000000000))*(IKsin(j5)))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1065)*(x1066)))+(((x1066)*(x1067)))+(((sj1)*(sj2)*(x1065)))+(IKcos(j5))+(((cj1)*(x1063)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1064)*(x1068))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1070=((IkReal(1.00000000000000))*(sj2));
IkReal x1071=((r02)*(sj1));
IkReal x1072=((cj0)*(r01));
IkReal x1073=((cj1)*(r02));
IkReal x1074=((r00)*(sj0));
IkReal x1075=((IkReal(1.00000000000000))*(cj2));
if( IKabs(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((cj2)*(sj1)*(x1074)))+(((IkReal(-1.00000000000000))*(cj1)*(x1070)*(x1072)))+(((IkReal(-1.00000000000000))*(x1070)*(x1071)))+(((cj2)*(x1073)))+(((cj1)*(sj2)*(x1074)))+(((IkReal(-1.00000000000000))*(sj1)*(x1072)*(x1075))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x1070)*(x1073)))+(((IkReal(-1.00000000000000))*(x1071)*(x1075)))+(((sj1)*(sj2)*(x1072)))+(((IkReal(-1.00000000000000))*(cj1)*(x1072)*(x1075)))+(((IkReal(-1.00000000000000))*(sj1)*(x1070)*(x1074)))+(((cj1)*(cj2)*(x1074))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((cj2)*(sj1)*(x1074)))+(((IkReal(-1.00000000000000))*(cj1)*(x1070)*(x1072)))+(((IkReal(-1.00000000000000))*(x1070)*(x1071)))+(((cj2)*(x1073)))+(((cj1)*(sj2)*(x1074)))+(((IkReal(-1.00000000000000))*(sj1)*(x1072)*(x1075)))))))+IKsqr(((((IkReal(-1.00000000000000))*(x1070)*(x1073)))+(((IkReal(-1.00000000000000))*(x1071)*(x1075)))+(((sj1)*(sj2)*(x1072)))+(((IkReal(-1.00000000000000))*(cj1)*(x1072)*(x1075)))+(((IkReal(-1.00000000000000))*(sj1)*(x1070)*(x1074)))+(((cj1)*(cj2)*(x1074)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((cj2)*(sj1)*(x1074)))+(((IkReal(-1.00000000000000))*(cj1)*(x1070)*(x1072)))+(((IkReal(-1.00000000000000))*(x1070)*(x1071)))+(((cj2)*(x1073)))+(((cj1)*(sj2)*(x1074)))+(((IkReal(-1.00000000000000))*(sj1)*(x1072)*(x1075)))))), ((((IkReal(-1.00000000000000))*(x1070)*(x1073)))+(((IkReal(-1.00000000000000))*(x1071)*(x1075)))+(((sj1)*(sj2)*(x1072)))+(((IkReal(-1.00000000000000))*(cj1)*(x1072)*(x1075)))+(((IkReal(-1.00000000000000))*(sj1)*(x1070)*(x1074)))+(((cj1)*(cj2)*(x1074)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1076=IKsin(j5);
IkReal x1077=((r02)*(sj2));
IkReal x1078=((IkReal(1.00000000000000))*(sj2));
IkReal x1079=((r00)*(sj0));
IkReal x1080=((IkReal(1.00000000000000))*(cj2));
IkReal x1081=((cj0)*(r01)*(sj1));
IkReal x1082=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x1076)))+(((cj0)*(r00))));
evalcond[1]=((((sj2)*(x1082)))+(((sj1)*(x1077)))+(((IkReal(-1.00000000000000))*(cj1)*(x1078)*(x1079)))+(((sj4)*(x1076)))+(((IkReal(-1.00000000000000))*(sj1)*(x1079)*(x1080)))+(((cj2)*(x1081)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1080))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1078)*(x1081)))+(IKcos(j5))+(((cj1)*(x1077)))+(((sj1)*(sj2)*(x1079)))+(((cj2)*(r02)*(sj1)))+(((cj2)*(x1082)))+(((IkReal(-1.00000000000000))*(cj1)*(x1079)*(x1080))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1083=((cj0)*(r01));
IkReal x1084=((sj1)*(sj2));
IkReal x1085=((IkReal(1.00000000000000))*(cj1));
IkReal x1086=((r00)*(sj0));
if( IKabs(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj1)*(cj2)*(x1086)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj2)*(x1083)*(x1085)))+(((IkReal(-1.00000000000000))*(x1084)*(x1086)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1085)))+(((x1083)*(x1084))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))))+IKsqr(((((cj1)*(cj2)*(x1086)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj2)*(x1083)*(x1085)))+(((IkReal(-1.00000000000000))*(x1084)*(x1086)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1085)))+(((x1083)*(x1084)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))), ((((cj1)*(cj2)*(x1086)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj2)*(x1083)*(x1085)))+(((IkReal(-1.00000000000000))*(x1084)*(x1086)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1085)))+(((x1083)*(x1084)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1087=IKsin(j5);
IkReal x1088=((r02)*(sj2));
IkReal x1089=((IkReal(1.00000000000000))*(sj2));
IkReal x1090=((r00)*(sj0));
IkReal x1091=((IkReal(1.00000000000000))*(cj2));
IkReal x1092=((cj0)*(r01)*(sj1));
IkReal x1093=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x1087)))+(((cj0)*(r00))));
evalcond[1]=((((sj4)*(x1087)))+(((sj2)*(x1093)))+(((sj1)*(x1088)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1091)))+(((IkReal(-1.00000000000000))*(cj1)*(x1089)*(x1090)))+(((cj2)*(x1092)))+(((IkReal(-1.00000000000000))*(sj1)*(x1090)*(x1091))));
evalcond[2]=((((cj1)*(x1088)))+(((sj1)*(sj2)*(x1090)))+(((IkReal(-1.00000000000000))*(x1089)*(x1092)))+(((IkReal(-1.00000000000000))*(cj1)*(x1090)*(x1091)))+(IKcos(j5))+(((cj2)*(r02)*(sj1)))+(((cj2)*(x1093))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1094=((cj1)*(sj2));
IkReal x1095=((px)*(sj0));
IkReal x1096=((sj1)*(sj2));
IkReal x1097=((cj0)*(py));
IkReal x1098=((cj2)*(pz));
IkReal x1099=((IkReal(1.00000000000000))*(cj1));
IkReal x1100=((cj2)*(x1097));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(0.000790000000000000))*(cj4)))+(((cj0)*(px)))+(((py)*(sj0)))+(((IkReal(0.190890000000000))*(sj4))));
evalcond[2]=((IkReal(-0.312420000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x1096)*(x1097)))+(((IkReal(-1.00000000000000))*(cj2)*(x1095)*(x1099)))+(((sj1)*(x1098)))+(((x1095)*(x1096)))+(((cj1)*(x1100)))+(((pz)*(x1094)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[3]=((IkReal(-0.125720000000000))+(((IkReal(0.000790000000000000))*(sj4)))+(((x1094)*(x1097)))+(((IkReal(0.521670000000000))*(cj2)))+(((sj1)*(x1100)))+(((IkReal(-0.190890000000000))*(cj4)))+(((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x1095)))+(((pz)*(x1096)))+(((IkReal(-1.00000000000000))*(x1094)*(x1095)))+(((IkReal(-1.00000000000000))*(x1098)*(x1099)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x1101=((IkReal(1.00000000000000))*(sj0));
IkReal x1102=((cj1)*(sj2));
IkReal x1103=((sj1)*(sj2));
IkReal x1104=((cj2)*(sj1));
IkReal x1105=((cj0)*(r01));
IkReal x1106=((cj0)*(py));
IkReal x1107=((cj2)*(x1106));
IkReal x1108=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.000790000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((r02)*(x1103)))+(((x1102)*(x1105)))+(((IkReal(-1.00000000000000))*(r00)*(x1101)*(x1104)))+(((IkReal(-1.00000000000000))*(r00)*(x1101)*(x1102)))+(((x1104)*(x1105)))+(((IkReal(-1.00000000000000))*(r02)*(x1108))));
evalcond[3]=((IkReal(-0.312420000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((cj1)*(x1107)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(px)*(x1101)))+(((IkReal(-1.00000000000000))*(x1103)*(x1106)))+(((pz)*(x1102)))+(((pz)*(x1104)))+(((IkReal(-0.521670000000000))*(sj2)))+(((px)*(sj0)*(x1103))));
evalcond[4]=((IkReal(-0.316610000000000))+(((x1102)*(x1106)))+(((IkReal(0.521670000000000))*(cj2)))+(((x1104)*(x1106)))+(((IkReal(-1.00000000000000))*(pz)*(x1108)))+(((pz)*(x1103)))+(((IkReal(0.00982000000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(px)*(x1101)*(x1104)))+(((IkReal(-1.00000000000000))*(px)*(x1101)*(x1102))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1109=((sj1)*(sj2));
IkReal x1110=((cj0)*(r01));
IkReal x1111=((r00)*(sj0));
IkReal x1112=((cj1)*(cj2));
if( IKabs(((((r01)*(sj0)))+(((cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x1109)*(x1111)))+(((x1110)*(x1112)))+(((IkReal(-1.00000000000000))*(x1111)*(x1112)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1109)*(x1110)))+(((cj1)*(r02)*(sj2))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r01)*(sj0)))+(((cj0)*(r00)))))+IKsqr(((((x1109)*(x1111)))+(((x1110)*(x1112)))+(((IkReal(-1.00000000000000))*(x1111)*(x1112)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1109)*(x1110)))+(((cj1)*(r02)*(sj2)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((r01)*(sj0)))+(((cj0)*(r00)))), ((((x1109)*(x1111)))+(((x1110)*(x1112)))+(((IkReal(-1.00000000000000))*(x1111)*(x1112)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1109)*(x1110)))+(((cj1)*(r02)*(sj2)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1113=((sj1)*(sj2));
IkReal x1114=((cj0)*(r01));
IkReal x1115=((r00)*(sj0));
IkReal x1116=((cj1)*(cj2));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((cj0)*(r00))));
evalcond[1]=((((x1114)*(x1116)))+(((x1113)*(x1115)))+(((IkReal(-1.00000000000000))*(x1113)*(x1114)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((IkReal(-1.00000000000000))*(x1115)*(x1116)))+(((cj2)*(r02)*(sj1)))+(((cj1)*(r02)*(sj2))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1117=((IkReal(1.00000000000000))*(sj0));
IkReal x1118=((cj1)*(sj2));
IkReal x1119=((sj1)*(sj2));
IkReal x1120=((cj2)*(sj1));
IkReal x1121=((cj0)*(r01));
IkReal x1122=((cj0)*(py));
IkReal x1123=((cj2)*(x1122));
IkReal x1124=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.000790000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((x1120)*(x1121)))+(((IkReal(-1.00000000000000))*(r00)*(x1117)*(x1120)))+(((IkReal(-1.00000000000000))*(r00)*(x1117)*(x1118)))+(((IkReal(-1.00000000000000))*(r02)*(x1124)))+(((x1118)*(x1121)))+(((r02)*(x1119))));
evalcond[3]=((IkReal(-0.312420000000000))+(((px)*(sj0)*(x1119)))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x1119)*(x1122)))+(((pz)*(x1120)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(px)*(x1117)))+(((cj1)*(x1123)))+(((pz)*(x1118)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(0.0651700000000000))+(((x1120)*(x1122)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(pz)*(x1124)))+(((pz)*(x1119)))+(((IkReal(-1.00000000000000))*(px)*(x1117)*(x1120)))+(((IkReal(-1.00000000000000))*(px)*(x1117)*(x1118)))+(((x1118)*(x1122)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1125=((r00)*(sj0));
IkReal x1126=((cj1)*(cj2));
IkReal x1127=((sj1)*(sj2));
IkReal x1128=((cj0)*(r01));
if( IKabs(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x1125)*(x1126)))+(((x1125)*(x1127)))+(((IkReal(-1.00000000000000))*(x1127)*(x1128)))+(((cj2)*(r02)*(sj1)))+(((cj1)*(r02)*(sj2)))+(((x1126)*(x1128))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))))+IKsqr(((((IkReal(-1.00000000000000))*(x1125)*(x1126)))+(((x1125)*(x1127)))+(((IkReal(-1.00000000000000))*(x1127)*(x1128)))+(((cj2)*(r02)*(sj1)))+(((cj1)*(r02)*(sj2)))+(((x1126)*(x1128)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))), ((((IkReal(-1.00000000000000))*(x1125)*(x1126)))+(((x1125)*(x1127)))+(((IkReal(-1.00000000000000))*(x1127)*(x1128)))+(((cj2)*(r02)*(sj1)))+(((cj1)*(r02)*(sj2)))+(((x1126)*(x1128)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1129=((sj1)*(sj2));
IkReal x1130=((cj0)*(r01));
IkReal x1131=((r00)*(sj0));
IkReal x1132=((cj1)*(cj2));
evalcond[0]=((((r01)*(sj0)))+(IKsin(j5))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1129)*(x1130)))+(((x1130)*(x1132)))+(((x1129)*(x1131)))+(((IkReal(-1.00000000000000))*(x1131)*(x1132)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((cj2)*(r02)*(sj1)))+(((cj1)*(r02)*(sj2))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1133=((pz)*(sj1));
IkReal x1134=((cj0)*(py));
IkReal x1135=((IkReal(1.00000000000000))*(sj2));
IkReal x1136=((cj1)*(cj2));
IkReal x1137=((px)*(sj0));
IkReal x1138=((cj2)*(sj1));
IkReal x1139=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(0.190890000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.312420000000000))+(((cj2)*(x1133)))+(((IkReal(0.00982000000000000))*(cj2)))+(((sj1)*(sj2)*(x1137)))+(((x1134)*(x1136)))+(((pz)*(x1139)))+(((IkReal(-1.00000000000000))*(sj1)*(x1134)*(x1135)))+(((IkReal(-1.00000000000000))*(x1136)*(x1137)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(-0.124930000000000))+(((IkReal(-1.00000000000000))*(cj1)*(x1135)*(x1137)))+(((x1134)*(x1138)))+(((x1134)*(x1139)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(pz)*(x1136)))+(((sj2)*(x1133)))+(((IkReal(0.00982000000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(x1137)*(x1138))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1140=((r02)*(sj2));
IkReal x1141=((IkReal(1.00000000000000))*(sj2));
IkReal x1142=((r00)*(sj0));
IkReal x1143=((cj1)*(cj2));
IkReal x1144=((cj0)*(r01));
IkReal x1145=((sj1)*(x1144));
IkReal x1146=((IkReal(1.00000000000000))*(cj2)*(x1142));
if( IKabs(((((cj2)*(x1145)))+(((cj1)*(sj2)*(x1144)))+(((sj1)*(x1140)))+(((IkReal(-1.00000000000000))*(sj1)*(x1146)))+(((IkReal(-1.00000000000000))*(cj1)*(x1141)*(x1142)))+(((IkReal(-1.00000000000000))*(r02)*(x1143))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x1143)*(x1144)))+(((IkReal(-1.00000000000000))*(x1141)*(x1145)))+(((sj1)*(sj2)*(x1142)))+(((cj1)*(x1140)))+(((IkReal(-1.00000000000000))*(x1142)*(x1143)))+(((cj2)*(r02)*(sj1))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj2)*(x1145)))+(((cj1)*(sj2)*(x1144)))+(((sj1)*(x1140)))+(((IkReal(-1.00000000000000))*(sj1)*(x1146)))+(((IkReal(-1.00000000000000))*(cj1)*(x1141)*(x1142)))+(((IkReal(-1.00000000000000))*(r02)*(x1143)))))+IKsqr(((((x1143)*(x1144)))+(((IkReal(-1.00000000000000))*(x1141)*(x1145)))+(((sj1)*(sj2)*(x1142)))+(((cj1)*(x1140)))+(((IkReal(-1.00000000000000))*(x1142)*(x1143)))+(((cj2)*(r02)*(sj1)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((cj2)*(x1145)))+(((cj1)*(sj2)*(x1144)))+(((sj1)*(x1140)))+(((IkReal(-1.00000000000000))*(sj1)*(x1146)))+(((IkReal(-1.00000000000000))*(cj1)*(x1141)*(x1142)))+(((IkReal(-1.00000000000000))*(r02)*(x1143)))), ((((x1143)*(x1144)))+(((IkReal(-1.00000000000000))*(x1141)*(x1145)))+(((sj1)*(sj2)*(x1142)))+(((cj1)*(x1140)))+(((IkReal(-1.00000000000000))*(x1142)*(x1143)))+(((cj2)*(r02)*(sj1)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1147=((r02)*(sj2));
IkReal x1148=((IkReal(1.00000000000000))*(sj2));
IkReal x1149=((r00)*(sj0));
IkReal x1150=((cj1)*(cj2));
IkReal x1151=((cj0)*(r01));
IkReal x1152=((sj1)*(x1151));
IkReal x1153=((IkReal(1.00000000000000))*(cj2)*(x1149));
evalcond[0]=((((cj2)*(x1152)))+(((IkReal(-1.00000000000000))*(cj1)*(x1148)*(x1149)))+(((cj1)*(sj2)*(x1151)))+(((IkReal(-1.00000000000000))*(sj1)*(x1153)))+(((IkReal(-1.00000000000000))*(r02)*(x1150)))+(((sj1)*(x1147)))+(((IkReal(-1.00000000000000))*(IKsin(j5)))));
evalcond[1]=((((IkReal(-1.00000000000000))*(IKcos(j5))))+(((sj1)*(sj2)*(x1149)))+(((cj1)*(x1147)))+(((IkReal(-1.00000000000000))*(x1149)*(x1150)))+(((x1150)*(x1151)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1148)*(x1152))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1154=((pz)*(sj1));
IkReal x1155=((cj0)*(py));
IkReal x1156=((IkReal(1.00000000000000))*(sj2));
IkReal x1157=((cj1)*(cj2));
IkReal x1158=((px)*(sj0));
IkReal x1159=((cj2)*(sj1));
IkReal x1160=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(-0.190890000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.312420000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((cj2)*(x1154)))+(((IkReal(-1.00000000000000))*(x1157)*(x1158)))+(((sj1)*(sj2)*(x1158)))+(((IkReal(-1.00000000000000))*(sj1)*(x1155)*(x1156)))+(((pz)*(x1160)))+(((IkReal(-0.521670000000000))*(sj2)))+(((x1155)*(x1157))));
evalcond[4]=((IkReal(-0.126510000000000))+(((IkReal(-1.00000000000000))*(x1158)*(x1159)))+(((sj2)*(x1154)))+(((x1155)*(x1160)))+(((IkReal(-1.00000000000000))*(pz)*(x1157)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(cj1)*(x1156)*(x1158)))+(((IkReal(0.00982000000000000))*(sj2)))+(((x1155)*(x1159))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1161=((IkReal(1.00000000000000))*(sj2));
IkReal x1162=((r02)*(sj1));
IkReal x1163=((cj0)*(r01));
IkReal x1164=((IkReal(1.00000000000000))*(cj2));
IkReal x1165=((cj1)*(r02));
IkReal x1166=((cj1)*(r00)*(sj0));
IkReal x1167=((r00)*(sj0)*(sj1));
if( IKabs(((((sj2)*(x1166)))+(((IkReal(-1.00000000000000))*(cj1)*(x1161)*(x1163)))+(((IkReal(-1.00000000000000))*(sj1)*(x1163)*(x1164)))+(((cj2)*(x1167)))+(((cj2)*(x1165)))+(((IkReal(-1.00000000000000))*(x1161)*(x1162))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((sj2)*(x1167)))+(((sj2)*(x1165)))+(((IkReal(-1.00000000000000))*(sj1)*(x1161)*(x1163)))+(((cj1)*(cj2)*(x1163)))+(((cj2)*(x1162)))+(((IkReal(-1.00000000000000))*(x1164)*(x1166))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((sj2)*(x1166)))+(((IkReal(-1.00000000000000))*(cj1)*(x1161)*(x1163)))+(((IkReal(-1.00000000000000))*(sj1)*(x1163)*(x1164)))+(((cj2)*(x1167)))+(((cj2)*(x1165)))+(((IkReal(-1.00000000000000))*(x1161)*(x1162)))))+IKsqr(((((sj2)*(x1167)))+(((sj2)*(x1165)))+(((IkReal(-1.00000000000000))*(sj1)*(x1161)*(x1163)))+(((cj1)*(cj2)*(x1163)))+(((cj2)*(x1162)))+(((IkReal(-1.00000000000000))*(x1164)*(x1166)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((sj2)*(x1166)))+(((IkReal(-1.00000000000000))*(cj1)*(x1161)*(x1163)))+(((IkReal(-1.00000000000000))*(sj1)*(x1163)*(x1164)))+(((cj2)*(x1167)))+(((cj2)*(x1165)))+(((IkReal(-1.00000000000000))*(x1161)*(x1162)))), ((((sj2)*(x1167)))+(((sj2)*(x1165)))+(((IkReal(-1.00000000000000))*(sj1)*(x1161)*(x1163)))+(((cj1)*(cj2)*(x1163)))+(((cj2)*(x1162)))+(((IkReal(-1.00000000000000))*(x1164)*(x1166)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1168=((r02)*(sj2));
IkReal x1169=((IkReal(1.00000000000000))*(sj2));
IkReal x1170=((r00)*(sj0));
IkReal x1171=((cj1)*(cj2));
IkReal x1172=((cj0)*(r01));
IkReal x1173=((sj1)*(x1172));
IkReal x1174=((IkReal(1.00000000000000))*(cj2)*(x1170));
evalcond[0]=((((cj1)*(sj2)*(x1172)))+(((sj1)*(x1168)))+(((IkReal(-1.00000000000000))*(sj1)*(x1174)))+(((IkReal(-1.00000000000000))*(cj1)*(x1169)*(x1170)))+(((IkReal(-1.00000000000000))*(r02)*(x1171)))+(IKsin(j5))+(((cj2)*(x1173))));
evalcond[1]=((((cj1)*(x1168)))+(((IkReal(-1.00000000000000))*(x1170)*(x1171)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1169)*(x1173)))+(((sj1)*(sj2)*(x1170)))+(((x1171)*(x1172))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1175=((r02)*(sj2));
IkReal x1176=((IkReal(1.00000000000000))*(sj2));
IkReal x1177=((r00)*(sj0));
IkReal x1178=((cj1)*(cj2));
IkReal x1179=((cj0)*(r01));
IkReal x1180=((sj1)*(x1179));
IkReal x1181=((IkReal(1.00000000000000))*(cj2)*(x1177));
if( IKabs(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(sj1)*(x1181)))+(((cj1)*(sj2)*(x1179)))+(((sj1)*(x1175)))+(((IkReal(-1.00000000000000))*(r02)*(x1178)))+(((IkReal(-1.00000000000000))*(cj1)*(x1176)*(x1177)))+(((cj2)*(x1180))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x1176)*(x1180)))+(((cj1)*(x1175)))+(((IkReal(-1.00000000000000))*(x1177)*(x1178)))+(((cj2)*(r02)*(sj1)))+(((x1178)*(x1179)))+(((sj1)*(sj2)*(x1177))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(sj1)*(x1181)))+(((cj1)*(sj2)*(x1179)))+(((sj1)*(x1175)))+(((IkReal(-1.00000000000000))*(r02)*(x1178)))+(((IkReal(-1.00000000000000))*(cj1)*(x1176)*(x1177)))+(((cj2)*(x1180)))))))+IKsqr(((((IkReal(-1.00000000000000))*(x1176)*(x1180)))+(((cj1)*(x1175)))+(((IkReal(-1.00000000000000))*(x1177)*(x1178)))+(((cj2)*(r02)*(sj1)))+(((x1178)*(x1179)))+(((sj1)*(sj2)*(x1177)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(sj1)*(x1181)))+(((cj1)*(sj2)*(x1179)))+(((sj1)*(x1175)))+(((IkReal(-1.00000000000000))*(r02)*(x1178)))+(((IkReal(-1.00000000000000))*(cj1)*(x1176)*(x1177)))+(((cj2)*(x1180)))))), ((((IkReal(-1.00000000000000))*(x1176)*(x1180)))+(((cj1)*(x1175)))+(((IkReal(-1.00000000000000))*(x1177)*(x1178)))+(((cj2)*(r02)*(sj1)))+(((x1178)*(x1179)))+(((sj1)*(sj2)*(x1177)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1182=IKsin(j5);
IkReal x1183=((r02)*(sj2));
IkReal x1184=((IkReal(1.00000000000000))*(sj2));
IkReal x1185=((r00)*(sj0));
IkReal x1186=((IkReal(1.00000000000000))*(cj2));
IkReal x1187=((IkReal(1.00000000000000))*(x1182));
IkReal x1188=((cj0)*(r01)*(sj1));
IkReal x1189=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x1187)))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj1)*(x1184)*(x1185)))+(((sj1)*(x1183)))+(((IkReal(-1.00000000000000))*(sj4)*(x1187)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1186)))+(((sj2)*(x1189)))+(((IkReal(-1.00000000000000))*(sj1)*(x1185)*(x1186)))+(((cj2)*(x1188))));
evalcond[2]=((((sj1)*(sj2)*(x1185)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((IkReal(-1.00000000000000))*(cj1)*(x1185)*(x1186)))+(((IkReal(-1.00000000000000))*(x1184)*(x1188)))+(((cj2)*(r02)*(sj1)))+(((cj1)*(x1183)))+(((cj2)*(x1189))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1190=((sj1)*(sj2));
IkReal x1191=((cj0)*(r01));
IkReal x1192=((r00)*(sj0));
IkReal x1193=((cj1)*(cj2));
if( IKabs(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x1190)*(x1191)))+(((IkReal(-1.00000000000000))*(x1192)*(x1193)))+(((cj2)*(r02)*(sj1)))+(((x1191)*(x1193)))+(((x1190)*(x1192)))+(((cj1)*(r02)*(sj2))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))))+IKsqr(((((IkReal(-1.00000000000000))*(x1190)*(x1191)))+(((IkReal(-1.00000000000000))*(x1192)*(x1193)))+(((cj2)*(r02)*(sj1)))+(((x1191)*(x1193)))+(((x1190)*(x1192)))+(((cj1)*(r02)*(sj2)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))), ((((IkReal(-1.00000000000000))*(x1190)*(x1191)))+(((IkReal(-1.00000000000000))*(x1192)*(x1193)))+(((cj2)*(r02)*(sj1)))+(((x1191)*(x1193)))+(((x1190)*(x1192)))+(((cj1)*(r02)*(sj2)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1194=IKsin(j5);
IkReal x1195=((r02)*(sj2));
IkReal x1196=((IkReal(1.00000000000000))*(sj2));
IkReal x1197=((r00)*(sj0));
IkReal x1198=((IkReal(1.00000000000000))*(cj2));
IkReal x1199=((IkReal(1.00000000000000))*(x1194));
IkReal x1200=((cj0)*(r01)*(sj1));
IkReal x1201=((cj0)*(cj1)*(r01));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj4)*(x1199)))+(((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj1)*(x1197)*(x1198)))+(((sj1)*(x1195)))+(((IkReal(-1.00000000000000))*(sj4)*(x1199)))+(((cj2)*(x1200)))+(((sj2)*(x1201)))+(((IkReal(-1.00000000000000))*(cj1)*(x1196)*(x1197)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1198))));
evalcond[2]=((((sj1)*(sj2)*(x1197)))+(((IkReal(-1.00000000000000))*(cj1)*(x1197)*(x1198)))+(((IkReal(-1.00000000000000))*(x1196)*(x1200)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((cj2)*(x1201)))+(((cj2)*(r02)*(sj1)))+(((cj1)*(x1195))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1202=((cj1)*(sj2));
IkReal x1203=((px)*(sj0));
IkReal x1204=((sj1)*(sj2));
IkReal x1205=((cj0)*(py));
IkReal x1206=((cj2)*(pz));
IkReal x1207=((IkReal(1.00000000000000))*(cj1));
IkReal x1208=((cj2)*(x1205));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(0.000790000000000000))*(cj4)))+(((cj0)*(px)))+(((py)*(sj0)))+(((IkReal(0.190890000000000))*(sj4))));
evalcond[2]=((IkReal(-0.394310000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(0.000790000000000000))*(sj4)))+(((cj1)*(x1208)))+(((IkReal(-1.00000000000000))*(cj2)*(x1203)*(x1207)))+(((x1203)*(x1204)))+(((sj1)*(x1206)))+(((IkReal(-1.00000000000000))*(x1204)*(x1205)))+(((pz)*(x1202)))+(((IkReal(-0.190890000000000))*(cj4)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[3]=((IkReal(0.0588300000000000))+(((x1202)*(x1205)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x1202)*(x1203)))+(((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x1203)))+(((sj1)*(x1208)))+(((pz)*(x1204)))+(((IkReal(-1.00000000000000))*(x1206)*(x1207)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x1209=((IkReal(1.00000000000000))*(sj2));
IkReal x1210=((px)*(sj0));
IkReal x1211=((pz)*(sj2));
IkReal x1212=((cj0)*(sj1));
IkReal x1213=((cj1)*(sj2));
IkReal x1214=((sj1)*(sj2));
IkReal x1215=((cj2)*(sj1));
IkReal x1216=((r00)*(sj0));
IkReal x1217=((cj0)*(cj1)*(cj2));
IkReal x1218=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.000790000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((x1214)*(x1216)))+(((r02)*(x1213)))+(((r02)*(x1215)))+(((IkReal(-1.00000000000000))*(x1216)*(x1218)))+(((IkReal(-1.00000000000000))*(r01)*(x1209)*(x1212)))+(((r01)*(x1217))));
evalcond[3]=((IkReal(-0.585200000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((x1210)*(x1214)))+(((IkReal(-1.00000000000000))*(x1210)*(x1218)))+(((IkReal(-1.00000000000000))*(py)*(x1209)*(x1212)))+(((pz)*(x1215)))+(((cj1)*(x1211)))+(((IkReal(-0.521670000000000))*(sj2)))+(((py)*(x1217))));
evalcond[4]=((IkReal(0.0588300000000000))+(((IkReal(-1.00000000000000))*(x1210)*(x1215)))+(((cj2)*(py)*(x1212)))+(((IkReal(0.521670000000000))*(cj2)))+(((cj0)*(py)*(x1213)))+(((sj1)*(x1211)))+(((IkReal(-1.00000000000000))*(cj1)*(x1209)*(x1210)))+(((IkReal(-1.00000000000000))*(pz)*(x1218)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1219=((IkReal(1.00000000000000))*(sj2));
IkReal x1220=((cj0)*(r01));
IkReal x1221=((r00)*(sj0));
IkReal x1222=((cj2)*(sj1));
if( IKabs(((((r01)*(sj0)))+(((cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1219)))+(((cj1)*(sj2)*(x1221)))+(((IkReal(-1.00000000000000))*(x1220)*(x1222)))+(((x1221)*(x1222)))+(((IkReal(-1.00000000000000))*(cj1)*(x1219)*(x1220)))+(((cj1)*(cj2)*(r02))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r01)*(sj0)))+(((cj0)*(r00)))))+IKsqr(((((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1219)))+(((cj1)*(sj2)*(x1221)))+(((IkReal(-1.00000000000000))*(x1220)*(x1222)))+(((x1221)*(x1222)))+(((IkReal(-1.00000000000000))*(cj1)*(x1219)*(x1220)))+(((cj1)*(cj2)*(r02)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((r01)*(sj0)))+(((cj0)*(r00)))), ((((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1219)))+(((cj1)*(sj2)*(x1221)))+(((IkReal(-1.00000000000000))*(x1220)*(x1222)))+(((x1221)*(x1222)))+(((IkReal(-1.00000000000000))*(cj1)*(x1219)*(x1220)))+(((cj1)*(cj2)*(r02)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1223=((cj2)*(sj1));
IkReal x1224=((cj0)*(r01));
IkReal x1225=((cj1)*(sj2));
IkReal x1226=((IkReal(1.00000000000000))*(r00)*(sj0));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1225)*(x1226)))+(((x1223)*(x1224)))+(((x1224)*(x1225)))+(IKcos(j5))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((r02)*(sj1)*(sj2)))+(((IkReal(-1.00000000000000))*(x1223)*(x1226))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1227=((IkReal(1.00000000000000))*(sj2));
IkReal x1228=((px)*(sj0));
IkReal x1229=((pz)*(sj2));
IkReal x1230=((cj0)*(sj1));
IkReal x1231=((cj1)*(sj2));
IkReal x1232=((sj1)*(sj2));
IkReal x1233=((cj2)*(sj1));
IkReal x1234=((r00)*(sj0));
IkReal x1235=((cj0)*(cj1)*(cj2));
IkReal x1236=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.000790000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((r01)*(x1235)))+(((r02)*(x1231)))+(((r02)*(x1233)))+(((IkReal(-1.00000000000000))*(r01)*(x1227)*(x1230)))+(((IkReal(-1.00000000000000))*(x1234)*(x1236)))+(((x1232)*(x1234))));
evalcond[3]=((IkReal(-0.203420000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((pz)*(x1233)))+(((py)*(x1235)))+(((IkReal(-1.00000000000000))*(x1228)*(x1236)))+(((x1228)*(x1232)))+(((IkReal(-0.521670000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(py)*(x1227)*(x1230)))+(((cj1)*(x1229))));
evalcond[4]=((IkReal(0.0588300000000000))+(((sj1)*(x1229)))+(((IkReal(-1.00000000000000))*(cj1)*(x1227)*(x1228)))+(((cj2)*(py)*(x1230)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(pz)*(x1236)))+(((IkReal(-1.00000000000000))*(x1228)*(x1233)))+(((cj0)*(py)*(x1231)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1237=((IkReal(1.00000000000000))*(sj2));
IkReal x1238=((cj0)*(r01));
IkReal x1239=((r00)*(sj0));
IkReal x1240=((cj2)*(sj1));
if( IKabs(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x1239)*(x1240)))+(((cj1)*(sj2)*(x1239)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1237)))+(((cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(x1238)*(x1240)))+(((IkReal(-1.00000000000000))*(cj1)*(x1237)*(x1238))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))))+IKsqr(((((x1239)*(x1240)))+(((cj1)*(sj2)*(x1239)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1237)))+(((cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(x1238)*(x1240)))+(((IkReal(-1.00000000000000))*(cj1)*(x1237)*(x1238)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))), ((((x1239)*(x1240)))+(((cj1)*(sj2)*(x1239)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1237)))+(((cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(x1238)*(x1240)))+(((IkReal(-1.00000000000000))*(cj1)*(x1237)*(x1238)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1241=((cj2)*(sj1));
IkReal x1242=((cj0)*(r01));
IkReal x1243=((cj1)*(sj2));
IkReal x1244=((IkReal(1.00000000000000))*(r00)*(sj0));
evalcond[0]=((((r01)*(sj0)))+(IKsin(j5))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1243)*(x1244)))+(IKcos(j5))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((x1242)*(x1243)))+(((x1241)*(x1242)))+(((IkReal(-1.00000000000000))*(x1241)*(x1244)))+(((r02)*(sj1)*(sj2))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1245=((pz)*(sj1));
IkReal x1246=((cj0)*(py));
IkReal x1247=((IkReal(1.00000000000000))*(sj2));
IkReal x1248=((cj1)*(cj2));
IkReal x1249=((px)*(sj0));
IkReal x1250=((cj2)*(sj1));
IkReal x1251=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(0.190890000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.393520000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((sj1)*(sj2)*(x1249)))+(((x1246)*(x1248)))+(((IkReal(-1.00000000000000))*(sj1)*(x1246)*(x1247)))+(((IkReal(-0.521670000000000))*(sj2)))+(((cj2)*(x1245)))+(((IkReal(-1.00000000000000))*(x1248)*(x1249)))+(((pz)*(x1251))));
evalcond[4]=((IkReal(0.0588300000000000))+(((x1246)*(x1250)))+(((x1246)*(x1251)))+(((IkReal(-1.00000000000000))*(cj1)*(x1247)*(x1249)))+(((sj2)*(x1245)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x1249)*(x1250)))+(((IkReal(-1.00000000000000))*(pz)*(x1248)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1252=((IkReal(1.00000000000000))*(sj2));
IkReal x1253=((r02)*(sj1));
IkReal x1254=((cj0)*(r01));
IkReal x1255=((IkReal(1.00000000000000))*(cj2));
IkReal x1256=((cj1)*(r02));
IkReal x1257=((cj1)*(r00)*(sj0));
IkReal x1258=((r00)*(sj0)*(sj1));
if( IKabs(((((cj1)*(cj2)*(x1254)))+(((cj2)*(x1253)))+(((IkReal(-1.00000000000000))*(x1255)*(x1257)))+(((IkReal(-1.00000000000000))*(sj1)*(x1252)*(x1254)))+(((sj2)*(x1258)))+(((sj2)*(x1256))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(sj1)*(x1254)*(x1255)))+(((cj2)*(x1256)))+(((cj2)*(x1258)))+(((IkReal(-1.00000000000000))*(x1252)*(x1253)))+(((IkReal(-1.00000000000000))*(cj1)*(x1252)*(x1254)))+(((sj2)*(x1257))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj1)*(cj2)*(x1254)))+(((cj2)*(x1253)))+(((IkReal(-1.00000000000000))*(x1255)*(x1257)))+(((IkReal(-1.00000000000000))*(sj1)*(x1252)*(x1254)))+(((sj2)*(x1258)))+(((sj2)*(x1256)))))+IKsqr(((((IkReal(-1.00000000000000))*(sj1)*(x1254)*(x1255)))+(((cj2)*(x1256)))+(((cj2)*(x1258)))+(((IkReal(-1.00000000000000))*(x1252)*(x1253)))+(((IkReal(-1.00000000000000))*(cj1)*(x1252)*(x1254)))+(((sj2)*(x1257)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((cj1)*(cj2)*(x1254)))+(((cj2)*(x1253)))+(((IkReal(-1.00000000000000))*(x1255)*(x1257)))+(((IkReal(-1.00000000000000))*(sj1)*(x1252)*(x1254)))+(((sj2)*(x1258)))+(((sj2)*(x1256)))), ((((IkReal(-1.00000000000000))*(sj1)*(x1254)*(x1255)))+(((cj2)*(x1256)))+(((cj2)*(x1258)))+(((IkReal(-1.00000000000000))*(x1252)*(x1253)))+(((IkReal(-1.00000000000000))*(cj1)*(x1252)*(x1254)))+(((sj2)*(x1257)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1259=((r02)*(sj2));
IkReal x1260=((IkReal(1.00000000000000))*(sj2));
IkReal x1261=((r00)*(sj0));
IkReal x1262=((cj1)*(cj2));
IkReal x1263=((cj0)*(r01));
IkReal x1264=((sj1)*(x1263));
IkReal x1265=((IkReal(1.00000000000000))*(cj2)*(x1261));
evalcond[0]=((((cj1)*(sj2)*(x1263)))+(((IkReal(-1.00000000000000))*(cj1)*(x1260)*(x1261)))+(((sj1)*(x1259)))+(((IkReal(-1.00000000000000))*(r02)*(x1262)))+(((cj2)*(x1264)))+(((IkReal(-1.00000000000000))*(sj1)*(x1265)))+(IKcos(j5)));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1260)*(x1264)))+(((x1262)*(x1263)))+(((cj1)*(x1259)))+(((cj2)*(r02)*(sj1)))+(((sj1)*(sj2)*(x1261)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((IkReal(-1.00000000000000))*(x1261)*(x1262))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1266=((pz)*(sj1));
IkReal x1267=((cj0)*(py));
IkReal x1268=((IkReal(1.00000000000000))*(sj2));
IkReal x1269=((cj1)*(cj2));
IkReal x1270=((px)*(sj0));
IkReal x1271=((cj2)*(sj1));
IkReal x1272=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(-0.190890000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.395100000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((pz)*(x1272)))+(((IkReal(-1.00000000000000))*(x1269)*(x1270)))+(((cj2)*(x1266)))+(((x1267)*(x1269)))+(((IkReal(-1.00000000000000))*(sj1)*(x1267)*(x1268)))+(((sj1)*(sj2)*(x1270)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(0.0588300000000000))+(((IkReal(-1.00000000000000))*(cj1)*(x1268)*(x1270)))+(((IkReal(-1.00000000000000))*(pz)*(x1269)))+(((x1267)*(x1271)))+(((x1267)*(x1272)))+(((IkReal(0.521670000000000))*(cj2)))+(((sj2)*(x1266)))+(((IkReal(0.00982000000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(x1270)*(x1271))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1273=((IkReal(1.00000000000000))*(sj2));
IkReal x1274=((r02)*(sj1));
IkReal x1275=((cj0)*(r01));
IkReal x1276=((r00)*(sj0));
IkReal x1277=((cj1)*(r02));
IkReal x1278=((IkReal(1.00000000000000))*(cj2));
if( IKabs(((((cj1)*(cj2)*(x1276)))+(((IkReal(-1.00000000000000))*(sj1)*(x1273)*(x1276)))+(((IkReal(-1.00000000000000))*(x1273)*(x1277)))+(((IkReal(-1.00000000000000))*(x1274)*(x1278)))+(((sj1)*(sj2)*(x1275)))+(((IkReal(-1.00000000000000))*(cj1)*(x1275)*(x1278))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(cj1)*(x1273)*(x1275)))+(((IkReal(-1.00000000000000))*(sj1)*(x1275)*(x1278)))+(((IkReal(-1.00000000000000))*(x1273)*(x1274)))+(((cj2)*(x1277)))+(((cj2)*(sj1)*(x1276)))+(((cj1)*(sj2)*(x1276))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj1)*(cj2)*(x1276)))+(((IkReal(-1.00000000000000))*(sj1)*(x1273)*(x1276)))+(((IkReal(-1.00000000000000))*(x1273)*(x1277)))+(((IkReal(-1.00000000000000))*(x1274)*(x1278)))+(((sj1)*(sj2)*(x1275)))+(((IkReal(-1.00000000000000))*(cj1)*(x1275)*(x1278)))))+IKsqr(((((IkReal(-1.00000000000000))*(cj1)*(x1273)*(x1275)))+(((IkReal(-1.00000000000000))*(sj1)*(x1275)*(x1278)))+(((IkReal(-1.00000000000000))*(x1273)*(x1274)))+(((cj2)*(x1277)))+(((cj2)*(sj1)*(x1276)))+(((cj1)*(sj2)*(x1276)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((cj1)*(cj2)*(x1276)))+(((IkReal(-1.00000000000000))*(sj1)*(x1273)*(x1276)))+(((IkReal(-1.00000000000000))*(x1273)*(x1277)))+(((IkReal(-1.00000000000000))*(x1274)*(x1278)))+(((sj1)*(sj2)*(x1275)))+(((IkReal(-1.00000000000000))*(cj1)*(x1275)*(x1278)))), ((((IkReal(-1.00000000000000))*(cj1)*(x1273)*(x1275)))+(((IkReal(-1.00000000000000))*(sj1)*(x1275)*(x1278)))+(((IkReal(-1.00000000000000))*(x1273)*(x1274)))+(((cj2)*(x1277)))+(((cj2)*(sj1)*(x1276)))+(((cj1)*(sj2)*(x1276)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1279=((r02)*(sj2));
IkReal x1280=((IkReal(1.00000000000000))*(sj2));
IkReal x1281=((r00)*(sj0));
IkReal x1282=((cj1)*(cj2));
IkReal x1283=((cj0)*(r01));
IkReal x1284=((sj1)*(x1283));
IkReal x1285=((IkReal(1.00000000000000))*(cj2)*(x1281));
evalcond[0]=((((sj1)*(x1279)))+(IKcos(j5))+(((IkReal(-1.00000000000000))*(r02)*(x1282)))+(((cj2)*(x1284)))+(((IkReal(-1.00000000000000))*(cj1)*(x1280)*(x1281)))+(((IkReal(-1.00000000000000))*(sj1)*(x1285)))+(((cj1)*(sj2)*(x1283))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1281)*(x1282)))+(((sj1)*(sj2)*(x1281)))+(IKsin(j5))+(((cj1)*(x1279)))+(((cj2)*(r02)*(sj1)))+(((x1282)*(x1283)))+(((IkReal(-1.00000000000000))*(x1280)*(x1284))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1286=((IkReal(1.00000000000000))*(sj2));
IkReal x1287=((r02)*(sj1));
IkReal x1288=((cj0)*(r01));
IkReal x1289=((IkReal(1.00000000000000))*(cj2));
IkReal x1290=((cj1)*(r02));
IkReal x1291=((cj1)*(r00)*(sj0));
IkReal x1292=((r00)*(sj0)*(sj1));
if( IKabs(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((sj2)*(x1292)))+(((sj2)*(x1290)))+(((IkReal(-1.00000000000000))*(x1289)*(x1291)))+(((IkReal(-1.00000000000000))*(sj1)*(x1286)*(x1288)))+(((cj2)*(x1287)))+(((cj1)*(cj2)*(x1288))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((sj2)*(x1291)))+(((cj2)*(x1290)))+(((cj2)*(x1292)))+(((IkReal(-1.00000000000000))*(cj1)*(x1286)*(x1288)))+(((IkReal(-1.00000000000000))*(sj1)*(x1288)*(x1289)))+(((IkReal(-1.00000000000000))*(x1286)*(x1287))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((sj2)*(x1292)))+(((sj2)*(x1290)))+(((IkReal(-1.00000000000000))*(x1289)*(x1291)))+(((IkReal(-1.00000000000000))*(sj1)*(x1286)*(x1288)))+(((cj2)*(x1287)))+(((cj1)*(cj2)*(x1288)))))))+IKsqr(((((sj2)*(x1291)))+(((cj2)*(x1290)))+(((cj2)*(x1292)))+(((IkReal(-1.00000000000000))*(cj1)*(x1286)*(x1288)))+(((IkReal(-1.00000000000000))*(sj1)*(x1288)*(x1289)))+(((IkReal(-1.00000000000000))*(x1286)*(x1287)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((sj2)*(x1292)))+(((sj2)*(x1290)))+(((IkReal(-1.00000000000000))*(x1289)*(x1291)))+(((IkReal(-1.00000000000000))*(sj1)*(x1286)*(x1288)))+(((cj2)*(x1287)))+(((cj1)*(cj2)*(x1288)))))), ((((sj2)*(x1291)))+(((cj2)*(x1290)))+(((cj2)*(x1292)))+(((IkReal(-1.00000000000000))*(cj1)*(x1286)*(x1288)))+(((IkReal(-1.00000000000000))*(sj1)*(x1288)*(x1289)))+(((IkReal(-1.00000000000000))*(x1286)*(x1287)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1293=IKsin(j5);
IkReal x1294=((r02)*(sj2));
IkReal x1295=((IkReal(1.00000000000000))*(sj2));
IkReal x1296=((r00)*(sj0));
IkReal x1297=((IkReal(1.00000000000000))*(cj2));
IkReal x1298=((IkReal(1.00000000000000))*(x1293));
IkReal x1299=((cj0)*(r01)*(sj1));
IkReal x1300=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x1298)))+(((cj0)*(r00))));
evalcond[1]=((((cj2)*(x1299)))+(((sj2)*(x1300)))+(((sj1)*(x1294)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1297)))+(((IkReal(-1.00000000000000))*(sj1)*(x1296)*(x1297)))+(IKcos(j5))+(((IkReal(-1.00000000000000))*(cj1)*(x1295)*(x1296))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj4)*(x1298)))+(((IkReal(-1.00000000000000))*(cj1)*(x1296)*(x1297)))+(((cj1)*(x1294)))+(((IkReal(-1.00000000000000))*(x1295)*(x1299)))+(((sj1)*(sj2)*(x1296)))+(((cj2)*(r02)*(sj1)))+(((cj2)*(x1300))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1301=((IkReal(1.00000000000000))*(sj2));
IkReal x1302=((cj0)*(r01));
IkReal x1303=((r00)*(sj0));
IkReal x1304=((cj2)*(sj1));
if( IKabs(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj1)*(sj2)*(x1303)))+(((IkReal(-1.00000000000000))*(cj1)*(x1301)*(x1302)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1301)))+(((x1303)*(x1304)))+(((cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(x1302)*(x1304))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))))+IKsqr(((((cj1)*(sj2)*(x1303)))+(((IkReal(-1.00000000000000))*(cj1)*(x1301)*(x1302)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1301)))+(((x1303)*(x1304)))+(((cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(x1302)*(x1304)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))), ((((cj1)*(sj2)*(x1303)))+(((IkReal(-1.00000000000000))*(cj1)*(x1301)*(x1302)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1301)))+(((x1303)*(x1304)))+(((cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(x1302)*(x1304)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1305=IKsin(j5);
IkReal x1306=((r02)*(sj2));
IkReal x1307=((IkReal(1.00000000000000))*(sj2));
IkReal x1308=((r00)*(sj0));
IkReal x1309=((IkReal(1.00000000000000))*(cj2));
IkReal x1310=((IkReal(1.00000000000000))*(x1305));
IkReal x1311=((cj0)*(r01)*(sj1));
IkReal x1312=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x1310)))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1309)))+(((IkReal(-1.00000000000000))*(cj1)*(x1307)*(x1308)))+(((sj2)*(x1312)))+(IKcos(j5))+(((cj2)*(x1311)))+(((IkReal(-1.00000000000000))*(sj1)*(x1308)*(x1309)))+(((sj1)*(x1306))));
evalcond[2]=((((sj1)*(sj2)*(x1308)))+(((IkReal(-1.00000000000000))*(x1307)*(x1311)))+(((cj1)*(x1306)))+(((IkReal(-1.00000000000000))*(sj4)*(x1310)))+(((cj2)*(x1312)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(x1308)*(x1309))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1313=((cj1)*(sj2));
IkReal x1314=((px)*(sj0));
IkReal x1315=((sj1)*(sj2));
IkReal x1316=((cj0)*(py));
IkReal x1317=((cj2)*(pz));
IkReal x1318=((IkReal(1.00000000000000))*(cj1));
IkReal x1319=((cj2)*(x1316));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(0.000790000000000000))*(cj4)))+(((cj0)*(px)))+(((py)*(sj0)))+(((IkReal(0.190890000000000))*(sj4))));
evalcond[2]=((IkReal(-0.127870000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((pz)*(x1313)))+(((x1314)*(x1315)))+(((IkReal(-1.00000000000000))*(x1315)*(x1316)))+(((IkReal(0.190890000000000))*(cj4)))+(((cj1)*(x1319)))+(((IkReal(-0.000790000000000000))*(sj4)))+(((IkReal(-1.00000000000000))*(cj2)*(x1314)*(x1318)))+(((IkReal(-0.521670000000000))*(sj2)))+(((sj1)*(x1317))));
evalcond[3]=((IkReal(-0.0438300000000000))+(((pz)*(x1315)))+(((IkReal(-1.00000000000000))*(x1317)*(x1318)))+(((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x1314)))+(((x1313)*(x1316)))+(((IkReal(-1.00000000000000))*(x1313)*(x1314)))+(((IkReal(0.521670000000000))*(cj2)))+(((sj1)*(x1319)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x1320=((IkReal(1.00000000000000))*(sj2));
IkReal x1321=((px)*(sj0));
IkReal x1322=((pz)*(sj2));
IkReal x1323=((cj0)*(sj1));
IkReal x1324=((cj1)*(sj2));
IkReal x1325=((sj1)*(sj2));
IkReal x1326=((cj2)*(sj1));
IkReal x1327=((r00)*(sj0));
IkReal x1328=((cj0)*(cj1)*(cj2));
IkReal x1329=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.000790000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((r01)*(x1328)))+(((IkReal(-1.00000000000000))*(r01)*(x1320)*(x1323)))+(((IkReal(-1.00000000000000))*(x1327)*(x1329)))+(((r02)*(x1326)))+(((r02)*(x1324)))+(((x1325)*(x1327))));
evalcond[3]=((IkReal(0.0630200000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((py)*(x1328)))+(((pz)*(x1326)))+(((IkReal(-1.00000000000000))*(py)*(x1320)*(x1323)))+(((IkReal(-1.00000000000000))*(x1321)*(x1329)))+(((cj1)*(x1322)))+(((x1321)*(x1325)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(-0.0438300000000000))+(((IkReal(-1.00000000000000))*(x1321)*(x1326)))+(((cj2)*(py)*(x1323)))+(((cj0)*(py)*(x1324)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(cj1)*(x1320)*(x1321)))+(((IkReal(-1.00000000000000))*(pz)*(x1329)))+(((IkReal(0.00982000000000000))*(sj2)))+(((sj1)*(x1322))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1330=((cj2)*(sj1));
IkReal x1331=((cj0)*(r01));
IkReal x1332=((cj1)*(sj2));
IkReal x1333=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((r01)*(sj0)))+(((cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x1331)*(x1332)))+(((IkReal(-1.00000000000000))*(x1330)*(x1333)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(x1332)*(x1333)))+(((x1330)*(x1331)))+(((r02)*(sj1)*(sj2))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r01)*(sj0)))+(((cj0)*(r00)))))+IKsqr(((((x1331)*(x1332)))+(((IkReal(-1.00000000000000))*(x1330)*(x1333)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(x1332)*(x1333)))+(((x1330)*(x1331)))+(((r02)*(sj1)*(sj2)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((r01)*(sj0)))+(((cj0)*(r00)))), ((((x1331)*(x1332)))+(((IkReal(-1.00000000000000))*(x1330)*(x1333)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(x1332)*(x1333)))+(((x1330)*(x1331)))+(((r02)*(sj1)*(sj2)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1334=((cj2)*(sj1));
IkReal x1335=((cj0)*(r01));
IkReal x1336=((cj1)*(sj2));
IkReal x1337=((IkReal(1.00000000000000))*(r00)*(sj0));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1334)*(x1337)))+(((x1335)*(x1336)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((IkReal(-1.00000000000000))*(x1336)*(x1337)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((r02)*(sj1)*(sj2)))+(((x1334)*(x1335))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1338=((IkReal(1.00000000000000))*(sj2));
IkReal x1339=((px)*(sj0));
IkReal x1340=((pz)*(sj2));
IkReal x1341=((cj0)*(sj1));
IkReal x1342=((cj1)*(sj2));
IkReal x1343=((sj1)*(sj2));
IkReal x1344=((cj2)*(sj1));
IkReal x1345=((r00)*(sj0));
IkReal x1346=((cj0)*(cj1)*(cj2));
IkReal x1347=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.000790000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((r02)*(x1344)))+(((r02)*(x1342)))+(((r01)*(x1346)))+(((IkReal(-1.00000000000000))*(r01)*(x1338)*(x1341)))+(((x1343)*(x1345)))+(((IkReal(-1.00000000000000))*(x1345)*(x1347))));
evalcond[3]=((IkReal(-0.318760000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((cj1)*(x1340)))+(((x1339)*(x1343)))+(((IkReal(-1.00000000000000))*(x1339)*(x1347)))+(((IkReal(-1.00000000000000))*(py)*(x1338)*(x1341)))+(((IkReal(-0.521670000000000))*(sj2)))+(((pz)*(x1344)))+(((py)*(x1346))));
evalcond[4]=((IkReal(-0.0438300000000000))+(((sj1)*(x1340)))+(((IkReal(-1.00000000000000))*(x1339)*(x1344)))+(((IkReal(-1.00000000000000))*(pz)*(x1347)))+(((IkReal(0.521670000000000))*(cj2)))+(((cj2)*(py)*(x1341)))+(((cj0)*(py)*(x1342)))+(((IkReal(-1.00000000000000))*(cj1)*(x1338)*(x1339)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1348=((cj2)*(sj1));
IkReal x1349=((cj0)*(r01));
IkReal x1350=((cj1)*(sj2));
IkReal x1351=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x1350)*(x1351)))+(((x1349)*(x1350)))+(((x1348)*(x1349)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(x1348)*(x1351)))+(((r02)*(sj1)*(sj2))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))))+IKsqr(((((IkReal(-1.00000000000000))*(x1350)*(x1351)))+(((x1349)*(x1350)))+(((x1348)*(x1349)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(x1348)*(x1351)))+(((r02)*(sj1)*(sj2)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))), ((((IkReal(-1.00000000000000))*(x1350)*(x1351)))+(((x1349)*(x1350)))+(((x1348)*(x1349)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(x1348)*(x1351)))+(((r02)*(sj1)*(sj2)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1352=((cj2)*(sj1));
IkReal x1353=((cj0)*(r01));
IkReal x1354=((cj1)*(sj2));
IkReal x1355=((IkReal(1.00000000000000))*(r00)*(sj0));
evalcond[0]=((((r01)*(sj0)))+(IKsin(j5))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1352)*(x1355)))+(((IkReal(-1.00000000000000))*(x1354)*(x1355)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((r02)*(sj1)*(sj2)))+(((x1353)*(x1354)))+(((x1352)*(x1353))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1356=((pz)*(sj1));
IkReal x1357=((cj0)*(py));
IkReal x1358=((IkReal(1.00000000000000))*(sj2));
IkReal x1359=((cj1)*(cj2));
IkReal x1360=((px)*(sj0));
IkReal x1361=((cj2)*(sj1));
IkReal x1362=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(0.190890000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.128660000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(sj1)*(x1357)*(x1358)))+(((x1357)*(x1359)))+(((sj1)*(sj2)*(x1360)))+(((IkReal(-1.00000000000000))*(x1359)*(x1360)))+(((pz)*(x1362)))+(((cj2)*(x1356)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(-0.0438300000000000))+(((x1357)*(x1361)))+(((x1357)*(x1362)))+(((IkReal(-1.00000000000000))*(pz)*(x1359)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(cj1)*(x1358)*(x1360)))+(((sj2)*(x1356)))+(((IkReal(-1.00000000000000))*(x1360)*(x1361)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1363=((sj1)*(sj2));
IkReal x1364=((cj2)*(sj1));
IkReal x1365=((cj1)*(sj2));
IkReal x1366=((IkReal(1.00000000000000))*(r02));
IkReal x1367=((cj1)*(cj2));
IkReal x1368=((cj0)*(r01));
IkReal x1369=((sj1)*(x1368));
IkReal x1370=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((IkReal(-1.00000000000000))*(x1364)*(x1366)))+(((x1363)*(x1368)))+(((IkReal(-1.00000000000000))*(x1367)*(x1368)))+(((r00)*(sj0)*(x1367)))+(((IkReal(-1.00000000000000))*(x1365)*(x1366)))+(((IkReal(-1.00000000000000))*(x1363)*(x1370))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x1366)*(x1367)))+(((IkReal(-1.00000000000000))*(x1365)*(x1370)))+(((r02)*(x1363)))+(((x1365)*(x1368)))+(((x1364)*(x1368)))+(((IkReal(-1.00000000000000))*(x1364)*(x1370))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x1364)*(x1366)))+(((x1363)*(x1368)))+(((IkReal(-1.00000000000000))*(x1367)*(x1368)))+(((r00)*(sj0)*(x1367)))+(((IkReal(-1.00000000000000))*(x1365)*(x1366)))+(((IkReal(-1.00000000000000))*(x1363)*(x1370)))))+IKsqr(((((IkReal(-1.00000000000000))*(x1366)*(x1367)))+(((IkReal(-1.00000000000000))*(x1365)*(x1370)))+(((r02)*(x1363)))+(((x1365)*(x1368)))+(((x1364)*(x1368)))+(((IkReal(-1.00000000000000))*(x1364)*(x1370)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x1364)*(x1366)))+(((x1363)*(x1368)))+(((IkReal(-1.00000000000000))*(x1367)*(x1368)))+(((r00)*(sj0)*(x1367)))+(((IkReal(-1.00000000000000))*(x1365)*(x1366)))+(((IkReal(-1.00000000000000))*(x1363)*(x1370)))), ((((IkReal(-1.00000000000000))*(x1366)*(x1367)))+(((IkReal(-1.00000000000000))*(x1365)*(x1370)))+(((r02)*(x1363)))+(((x1365)*(x1368)))+(((x1364)*(x1368)))+(((IkReal(-1.00000000000000))*(x1364)*(x1370)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1371=((r02)*(sj2));
IkReal x1372=((IkReal(1.00000000000000))*(sj2));
IkReal x1373=((r00)*(sj0));
IkReal x1374=((cj1)*(cj2));
IkReal x1375=((cj0)*(r01));
IkReal x1376=((sj1)*(x1375));
IkReal x1377=((IkReal(1.00000000000000))*(cj2)*(x1373));
evalcond[0]=((((IkReal(-1.00000000000000))*(r02)*(x1374)))+(((cj1)*(sj2)*(x1375)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((IkReal(-1.00000000000000))*(cj1)*(x1372)*(x1373)))+(((cj2)*(x1376)))+(((IkReal(-1.00000000000000))*(sj1)*(x1377)))+(((sj1)*(x1371))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1373)*(x1374)))+(((sj1)*(sj2)*(x1373)))+(((x1374)*(x1375)))+(((IkReal(-1.00000000000000))*(x1372)*(x1376)))+(((cj1)*(x1371)))+(IKsin(j5))+(((cj2)*(r02)*(sj1))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1378=((pz)*(sj1));
IkReal x1379=((cj0)*(py));
IkReal x1380=((IkReal(1.00000000000000))*(sj2));
IkReal x1381=((cj1)*(cj2));
IkReal x1382=((px)*(sj0));
IkReal x1383=((cj2)*(sj1));
IkReal x1384=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(-0.190890000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.127080000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(sj1)*(x1379)*(x1380)))+(((sj1)*(sj2)*(x1382)))+(((pz)*(x1384)))+(((cj2)*(x1378)))+(((x1379)*(x1381)))+(((IkReal(-1.00000000000000))*(x1381)*(x1382)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(-0.0438300000000000))+(((IkReal(-1.00000000000000))*(pz)*(x1381)))+(((IkReal(-1.00000000000000))*(x1382)*(x1383)))+(((sj2)*(x1378)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(cj1)*(x1380)*(x1382)))+(((x1379)*(x1383)))+(((x1379)*(x1384)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1385=((cj2)*(sj1));
IkReal x1386=((cj0)*(r01));
IkReal x1387=((sj1)*(sj2));
IkReal x1388=((cj1)*(cj2));
IkReal x1389=((cj1)*(sj2));
IkReal x1390=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((IkReal(-1.00000000000000))*(x1386)*(x1387)))+(((r00)*(sj0)*(x1387)))+(((x1386)*(x1388)))+(((IkReal(-1.00000000000000))*(x1388)*(x1390)))+(((r02)*(x1389)))+(((r02)*(x1385))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x1385)*(x1390)))+(((IkReal(-1.00000000000000))*(r02)*(x1388)))+(((IkReal(-1.00000000000000))*(x1389)*(x1390)))+(((x1386)*(x1389)))+(((x1385)*(x1386)))+(((r02)*(x1387))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x1386)*(x1387)))+(((r00)*(sj0)*(x1387)))+(((x1386)*(x1388)))+(((IkReal(-1.00000000000000))*(x1388)*(x1390)))+(((r02)*(x1389)))+(((r02)*(x1385)))))+IKsqr(((((IkReal(-1.00000000000000))*(x1385)*(x1390)))+(((IkReal(-1.00000000000000))*(r02)*(x1388)))+(((IkReal(-1.00000000000000))*(x1389)*(x1390)))+(((x1386)*(x1389)))+(((x1385)*(x1386)))+(((r02)*(x1387)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x1386)*(x1387)))+(((r00)*(sj0)*(x1387)))+(((x1386)*(x1388)))+(((IkReal(-1.00000000000000))*(x1388)*(x1390)))+(((r02)*(x1389)))+(((r02)*(x1385)))), ((((IkReal(-1.00000000000000))*(x1385)*(x1390)))+(((IkReal(-1.00000000000000))*(r02)*(x1388)))+(((IkReal(-1.00000000000000))*(x1389)*(x1390)))+(((x1386)*(x1389)))+(((x1385)*(x1386)))+(((r02)*(x1387)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1391=((r02)*(sj2));
IkReal x1392=((IkReal(1.00000000000000))*(sj2));
IkReal x1393=((r00)*(sj0));
IkReal x1394=((cj1)*(cj2));
IkReal x1395=((cj0)*(r01));
IkReal x1396=((sj1)*(x1395));
IkReal x1397=((IkReal(1.00000000000000))*(cj2)*(x1393));
evalcond[0]=((((cj2)*(x1396)))+(((IkReal(-1.00000000000000))*(r02)*(x1394)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((IkReal(-1.00000000000000))*(cj1)*(x1392)*(x1393)))+(((cj1)*(sj2)*(x1395)))+(((sj1)*(x1391)))+(((IkReal(-1.00000000000000))*(sj1)*(x1397))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1392)*(x1396)))+(((sj1)*(sj2)*(x1393)))+(((x1394)*(x1395)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1393)*(x1394)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((cj1)*(x1391))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1398=((sj1)*(sj2));
IkReal x1399=((cj2)*(sj1));
IkReal x1400=((cj1)*(sj2));
IkReal x1401=((IkReal(1.00000000000000))*(r02));
IkReal x1402=((cj1)*(cj2));
IkReal x1403=((cj0)*(r01));
IkReal x1404=((sj1)*(x1403));
IkReal x1405=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((r00)*(sj0)*(x1402)))+(((IkReal(-1.00000000000000))*(x1399)*(x1401)))+(((IkReal(-1.00000000000000))*(x1398)*(x1405)))+(((IkReal(-1.00000000000000))*(x1402)*(x1403)))+(((IkReal(-1.00000000000000))*(x1400)*(x1401)))+(((x1398)*(x1403))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x1399)*(x1405)))+(((x1399)*(x1403)))+(((IkReal(-1.00000000000000))*(x1401)*(x1402)))+(((IkReal(-1.00000000000000))*(x1400)*(x1405)))+(((r02)*(x1398)))+(((x1400)*(x1403))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((r00)*(sj0)*(x1402)))+(((IkReal(-1.00000000000000))*(x1399)*(x1401)))+(((IkReal(-1.00000000000000))*(x1398)*(x1405)))+(((IkReal(-1.00000000000000))*(x1402)*(x1403)))+(((IkReal(-1.00000000000000))*(x1400)*(x1401)))+(((x1398)*(x1403)))))))+IKsqr(((((IkReal(-1.00000000000000))*(x1399)*(x1405)))+(((x1399)*(x1403)))+(((IkReal(-1.00000000000000))*(x1401)*(x1402)))+(((IkReal(-1.00000000000000))*(x1400)*(x1405)))+(((r02)*(x1398)))+(((x1400)*(x1403)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((r00)*(sj0)*(x1402)))+(((IkReal(-1.00000000000000))*(x1399)*(x1401)))+(((IkReal(-1.00000000000000))*(x1398)*(x1405)))+(((IkReal(-1.00000000000000))*(x1402)*(x1403)))+(((IkReal(-1.00000000000000))*(x1400)*(x1401)))+(((x1398)*(x1403)))))), ((((IkReal(-1.00000000000000))*(x1399)*(x1405)))+(((x1399)*(x1403)))+(((IkReal(-1.00000000000000))*(x1401)*(x1402)))+(((IkReal(-1.00000000000000))*(x1400)*(x1405)))+(((r02)*(x1398)))+(((x1400)*(x1403)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1406=IKsin(j5);
IkReal x1407=((r02)*(sj2));
IkReal x1408=((IkReal(1.00000000000000))*(sj2));
IkReal x1409=((r00)*(sj0));
IkReal x1410=((IkReal(1.00000000000000))*(cj2));
IkReal x1411=((cj0)*(r01)*(sj1));
IkReal x1412=((cj0)*(cj1)*(r01));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj4)*(x1406)))+(((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[1]=((((cj2)*(x1411)))+(((sj2)*(x1412)))+(((IkReal(-1.00000000000000))*(cj1)*(x1408)*(x1409)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((sj1)*(x1407)))+(((IkReal(-1.00000000000000))*(sj1)*(x1409)*(x1410)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1410))));
evalcond[2]=((((cj2)*(x1412)))+(((IkReal(-1.00000000000000))*(x1408)*(x1411)))+(((IkReal(-1.00000000000000))*(cj1)*(x1409)*(x1410)))+(((cj2)*(r02)*(sj1)))+(((sj1)*(sj2)*(x1409)))+(((cj1)*(x1407)))+(((sj4)*(x1406))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1413=((cj2)*(sj1));
IkReal x1414=((cj0)*(r01));
IkReal x1415=((cj1)*(sj2));
IkReal x1416=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x1415)*(x1416)))+(((x1413)*(x1414)))+(((IkReal(-1.00000000000000))*(x1413)*(x1416)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((r02)*(sj1)*(sj2)))+(((x1414)*(x1415))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))))+IKsqr(((((IkReal(-1.00000000000000))*(x1415)*(x1416)))+(((x1413)*(x1414)))+(((IkReal(-1.00000000000000))*(x1413)*(x1416)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((r02)*(sj1)*(sj2)))+(((x1414)*(x1415)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))), ((((IkReal(-1.00000000000000))*(x1415)*(x1416)))+(((x1413)*(x1414)))+(((IkReal(-1.00000000000000))*(x1413)*(x1416)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((r02)*(sj1)*(sj2)))+(((x1414)*(x1415)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1417=IKsin(j5);
IkReal x1418=((r02)*(sj2));
IkReal x1419=((IkReal(1.00000000000000))*(sj2));
IkReal x1420=((r00)*(sj0));
IkReal x1421=((IkReal(1.00000000000000))*(cj2));
IkReal x1422=((cj0)*(r01)*(sj1));
IkReal x1423=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x1417)))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj1)*(x1420)*(x1421)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((cj2)*(x1422)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1421)))+(((IkReal(-1.00000000000000))*(cj1)*(x1419)*(x1420)))+(((sj2)*(x1423)))+(((sj1)*(x1418))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj1)*(x1420)*(x1421)))+(((sj1)*(sj2)*(x1420)))+(((cj2)*(x1423)))+(((sj4)*(x1417)))+(((IkReal(-1.00000000000000))*(x1419)*(x1422)))+(((cj2)*(r02)*(sj1)))+(((cj1)*(x1418))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1424=((cj1)*(sj2));
IkReal x1425=((px)*(sj0));
IkReal x1426=((sj1)*(sj2));
IkReal x1427=((cj0)*(py));
IkReal x1428=((cj2)*(pz));
IkReal x1429=((IkReal(1.00000000000000))*(cj1));
IkReal x1430=((cj2)*(x1427));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.000790000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((IkReal(-0.261090000000000))+(((sj1)*(x1428)))+(((x1425)*(x1426)))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x1426)*(x1427)))+(((IkReal(0.0513300000000000))*(sj3)))+(((IkReal(-0.521670000000000))*(sj2)))+(((pz)*(x1424)))+(((cj1)*(x1430)))+(((IkReal(-0.324110000000000))*(cj3)))+(((IkReal(-1.00000000000000))*(cj2)*(x1425)*(x1429))));
evalcond[3]=((IkReal(0.00750000000000000))+(((x1424)*(x1427)))+(((IkReal(0.0513300000000000))*(cj3)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x1425)))+(((IkReal(-1.00000000000000))*(x1424)*(x1425)))+(((sj1)*(x1430)))+(((IkReal(0.324110000000000))*(sj3)))+(((pz)*(x1426)))+(((IkReal(0.00982000000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(x1428)*(x1429))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1431=((cj0)*(r01));
IkReal x1432=((sj1)*(sj2));
IkReal x1433=((IkReal(1.00000000000000))*(cj1));
IkReal x1434=((r00)*(sj0));
if( IKabs(((((r01)*(sj0)))+(((cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((cj1)*(cj2)*(x1434)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1432)*(x1434)))+(((IkReal(-1.00000000000000))*(cj2)*(x1431)*(x1433)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1433)))+(((x1431)*(x1432))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r01)*(sj0)))+(((cj0)*(r00)))))+IKsqr(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((cj1)*(cj2)*(x1434)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1432)*(x1434)))+(((IkReal(-1.00000000000000))*(cj2)*(x1431)*(x1433)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1433)))+(((x1431)*(x1432)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((r01)*(sj0)))+(((cj0)*(r00)))), ((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((cj1)*(cj2)*(x1434)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1432)*(x1434)))+(((IkReal(-1.00000000000000))*(cj2)*(x1431)*(x1433)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1433)))+(((x1431)*(x1432)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1435=IKcos(j5);
IkReal x1436=((r02)*(sj2));
IkReal x1437=((IkReal(1.00000000000000))*(sj2));
IkReal x1438=((r00)*(sj0));
IkReal x1439=((IkReal(1.00000000000000))*(cj2));
IkReal x1440=((cj0)*(r01)*(sj1));
IkReal x1441=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj1)*(x1438)*(x1439)))+(((sj1)*(x1436)))+(((cj2)*(x1440)))+(((sj2)*(x1441)))+(((IkReal(-1.00000000000000))*(cj1)*(x1437)*(x1438)))+(((cj3)*(x1435)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1439))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1437)*(x1440)))+(((sj3)*(x1435)))+(((cj2)*(r02)*(sj1)))+(((cj2)*(x1441)))+(((sj1)*(sj2)*(x1438)))+(((IkReal(-1.00000000000000))*(cj1)*(x1438)*(x1439)))+(((cj1)*(x1436))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1442=((IkReal(1.00000000000000))*(sj2));
IkReal x1443=((cj0)*(r01));
IkReal x1444=((cj2)*(sj1));
IkReal x1445=((r00)*(sj0));
if( IKabs(((((r01)*(sj0)))+(((cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x1443)*(x1444)))+(((x1444)*(x1445)))+(((IkReal(-1.00000000000000))*(cj1)*(x1442)*(x1443)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1442)))+(((cj1)*(cj2)*(r02)))+(((cj1)*(sj2)*(x1445))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r01)*(sj0)))+(((cj0)*(r00)))))+IKsqr(((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x1443)*(x1444)))+(((x1444)*(x1445)))+(((IkReal(-1.00000000000000))*(cj1)*(x1442)*(x1443)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1442)))+(((cj1)*(cj2)*(r02)))+(((cj1)*(sj2)*(x1445)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((r01)*(sj0)))+(((cj0)*(r00)))), ((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x1443)*(x1444)))+(((x1444)*(x1445)))+(((IkReal(-1.00000000000000))*(cj1)*(x1442)*(x1443)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1442)))+(((cj1)*(cj2)*(r02)))+(((cj1)*(sj2)*(x1445)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1446=IKcos(j5);
IkReal x1447=((r02)*(sj2));
IkReal x1448=((IkReal(1.00000000000000))*(sj2));
IkReal x1449=((r00)*(sj0));
IkReal x1450=((IkReal(1.00000000000000))*(cj2));
IkReal x1451=((cj0)*(r01)*(sj1));
IkReal x1452=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1450)))+(((sj2)*(x1452)))+(((sj1)*(x1447)))+(((IkReal(-1.00000000000000))*(sj1)*(x1449)*(x1450)))+(((cj3)*(x1446)))+(((IkReal(-1.00000000000000))*(cj1)*(x1448)*(x1449)))+(((cj2)*(x1451))));
evalcond[2]=((((cj1)*(x1447)))+(((IkReal(-1.00000000000000))*(x1448)*(x1451)))+(((sj1)*(sj2)*(x1449)))+(((cj2)*(r02)*(sj1)))+(((sj3)*(x1446)))+(((cj2)*(x1452)))+(((IkReal(-1.00000000000000))*(cj1)*(x1449)*(x1450))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1453=((cj1)*(sj2));
IkReal x1454=((px)*(sj0));
IkReal x1455=((sj1)*(sj2));
IkReal x1456=((cj0)*(py));
IkReal x1457=((cj2)*(pz));
IkReal x1458=((IkReal(1.00000000000000))*(cj1));
IkReal x1459=((cj2)*(x1456));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.000790000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((IkReal(-0.261090000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((cj1)*(x1459)))+(((x1454)*(x1455)))+(((IkReal(-1.00000000000000))*(cj2)*(x1454)*(x1458)))+(((pz)*(x1453)))+(((IkReal(-1.00000000000000))*(x1455)*(x1456)))+(((sj1)*(x1457)))+(((IkReal(0.0513300000000000))*(sj3)))+(((IkReal(0.0576700000000000))*(cj3)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[3]=((IkReal(0.00750000000000000))+(((IkReal(-1.00000000000000))*(x1457)*(x1458)))+(((IkReal(-0.0576700000000000))*(sj3)))+(((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x1454)))+(((pz)*(x1455)))+(((IkReal(0.0513300000000000))*(cj3)))+(((IkReal(0.521670000000000))*(cj2)))+(((sj1)*(x1459)))+(((x1453)*(x1456)))+(((IkReal(-1.00000000000000))*(x1453)*(x1454)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1460=((sj1)*(sj2));
IkReal x1461=((cj0)*(r01));
IkReal x1462=((r00)*(sj0));
IkReal x1463=((IkReal(1.00000000000000))*(cj1));
if( IKabs(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1463)))+(((IkReal(-1.00000000000000))*(cj2)*(x1461)*(x1463)))+(((IkReal(-1.00000000000000))*(x1460)*(x1462)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((x1460)*(x1461)))+(((cj1)*(cj2)*(x1462))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))))+IKsqr(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1463)))+(((IkReal(-1.00000000000000))*(cj2)*(x1461)*(x1463)))+(((IkReal(-1.00000000000000))*(x1460)*(x1462)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((x1460)*(x1461)))+(((cj1)*(cj2)*(x1462)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))), ((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1463)))+(((IkReal(-1.00000000000000))*(cj2)*(x1461)*(x1463)))+(((IkReal(-1.00000000000000))*(x1460)*(x1462)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((x1460)*(x1461)))+(((cj1)*(cj2)*(x1462)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1464=IKcos(j5);
IkReal x1465=((r02)*(sj2));
IkReal x1466=((IkReal(1.00000000000000))*(sj2));
IkReal x1467=((r00)*(sj0));
IkReal x1468=((IkReal(1.00000000000000))*(cj2));
IkReal x1469=((cj0)*(r01)*(sj1));
IkReal x1470=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(IKsin(j5))+(((cj0)*(r00))));
evalcond[1]=((((cj2)*(x1469)))+(((IkReal(-1.00000000000000))*(sj1)*(x1467)*(x1468)))+(((cj3)*(x1464)))+(((IkReal(-1.00000000000000))*(cj1)*(x1466)*(x1467)))+(((sj2)*(x1470)))+(((sj1)*(x1465)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1468))));
evalcond[2]=((((sj3)*(x1464)))+(((IkReal(-1.00000000000000))*(cj1)*(x1467)*(x1468)))+(((IkReal(-1.00000000000000))*(x1466)*(x1469)))+(((cj2)*(x1470)))+(((cj1)*(x1465)))+(((cj2)*(r02)*(sj1)))+(((sj1)*(sj2)*(x1467))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1471=((IkReal(1.00000000000000))*(sj2));
IkReal x1472=((cj0)*(r01));
IkReal x1473=((cj2)*(sj1));
IkReal x1474=((r00)*(sj0));
if( IKabs(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((x1473)*(x1474)))+(((IkReal(-1.00000000000000))*(cj1)*(x1471)*(x1472)))+(((cj1)*(sj2)*(x1474)))+(((cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1471)))+(((IkReal(-1.00000000000000))*(x1472)*(x1473))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))))+IKsqr(((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((x1473)*(x1474)))+(((IkReal(-1.00000000000000))*(cj1)*(x1471)*(x1472)))+(((cj1)*(sj2)*(x1474)))+(((cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1471)))+(((IkReal(-1.00000000000000))*(x1472)*(x1473)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))), ((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((x1473)*(x1474)))+(((IkReal(-1.00000000000000))*(cj1)*(x1471)*(x1472)))+(((cj1)*(sj2)*(x1474)))+(((cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1471)))+(((IkReal(-1.00000000000000))*(x1472)*(x1473)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1475=IKcos(j5);
IkReal x1476=((r02)*(sj2));
IkReal x1477=((IkReal(1.00000000000000))*(sj2));
IkReal x1478=((r00)*(sj0));
IkReal x1479=((IkReal(1.00000000000000))*(cj2));
IkReal x1480=((cj0)*(r01)*(sj1));
IkReal x1481=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(IKsin(j5))+(((cj0)*(r00))));
evalcond[1]=((((sj2)*(x1481)))+(((cj2)*(x1480)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1479)))+(((sj1)*(x1476)))+(((cj3)*(x1475)))+(((IkReal(-1.00000000000000))*(cj1)*(x1477)*(x1478)))+(((IkReal(-1.00000000000000))*(sj1)*(x1478)*(x1479))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj1)*(x1478)*(x1479)))+(((cj2)*(x1481)))+(((cj1)*(x1476)))+(((sj1)*(sj2)*(x1478)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1477)*(x1480)))+(((sj3)*(x1475))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1482=((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30);
IkReal x1483=((cj0)*(r00));
IkReal x1484=((r00)*(sj0));
IkReal x1485=((r01)*(sj0));
IkReal x1486=((cj4)*(r02));
IkReal x1487=((cj1)*(cj4)*(sj2));
IkReal x1488=((IkReal(1.00000000000000))*(sj3)*(sj4));
IkReal x1489=((IkReal(1.00000000000000))*(cj0)*(r01));
IkReal x1490=((cj2)*(cj4)*(sj1));
if( IKabs(((x1482)*(((x1483)+(x1485))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x1482)*(((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x1487)*(x1489)))+(((IkReal(-1.00000000000000))*(x1485)*(x1488)))+(((cj1)*(cj2)*(x1486)))+(((x1484)*(x1490)))+(((x1484)*(x1487)))+(((IkReal(-1.00000000000000))*(x1483)*(x1488)))+(((IkReal(-1.00000000000000))*(sj1)*(sj2)*(x1486)))+(((IkReal(-1.00000000000000))*(x1489)*(x1490))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x1482)*(((x1483)+(x1485)))))+IKsqr(((x1482)*(((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x1487)*(x1489)))+(((IkReal(-1.00000000000000))*(x1485)*(x1488)))+(((cj1)*(cj2)*(x1486)))+(((x1484)*(x1490)))+(((x1484)*(x1487)))+(((IkReal(-1.00000000000000))*(x1483)*(x1488)))+(((IkReal(-1.00000000000000))*(sj1)*(sj2)*(x1486)))+(((IkReal(-1.00000000000000))*(x1489)*(x1490)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((x1482)*(((x1483)+(x1485)))), ((x1482)*(((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x1487)*(x1489)))+(((IkReal(-1.00000000000000))*(x1485)*(x1488)))+(((cj1)*(cj2)*(x1486)))+(((x1484)*(x1490)))+(((x1484)*(x1487)))+(((IkReal(-1.00000000000000))*(x1483)*(x1488)))+(((IkReal(-1.00000000000000))*(sj1)*(sj2)*(x1486)))+(((IkReal(-1.00000000000000))*(x1489)*(x1490)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1491=IKsin(j5);
IkReal x1492=IKcos(j5);
IkReal x1493=((r02)*(sj2));
IkReal x1494=((IkReal(1.00000000000000))*(sj2));
IkReal x1495=((r00)*(sj0));
IkReal x1496=((IkReal(1.00000000000000))*(cj2));
IkReal x1497=((IkReal(1.00000000000000))*(x1491));
IkReal x1498=((cj0)*(r01)*(sj1));
IkReal x1499=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x1497)))+(((cj0)*(r00))));
evalcond[1]=((((cj3)*(x1492)))+(((IkReal(-1.00000000000000))*(sj1)*(x1495)*(x1496)))+(((sj2)*(x1499)))+(((cj2)*(x1498)))+(((sj1)*(x1493)))+(((sj3)*(sj4)*(x1491)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1496)))+(((IkReal(-1.00000000000000))*(cj1)*(x1494)*(x1495))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj1)*(x1495)*(x1496)))+(((sj3)*(x1492)))+(((cj2)*(x1499)))+(((IkReal(-1.00000000000000))*(x1494)*(x1498)))+(((cj1)*(x1493)))+(((IkReal(-1.00000000000000))*(cj3)*(sj4)*(x1497)))+(((cj2)*(r02)*(sj1)))+(((sj1)*(sj2)*(x1495))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1500=((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30);
IkReal x1501=((cj0)*(r00));
IkReal x1502=((r01)*(sj0));
IkReal x1503=((cj3)*(sj4));
IkReal x1504=((cj0)*(r01));
IkReal x1505=((cj4)*(sj2));
IkReal x1506=((r00)*(sj0));
IkReal x1507=((IkReal(1.00000000000000))*(cj2)*(cj4));
if( IKabs(((x1500)*(((x1502)+(x1501))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x1500)*(((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1505)))+(((IkReal(-1.00000000000000))*(sj1)*(x1505)*(x1506)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1507)))+(((x1501)*(x1503)))+(((cj1)*(cj2)*(cj4)*(x1506)))+(((IkReal(-1.00000000000000))*(cj1)*(x1504)*(x1507)))+(((x1502)*(x1503)))+(((sj1)*(x1504)*(x1505))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x1500)*(((x1502)+(x1501)))))+IKsqr(((x1500)*(((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1505)))+(((IkReal(-1.00000000000000))*(sj1)*(x1505)*(x1506)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1507)))+(((x1501)*(x1503)))+(((cj1)*(cj2)*(cj4)*(x1506)))+(((IkReal(-1.00000000000000))*(cj1)*(x1504)*(x1507)))+(((x1502)*(x1503)))+(((sj1)*(x1504)*(x1505)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((x1500)*(((x1502)+(x1501)))), ((x1500)*(((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1505)))+(((IkReal(-1.00000000000000))*(sj1)*(x1505)*(x1506)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1507)))+(((x1501)*(x1503)))+(((cj1)*(cj2)*(cj4)*(x1506)))+(((IkReal(-1.00000000000000))*(cj1)*(x1504)*(x1507)))+(((x1502)*(x1503)))+(((sj1)*(x1504)*(x1505)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1508=IKsin(j5);
IkReal x1509=IKcos(j5);
IkReal x1510=((r02)*(sj2));
IkReal x1511=((IkReal(1.00000000000000))*(sj2));
IkReal x1512=((r00)*(sj0));
IkReal x1513=((IkReal(1.00000000000000))*(cj2));
IkReal x1514=((IkReal(1.00000000000000))*(x1508));
IkReal x1515=((cj0)*(r01)*(sj1));
IkReal x1516=((cj0)*(cj1)*(r01));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj4)*(x1514)))+(((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[1]=((((sj2)*(x1516)))+(((sj3)*(sj4)*(x1508)))+(((cj2)*(x1515)))+(((cj3)*(x1509)))+(((IkReal(-1.00000000000000))*(sj1)*(x1512)*(x1513)))+(((sj1)*(x1510)))+(((IkReal(-1.00000000000000))*(cj1)*(x1511)*(x1512)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1513))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj3)*(sj4)*(x1514)))+(((sj3)*(x1509)))+(((cj2)*(x1516)))+(((cj1)*(x1510)))+(((IkReal(-1.00000000000000))*(cj1)*(x1512)*(x1513)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1511)*(x1515)))+(((sj1)*(sj2)*(x1512))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1517=(cj3)*(cj3);
IkReal x1518=(sj3)*(sj3);
IkReal x1519=((cj1)*(sj3));
IkReal x1520=((cj0)*(r01));
IkReal x1521=((r02)*(sj2));
IkReal x1522=((cj2)*(sj1));
IkReal x1523=((cj1)*(cj3));
IkReal x1524=((cj2)*(r02));
IkReal x1525=((cj3)*(sj1));
IkReal x1526=((IkReal(1.00000000000000))*(sj3));
IkReal x1527=((r00)*(sj0));
IkReal x1528=((IkReal(1.00000000000000))*(sj1)*(sj2));
IkReal x1529=((IkReal(1.00000000000000))*(x1527));
if( IKabs(((((IKabs(((((sj4)*(x1518)))+(((sj4)*(x1517))))) != 0)?((IkReal)1/(((((sj4)*(x1518)))+(((sj4)*(x1517)))))):(IkReal)1.0e30))*(((((sj2)*(x1525)*(x1527)))+(((IkReal(-1.00000000000000))*(sj2)*(x1520)*(x1525)))+(((IkReal(-1.00000000000000))*(sj1)*(x1521)*(x1526)))+(((x1519)*(x1524)))+(((cj2)*(x1520)*(x1523)))+(((sj2)*(x1519)*(x1527)))+(((IkReal(-1.00000000000000))*(cj2)*(x1523)*(x1529)))+(((x1521)*(x1523)))+(((cj3)*(r02)*(x1522)))+(((IkReal(-1.00000000000000))*(sj2)*(x1519)*(x1520)))+(((IkReal(-1.00000000000000))*(x1520)*(x1522)*(x1526)))+(((sj3)*(x1522)*(x1527))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(((((IkReal(-1.00000000000000))*(x1517)))+(((IkReal(-1.00000000000000))*(x1518))))) != 0)?((IkReal)1/(((((IkReal(-1.00000000000000))*(x1517)))+(((IkReal(-1.00000000000000))*(x1518)))))):(IkReal)1.0e30))*(((((sj1)*(sj2)*(sj3)*(x1527)))+(((IkReal(-1.00000000000000))*(cj2)*(x1519)*(x1529)))+(((x1519)*(x1521)))+(((r02)*(sj3)*(x1522)))+(((cj2)*(x1519)*(x1520)))+(((IkReal(-1.00000000000000))*(sj2)*(x1523)*(x1529)))+(((IkReal(-1.00000000000000))*(sj1)*(sj2)*(x1520)*(x1526)))+(((sj2)*(x1520)*(x1523)))+(((x1521)*(x1525)))+(((cj3)*(x1520)*(x1522)))+(((IkReal(-1.00000000000000))*(cj3)*(x1522)*(x1529)))+(((IkReal(-1.00000000000000))*(x1523)*(x1524))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(((((sj4)*(x1518)))+(((sj4)*(x1517))))) != 0)?((IkReal)1/(((((sj4)*(x1518)))+(((sj4)*(x1517)))))):(IkReal)1.0e30))*(((((sj2)*(x1525)*(x1527)))+(((IkReal(-1.00000000000000))*(sj2)*(x1520)*(x1525)))+(((IkReal(-1.00000000000000))*(sj1)*(x1521)*(x1526)))+(((x1519)*(x1524)))+(((cj2)*(x1520)*(x1523)))+(((sj2)*(x1519)*(x1527)))+(((IkReal(-1.00000000000000))*(cj2)*(x1523)*(x1529)))+(((x1521)*(x1523)))+(((cj3)*(r02)*(x1522)))+(((IkReal(-1.00000000000000))*(sj2)*(x1519)*(x1520)))+(((IkReal(-1.00000000000000))*(x1520)*(x1522)*(x1526)))+(((sj3)*(x1522)*(x1527)))))))+IKsqr(((((IKabs(((((IkReal(-1.00000000000000))*(x1517)))+(((IkReal(-1.00000000000000))*(x1518))))) != 0)?((IkReal)1/(((((IkReal(-1.00000000000000))*(x1517)))+(((IkReal(-1.00000000000000))*(x1518)))))):(IkReal)1.0e30))*(((((sj1)*(sj2)*(sj3)*(x1527)))+(((IkReal(-1.00000000000000))*(cj2)*(x1519)*(x1529)))+(((x1519)*(x1521)))+(((r02)*(sj3)*(x1522)))+(((cj2)*(x1519)*(x1520)))+(((IkReal(-1.00000000000000))*(sj2)*(x1523)*(x1529)))+(((IkReal(-1.00000000000000))*(sj1)*(sj2)*(x1520)*(x1526)))+(((sj2)*(x1520)*(x1523)))+(((x1521)*(x1525)))+(((cj3)*(x1520)*(x1522)))+(((IkReal(-1.00000000000000))*(cj3)*(x1522)*(x1529)))+(((IkReal(-1.00000000000000))*(x1523)*(x1524)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(((((sj4)*(x1518)))+(((sj4)*(x1517))))) != 0)?((IkReal)1/(((((sj4)*(x1518)))+(((sj4)*(x1517)))))):(IkReal)1.0e30))*(((((sj2)*(x1525)*(x1527)))+(((IkReal(-1.00000000000000))*(sj2)*(x1520)*(x1525)))+(((IkReal(-1.00000000000000))*(sj1)*(x1521)*(x1526)))+(((x1519)*(x1524)))+(((cj2)*(x1520)*(x1523)))+(((sj2)*(x1519)*(x1527)))+(((IkReal(-1.00000000000000))*(cj2)*(x1523)*(x1529)))+(((x1521)*(x1523)))+(((cj3)*(r02)*(x1522)))+(((IkReal(-1.00000000000000))*(sj2)*(x1519)*(x1520)))+(((IkReal(-1.00000000000000))*(x1520)*(x1522)*(x1526)))+(((sj3)*(x1522)*(x1527)))))), ((((IKabs(((((IkReal(-1.00000000000000))*(x1517)))+(((IkReal(-1.00000000000000))*(x1518))))) != 0)?((IkReal)1/(((((IkReal(-1.00000000000000))*(x1517)))+(((IkReal(-1.00000000000000))*(x1518)))))):(IkReal)1.0e30))*(((((sj1)*(sj2)*(sj3)*(x1527)))+(((IkReal(-1.00000000000000))*(cj2)*(x1519)*(x1529)))+(((x1519)*(x1521)))+(((r02)*(sj3)*(x1522)))+(((cj2)*(x1519)*(x1520)))+(((IkReal(-1.00000000000000))*(sj2)*(x1523)*(x1529)))+(((IkReal(-1.00000000000000))*(sj1)*(sj2)*(x1520)*(x1526)))+(((sj2)*(x1520)*(x1523)))+(((x1521)*(x1525)))+(((cj3)*(x1520)*(x1522)))+(((IkReal(-1.00000000000000))*(cj3)*(x1522)*(x1529)))+(((IkReal(-1.00000000000000))*(x1523)*(x1524)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1530=IKsin(j5);
IkReal x1531=IKcos(j5);
IkReal x1532=((r02)*(sj2));
IkReal x1533=((IkReal(1.00000000000000))*(sj2));
IkReal x1534=((r00)*(sj0));
IkReal x1535=((IkReal(1.00000000000000))*(cj2));
IkReal x1536=((IkReal(1.00000000000000))*(x1530));
IkReal x1537=((cj0)*(r01)*(sj1));
IkReal x1538=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x1536)))+(((cj0)*(r00))));
evalcond[1]=((((sj2)*(x1538)))+(((sj3)*(sj4)*(x1530)))+(((cj2)*(x1537)))+(((sj1)*(x1532)))+(((IkReal(-1.00000000000000))*(cj1)*(x1533)*(x1534)))+(((cj3)*(x1531)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1535)))+(((IkReal(-1.00000000000000))*(sj1)*(x1534)*(x1535))));
evalcond[2]=((((sj1)*(sj2)*(x1534)))+(((IkReal(-1.00000000000000))*(cj3)*(sj4)*(x1536)))+(((sj3)*(x1531)))+(((IkReal(-1.00000000000000))*(cj1)*(x1534)*(x1535)))+(((cj1)*(x1532)))+(((cj2)*(x1538)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1533)*(x1537))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1539=((px)*(sj0));
IkReal x1540=((cj0)*(py));
IkReal x1541=((IkReal(954450000.000000))*(sj2));
IkReal x1542=((cj1)*(pz));
IkReal x1543=((IkReal(3950000.00000000))*(sj2));
IkReal x1544=((IkReal(954450000.000000))*(cj2));
IkReal x1545=((pz)*(sj1));
IkReal x1546=((IkReal(3950000.00000000))*(cj1)*(cj2));
IkReal x1547=((cj0)*(cj3)*(px));
IkReal x1548=((cj3)*(py)*(sj0));
if( IKabs(((gconst0)*(((IkReal(1031305.50000000))+(((IkReal(-202753.500000000))*(sj3)))+(((x1539)*(x1546)))+(((IkReal(526219.000000000))*(cj3)))+(((IkReal(-1.00000000000000))*(x1540)*(x1546)))+(((sj1)*(x1540)*(x1543)))+(((IkReal(-954450000.000000))*(x1547)))+(((IkReal(-954450000.000000))*(x1548)))+(((IkReal(2060596.50000000))*(sj2)))+(((IkReal(-1.00000000000000))*(x1542)*(x1543)))+(((IkReal(-3950000.00000000))*(cj2)*(x1545)))+(((IkReal(-38789.0000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(sj1)*(x1539)*(x1543))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst0)*(((IkReal(-249197350.500000))+(((x1544)*(x1545)))+(((IkReal(-127151829.000000))*(cj3)))+(((x1541)*(x1542)))+(((IkReal(48991918.5000000))*(sj3)))+(((cj1)*(x1540)*(x1544)))+(((IkReal(9372699.00000000))*(cj2)))+(((IkReal(-1.00000000000000))*(sj1)*(x1540)*(x1541)))+(((IkReal(-3950000.00000000))*(x1548)))+(((IkReal(-3950000.00000000))*(x1547)))+(((IkReal(-1.00000000000000))*(cj1)*(x1539)*(x1544)))+(((sj1)*(x1539)*(x1541)))+(((IkReal(-497907931.500000))*(sj2))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst0)*(((IkReal(1031305.50000000))+(((IkReal(-202753.500000000))*(sj3)))+(((x1539)*(x1546)))+(((IkReal(526219.000000000))*(cj3)))+(((IkReal(-1.00000000000000))*(x1540)*(x1546)))+(((sj1)*(x1540)*(x1543)))+(((IkReal(-954450000.000000))*(x1547)))+(((IkReal(-954450000.000000))*(x1548)))+(((IkReal(2060596.50000000))*(sj2)))+(((IkReal(-1.00000000000000))*(x1542)*(x1543)))+(((IkReal(-3950000.00000000))*(cj2)*(x1545)))+(((IkReal(-38789.0000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(sj1)*(x1539)*(x1543)))))), ((gconst0)*(((IkReal(-249197350.500000))+(((x1544)*(x1545)))+(((IkReal(-127151829.000000))*(cj3)))+(((x1541)*(x1542)))+(((IkReal(48991918.5000000))*(sj3)))+(((cj1)*(x1540)*(x1544)))+(((IkReal(9372699.00000000))*(cj2)))+(((IkReal(-1.00000000000000))*(sj1)*(x1540)*(x1541)))+(((IkReal(-3950000.00000000))*(x1548)))+(((IkReal(-3950000.00000000))*(x1547)))+(((IkReal(-1.00000000000000))*(cj1)*(x1539)*(x1544)))+(((sj1)*(x1539)*(x1541)))+(((IkReal(-497907931.500000))*(sj2)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[3];
IkReal x1549=IKsin(j4);
IkReal x1550=IKcos(j4);
IkReal x1551=((IkReal(1.00000000000000))*(cj1));
IkReal x1552=((pz)*(sj1));
IkReal x1553=((IkReal(1.00000000000000))*(sj1));
IkReal x1554=((cj0)*(cj2)*(py));
IkReal x1555=((px)*(sj0)*(sj2));
IkReal x1556=((IkReal(0.190890000000000))*(x1550));
IkReal x1557=((IkReal(0.000790000000000000))*(x1549));
IkReal x1558=((cj0)*(py)*(sj2));
IkReal x1559=((cj2)*(px)*(sj0));
evalcond[0]=((((IkReal(0.000790000000000000))*(x1550)))+(((cj0)*(px)))+(((py)*(sj0)))+(((IkReal(0.190890000000000))*(x1549))));
evalcond[1]=((IkReal(-0.261090000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((cj3)*(x1557)))+(((cj2)*(x1552)))+(((cj1)*(x1554)))+(((IkReal(-1.00000000000000))*(x1553)*(x1558)))+(((cj1)*(pz)*(sj2)))+(((IkReal(-0.133220000000000))*(cj3)))+(((sj1)*(x1555)))+(((IkReal(-1.00000000000000))*(cj3)*(x1556)))+(((IkReal(-1.00000000000000))*(x1551)*(x1559)))+(((IkReal(0.0513300000000000))*(sj3)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[2]=((IkReal(0.00750000000000000))+(((IkReal(-1.00000000000000))*(cj2)*(pz)*(x1551)))+(((cj1)*(x1558)))+(((IkReal(0.0513300000000000))*(cj3)))+(((IkReal(-1.00000000000000))*(x1553)*(x1559)))+(((IkReal(0.133220000000000))*(sj3)))+(((IkReal(0.521670000000000))*(cj2)))+(((sj1)*(x1554)))+(((sj3)*(x1556)))+(((IkReal(-1.00000000000000))*(x1551)*(x1555)))+(((IkReal(-1.00000000000000))*(sj3)*(x1557)))+(((sj2)*(x1552)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[2];
IkReal x1560=(cj3)*(cj3);
IkReal x1561=(sj3)*(sj3);
dummyeval[0]=((((sj4)*(x1561)))+(((sj4)*(x1560))));
dummyeval[1]=((((IkReal(-1.00000000000000))*(x1560)))+(((IkReal(-1.00000000000000))*(x1561))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=cj4;
dummyeval[1]=sj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=cj4;
dummyeval[1]=cj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x1562=((cj1)*(sj2));
IkReal x1563=((px)*(sj0));
IkReal x1564=((sj1)*(sj2));
IkReal x1565=((cj0)*(py));
IkReal x1566=((cj2)*(pz));
IkReal x1567=((IkReal(1.00000000000000))*(cj1));
IkReal x1568=((cj2)*(x1565));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(0.190890000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.261090000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((cj1)*(x1568)))+(((sj1)*(x1566)))+(((IkReal(-1.00000000000000))*(cj2)*(x1563)*(x1567)))+(((IkReal(-1.00000000000000))*(x1564)*(x1565)))+(((pz)*(x1562)))+(((x1563)*(x1564)))+(((IkReal(0.0513300000000000))*(sj3)))+(((IkReal(-0.521670000000000))*(sj2)))+(((IkReal(-0.132430000000000))*(cj3))));
evalcond[4]=((IkReal(0.00750000000000000))+(((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x1563)))+(((IkReal(-1.00000000000000))*(x1566)*(x1567)))+(((IkReal(0.0513300000000000))*(cj3)))+(((sj1)*(x1568)))+(((IkReal(0.521670000000000))*(cj2)))+(((pz)*(x1564)))+(((x1562)*(x1565)))+(((IkReal(-1.00000000000000))*(x1562)*(x1563)))+(((IkReal(0.132430000000000))*(sj3)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst2;
gconst2=IKsign((((sj3)*(sj3))+((cj3)*(cj3))));
dummyeval[0]=(((sj3)*(sj3))+((cj3)*(cj3)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1569=((IkReal(1.00000000000000))*(cj3));
IkReal x1570=((cj1)*(cj2));
IkReal x1571=((r00)*(sj0));
IkReal x1572=((r02)*(sj3));
IkReal x1573=((cj3)*(r02));
IkReal x1574=((cj2)*(sj1));
IkReal x1575=((IkReal(1.00000000000000))*(sj3));
IkReal x1576=((cj0)*(r01));
IkReal x1577=((cj1)*(sj2));
IkReal x1578=((sj1)*(sj2));
IkReal x1579=((sj1)*(x1576));
if( IKabs(((gconst2)*(((((x1570)*(x1572)))+(((sj3)*(x1571)*(x1574)))+(((sj3)*(x1571)*(x1577)))+(((x1573)*(x1577)))+(((x1573)*(x1574)))+(((IkReal(-1.00000000000000))*(x1569)*(x1576)*(x1578)))+(((IkReal(-1.00000000000000))*(x1572)*(x1578)))+(((cj3)*(x1571)*(x1578)))+(((IkReal(-1.00000000000000))*(x1575)*(x1576)*(x1577)))+(((IkReal(-1.00000000000000))*(x1574)*(x1575)*(x1576)))+(((cj3)*(x1570)*(x1576)))+(((IkReal(-1.00000000000000))*(x1569)*(x1570)*(x1571))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst2)*(((((sj3)*(x1570)*(x1571)))+(((x1570)*(x1573)))+(((IkReal(-1.00000000000000))*(x1569)*(x1574)*(x1576)))+(((IkReal(-1.00000000000000))*(x1569)*(x1576)*(x1577)))+(((IkReal(-1.00000000000000))*(r02)*(x1569)*(x1578)))+(((IkReal(-1.00000000000000))*(x1572)*(x1574)))+(((IkReal(-1.00000000000000))*(x1572)*(x1577)))+(((cj3)*(x1571)*(x1577)))+(((cj3)*(x1571)*(x1574)))+(((sj3)*(x1576)*(x1578)))+(((IkReal(-1.00000000000000))*(x1570)*(x1575)*(x1576)))+(((IkReal(-1.00000000000000))*(x1571)*(x1575)*(x1578))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst2)*(((((x1570)*(x1572)))+(((sj3)*(x1571)*(x1574)))+(((sj3)*(x1571)*(x1577)))+(((x1573)*(x1577)))+(((x1573)*(x1574)))+(((IkReal(-1.00000000000000))*(x1569)*(x1576)*(x1578)))+(((IkReal(-1.00000000000000))*(x1572)*(x1578)))+(((cj3)*(x1571)*(x1578)))+(((IkReal(-1.00000000000000))*(x1575)*(x1576)*(x1577)))+(((IkReal(-1.00000000000000))*(x1574)*(x1575)*(x1576)))+(((cj3)*(x1570)*(x1576)))+(((IkReal(-1.00000000000000))*(x1569)*(x1570)*(x1571)))))), ((gconst2)*(((((sj3)*(x1570)*(x1571)))+(((x1570)*(x1573)))+(((IkReal(-1.00000000000000))*(x1569)*(x1574)*(x1576)))+(((IkReal(-1.00000000000000))*(x1569)*(x1576)*(x1577)))+(((IkReal(-1.00000000000000))*(r02)*(x1569)*(x1578)))+(((IkReal(-1.00000000000000))*(x1572)*(x1574)))+(((IkReal(-1.00000000000000))*(x1572)*(x1577)))+(((cj3)*(x1571)*(x1577)))+(((cj3)*(x1571)*(x1574)))+(((sj3)*(x1576)*(x1578)))+(((IkReal(-1.00000000000000))*(x1570)*(x1575)*(x1576)))+(((IkReal(-1.00000000000000))*(x1571)*(x1575)*(x1578)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1580=IKcos(j5);
IkReal x1581=IKsin(j5);
IkReal x1582=((r02)*(sj2));
IkReal x1583=((IkReal(1.00000000000000))*(sj2));
IkReal x1584=((r00)*(sj0));
IkReal x1585=((cj1)*(cj2));
IkReal x1586=((cj0)*(r01));
IkReal x1587=((sj1)*(x1586));
IkReal x1588=((IkReal(1.00000000000000))*(cj2)*(x1584));
evalcond[0]=((((sj3)*(x1581)))+(((cj3)*(x1580)))+(((sj1)*(x1582)))+(((cj2)*(x1587)))+(((IkReal(-1.00000000000000))*(r02)*(x1585)))+(((cj1)*(sj2)*(x1586)))+(((IkReal(-1.00000000000000))*(cj1)*(x1583)*(x1584)))+(((IkReal(-1.00000000000000))*(sj1)*(x1588))));
evalcond[1]=((((sj3)*(x1580)))+(((cj1)*(x1582)))+(((IkReal(-1.00000000000000))*(x1584)*(x1585)))+(((sj1)*(sj2)*(x1584)))+(((IkReal(-1.00000000000000))*(cj3)*(x1581)))+(((cj2)*(r02)*(sj1)))+(((x1585)*(x1586)))+(((IkReal(-1.00000000000000))*(x1583)*(x1587))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1589=((cj1)*(sj2));
IkReal x1590=((px)*(sj0));
IkReal x1591=((sj1)*(sj2));
IkReal x1592=((cj0)*(py));
IkReal x1593=((cj2)*(pz));
IkReal x1594=((IkReal(1.00000000000000))*(cj1));
IkReal x1595=((cj2)*(x1592));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(-0.190890000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.261090000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((cj1)*(x1595)))+(((x1590)*(x1591)))+(((IkReal(-0.134010000000000))*(cj3)))+(((pz)*(x1589)))+(((sj1)*(x1593)))+(((IkReal(-1.00000000000000))*(cj2)*(x1590)*(x1594)))+(((IkReal(-1.00000000000000))*(x1591)*(x1592)))+(((IkReal(0.0513300000000000))*(sj3)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(0.00750000000000000))+(((IkReal(-1.00000000000000))*(x1589)*(x1590)))+(((IkReal(-1.00000000000000))*(x1593)*(x1594)))+(((x1589)*(x1592)))+(((IkReal(0.0513300000000000))*(cj3)))+(((IkReal(0.521670000000000))*(cj2)))+(((sj1)*(x1595)))+(((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x1590)))+(((pz)*(x1591)))+(((IkReal(0.134010000000000))*(sj3)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst3;
gconst3=IKsign((((sj3)*(sj3))+((cj3)*(cj3))));
dummyeval[0]=(((sj3)*(sj3))+((cj3)*(cj3)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1596=((r00)*(sj0));
IkReal x1597=((sj1)*(sj2));
IkReal x1598=((r02)*(sj3));
IkReal x1599=((cj0)*(r01));
IkReal x1600=((cj3)*(r02));
IkReal x1601=((IkReal(1.00000000000000))*(cj2));
IkReal x1602=((cj1)*(sj3));
IkReal x1603=((sj1)*(sj3));
IkReal x1604=((cj3)*(sj1));
IkReal x1605=((cj1)*(cj2)*(cj3));
IkReal x1606=((IkReal(1.00000000000000))*(cj1)*(sj2));
if( IKabs(((gconst3)*(((((IkReal(-1.00000000000000))*(sj2)*(x1596)*(x1602)))+(((sj2)*(x1599)*(x1602)))+(((IkReal(-1.00000000000000))*(cj1)*(x1598)*(x1601)))+(((IkReal(-1.00000000000000))*(cj1)*(cj3)*(x1599)*(x1601)))+(((IkReal(-1.00000000000000))*(x1600)*(x1606)))+(((cj2)*(x1599)*(x1603)))+(((IkReal(-1.00000000000000))*(cj3)*(x1596)*(x1597)))+(((x1596)*(x1605)))+(((x1597)*(x1598)))+(((cj3)*(x1597)*(x1599)))+(((IkReal(-1.00000000000000))*(x1596)*(x1601)*(x1603)))+(((IkReal(-1.00000000000000))*(sj1)*(x1600)*(x1601))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst3)*(((((cj1)*(cj3)*(sj2)*(x1596)))+(((cj1)*(cj2)*(x1600)))+(((IkReal(-1.00000000000000))*(cj3)*(x1599)*(x1606)))+(((IkReal(-1.00000000000000))*(sj1)*(x1598)*(x1601)))+(((cj2)*(x1596)*(x1602)))+(((cj2)*(x1596)*(x1604)))+(((sj3)*(x1597)*(x1599)))+(((IkReal(-1.00000000000000))*(x1599)*(x1601)*(x1602)))+(((IkReal(-1.00000000000000))*(x1599)*(x1601)*(x1604)))+(((IkReal(-1.00000000000000))*(sj3)*(x1596)*(x1597)))+(((IkReal(-1.00000000000000))*(x1597)*(x1600)))+(((IkReal(-1.00000000000000))*(x1598)*(x1606))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst3)*(((((IkReal(-1.00000000000000))*(sj2)*(x1596)*(x1602)))+(((sj2)*(x1599)*(x1602)))+(((IkReal(-1.00000000000000))*(cj1)*(x1598)*(x1601)))+(((IkReal(-1.00000000000000))*(cj1)*(cj3)*(x1599)*(x1601)))+(((IkReal(-1.00000000000000))*(x1600)*(x1606)))+(((cj2)*(x1599)*(x1603)))+(((IkReal(-1.00000000000000))*(cj3)*(x1596)*(x1597)))+(((x1596)*(x1605)))+(((x1597)*(x1598)))+(((cj3)*(x1597)*(x1599)))+(((IkReal(-1.00000000000000))*(x1596)*(x1601)*(x1603)))+(((IkReal(-1.00000000000000))*(sj1)*(x1600)*(x1601)))))), ((gconst3)*(((((cj1)*(cj3)*(sj2)*(x1596)))+(((cj1)*(cj2)*(x1600)))+(((IkReal(-1.00000000000000))*(cj3)*(x1599)*(x1606)))+(((IkReal(-1.00000000000000))*(sj1)*(x1598)*(x1601)))+(((cj2)*(x1596)*(x1602)))+(((cj2)*(x1596)*(x1604)))+(((sj3)*(x1597)*(x1599)))+(((IkReal(-1.00000000000000))*(x1599)*(x1601)*(x1602)))+(((IkReal(-1.00000000000000))*(x1599)*(x1601)*(x1604)))+(((IkReal(-1.00000000000000))*(sj3)*(x1596)*(x1597)))+(((IkReal(-1.00000000000000))*(x1597)*(x1600)))+(((IkReal(-1.00000000000000))*(x1598)*(x1606)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1607=IKsin(j5);
IkReal x1608=IKcos(j5);
IkReal x1609=((r02)*(sj2));
IkReal x1610=((IkReal(1.00000000000000))*(sj2));
IkReal x1611=((r00)*(sj0));
IkReal x1612=((IkReal(1.00000000000000))*(cj2));
IkReal x1613=((cj0)*(r01)*(sj1));
IkReal x1614=((cj0)*(cj1)*(r01));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1612)))+(((sj2)*(x1614)))+(((sj1)*(x1609)))+(((cj3)*(x1608)))+(((IkReal(-1.00000000000000))*(sj1)*(x1611)*(x1612)))+(((cj2)*(x1613)))+(((IkReal(-1.00000000000000))*(cj1)*(x1610)*(x1611)))+(((IkReal(-1.00000000000000))*(sj3)*(x1607))));
evalcond[1]=((((sj3)*(x1608)))+(((cj1)*(x1609)))+(((IkReal(-1.00000000000000))*(x1610)*(x1613)))+(((IkReal(-1.00000000000000))*(cj1)*(x1611)*(x1612)))+(((cj3)*(x1607)))+(((cj2)*(r02)*(sj1)))+(((cj2)*(x1614)))+(((sj1)*(sj2)*(x1611))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1615=((cj1)*(sj2));
IkReal x1616=((px)*(sj0));
IkReal x1617=((sj1)*(sj2));
IkReal x1618=((cj0)*(py));
IkReal x1619=((cj2)*(pz));
IkReal x1620=((IkReal(1.00000000000000))*(cj1));
IkReal x1621=((cj2)*(x1618));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(0.000790000000000000))*(cj4)))+(((cj0)*(px)))+(((py)*(sj0)))+(((IkReal(0.190890000000000))*(sj4))));
evalcond[2]=((IkReal(-0.209760000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((pz)*(x1615)))+(((IkReal(-1.00000000000000))*(x1617)*(x1618)))+(((sj1)*(x1619)))+(((IkReal(-1.00000000000000))*(cj2)*(x1616)*(x1620)))+(((x1616)*(x1617)))+(((IkReal(-0.521670000000000))*(sj2)))+(((cj1)*(x1621))));
evalcond[3]=((IkReal(0.140720000000000))+(((IkReal(-1.00000000000000))*(x1619)*(x1620)))+(((pz)*(x1617)))+(((sj1)*(x1621)))+(((IkReal(-1.00000000000000))*(x1615)*(x1616)))+(((IkReal(0.521670000000000))*(cj2)))+(((x1615)*(x1618)))+(((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x1616)))+(((IkReal(0.190890000000000))*(cj4)))+(((IkReal(-0.000790000000000000))*(sj4)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x1622=((IkReal(1.00000000000000))*(sj0));
IkReal x1623=((cj1)*(sj2));
IkReal x1624=((sj1)*(sj2));
IkReal x1625=((cj2)*(sj1));
IkReal x1626=((cj0)*(r01));
IkReal x1627=((cj0)*(py));
IkReal x1628=((cj2)*(x1627));
IkReal x1629=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.000790000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((r02)*(x1624)))+(((x1623)*(x1626)))+(((IkReal(-1.00000000000000))*(r00)*(x1622)*(x1625)))+(((IkReal(-1.00000000000000))*(r00)*(x1622)*(x1623)))+(((IkReal(-1.00000000000000))*(r02)*(x1629)))+(((x1625)*(x1626))));
evalcond[3]=((IkReal(-0.209760000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((pz)*(x1623)))+(((pz)*(x1625)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(px)*(x1622)))+(((IkReal(-1.00000000000000))*(x1624)*(x1627)))+(((px)*(sj0)*(x1624)))+(((IkReal(-0.521670000000000))*(sj2)))+(((cj1)*(x1628))));
evalcond[4]=((IkReal(0.331610000000000))+(((IkReal(-1.00000000000000))*(px)*(x1622)*(x1623)))+(((IkReal(-1.00000000000000))*(px)*(x1622)*(x1625)))+(((pz)*(x1624)))+(((x1623)*(x1627)))+(((IkReal(-1.00000000000000))*(pz)*(x1629)))+(((IkReal(0.521670000000000))*(cj2)))+(((x1625)*(x1627)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1630=((cj0)*(r01));
IkReal x1631=((sj1)*(sj2));
IkReal x1632=((IkReal(1.00000000000000))*(cj1));
IkReal x1633=((r00)*(sj0));
if( IKabs(((((r01)*(sj0)))+(((cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(cj2)*(x1630)*(x1632)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1632)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((x1630)*(x1631)))+(((IkReal(-1.00000000000000))*(x1631)*(x1633)))+(((cj1)*(cj2)*(x1633))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r01)*(sj0)))+(((cj0)*(r00)))))+IKsqr(((((IkReal(-1.00000000000000))*(cj2)*(x1630)*(x1632)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1632)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((x1630)*(x1631)))+(((IkReal(-1.00000000000000))*(x1631)*(x1633)))+(((cj1)*(cj2)*(x1633)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((r01)*(sj0)))+(((cj0)*(r00)))), ((((IkReal(-1.00000000000000))*(cj2)*(x1630)*(x1632)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1632)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((x1630)*(x1631)))+(((IkReal(-1.00000000000000))*(x1631)*(x1633)))+(((cj1)*(cj2)*(x1633)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1634=((sj1)*(sj2));
IkReal x1635=((cj0)*(r01));
IkReal x1636=((r00)*(sj0));
IkReal x1637=((cj1)*(cj2));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1634)*(x1635)))+(IKcos(j5))+(((IkReal(-1.00000000000000))*(x1636)*(x1637)))+(((cj2)*(r02)*(sj1)))+(((x1635)*(x1637)))+(((x1634)*(x1636)))+(((cj1)*(r02)*(sj2))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1638=((IkReal(1.00000000000000))*(sj0));
IkReal x1639=((cj1)*(sj2));
IkReal x1640=((sj1)*(sj2));
IkReal x1641=((cj2)*(sj1));
IkReal x1642=((cj0)*(r01));
IkReal x1643=((cj0)*(py));
IkReal x1644=((cj2)*(x1643));
IkReal x1645=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.000790000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r00)*(x1638)*(x1641)))+(((IkReal(-1.00000000000000))*(r00)*(x1638)*(x1639)))+(((r02)*(x1640)))+(((x1641)*(x1642)))+(((x1639)*(x1642)))+(((IkReal(-1.00000000000000))*(r02)*(x1645))));
evalcond[3]=((IkReal(-0.209760000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((pz)*(x1641)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(px)*(x1638)))+(((pz)*(x1639)))+(((px)*(sj0)*(x1640)))+(((cj1)*(x1644)))+(((IkReal(-0.521670000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(x1640)*(x1643))));
evalcond[4]=((IkReal(-0.0501700000000000))+(((pz)*(x1640)))+(((IkReal(-1.00000000000000))*(px)*(x1638)*(x1641)))+(((IkReal(-1.00000000000000))*(px)*(x1638)*(x1639)))+(((x1641)*(x1643)))+(((IkReal(0.521670000000000))*(cj2)))+(((x1639)*(x1643)))+(((IkReal(0.00982000000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(pz)*(x1645))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1646=((sj1)*(sj2));
IkReal x1647=((cj0)*(r01));
IkReal x1648=((r00)*(sj0));
IkReal x1649=((IkReal(1.00000000000000))*(cj1));
if( IKabs(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1649)))+(((IkReal(-1.00000000000000))*(cj2)*(x1647)*(x1649)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((x1646)*(x1647)))+(((IkReal(-1.00000000000000))*(x1646)*(x1648)))+(((cj1)*(cj2)*(x1648))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))))+IKsqr(((((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1649)))+(((IkReal(-1.00000000000000))*(cj2)*(x1647)*(x1649)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((x1646)*(x1647)))+(((IkReal(-1.00000000000000))*(x1646)*(x1648)))+(((cj1)*(cj2)*(x1648)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))), ((((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1649)))+(((IkReal(-1.00000000000000))*(cj2)*(x1647)*(x1649)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((x1646)*(x1647)))+(((IkReal(-1.00000000000000))*(x1646)*(x1648)))+(((cj1)*(cj2)*(x1648)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1650=((sj1)*(sj2));
IkReal x1651=((cj0)*(r01));
IkReal x1652=((r00)*(sj0));
IkReal x1653=((cj1)*(cj2));
evalcond[0]=((((r01)*(sj0)))+(IKsin(j5))+(((cj0)*(r00))));
evalcond[1]=((((x1650)*(x1652)))+(((IkReal(-1.00000000000000))*(x1650)*(x1651)))+(IKcos(j5))+(((IkReal(-1.00000000000000))*(x1652)*(x1653)))+(((cj2)*(r02)*(sj1)))+(((x1651)*(x1653)))+(((cj1)*(r02)*(sj2))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1654=((pz)*(sj1));
IkReal x1655=((cj0)*(py));
IkReal x1656=((IkReal(1.00000000000000))*(sj2));
IkReal x1657=((cj1)*(cj2));
IkReal x1658=((px)*(sj0));
IkReal x1659=((cj2)*(sj1));
IkReal x1660=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(0.190890000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.209760000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(sj1)*(x1655)*(x1656)))+(((x1655)*(x1657)))+(((pz)*(x1660)))+(((cj2)*(x1654)))+(((sj1)*(sj2)*(x1658)))+(((IkReal(-0.521670000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(x1657)*(x1658))));
evalcond[4]=((IkReal(0.139930000000000))+(((IkReal(-1.00000000000000))*(pz)*(x1657)))+(((x1655)*(x1660)))+(((x1655)*(x1659)))+(((sj2)*(x1654)))+(((IkReal(-1.00000000000000))*(cj1)*(x1656)*(x1658)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x1658)*(x1659)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1661=((IkReal(1.00000000000000))*(sj2));
IkReal x1662=((r02)*(sj1));
IkReal x1663=((cj0)*(r01));
IkReal x1664=((r00)*(sj0));
IkReal x1665=((cj1)*(r02));
IkReal x1666=((IkReal(1.00000000000000))*(cj2));
if( IKabs(((((IkReal(-1.00000000000000))*(sj1)*(x1663)*(x1666)))+(((IkReal(-1.00000000000000))*(x1661)*(x1662)))+(((cj2)*(sj1)*(x1664)))+(((cj2)*(x1665)))+(((IkReal(-1.00000000000000))*(cj1)*(x1661)*(x1663)))+(((cj1)*(sj2)*(x1664))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x1662)*(x1666)))+(((IkReal(-1.00000000000000))*(x1661)*(x1665)))+(((IkReal(-1.00000000000000))*(cj1)*(x1663)*(x1666)))+(((sj1)*(sj2)*(x1663)))+(((cj1)*(cj2)*(x1664)))+(((IkReal(-1.00000000000000))*(sj1)*(x1661)*(x1664))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(sj1)*(x1663)*(x1666)))+(((IkReal(-1.00000000000000))*(x1661)*(x1662)))+(((cj2)*(sj1)*(x1664)))+(((cj2)*(x1665)))+(((IkReal(-1.00000000000000))*(cj1)*(x1661)*(x1663)))+(((cj1)*(sj2)*(x1664)))))+IKsqr(((((IkReal(-1.00000000000000))*(x1662)*(x1666)))+(((IkReal(-1.00000000000000))*(x1661)*(x1665)))+(((IkReal(-1.00000000000000))*(cj1)*(x1663)*(x1666)))+(((sj1)*(sj2)*(x1663)))+(((cj1)*(cj2)*(x1664)))+(((IkReal(-1.00000000000000))*(sj1)*(x1661)*(x1664)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(sj1)*(x1663)*(x1666)))+(((IkReal(-1.00000000000000))*(x1661)*(x1662)))+(((cj2)*(sj1)*(x1664)))+(((cj2)*(x1665)))+(((IkReal(-1.00000000000000))*(cj1)*(x1661)*(x1663)))+(((cj1)*(sj2)*(x1664)))), ((((IkReal(-1.00000000000000))*(x1662)*(x1666)))+(((IkReal(-1.00000000000000))*(x1661)*(x1665)))+(((IkReal(-1.00000000000000))*(cj1)*(x1663)*(x1666)))+(((sj1)*(sj2)*(x1663)))+(((cj1)*(cj2)*(x1664)))+(((IkReal(-1.00000000000000))*(sj1)*(x1661)*(x1664)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1667=((r02)*(sj2));
IkReal x1668=((IkReal(1.00000000000000))*(sj2));
IkReal x1669=((r00)*(sj0));
IkReal x1670=((cj1)*(cj2));
IkReal x1671=((cj0)*(r01));
IkReal x1672=((sj1)*(x1671));
IkReal x1673=((IkReal(1.00000000000000))*(cj2)*(x1669));
evalcond[0]=((((sj1)*(x1667)))+(((IkReal(-1.00000000000000))*(r02)*(x1670)))+(((IkReal(-1.00000000000000))*(sj1)*(x1673)))+(((cj2)*(x1672)))+(IKsin(j5))+(((IkReal(-1.00000000000000))*(cj1)*(x1668)*(x1669)))+(((cj1)*(sj2)*(x1671))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1668)*(x1672)))+(((cj1)*(x1667)))+(IKcos(j5))+(((sj1)*(sj2)*(x1669)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1669)*(x1670)))+(((x1670)*(x1671))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1674=((pz)*(sj1));
IkReal x1675=((cj0)*(py));
IkReal x1676=((IkReal(1.00000000000000))*(sj2));
IkReal x1677=((cj1)*(cj2));
IkReal x1678=((px)*(sj0));
IkReal x1679=((cj2)*(sj1));
IkReal x1680=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(-0.190890000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.209760000000000))+(((sj1)*(sj2)*(x1678)))+(((IkReal(-1.00000000000000))*(x1677)*(x1678)))+(((IkReal(0.00982000000000000))*(cj2)))+(((x1675)*(x1677)))+(((cj2)*(x1674)))+(((pz)*(x1680)))+(((IkReal(-1.00000000000000))*(sj1)*(x1675)*(x1676)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(0.141510000000000))+(((x1675)*(x1679)))+(((x1675)*(x1680)))+(((IkReal(0.521670000000000))*(cj2)))+(((sj2)*(x1674)))+(((IkReal(-1.00000000000000))*(cj1)*(x1676)*(x1678)))+(((IkReal(-1.00000000000000))*(pz)*(x1677)))+(((IkReal(-1.00000000000000))*(x1678)*(x1679)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1681=((cj2)*(sj1));
IkReal x1682=((IkReal(1.00000000000000))*(r02));
IkReal x1683=((cj0)*(r01));
IkReal x1684=((sj1)*(sj2));
IkReal x1685=((cj1)*(cj2));
IkReal x1686=((cj1)*(sj2));
IkReal x1687=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((x1681)*(x1683)))+(((IkReal(-1.00000000000000))*(x1686)*(x1687)))+(((IkReal(-1.00000000000000))*(x1681)*(x1687)))+(((IkReal(-1.00000000000000))*(x1682)*(x1685)))+(((r02)*(x1684)))+(((x1683)*(x1686))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x1681)*(x1682)))+(((IkReal(-1.00000000000000))*(x1682)*(x1686)))+(((IkReal(-1.00000000000000))*(x1683)*(x1685)))+(((r00)*(sj0)*(x1685)))+(((x1683)*(x1684)))+(((IkReal(-1.00000000000000))*(x1684)*(x1687))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((x1681)*(x1683)))+(((IkReal(-1.00000000000000))*(x1686)*(x1687)))+(((IkReal(-1.00000000000000))*(x1681)*(x1687)))+(((IkReal(-1.00000000000000))*(x1682)*(x1685)))+(((r02)*(x1684)))+(((x1683)*(x1686)))))+IKsqr(((((IkReal(-1.00000000000000))*(x1681)*(x1682)))+(((IkReal(-1.00000000000000))*(x1682)*(x1686)))+(((IkReal(-1.00000000000000))*(x1683)*(x1685)))+(((r00)*(sj0)*(x1685)))+(((x1683)*(x1684)))+(((IkReal(-1.00000000000000))*(x1684)*(x1687)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((x1681)*(x1683)))+(((IkReal(-1.00000000000000))*(x1686)*(x1687)))+(((IkReal(-1.00000000000000))*(x1681)*(x1687)))+(((IkReal(-1.00000000000000))*(x1682)*(x1685)))+(((r02)*(x1684)))+(((x1683)*(x1686)))), ((((IkReal(-1.00000000000000))*(x1681)*(x1682)))+(((IkReal(-1.00000000000000))*(x1682)*(x1686)))+(((IkReal(-1.00000000000000))*(x1683)*(x1685)))+(((r00)*(sj0)*(x1685)))+(((x1683)*(x1684)))+(((IkReal(-1.00000000000000))*(x1684)*(x1687)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1688=((r02)*(sj2));
IkReal x1689=((IkReal(1.00000000000000))*(sj2));
IkReal x1690=((r00)*(sj0));
IkReal x1691=((cj1)*(cj2));
IkReal x1692=((cj0)*(r01));
IkReal x1693=((sj1)*(x1692));
IkReal x1694=((IkReal(1.00000000000000))*(cj2)*(x1690));
evalcond[0]=((((IkReal(-1.00000000000000))*(sj1)*(x1694)))+(((sj1)*(x1688)))+(((IkReal(-1.00000000000000))*(cj1)*(x1689)*(x1690)))+(((cj1)*(sj2)*(x1692)))+(((IkReal(-1.00000000000000))*(r02)*(x1691)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((cj2)*(x1693))));
evalcond[1]=((((cj1)*(x1688)))+(((x1691)*(x1692)))+(IKcos(j5))+(((cj2)*(r02)*(sj1)))+(((sj1)*(sj2)*(x1690)))+(((IkReal(-1.00000000000000))*(x1690)*(x1691)))+(((IkReal(-1.00000000000000))*(x1689)*(x1693))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1695=((IkReal(1.00000000000000))*(sj2));
IkReal x1696=((r02)*(sj1));
IkReal x1697=((cj0)*(r01));
IkReal x1698=((cj1)*(r02));
IkReal x1699=((r00)*(sj0));
IkReal x1700=((IkReal(1.00000000000000))*(cj2));
if( IKabs(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(sj1)*(x1697)*(x1700)))+(((cj1)*(sj2)*(x1699)))+(((cj2)*(sj1)*(x1699)))+(((IkReal(-1.00000000000000))*(cj1)*(x1695)*(x1697)))+(((IkReal(-1.00000000000000))*(x1695)*(x1696)))+(((cj2)*(x1698))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj1)*(cj2)*(x1699)))+(((sj1)*(sj2)*(x1697)))+(((IkReal(-1.00000000000000))*(x1696)*(x1700)))+(((IkReal(-1.00000000000000))*(x1695)*(x1698)))+(((IkReal(-1.00000000000000))*(sj1)*(x1695)*(x1699)))+(((IkReal(-1.00000000000000))*(cj1)*(x1697)*(x1700))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(sj1)*(x1697)*(x1700)))+(((cj1)*(sj2)*(x1699)))+(((cj2)*(sj1)*(x1699)))+(((IkReal(-1.00000000000000))*(cj1)*(x1695)*(x1697)))+(((IkReal(-1.00000000000000))*(x1695)*(x1696)))+(((cj2)*(x1698)))))))+IKsqr(((((cj1)*(cj2)*(x1699)))+(((sj1)*(sj2)*(x1697)))+(((IkReal(-1.00000000000000))*(x1696)*(x1700)))+(((IkReal(-1.00000000000000))*(x1695)*(x1698)))+(((IkReal(-1.00000000000000))*(sj1)*(x1695)*(x1699)))+(((IkReal(-1.00000000000000))*(cj1)*(x1697)*(x1700)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(sj1)*(x1697)*(x1700)))+(((cj1)*(sj2)*(x1699)))+(((cj2)*(sj1)*(x1699)))+(((IkReal(-1.00000000000000))*(cj1)*(x1695)*(x1697)))+(((IkReal(-1.00000000000000))*(x1695)*(x1696)))+(((cj2)*(x1698)))))), ((((cj1)*(cj2)*(x1699)))+(((sj1)*(sj2)*(x1697)))+(((IkReal(-1.00000000000000))*(x1696)*(x1700)))+(((IkReal(-1.00000000000000))*(x1695)*(x1698)))+(((IkReal(-1.00000000000000))*(sj1)*(x1695)*(x1699)))+(((IkReal(-1.00000000000000))*(cj1)*(x1697)*(x1700)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1701=IKsin(j5);
IkReal x1702=((r02)*(sj2));
IkReal x1703=((IkReal(1.00000000000000))*(sj2));
IkReal x1704=((r00)*(sj0));
IkReal x1705=((IkReal(1.00000000000000))*(cj2));
IkReal x1706=((cj0)*(r01)*(sj1));
IkReal x1707=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x1701)))+(((cj0)*(r00))));
evalcond[1]=((((sj4)*(x1701)))+(((IkReal(-1.00000000000000))*(sj1)*(x1704)*(x1705)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1705)))+(((IkReal(-1.00000000000000))*(cj1)*(x1703)*(x1704)))+(((sj2)*(x1707)))+(((cj2)*(x1706)))+(((sj1)*(x1702))));
evalcond[2]=((((cj1)*(x1702)))+(((sj1)*(sj2)*(x1704)))+(((IkReal(-1.00000000000000))*(cj1)*(x1704)*(x1705)))+(IKcos(j5))+(((IkReal(-1.00000000000000))*(x1703)*(x1706)))+(((cj2)*(r02)*(sj1)))+(((cj2)*(x1707))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1708=((cj0)*(r01));
IkReal x1709=((sj1)*(sj2));
IkReal x1710=((IkReal(1.00000000000000))*(cj1));
IkReal x1711=((r00)*(sj0));
if( IKabs(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x1709)*(x1711)))+(((cj1)*(cj2)*(x1711)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1710)))+(((IkReal(-1.00000000000000))*(cj2)*(x1708)*(x1710)))+(((x1708)*(x1709))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))))+IKsqr(((((IkReal(-1.00000000000000))*(x1709)*(x1711)))+(((cj1)*(cj2)*(x1711)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1710)))+(((IkReal(-1.00000000000000))*(cj2)*(x1708)*(x1710)))+(((x1708)*(x1709)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))), ((((IkReal(-1.00000000000000))*(x1709)*(x1711)))+(((cj1)*(cj2)*(x1711)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1710)))+(((IkReal(-1.00000000000000))*(cj2)*(x1708)*(x1710)))+(((x1708)*(x1709)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1712=IKsin(j5);
IkReal x1713=((r02)*(sj2));
IkReal x1714=((IkReal(1.00000000000000))*(sj2));
IkReal x1715=((r00)*(sj0));
IkReal x1716=((IkReal(1.00000000000000))*(cj2));
IkReal x1717=((cj0)*(r01)*(sj1));
IkReal x1718=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x1712)))+(((cj0)*(r00))));
evalcond[1]=((((sj4)*(x1712)))+(((sj2)*(x1718)))+(((cj2)*(x1717)))+(((IkReal(-1.00000000000000))*(cj1)*(x1714)*(x1715)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1716)))+(((IkReal(-1.00000000000000))*(sj1)*(x1715)*(x1716)))+(((sj1)*(x1713))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1714)*(x1717)))+(((IkReal(-1.00000000000000))*(cj1)*(x1715)*(x1716)))+(((cj1)*(x1713)))+(((sj1)*(sj2)*(x1715)))+(IKcos(j5))+(((cj2)*(x1718)))+(((cj2)*(r02)*(sj1))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1719=((cj1)*(sj2));
IkReal x1720=((px)*(sj0));
IkReal x1721=((sj1)*(sj2));
IkReal x1722=((cj0)*(py));
IkReal x1723=((cj2)*(pz));
IkReal x1724=((IkReal(1.00000000000000))*(cj1));
IkReal x1725=((cj2)*(x1722));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(0.000790000000000000))*(cj4)))+(((cj0)*(px)))+(((py)*(sj0)))+(((IkReal(0.190890000000000))*(sj4))));
evalcond[2]=((IkReal(-0.312420000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((sj1)*(x1723)))+(((x1720)*(x1721)))+(((cj1)*(x1725)))+(((IkReal(-1.00000000000000))*(cj2)*(x1720)*(x1724)))+(((pz)*(x1719)))+(((IkReal(-1.00000000000000))*(x1721)*(x1722)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[3]=((IkReal(-0.125720000000000))+(((IkReal(-1.00000000000000))*(x1719)*(x1720)))+(((pz)*(x1721)))+(((IkReal(0.000790000000000000))*(sj4)))+(((sj1)*(x1725)))+(((IkReal(-1.00000000000000))*(x1723)*(x1724)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-0.190890000000000))*(cj4)))+(((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x1720)))+(((x1719)*(x1722)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x1726=((IkReal(1.00000000000000))*(sj0));
IkReal x1727=((cj1)*(sj2));
IkReal x1728=((sj1)*(sj2));
IkReal x1729=((cj2)*(sj1));
IkReal x1730=((cj0)*(r01));
IkReal x1731=((cj0)*(py));
IkReal x1732=((cj2)*(x1731));
IkReal x1733=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.000790000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((x1729)*(x1730)))+(((r02)*(x1728)))+(((IkReal(-1.00000000000000))*(r00)*(x1726)*(x1727)))+(((IkReal(-1.00000000000000))*(r00)*(x1726)*(x1729)))+(((x1727)*(x1730)))+(((IkReal(-1.00000000000000))*(r02)*(x1733))));
evalcond[3]=((IkReal(-0.312420000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((pz)*(x1727)))+(((pz)*(x1729)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(px)*(x1726)))+(((IkReal(-1.00000000000000))*(x1728)*(x1731)))+(((cj1)*(x1732)))+(((px)*(sj0)*(x1728)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(-0.316610000000000))+(((pz)*(x1728)))+(((IkReal(-1.00000000000000))*(pz)*(x1733)))+(((x1729)*(x1731)))+(((IkReal(0.521670000000000))*(cj2)))+(((x1727)*(x1731)))+(((IkReal(0.00982000000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(px)*(x1726)*(x1727)))+(((IkReal(-1.00000000000000))*(px)*(x1726)*(x1729))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1734=((sj1)*(sj2));
IkReal x1735=((cj0)*(r01));
IkReal x1736=((r00)*(sj0));
IkReal x1737=((cj1)*(cj2));
if( IKabs(((((r01)*(sj0)))+(((cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x1734)*(x1736)))+(((x1735)*(x1737)))+(((IkReal(-1.00000000000000))*(x1734)*(x1735)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1736)*(x1737)))+(((cj1)*(r02)*(sj2))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r01)*(sj0)))+(((cj0)*(r00)))))+IKsqr(((((x1734)*(x1736)))+(((x1735)*(x1737)))+(((IkReal(-1.00000000000000))*(x1734)*(x1735)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1736)*(x1737)))+(((cj1)*(r02)*(sj2)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((r01)*(sj0)))+(((cj0)*(r00)))), ((((x1734)*(x1736)))+(((x1735)*(x1737)))+(((IkReal(-1.00000000000000))*(x1734)*(x1735)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1736)*(x1737)))+(((cj1)*(r02)*(sj2)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1738=((sj1)*(sj2));
IkReal x1739=((cj0)*(r01));
IkReal x1740=((r00)*(sj0));
IkReal x1741=((cj1)*(cj2));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((cj0)*(r00))));
evalcond[1]=((((x1739)*(x1741)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((IkReal(-1.00000000000000))*(x1740)*(x1741)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1738)*(x1739)))+(((x1738)*(x1740)))+(((cj1)*(r02)*(sj2))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1742=((IkReal(1.00000000000000))*(sj0));
IkReal x1743=((cj1)*(sj2));
IkReal x1744=((sj1)*(sj2));
IkReal x1745=((cj2)*(sj1));
IkReal x1746=((cj0)*(r01));
IkReal x1747=((cj0)*(py));
IkReal x1748=((cj2)*(x1747));
IkReal x1749=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.000790000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r00)*(x1742)*(x1745)))+(((IkReal(-1.00000000000000))*(r00)*(x1742)*(x1743)))+(((x1745)*(x1746)))+(((r02)*(x1744)))+(((x1743)*(x1746)))+(((IkReal(-1.00000000000000))*(r02)*(x1749))));
evalcond[3]=((IkReal(-0.312420000000000))+(((pz)*(x1745)))+(((pz)*(x1743)))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(px)*(x1742)))+(((cj1)*(x1748)))+(((IkReal(-1.00000000000000))*(x1744)*(x1747)))+(((IkReal(-0.521670000000000))*(sj2)))+(((px)*(sj0)*(x1744))));
evalcond[4]=((IkReal(0.0651700000000000))+(((pz)*(x1744)))+(((x1745)*(x1747)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(px)*(x1742)*(x1745)))+(((IkReal(-1.00000000000000))*(px)*(x1742)*(x1743)))+(((IkReal(-1.00000000000000))*(pz)*(x1749)))+(((x1743)*(x1747)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1750=((r00)*(sj0));
IkReal x1751=((cj1)*(cj2));
IkReal x1752=((sj1)*(sj2));
IkReal x1753=((cj0)*(r01));
if( IKabs(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x1752)*(x1753)))+(((x1750)*(x1752)))+(((IkReal(-1.00000000000000))*(x1750)*(x1751)))+(((cj2)*(r02)*(sj1)))+(((x1751)*(x1753)))+(((cj1)*(r02)*(sj2))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))))+IKsqr(((((IkReal(-1.00000000000000))*(x1752)*(x1753)))+(((x1750)*(x1752)))+(((IkReal(-1.00000000000000))*(x1750)*(x1751)))+(((cj2)*(r02)*(sj1)))+(((x1751)*(x1753)))+(((cj1)*(r02)*(sj2)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))), ((((IkReal(-1.00000000000000))*(x1752)*(x1753)))+(((x1750)*(x1752)))+(((IkReal(-1.00000000000000))*(x1750)*(x1751)))+(((cj2)*(r02)*(sj1)))+(((x1751)*(x1753)))+(((cj1)*(r02)*(sj2)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1754=((sj1)*(sj2));
IkReal x1755=((cj0)*(r01));
IkReal x1756=((r00)*(sj0));
IkReal x1757=((cj1)*(cj2));
evalcond[0]=((((r01)*(sj0)))+(IKsin(j5))+(((cj0)*(r00))));
evalcond[1]=((((x1754)*(x1756)))+(((IkReal(-1.00000000000000))*(x1756)*(x1757)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1754)*(x1755)))+(((cj1)*(r02)*(sj2)))+(((x1755)*(x1757))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1758=((pz)*(sj1));
IkReal x1759=((cj0)*(py));
IkReal x1760=((IkReal(1.00000000000000))*(sj2));
IkReal x1761=((cj1)*(cj2));
IkReal x1762=((px)*(sj0));
IkReal x1763=((cj2)*(sj1));
IkReal x1764=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(0.190890000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.312420000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x1761)*(x1762)))+(((x1759)*(x1761)))+(((cj2)*(x1758)))+(((pz)*(x1764)))+(((sj1)*(sj2)*(x1762)))+(((IkReal(-1.00000000000000))*(sj1)*(x1759)*(x1760)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(-0.124930000000000))+(((IkReal(-1.00000000000000))*(pz)*(x1761)))+(((IkReal(-1.00000000000000))*(x1762)*(x1763)))+(((x1759)*(x1764)))+(((x1759)*(x1763)))+(((IkReal(0.521670000000000))*(cj2)))+(((sj2)*(x1758)))+(((IkReal(-1.00000000000000))*(cj1)*(x1760)*(x1762)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1765=((r02)*(sj2));
IkReal x1766=((IkReal(1.00000000000000))*(sj2));
IkReal x1767=((r00)*(sj0));
IkReal x1768=((cj1)*(cj2));
IkReal x1769=((cj0)*(r01));
IkReal x1770=((sj1)*(x1769));
IkReal x1771=((IkReal(1.00000000000000))*(cj2)*(x1767));
if( IKabs(((((cj1)*(sj2)*(x1769)))+(((sj1)*(x1765)))+(((IkReal(-1.00000000000000))*(sj1)*(x1771)))+(((IkReal(-1.00000000000000))*(r02)*(x1768)))+(((IkReal(-1.00000000000000))*(cj1)*(x1766)*(x1767)))+(((cj2)*(x1770))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj2)*(r02)*(sj1)))+(((sj1)*(sj2)*(x1767)))+(((IkReal(-1.00000000000000))*(x1766)*(x1770)))+(((IkReal(-1.00000000000000))*(x1767)*(x1768)))+(((cj1)*(x1765)))+(((x1768)*(x1769))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj1)*(sj2)*(x1769)))+(((sj1)*(x1765)))+(((IkReal(-1.00000000000000))*(sj1)*(x1771)))+(((IkReal(-1.00000000000000))*(r02)*(x1768)))+(((IkReal(-1.00000000000000))*(cj1)*(x1766)*(x1767)))+(((cj2)*(x1770)))))+IKsqr(((((cj2)*(r02)*(sj1)))+(((sj1)*(sj2)*(x1767)))+(((IkReal(-1.00000000000000))*(x1766)*(x1770)))+(((IkReal(-1.00000000000000))*(x1767)*(x1768)))+(((cj1)*(x1765)))+(((x1768)*(x1769)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((cj1)*(sj2)*(x1769)))+(((sj1)*(x1765)))+(((IkReal(-1.00000000000000))*(sj1)*(x1771)))+(((IkReal(-1.00000000000000))*(r02)*(x1768)))+(((IkReal(-1.00000000000000))*(cj1)*(x1766)*(x1767)))+(((cj2)*(x1770)))), ((((cj2)*(r02)*(sj1)))+(((sj1)*(sj2)*(x1767)))+(((IkReal(-1.00000000000000))*(x1766)*(x1770)))+(((IkReal(-1.00000000000000))*(x1767)*(x1768)))+(((cj1)*(x1765)))+(((x1768)*(x1769)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1772=((r02)*(sj2));
IkReal x1773=((IkReal(1.00000000000000))*(sj2));
IkReal x1774=((r00)*(sj0));
IkReal x1775=((cj1)*(cj2));
IkReal x1776=((cj0)*(r01));
IkReal x1777=((sj1)*(x1776));
IkReal x1778=((IkReal(1.00000000000000))*(cj2)*(x1774));
evalcond[0]=((((cj1)*(sj2)*(x1776)))+(((IkReal(-1.00000000000000))*(sj1)*(x1778)))+(((IkReal(-1.00000000000000))*(cj1)*(x1773)*(x1774)))+(((sj1)*(x1772)))+(((cj2)*(x1777)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((IkReal(-1.00000000000000))*(r02)*(x1775))));
evalcond[1]=((((IkReal(-1.00000000000000))*(IKcos(j5))))+(((sj1)*(sj2)*(x1774)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1774)*(x1775)))+(((IkReal(-1.00000000000000))*(x1773)*(x1777)))+(((x1775)*(x1776)))+(((cj1)*(x1772))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1779=((pz)*(sj1));
IkReal x1780=((cj0)*(py));
IkReal x1781=((IkReal(1.00000000000000))*(sj2));
IkReal x1782=((cj1)*(cj2));
IkReal x1783=((px)*(sj0));
IkReal x1784=((cj2)*(sj1));
IkReal x1785=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(-0.190890000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.312420000000000))+(((IkReal(-1.00000000000000))*(sj1)*(x1780)*(x1781)))+(((IkReal(0.00982000000000000))*(cj2)))+(((sj1)*(sj2)*(x1783)))+(((IkReal(-1.00000000000000))*(x1782)*(x1783)))+(((pz)*(x1785)))+(((cj2)*(x1779)))+(((x1780)*(x1782)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(-0.126510000000000))+(((IkReal(-1.00000000000000))*(x1783)*(x1784)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(pz)*(x1782)))+(((IkReal(-1.00000000000000))*(cj1)*(x1781)*(x1783)))+(((sj2)*(x1779)))+(((x1780)*(x1785)))+(((x1780)*(x1784)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1786=((IkReal(1.00000000000000))*(sj2));
IkReal x1787=((r02)*(sj1));
IkReal x1788=((cj0)*(r01));
IkReal x1789=((IkReal(1.00000000000000))*(cj2));
IkReal x1790=((cj1)*(r02));
IkReal x1791=((cj1)*(r00)*(sj0));
IkReal x1792=((r00)*(sj0)*(sj1));
if( IKabs(((((sj2)*(x1791)))+(((cj2)*(x1792)))+(((cj2)*(x1790)))+(((IkReal(-1.00000000000000))*(cj1)*(x1786)*(x1788)))+(((IkReal(-1.00000000000000))*(sj1)*(x1788)*(x1789)))+(((IkReal(-1.00000000000000))*(x1786)*(x1787))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(sj1)*(x1786)*(x1788)))+(((sj2)*(x1792)))+(((sj2)*(x1790)))+(((cj2)*(x1787)))+(((IkReal(-1.00000000000000))*(x1789)*(x1791)))+(((cj1)*(cj2)*(x1788))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((sj2)*(x1791)))+(((cj2)*(x1792)))+(((cj2)*(x1790)))+(((IkReal(-1.00000000000000))*(cj1)*(x1786)*(x1788)))+(((IkReal(-1.00000000000000))*(sj1)*(x1788)*(x1789)))+(((IkReal(-1.00000000000000))*(x1786)*(x1787)))))+IKsqr(((((IkReal(-1.00000000000000))*(sj1)*(x1786)*(x1788)))+(((sj2)*(x1792)))+(((sj2)*(x1790)))+(((cj2)*(x1787)))+(((IkReal(-1.00000000000000))*(x1789)*(x1791)))+(((cj1)*(cj2)*(x1788)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((sj2)*(x1791)))+(((cj2)*(x1792)))+(((cj2)*(x1790)))+(((IkReal(-1.00000000000000))*(cj1)*(x1786)*(x1788)))+(((IkReal(-1.00000000000000))*(sj1)*(x1788)*(x1789)))+(((IkReal(-1.00000000000000))*(x1786)*(x1787)))), ((((IkReal(-1.00000000000000))*(sj1)*(x1786)*(x1788)))+(((sj2)*(x1792)))+(((sj2)*(x1790)))+(((cj2)*(x1787)))+(((IkReal(-1.00000000000000))*(x1789)*(x1791)))+(((cj1)*(cj2)*(x1788)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1793=((r02)*(sj2));
IkReal x1794=((IkReal(1.00000000000000))*(sj2));
IkReal x1795=((r00)*(sj0));
IkReal x1796=((cj1)*(cj2));
IkReal x1797=((cj0)*(r01));
IkReal x1798=((sj1)*(x1797));
IkReal x1799=((IkReal(1.00000000000000))*(cj2)*(x1795));
evalcond[0]=((((cj2)*(x1798)))+(((sj1)*(x1793)))+(((IkReal(-1.00000000000000))*(r02)*(x1796)))+(IKsin(j5))+(((IkReal(-1.00000000000000))*(cj1)*(x1794)*(x1795)))+(((cj1)*(sj2)*(x1797)))+(((IkReal(-1.00000000000000))*(sj1)*(x1799))));
evalcond[1]=((((sj1)*(sj2)*(x1795)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((x1796)*(x1797)))+(((cj1)*(x1793)))+(((IkReal(-1.00000000000000))*(x1795)*(x1796)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1794)*(x1798))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1800=((r02)*(sj2));
IkReal x1801=((IkReal(1.00000000000000))*(sj2));
IkReal x1802=((r00)*(sj0));
IkReal x1803=((cj1)*(cj2));
IkReal x1804=((cj0)*(r01));
IkReal x1805=((sj1)*(x1804));
IkReal x1806=((IkReal(1.00000000000000))*(cj2)*(x1802));
if( IKabs(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((sj1)*(x1800)))+(((cj2)*(x1805)))+(((IkReal(-1.00000000000000))*(sj1)*(x1806)))+(((cj1)*(sj2)*(x1804)))+(((IkReal(-1.00000000000000))*(r02)*(x1803)))+(((IkReal(-1.00000000000000))*(cj1)*(x1801)*(x1802))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((sj1)*(sj2)*(x1802)))+(((IkReal(-1.00000000000000))*(x1801)*(x1805)))+(((x1803)*(x1804)))+(((cj2)*(r02)*(sj1)))+(((cj1)*(x1800)))+(((IkReal(-1.00000000000000))*(x1802)*(x1803))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((sj1)*(x1800)))+(((cj2)*(x1805)))+(((IkReal(-1.00000000000000))*(sj1)*(x1806)))+(((cj1)*(sj2)*(x1804)))+(((IkReal(-1.00000000000000))*(r02)*(x1803)))+(((IkReal(-1.00000000000000))*(cj1)*(x1801)*(x1802)))))))+IKsqr(((((sj1)*(sj2)*(x1802)))+(((IkReal(-1.00000000000000))*(x1801)*(x1805)))+(((x1803)*(x1804)))+(((cj2)*(r02)*(sj1)))+(((cj1)*(x1800)))+(((IkReal(-1.00000000000000))*(x1802)*(x1803)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((sj1)*(x1800)))+(((cj2)*(x1805)))+(((IkReal(-1.00000000000000))*(sj1)*(x1806)))+(((cj1)*(sj2)*(x1804)))+(((IkReal(-1.00000000000000))*(r02)*(x1803)))+(((IkReal(-1.00000000000000))*(cj1)*(x1801)*(x1802)))))), ((((sj1)*(sj2)*(x1802)))+(((IkReal(-1.00000000000000))*(x1801)*(x1805)))+(((x1803)*(x1804)))+(((cj2)*(r02)*(sj1)))+(((cj1)*(x1800)))+(((IkReal(-1.00000000000000))*(x1802)*(x1803)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1807=IKsin(j5);
IkReal x1808=((r02)*(sj2));
IkReal x1809=((IkReal(1.00000000000000))*(sj2));
IkReal x1810=((r00)*(sj0));
IkReal x1811=((IkReal(1.00000000000000))*(cj2));
IkReal x1812=((IkReal(1.00000000000000))*(x1807));
IkReal x1813=((cj0)*(r01)*(sj1));
IkReal x1814=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x1812)))+(((cj0)*(r00))));
evalcond[1]=((((sj2)*(x1814)))+(((IkReal(-1.00000000000000))*(sj1)*(x1810)*(x1811)))+(((sj1)*(x1808)))+(((cj2)*(x1813)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1811)))+(((IkReal(-1.00000000000000))*(sj4)*(x1812)))+(((IkReal(-1.00000000000000))*(cj1)*(x1809)*(x1810))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj1)*(x1810)*(x1811)))+(((cj2)*(x1814)))+(((IkReal(-1.00000000000000))*(x1809)*(x1813)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((sj1)*(sj2)*(x1810)))+(((cj2)*(r02)*(sj1)))+(((cj1)*(x1808))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1815=((sj1)*(sj2));
IkReal x1816=((cj0)*(r01));
IkReal x1817=((r00)*(sj0));
IkReal x1818=((cj1)*(cj2));
if( IKabs(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x1815)*(x1816)))+(((x1816)*(x1818)))+(((x1815)*(x1817)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1817)*(x1818)))+(((cj1)*(r02)*(sj2))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))))+IKsqr(((((IkReal(-1.00000000000000))*(x1815)*(x1816)))+(((x1816)*(x1818)))+(((x1815)*(x1817)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1817)*(x1818)))+(((cj1)*(r02)*(sj2)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))), ((((IkReal(-1.00000000000000))*(x1815)*(x1816)))+(((x1816)*(x1818)))+(((x1815)*(x1817)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1817)*(x1818)))+(((cj1)*(r02)*(sj2)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1819=IKsin(j5);
IkReal x1820=((r02)*(sj2));
IkReal x1821=((IkReal(1.00000000000000))*(sj2));
IkReal x1822=((r00)*(sj0));
IkReal x1823=((IkReal(1.00000000000000))*(cj2));
IkReal x1824=((IkReal(1.00000000000000))*(x1819));
IkReal x1825=((cj0)*(r01)*(sj1));
IkReal x1826=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x1824)))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj4)*(x1824)))+(((IkReal(-1.00000000000000))*(sj1)*(x1822)*(x1823)))+(((sj1)*(x1820)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1823)))+(((cj2)*(x1825)))+(((IkReal(-1.00000000000000))*(cj1)*(x1821)*(x1822)))+(((sj2)*(x1826))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1821)*(x1825)))+(((IkReal(-1.00000000000000))*(cj1)*(x1822)*(x1823)))+(((sj1)*(sj2)*(x1822)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((cj1)*(x1820)))+(((cj2)*(r02)*(sj1)))+(((cj2)*(x1826))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1827=((cj1)*(sj2));
IkReal x1828=((px)*(sj0));
IkReal x1829=((sj1)*(sj2));
IkReal x1830=((cj0)*(py));
IkReal x1831=((cj2)*(pz));
IkReal x1832=((IkReal(1.00000000000000))*(cj1));
IkReal x1833=((cj2)*(x1830));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(0.000790000000000000))*(cj4)))+(((cj0)*(px)))+(((py)*(sj0)))+(((IkReal(0.190890000000000))*(sj4))));
evalcond[2]=((IkReal(-0.394310000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((pz)*(x1827)))+(((IkReal(-1.00000000000000))*(x1829)*(x1830)))+(((sj1)*(x1831)))+(((IkReal(0.000790000000000000))*(sj4)))+(((IkReal(-1.00000000000000))*(cj2)*(x1828)*(x1832)))+(((x1828)*(x1829)))+(((IkReal(-0.190890000000000))*(cj4)))+(((IkReal(-0.521670000000000))*(sj2)))+(((cj1)*(x1833))));
evalcond[3]=((IkReal(0.0588300000000000))+(((pz)*(x1829)))+(((sj1)*(x1833)))+(((x1827)*(x1830)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x1831)*(x1832)))+(((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x1828)))+(((IkReal(-1.00000000000000))*(x1827)*(x1828)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x1834=((IkReal(1.00000000000000))*(sj2));
IkReal x1835=((px)*(sj0));
IkReal x1836=((pz)*(sj2));
IkReal x1837=((cj0)*(sj1));
IkReal x1838=((cj1)*(sj2));
IkReal x1839=((sj1)*(sj2));
IkReal x1840=((cj2)*(sj1));
IkReal x1841=((r00)*(sj0));
IkReal x1842=((cj0)*(cj1)*(cj2));
IkReal x1843=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.000790000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r01)*(x1834)*(x1837)))+(((IkReal(-1.00000000000000))*(x1841)*(x1843)))+(((r02)*(x1840)))+(((r02)*(x1838)))+(((r01)*(x1842)))+(((x1839)*(x1841))));
evalcond[3]=((IkReal(-0.585200000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((x1835)*(x1839)))+(((pz)*(x1840)))+(((py)*(x1842)))+(((IkReal(-1.00000000000000))*(x1835)*(x1843)))+(((IkReal(-1.00000000000000))*(py)*(x1834)*(x1837)))+(((IkReal(-0.521670000000000))*(sj2)))+(((cj1)*(x1836))));
evalcond[4]=((IkReal(0.0588300000000000))+(((sj1)*(x1836)))+(((IkReal(-1.00000000000000))*(cj1)*(x1834)*(x1835)))+(((IkReal(-1.00000000000000))*(x1835)*(x1840)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(pz)*(x1843)))+(((cj2)*(py)*(x1837)))+(((cj0)*(py)*(x1838)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1844=((IkReal(1.00000000000000))*(sj2));
IkReal x1845=((cj0)*(r01));
IkReal x1846=((r00)*(sj0));
IkReal x1847=((cj2)*(sj1));
if( IKabs(((((r01)*(sj0)))+(((cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1844)))+(((cj1)*(sj2)*(x1846)))+(((x1846)*(x1847)))+(((IkReal(-1.00000000000000))*(x1845)*(x1847)))+(((IkReal(-1.00000000000000))*(cj1)*(x1844)*(x1845)))+(((cj1)*(cj2)*(r02))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r01)*(sj0)))+(((cj0)*(r00)))))+IKsqr(((((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1844)))+(((cj1)*(sj2)*(x1846)))+(((x1846)*(x1847)))+(((IkReal(-1.00000000000000))*(x1845)*(x1847)))+(((IkReal(-1.00000000000000))*(cj1)*(x1844)*(x1845)))+(((cj1)*(cj2)*(r02)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((r01)*(sj0)))+(((cj0)*(r00)))), ((((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1844)))+(((cj1)*(sj2)*(x1846)))+(((x1846)*(x1847)))+(((IkReal(-1.00000000000000))*(x1845)*(x1847)))+(((IkReal(-1.00000000000000))*(cj1)*(x1844)*(x1845)))+(((cj1)*(cj2)*(r02)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1848=((cj2)*(sj1));
IkReal x1849=((cj0)*(r01));
IkReal x1850=((cj1)*(sj2));
IkReal x1851=((IkReal(1.00000000000000))*(r00)*(sj0));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1848)*(x1851)))+(((x1849)*(x1850)))+(((IkReal(-1.00000000000000))*(x1850)*(x1851)))+(IKcos(j5))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((x1848)*(x1849)))+(((r02)*(sj1)*(sj2))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1852=((IkReal(1.00000000000000))*(sj2));
IkReal x1853=((px)*(sj0));
IkReal x1854=((pz)*(sj2));
IkReal x1855=((cj0)*(sj1));
IkReal x1856=((cj1)*(sj2));
IkReal x1857=((sj1)*(sj2));
IkReal x1858=((cj2)*(sj1));
IkReal x1859=((r00)*(sj0));
IkReal x1860=((cj0)*(cj1)*(cj2));
IkReal x1861=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.000790000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r01)*(x1852)*(x1855)))+(((x1857)*(x1859)))+(((r02)*(x1856)))+(((r02)*(x1858)))+(((IkReal(-1.00000000000000))*(x1859)*(x1861)))+(((r01)*(x1860))));
evalcond[3]=((IkReal(-0.203420000000000))+(((py)*(x1860)))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x1853)*(x1861)))+(((pz)*(x1858)))+(((cj1)*(x1854)))+(((x1853)*(x1857)))+(((IkReal(-1.00000000000000))*(py)*(x1852)*(x1855)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(0.0588300000000000))+(((IkReal(-1.00000000000000))*(x1853)*(x1858)))+(((IkReal(-1.00000000000000))*(cj1)*(x1852)*(x1853)))+(((cj2)*(py)*(x1855)))+(((IkReal(0.521670000000000))*(cj2)))+(((sj1)*(x1854)))+(((IkReal(-1.00000000000000))*(pz)*(x1861)))+(((IkReal(0.00982000000000000))*(sj2)))+(((cj0)*(py)*(x1856))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1862=((IkReal(1.00000000000000))*(sj2));
IkReal x1863=((cj0)*(r01));
IkReal x1864=((r00)*(sj0));
IkReal x1865=((cj2)*(sj1));
if( IKabs(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x1864)*(x1865)))+(((IkReal(-1.00000000000000))*(cj1)*(x1862)*(x1863)))+(((cj1)*(sj2)*(x1864)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1862)))+(((cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(x1863)*(x1865))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))))+IKsqr(((((x1864)*(x1865)))+(((IkReal(-1.00000000000000))*(cj1)*(x1862)*(x1863)))+(((cj1)*(sj2)*(x1864)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1862)))+(((cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(x1863)*(x1865)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))), ((((x1864)*(x1865)))+(((IkReal(-1.00000000000000))*(cj1)*(x1862)*(x1863)))+(((cj1)*(sj2)*(x1864)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1862)))+(((cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(x1863)*(x1865)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1866=((cj2)*(sj1));
IkReal x1867=((cj0)*(r01));
IkReal x1868=((cj1)*(sj2));
IkReal x1869=((IkReal(1.00000000000000))*(r00)*(sj0));
evalcond[0]=((((r01)*(sj0)))+(IKsin(j5))+(((cj0)*(r00))));
evalcond[1]=((((x1867)*(x1868)))+(((IkReal(-1.00000000000000))*(x1866)*(x1869)))+(((x1866)*(x1867)))+(IKcos(j5))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(x1868)*(x1869)))+(((r02)*(sj1)*(sj2))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1870=((pz)*(sj1));
IkReal x1871=((cj0)*(py));
IkReal x1872=((IkReal(1.00000000000000))*(sj2));
IkReal x1873=((cj1)*(cj2));
IkReal x1874=((px)*(sj0));
IkReal x1875=((cj2)*(sj1));
IkReal x1876=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(0.190890000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.393520000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((x1871)*(x1873)))+(((cj2)*(x1870)))+(((sj1)*(sj2)*(x1874)))+(((IkReal(-1.00000000000000))*(x1873)*(x1874)))+(((pz)*(x1876)))+(((IkReal(-1.00000000000000))*(sj1)*(x1871)*(x1872)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(0.0588300000000000))+(((x1871)*(x1876)))+(((x1871)*(x1875)))+(((sj2)*(x1870)))+(((IkReal(-1.00000000000000))*(x1874)*(x1875)))+(((IkReal(-1.00000000000000))*(pz)*(x1873)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(0.00982000000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(cj1)*(x1872)*(x1874))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1877=((IkReal(1.00000000000000))*(sj2));
IkReal x1878=((r02)*(sj1));
IkReal x1879=((cj0)*(r01));
IkReal x1880=((IkReal(1.00000000000000))*(cj2));
IkReal x1881=((cj1)*(r02));
IkReal x1882=((cj1)*(r00)*(sj0));
IkReal x1883=((r00)*(sj0)*(sj1));
if( IKabs(((((sj2)*(x1883)))+(((sj2)*(x1881)))+(((cj1)*(cj2)*(x1879)))+(((IkReal(-1.00000000000000))*(x1880)*(x1882)))+(((IkReal(-1.00000000000000))*(sj1)*(x1877)*(x1879)))+(((cj2)*(x1878))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((sj2)*(x1882)))+(((IkReal(-1.00000000000000))*(x1877)*(x1878)))+(((cj2)*(x1883)))+(((cj2)*(x1881)))+(((IkReal(-1.00000000000000))*(sj1)*(x1879)*(x1880)))+(((IkReal(-1.00000000000000))*(cj1)*(x1877)*(x1879))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((sj2)*(x1883)))+(((sj2)*(x1881)))+(((cj1)*(cj2)*(x1879)))+(((IkReal(-1.00000000000000))*(x1880)*(x1882)))+(((IkReal(-1.00000000000000))*(sj1)*(x1877)*(x1879)))+(((cj2)*(x1878)))))+IKsqr(((((sj2)*(x1882)))+(((IkReal(-1.00000000000000))*(x1877)*(x1878)))+(((cj2)*(x1883)))+(((cj2)*(x1881)))+(((IkReal(-1.00000000000000))*(sj1)*(x1879)*(x1880)))+(((IkReal(-1.00000000000000))*(cj1)*(x1877)*(x1879)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((sj2)*(x1883)))+(((sj2)*(x1881)))+(((cj1)*(cj2)*(x1879)))+(((IkReal(-1.00000000000000))*(x1880)*(x1882)))+(((IkReal(-1.00000000000000))*(sj1)*(x1877)*(x1879)))+(((cj2)*(x1878)))), ((((sj2)*(x1882)))+(((IkReal(-1.00000000000000))*(x1877)*(x1878)))+(((cj2)*(x1883)))+(((cj2)*(x1881)))+(((IkReal(-1.00000000000000))*(sj1)*(x1879)*(x1880)))+(((IkReal(-1.00000000000000))*(cj1)*(x1877)*(x1879)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1884=((r02)*(sj2));
IkReal x1885=((IkReal(1.00000000000000))*(sj2));
IkReal x1886=((r00)*(sj0));
IkReal x1887=((cj1)*(cj2));
IkReal x1888=((cj0)*(r01));
IkReal x1889=((sj1)*(x1888));
IkReal x1890=((IkReal(1.00000000000000))*(cj2)*(x1886));
evalcond[0]=((((IkReal(-1.00000000000000))*(sj1)*(x1890)))+(((IkReal(-1.00000000000000))*(r02)*(x1887)))+(((cj2)*(x1889)))+(((IkReal(-1.00000000000000))*(cj1)*(x1885)*(x1886)))+(IKcos(j5))+(((cj1)*(sj2)*(x1888)))+(((sj1)*(x1884))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1886)*(x1887)))+(((x1887)*(x1888)))+(((cj1)*(x1884)))+(((cj2)*(r02)*(sj1)))+(((sj1)*(sj2)*(x1886)))+(((IkReal(-1.00000000000000))*(x1885)*(x1889)))+(((IkReal(-1.00000000000000))*(IKsin(j5)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1891=((pz)*(sj1));
IkReal x1892=((cj0)*(py));
IkReal x1893=((IkReal(1.00000000000000))*(sj2));
IkReal x1894=((cj1)*(cj2));
IkReal x1895=((px)*(sj0));
IkReal x1896=((cj2)*(sj1));
IkReal x1897=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(-0.190890000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.395100000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(sj1)*(x1892)*(x1893)))+(((x1892)*(x1894)))+(((pz)*(x1897)))+(((cj2)*(x1891)))+(((IkReal(-1.00000000000000))*(x1894)*(x1895)))+(((sj1)*(sj2)*(x1895)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(0.0588300000000000))+(((IkReal(-1.00000000000000))*(pz)*(x1894)))+(((sj2)*(x1891)))+(((x1892)*(x1897)))+(((x1892)*(x1896)))+(((IkReal(-1.00000000000000))*(x1895)*(x1896)))+(((IkReal(-1.00000000000000))*(cj1)*(x1893)*(x1895)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1898=((IkReal(1.00000000000000))*(sj2));
IkReal x1899=((r02)*(sj1));
IkReal x1900=((cj0)*(r01));
IkReal x1901=((r00)*(sj0));
IkReal x1902=((cj1)*(r02));
IkReal x1903=((IkReal(1.00000000000000))*(cj2));
if( IKabs(((((IkReal(-1.00000000000000))*(x1899)*(x1903)))+(((sj1)*(sj2)*(x1900)))+(((IkReal(-1.00000000000000))*(sj1)*(x1898)*(x1901)))+(((IkReal(-1.00000000000000))*(x1898)*(x1902)))+(((cj1)*(cj2)*(x1901)))+(((IkReal(-1.00000000000000))*(cj1)*(x1900)*(x1903))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj2)*(x1902)))+(((cj2)*(sj1)*(x1901)))+(((IkReal(-1.00000000000000))*(x1898)*(x1899)))+(((IkReal(-1.00000000000000))*(sj1)*(x1900)*(x1903)))+(((cj1)*(sj2)*(x1901)))+(((IkReal(-1.00000000000000))*(cj1)*(x1898)*(x1900))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x1899)*(x1903)))+(((sj1)*(sj2)*(x1900)))+(((IkReal(-1.00000000000000))*(sj1)*(x1898)*(x1901)))+(((IkReal(-1.00000000000000))*(x1898)*(x1902)))+(((cj1)*(cj2)*(x1901)))+(((IkReal(-1.00000000000000))*(cj1)*(x1900)*(x1903)))))+IKsqr(((((cj2)*(x1902)))+(((cj2)*(sj1)*(x1901)))+(((IkReal(-1.00000000000000))*(x1898)*(x1899)))+(((IkReal(-1.00000000000000))*(sj1)*(x1900)*(x1903)))+(((cj1)*(sj2)*(x1901)))+(((IkReal(-1.00000000000000))*(cj1)*(x1898)*(x1900)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x1899)*(x1903)))+(((sj1)*(sj2)*(x1900)))+(((IkReal(-1.00000000000000))*(sj1)*(x1898)*(x1901)))+(((IkReal(-1.00000000000000))*(x1898)*(x1902)))+(((cj1)*(cj2)*(x1901)))+(((IkReal(-1.00000000000000))*(cj1)*(x1900)*(x1903)))), ((((cj2)*(x1902)))+(((cj2)*(sj1)*(x1901)))+(((IkReal(-1.00000000000000))*(x1898)*(x1899)))+(((IkReal(-1.00000000000000))*(sj1)*(x1900)*(x1903)))+(((cj1)*(sj2)*(x1901)))+(((IkReal(-1.00000000000000))*(cj1)*(x1898)*(x1900)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1904=((r02)*(sj2));
IkReal x1905=((IkReal(1.00000000000000))*(sj2));
IkReal x1906=((r00)*(sj0));
IkReal x1907=((cj1)*(cj2));
IkReal x1908=((cj0)*(r01));
IkReal x1909=((sj1)*(x1908));
IkReal x1910=((IkReal(1.00000000000000))*(cj2)*(x1906));
evalcond[0]=((((IkReal(-1.00000000000000))*(sj1)*(x1910)))+(((cj2)*(x1909)))+(((IkReal(-1.00000000000000))*(cj1)*(x1905)*(x1906)))+(IKcos(j5))+(((sj1)*(x1904)))+(((cj1)*(sj2)*(x1908)))+(((IkReal(-1.00000000000000))*(r02)*(x1907))));
evalcond[1]=((((sj1)*(sj2)*(x1906)))+(((IkReal(-1.00000000000000))*(x1906)*(x1907)))+(((cj1)*(x1904)))+(((IkReal(-1.00000000000000))*(x1905)*(x1909)))+(IKsin(j5))+(((cj2)*(r02)*(sj1)))+(((x1907)*(x1908))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1911=((IkReal(1.00000000000000))*(sj2));
IkReal x1912=((r02)*(sj1));
IkReal x1913=((cj0)*(r01));
IkReal x1914=((IkReal(1.00000000000000))*(cj2));
IkReal x1915=((cj1)*(r02));
IkReal x1916=((cj1)*(r00)*(sj0));
IkReal x1917=((r00)*(sj0)*(sj1));
if( IKabs(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x1914)*(x1916)))+(((cj2)*(x1912)))+(((cj1)*(cj2)*(x1913)))+(((IkReal(-1.00000000000000))*(sj1)*(x1911)*(x1913)))+(((sj2)*(x1917)))+(((sj2)*(x1915))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x1911)*(x1912)))+(((cj2)*(x1917)))+(((cj2)*(x1915)))+(((IkReal(-1.00000000000000))*(sj1)*(x1913)*(x1914)))+(((IkReal(-1.00000000000000))*(cj1)*(x1911)*(x1913)))+(((sj2)*(x1916))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x1914)*(x1916)))+(((cj2)*(x1912)))+(((cj1)*(cj2)*(x1913)))+(((IkReal(-1.00000000000000))*(sj1)*(x1911)*(x1913)))+(((sj2)*(x1917)))+(((sj2)*(x1915)))))))+IKsqr(((((IkReal(-1.00000000000000))*(x1911)*(x1912)))+(((cj2)*(x1917)))+(((cj2)*(x1915)))+(((IkReal(-1.00000000000000))*(sj1)*(x1913)*(x1914)))+(((IkReal(-1.00000000000000))*(cj1)*(x1911)*(x1913)))+(((sj2)*(x1916)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x1914)*(x1916)))+(((cj2)*(x1912)))+(((cj1)*(cj2)*(x1913)))+(((IkReal(-1.00000000000000))*(sj1)*(x1911)*(x1913)))+(((sj2)*(x1917)))+(((sj2)*(x1915)))))), ((((IkReal(-1.00000000000000))*(x1911)*(x1912)))+(((cj2)*(x1917)))+(((cj2)*(x1915)))+(((IkReal(-1.00000000000000))*(sj1)*(x1913)*(x1914)))+(((IkReal(-1.00000000000000))*(cj1)*(x1911)*(x1913)))+(((sj2)*(x1916)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1918=IKsin(j5);
IkReal x1919=((r02)*(sj2));
IkReal x1920=((IkReal(1.00000000000000))*(sj2));
IkReal x1921=((r00)*(sj0));
IkReal x1922=((IkReal(1.00000000000000))*(cj2));
IkReal x1923=((IkReal(1.00000000000000))*(x1918));
IkReal x1924=((cj0)*(r01)*(sj1));
IkReal x1925=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x1923)))+(((cj0)*(r00))));
evalcond[1]=((((sj2)*(x1925)))+(((cj2)*(x1924)))+(IKcos(j5))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1922)))+(((sj1)*(x1919)))+(((IkReal(-1.00000000000000))*(cj1)*(x1920)*(x1921)))+(((IkReal(-1.00000000000000))*(sj1)*(x1921)*(x1922))));
evalcond[2]=((((cj1)*(x1919)))+(((sj1)*(sj2)*(x1921)))+(((IkReal(-1.00000000000000))*(sj4)*(x1923)))+(((cj2)*(x1925)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(x1921)*(x1922)))+(((IkReal(-1.00000000000000))*(x1920)*(x1924))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1926=((IkReal(1.00000000000000))*(sj2));
IkReal x1927=((cj0)*(r01));
IkReal x1928=((r00)*(sj0));
IkReal x1929=((cj2)*(sj1));
if( IKabs(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1926)))+(((x1928)*(x1929)))+(((IkReal(-1.00000000000000))*(x1927)*(x1929)))+(((IkReal(-1.00000000000000))*(cj1)*(x1926)*(x1927)))+(((cj1)*(sj2)*(x1928)))+(((cj1)*(cj2)*(r02))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))))+IKsqr(((((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1926)))+(((x1928)*(x1929)))+(((IkReal(-1.00000000000000))*(x1927)*(x1929)))+(((IkReal(-1.00000000000000))*(cj1)*(x1926)*(x1927)))+(((cj1)*(sj2)*(x1928)))+(((cj1)*(cj2)*(r02)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))), ((((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1926)))+(((x1928)*(x1929)))+(((IkReal(-1.00000000000000))*(x1927)*(x1929)))+(((IkReal(-1.00000000000000))*(cj1)*(x1926)*(x1927)))+(((cj1)*(sj2)*(x1928)))+(((cj1)*(cj2)*(r02)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1930=IKsin(j5);
IkReal x1931=((r02)*(sj2));
IkReal x1932=((IkReal(1.00000000000000))*(sj2));
IkReal x1933=((r00)*(sj0));
IkReal x1934=((IkReal(1.00000000000000))*(cj2));
IkReal x1935=((IkReal(1.00000000000000))*(x1930));
IkReal x1936=((cj0)*(r01)*(sj1));
IkReal x1937=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x1935)))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj1)*(x1933)*(x1934)))+(((sj2)*(x1937)))+(((IkReal(-1.00000000000000))*(cj1)*(x1932)*(x1933)))+(((cj2)*(x1936)))+(((sj1)*(x1931)))+(IKcos(j5))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1934))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj1)*(x1933)*(x1934)))+(((cj1)*(x1931)))+(((sj1)*(sj2)*(x1933)))+(((cj2)*(x1937)))+(((IkReal(-1.00000000000000))*(x1932)*(x1936)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(sj4)*(x1935))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1938=((cj1)*(sj2));
IkReal x1939=((px)*(sj0));
IkReal x1940=((sj1)*(sj2));
IkReal x1941=((cj0)*(py));
IkReal x1942=((cj2)*(pz));
IkReal x1943=((IkReal(1.00000000000000))*(cj1));
IkReal x1944=((cj2)*(x1941));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(0.000790000000000000))*(cj4)))+(((cj0)*(px)))+(((py)*(sj0)))+(((IkReal(0.190890000000000))*(sj4))));
evalcond[2]=((IkReal(-0.127870000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((x1939)*(x1940)))+(((IkReal(-1.00000000000000))*(x1940)*(x1941)))+(((pz)*(x1938)))+(((cj1)*(x1944)))+(((sj1)*(x1942)))+(((IkReal(0.190890000000000))*(cj4)))+(((IkReal(-0.000790000000000000))*(sj4)))+(((IkReal(-0.521670000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(cj2)*(x1939)*(x1943))));
evalcond[3]=((IkReal(-0.0438300000000000))+(((IkReal(-1.00000000000000))*(x1938)*(x1939)))+(((x1938)*(x1941)))+(((IkReal(-1.00000000000000))*(x1942)*(x1943)))+(((pz)*(x1940)))+(((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x1939)))+(((sj1)*(x1944)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x1945=((IkReal(1.00000000000000))*(sj2));
IkReal x1946=((px)*(sj0));
IkReal x1947=((pz)*(sj2));
IkReal x1948=((cj0)*(sj1));
IkReal x1949=((cj1)*(sj2));
IkReal x1950=((sj1)*(sj2));
IkReal x1951=((cj2)*(sj1));
IkReal x1952=((r00)*(sj0));
IkReal x1953=((cj0)*(cj1)*(cj2));
IkReal x1954=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.000790000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r01)*(x1945)*(x1948)))+(((IkReal(-1.00000000000000))*(x1952)*(x1954)))+(((x1950)*(x1952)))+(((r01)*(x1953)))+(((r02)*(x1951)))+(((r02)*(x1949))));
evalcond[3]=((IkReal(0.0630200000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(py)*(x1945)*(x1948)))+(((py)*(x1953)))+(((pz)*(x1951)))+(((x1946)*(x1950)))+(((cj1)*(x1947)))+(((IkReal(-1.00000000000000))*(x1946)*(x1954)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(-0.0438300000000000))+(((cj2)*(py)*(x1948)))+(((sj1)*(x1947)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(pz)*(x1954)))+(((IkReal(-1.00000000000000))*(cj1)*(x1945)*(x1946)))+(((cj0)*(py)*(x1949)))+(((IkReal(-1.00000000000000))*(x1946)*(x1951)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1955=((cj2)*(sj1));
IkReal x1956=((cj0)*(r01));
IkReal x1957=((cj1)*(sj2));
IkReal x1958=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((r01)*(sj0)))+(((cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x1957)*(x1958)))+(((x1955)*(x1956)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(x1955)*(x1958)))+(((r02)*(sj1)*(sj2)))+(((x1956)*(x1957))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r01)*(sj0)))+(((cj0)*(r00)))))+IKsqr(((((IkReal(-1.00000000000000))*(x1957)*(x1958)))+(((x1955)*(x1956)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(x1955)*(x1958)))+(((r02)*(sj1)*(sj2)))+(((x1956)*(x1957)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((r01)*(sj0)))+(((cj0)*(r00)))), ((((IkReal(-1.00000000000000))*(x1957)*(x1958)))+(((x1955)*(x1956)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(x1955)*(x1958)))+(((r02)*(sj1)*(sj2)))+(((x1956)*(x1957)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1959=((cj2)*(sj1));
IkReal x1960=((cj0)*(r01));
IkReal x1961=((cj1)*(sj2));
IkReal x1962=((IkReal(1.00000000000000))*(r00)*(sj0));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1959)*(x1962)))+(((x1959)*(x1960)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((IkReal(-1.00000000000000))*(x1961)*(x1962)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((x1960)*(x1961)))+(((r02)*(sj1)*(sj2))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1963=((IkReal(1.00000000000000))*(sj2));
IkReal x1964=((px)*(sj0));
IkReal x1965=((pz)*(sj2));
IkReal x1966=((cj0)*(sj1));
IkReal x1967=((cj1)*(sj2));
IkReal x1968=((sj1)*(sj2));
IkReal x1969=((cj2)*(sj1));
IkReal x1970=((r00)*(sj0));
IkReal x1971=((cj0)*(cj1)*(cj2));
IkReal x1972=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.000790000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((r02)*(x1967)))+(((r02)*(x1969)))+(((IkReal(-1.00000000000000))*(x1970)*(x1972)))+(((r01)*(x1971)))+(((x1968)*(x1970)))+(((IkReal(-1.00000000000000))*(r01)*(x1963)*(x1966))));
evalcond[3]=((IkReal(-0.318760000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x1964)*(x1972)))+(((cj1)*(x1965)))+(((x1964)*(x1968)))+(((pz)*(x1969)))+(((py)*(x1971)))+(((IkReal(-0.521670000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(py)*(x1963)*(x1966))));
evalcond[4]=((IkReal(-0.0438300000000000))+(((IkReal(-1.00000000000000))*(cj1)*(x1963)*(x1964)))+(((cj2)*(py)*(x1966)))+(((sj1)*(x1965)))+(((IkReal(-1.00000000000000))*(x1964)*(x1969)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(pz)*(x1972)))+(((IkReal(0.00982000000000000))*(sj2)))+(((cj0)*(py)*(x1967))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1973=((cj2)*(sj1));
IkReal x1974=((cj0)*(r01));
IkReal x1975=((cj1)*(sj2));
IkReal x1976=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x1975)*(x1976)))+(((IkReal(-1.00000000000000))*(x1973)*(x1976)))+(((x1974)*(x1975)))+(((x1973)*(x1974)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((r02)*(sj1)*(sj2))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))))+IKsqr(((((IkReal(-1.00000000000000))*(x1975)*(x1976)))+(((IkReal(-1.00000000000000))*(x1973)*(x1976)))+(((x1974)*(x1975)))+(((x1973)*(x1974)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((r02)*(sj1)*(sj2)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))), ((((IkReal(-1.00000000000000))*(x1975)*(x1976)))+(((IkReal(-1.00000000000000))*(x1973)*(x1976)))+(((x1974)*(x1975)))+(((x1973)*(x1974)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((r02)*(sj1)*(sj2)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1977=((cj2)*(sj1));
IkReal x1978=((cj0)*(r01));
IkReal x1979=((cj1)*(sj2));
IkReal x1980=((IkReal(1.00000000000000))*(r00)*(sj0));
evalcond[0]=((((r01)*(sj0)))+(IKsin(j5))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1979)*(x1980)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((x1978)*(x1979)))+(((IkReal(-1.00000000000000))*(x1977)*(x1980)))+(((r02)*(sj1)*(sj2)))+(((x1977)*(x1978))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1981=((pz)*(sj1));
IkReal x1982=((cj0)*(py));
IkReal x1983=((IkReal(1.00000000000000))*(sj2));
IkReal x1984=((cj1)*(cj2));
IkReal x1985=((px)*(sj0));
IkReal x1986=((cj2)*(sj1));
IkReal x1987=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(0.190890000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.128660000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((cj2)*(x1981)))+(((IkReal(-1.00000000000000))*(x1984)*(x1985)))+(((pz)*(x1987)))+(((x1982)*(x1984)))+(((IkReal(-0.521670000000000))*(sj2)))+(((sj1)*(sj2)*(x1985)))+(((IkReal(-1.00000000000000))*(sj1)*(x1982)*(x1983))));
evalcond[4]=((IkReal(-0.0438300000000000))+(((IkReal(-1.00000000000000))*(x1985)*(x1986)))+(((sj2)*(x1981)))+(((IkReal(-1.00000000000000))*(cj1)*(x1983)*(x1985)))+(((IkReal(0.521670000000000))*(cj2)))+(((x1982)*(x1987)))+(((x1982)*(x1986)))+(((IkReal(-1.00000000000000))*(pz)*(x1984)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1988=((sj1)*(sj2));
IkReal x1989=((cj2)*(sj1));
IkReal x1990=((cj1)*(sj2));
IkReal x1991=((IkReal(1.00000000000000))*(r02));
IkReal x1992=((cj1)*(cj2));
IkReal x1993=((cj0)*(r01));
IkReal x1994=((sj1)*(x1993));
IkReal x1995=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((x1988)*(x1993)))+(((r00)*(sj0)*(x1992)))+(((IkReal(-1.00000000000000))*(x1989)*(x1991)))+(((IkReal(-1.00000000000000))*(x1992)*(x1993)))+(((IkReal(-1.00000000000000))*(x1990)*(x1991)))+(((IkReal(-1.00000000000000))*(x1988)*(x1995))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x1989)*(x1995)))+(((x1989)*(x1993)))+(((IkReal(-1.00000000000000))*(x1991)*(x1992)))+(((IkReal(-1.00000000000000))*(x1990)*(x1995)))+(((x1990)*(x1993)))+(((r02)*(x1988))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((x1988)*(x1993)))+(((r00)*(sj0)*(x1992)))+(((IkReal(-1.00000000000000))*(x1989)*(x1991)))+(((IkReal(-1.00000000000000))*(x1992)*(x1993)))+(((IkReal(-1.00000000000000))*(x1990)*(x1991)))+(((IkReal(-1.00000000000000))*(x1988)*(x1995)))))+IKsqr(((((IkReal(-1.00000000000000))*(x1989)*(x1995)))+(((x1989)*(x1993)))+(((IkReal(-1.00000000000000))*(x1991)*(x1992)))+(((IkReal(-1.00000000000000))*(x1990)*(x1995)))+(((x1990)*(x1993)))+(((r02)*(x1988)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((x1988)*(x1993)))+(((r00)*(sj0)*(x1992)))+(((IkReal(-1.00000000000000))*(x1989)*(x1991)))+(((IkReal(-1.00000000000000))*(x1992)*(x1993)))+(((IkReal(-1.00000000000000))*(x1990)*(x1991)))+(((IkReal(-1.00000000000000))*(x1988)*(x1995)))), ((((IkReal(-1.00000000000000))*(x1989)*(x1995)))+(((x1989)*(x1993)))+(((IkReal(-1.00000000000000))*(x1991)*(x1992)))+(((IkReal(-1.00000000000000))*(x1990)*(x1995)))+(((x1990)*(x1993)))+(((r02)*(x1988)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1996=((r02)*(sj2));
IkReal x1997=((IkReal(1.00000000000000))*(sj2));
IkReal x1998=((r00)*(sj0));
IkReal x1999=((cj1)*(cj2));
IkReal x2000=((cj0)*(r01));
IkReal x2001=((sj1)*(x2000));
IkReal x2002=((IkReal(1.00000000000000))*(cj2)*(x1998));
evalcond[0]=((((sj1)*(x1996)))+(((IkReal(-1.00000000000000))*(r02)*(x1999)))+(((IkReal(-1.00000000000000))*(sj1)*(x2002)))+(((IkReal(-1.00000000000000))*(cj1)*(x1997)*(x1998)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((cj1)*(sj2)*(x2000)))+(((cj2)*(x2001))));
evalcond[1]=((((x1999)*(x2000)))+(((IkReal(-1.00000000000000))*(x1998)*(x1999)))+(IKsin(j5))+(((cj2)*(r02)*(sj1)))+(((cj1)*(x1996)))+(((IkReal(-1.00000000000000))*(x1997)*(x2001)))+(((sj1)*(sj2)*(x1998))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x2003=((pz)*(sj1));
IkReal x2004=((cj0)*(py));
IkReal x2005=((IkReal(1.00000000000000))*(sj2));
IkReal x2006=((cj1)*(cj2));
IkReal x2007=((px)*(sj0));
IkReal x2008=((cj2)*(sj1));
IkReal x2009=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(-0.190890000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.127080000000000))+(((IkReal(-1.00000000000000))*(sj1)*(x2004)*(x2005)))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x2006)*(x2007)))+(((pz)*(x2009)))+(((cj2)*(x2003)))+(((sj1)*(sj2)*(x2007)))+(((x2004)*(x2006)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(-0.0438300000000000))+(((sj2)*(x2003)))+(((IkReal(-1.00000000000000))*(x2007)*(x2008)))+(((IkReal(-1.00000000000000))*(pz)*(x2006)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(cj1)*(x2005)*(x2007)))+(((x2004)*(x2008)))+(((x2004)*(x2009)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2010=((cj2)*(sj1));
IkReal x2011=((cj0)*(r01));
IkReal x2012=((sj1)*(sj2));
IkReal x2013=((cj1)*(cj2));
IkReal x2014=((cj1)*(sj2));
IkReal x2015=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((IkReal(-1.00000000000000))*(x2013)*(x2015)))+(((r00)*(sj0)*(x2012)))+(((x2011)*(x2013)))+(((IkReal(-1.00000000000000))*(x2011)*(x2012)))+(((r02)*(x2014)))+(((r02)*(x2010))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x2010)*(x2015)))+(((IkReal(-1.00000000000000))*(r02)*(x2013)))+(((x2011)*(x2014)))+(((x2010)*(x2011)))+(((IkReal(-1.00000000000000))*(x2014)*(x2015)))+(((r02)*(x2012))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x2013)*(x2015)))+(((r00)*(sj0)*(x2012)))+(((x2011)*(x2013)))+(((IkReal(-1.00000000000000))*(x2011)*(x2012)))+(((r02)*(x2014)))+(((r02)*(x2010)))))+IKsqr(((((IkReal(-1.00000000000000))*(x2010)*(x2015)))+(((IkReal(-1.00000000000000))*(r02)*(x2013)))+(((x2011)*(x2014)))+(((x2010)*(x2011)))+(((IkReal(-1.00000000000000))*(x2014)*(x2015)))+(((r02)*(x2012)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x2013)*(x2015)))+(((r00)*(sj0)*(x2012)))+(((x2011)*(x2013)))+(((IkReal(-1.00000000000000))*(x2011)*(x2012)))+(((r02)*(x2014)))+(((r02)*(x2010)))), ((((IkReal(-1.00000000000000))*(x2010)*(x2015)))+(((IkReal(-1.00000000000000))*(r02)*(x2013)))+(((x2011)*(x2014)))+(((x2010)*(x2011)))+(((IkReal(-1.00000000000000))*(x2014)*(x2015)))+(((r02)*(x2012)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x2016=((r02)*(sj2));
IkReal x2017=((IkReal(1.00000000000000))*(sj2));
IkReal x2018=((r00)*(sj0));
IkReal x2019=((cj1)*(cj2));
IkReal x2020=((cj0)*(r01));
IkReal x2021=((sj1)*(x2020));
IkReal x2022=((IkReal(1.00000000000000))*(cj2)*(x2018));
evalcond[0]=((((sj1)*(x2016)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((IkReal(-1.00000000000000))*(r02)*(x2019)))+(((cj1)*(sj2)*(x2020)))+(((IkReal(-1.00000000000000))*(sj1)*(x2022)))+(((cj2)*(x2021)))+(((IkReal(-1.00000000000000))*(cj1)*(x2017)*(x2018))));
evalcond[1]=((((cj1)*(x2016)))+(((x2019)*(x2020)))+(((IkReal(-1.00000000000000))*(x2018)*(x2019)))+(((IkReal(-1.00000000000000))*(x2017)*(x2021)))+(((cj2)*(r02)*(sj1)))+(((sj1)*(sj2)*(x2018)))+(((IkReal(-1.00000000000000))*(IKsin(j5)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2023=((sj1)*(sj2));
IkReal x2024=((cj2)*(sj1));
IkReal x2025=((cj1)*(sj2));
IkReal x2026=((IkReal(1.00000000000000))*(r02));
IkReal x2027=((cj1)*(cj2));
IkReal x2028=((cj0)*(r01));
IkReal x2029=((sj1)*(x2028));
IkReal x2030=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((r00)*(sj0)*(x2027)))+(((IkReal(-1.00000000000000))*(x2027)*(x2028)))+(((IkReal(-1.00000000000000))*(x2023)*(x2030)))+(((x2023)*(x2028)))+(((IkReal(-1.00000000000000))*(x2025)*(x2026)))+(((IkReal(-1.00000000000000))*(x2024)*(x2026))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x2024)*(x2028)))+(((x2025)*(x2028)))+(((r02)*(x2023)))+(((IkReal(-1.00000000000000))*(x2026)*(x2027)))+(((IkReal(-1.00000000000000))*(x2024)*(x2030)))+(((IkReal(-1.00000000000000))*(x2025)*(x2030))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((r00)*(sj0)*(x2027)))+(((IkReal(-1.00000000000000))*(x2027)*(x2028)))+(((IkReal(-1.00000000000000))*(x2023)*(x2030)))+(((x2023)*(x2028)))+(((IkReal(-1.00000000000000))*(x2025)*(x2026)))+(((IkReal(-1.00000000000000))*(x2024)*(x2026)))))))+IKsqr(((((x2024)*(x2028)))+(((x2025)*(x2028)))+(((r02)*(x2023)))+(((IkReal(-1.00000000000000))*(x2026)*(x2027)))+(((IkReal(-1.00000000000000))*(x2024)*(x2030)))+(((IkReal(-1.00000000000000))*(x2025)*(x2030)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((r00)*(sj0)*(x2027)))+(((IkReal(-1.00000000000000))*(x2027)*(x2028)))+(((IkReal(-1.00000000000000))*(x2023)*(x2030)))+(((x2023)*(x2028)))+(((IkReal(-1.00000000000000))*(x2025)*(x2026)))+(((IkReal(-1.00000000000000))*(x2024)*(x2026)))))), ((((x2024)*(x2028)))+(((x2025)*(x2028)))+(((r02)*(x2023)))+(((IkReal(-1.00000000000000))*(x2026)*(x2027)))+(((IkReal(-1.00000000000000))*(x2024)*(x2030)))+(((IkReal(-1.00000000000000))*(x2025)*(x2030)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x2031=IKsin(j5);
IkReal x2032=((r02)*(sj2));
IkReal x2033=((IkReal(1.00000000000000))*(sj2));
IkReal x2034=((r00)*(sj0));
IkReal x2035=((IkReal(1.00000000000000))*(cj2));
IkReal x2036=((cj0)*(r01)*(sj1));
IkReal x2037=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x2031)))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj1)*(r02)*(x2035)))+(((sj2)*(x2037)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((sj1)*(x2032)))+(((cj2)*(x2036)))+(((IkReal(-1.00000000000000))*(sj1)*(x2034)*(x2035)))+(((IkReal(-1.00000000000000))*(cj1)*(x2033)*(x2034))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj1)*(x2034)*(x2035)))+(((cj2)*(r02)*(sj1)))+(((sj4)*(x2031)))+(((cj2)*(x2037)))+(((sj1)*(sj2)*(x2034)))+(((cj1)*(x2032)))+(((IkReal(-1.00000000000000))*(x2033)*(x2036))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2038=((cj2)*(sj1));
IkReal x2039=((cj0)*(r01));
IkReal x2040=((cj1)*(sj2));
IkReal x2041=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x2039)*(x2040)))+(((x2038)*(x2039)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(x2040)*(x2041)))+(((r02)*(sj1)*(sj2)))+(((IkReal(-1.00000000000000))*(x2038)*(x2041))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))))+IKsqr(((((x2039)*(x2040)))+(((x2038)*(x2039)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(x2040)*(x2041)))+(((r02)*(sj1)*(sj2)))+(((IkReal(-1.00000000000000))*(x2038)*(x2041)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))), ((((x2039)*(x2040)))+(((x2038)*(x2039)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(x2040)*(x2041)))+(((r02)*(sj1)*(sj2)))+(((IkReal(-1.00000000000000))*(x2038)*(x2041)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x2042=IKsin(j5);
IkReal x2043=((r02)*(sj2));
IkReal x2044=((IkReal(1.00000000000000))*(sj2));
IkReal x2045=((r00)*(sj0));
IkReal x2046=((IkReal(1.00000000000000))*(cj2));
IkReal x2047=((cj0)*(r01)*(sj1));
IkReal x2048=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x2042)))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj1)*(x2044)*(x2045)))+(((IkReal(-1.00000000000000))*(sj1)*(x2045)*(x2046)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x2046)))+(((cj2)*(x2047)))+(((sj1)*(x2043)))+(((sj2)*(x2048))));
evalcond[2]=((((sj1)*(sj2)*(x2045)))+(((IkReal(-1.00000000000000))*(x2044)*(x2047)))+(((sj4)*(x2042)))+(((cj2)*(r02)*(sj1)))+(((cj2)*(x2048)))+(((cj1)*(x2043)))+(((IkReal(-1.00000000000000))*(cj1)*(x2045)*(x2046))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x2049=((cj1)*(sj2));
IkReal x2050=((px)*(sj0));
IkReal x2051=((sj1)*(sj2));
IkReal x2052=((cj0)*(py));
IkReal x2053=((cj2)*(pz));
IkReal x2054=((IkReal(1.00000000000000))*(cj1));
IkReal x2055=((cj2)*(x2052));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.000790000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((IkReal(-0.261090000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(cj2)*(x2050)*(x2054)))+(((sj1)*(x2053)))+(((pz)*(x2049)))+(((IkReal(-1.00000000000000))*(x2051)*(x2052)))+(((cj1)*(x2055)))+(((x2050)*(x2051)))+(((IkReal(0.0513300000000000))*(sj3)))+(((IkReal(-0.521670000000000))*(sj2)))+(((IkReal(-0.324110000000000))*(cj3))));
evalcond[3]=((IkReal(0.00750000000000000))+(((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x2050)))+(((x2049)*(x2052)))+(((IkReal(0.0513300000000000))*(cj3)))+(((sj1)*(x2055)))+(((IkReal(0.521670000000000))*(cj2)))+(((pz)*(x2051)))+(((IkReal(-1.00000000000000))*(x2053)*(x2054)))+(((IkReal(0.324110000000000))*(sj3)))+(((IkReal(-1.00000000000000))*(x2049)*(x2050)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2056=((cj0)*(r01));
IkReal x2057=((sj1)*(sj2));
IkReal x2058=((IkReal(1.00000000000000))*(cj1));
IkReal x2059=((r00)*(sj0));
if( IKabs(((((r01)*(sj0)))+(((cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((cj1)*(cj2)*(x2059)))+(((IkReal(-1.00000000000000))*(x2057)*(x2059)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x2058)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj2)*(x2056)*(x2058)))+(((x2056)*(x2057))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r01)*(sj0)))+(((cj0)*(r00)))))+IKsqr(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((cj1)*(cj2)*(x2059)))+(((IkReal(-1.00000000000000))*(x2057)*(x2059)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x2058)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj2)*(x2056)*(x2058)))+(((x2056)*(x2057)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((r01)*(sj0)))+(((cj0)*(r00)))), ((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((cj1)*(cj2)*(x2059)))+(((IkReal(-1.00000000000000))*(x2057)*(x2059)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x2058)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj2)*(x2056)*(x2058)))+(((x2056)*(x2057)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x2060=IKcos(j5);
IkReal x2061=((r02)*(sj2));
IkReal x2062=((IkReal(1.00000000000000))*(sj2));
IkReal x2063=((r00)*(sj0));
IkReal x2064=((IkReal(1.00000000000000))*(cj2));
IkReal x2065=((cj0)*(r01)*(sj1));
IkReal x2066=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((cj0)*(r00))));
evalcond[1]=((((sj2)*(x2066)))+(((IkReal(-1.00000000000000))*(cj1)*(x2062)*(x2063)))+(((IkReal(-1.00000000000000))*(sj1)*(x2063)*(x2064)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x2064)))+(((sj1)*(x2061)))+(((cj3)*(x2060)))+(((cj2)*(x2065))));
evalcond[2]=((((sj3)*(x2060)))+(((sj1)*(sj2)*(x2063)))+(((IkReal(-1.00000000000000))*(x2062)*(x2065)))+(((cj2)*(r02)*(sj1)))+(((cj1)*(x2061)))+(((IkReal(-1.00000000000000))*(cj1)*(x2063)*(x2064)))+(((cj2)*(x2066))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2067=((IkReal(1.00000000000000))*(sj2));
IkReal x2068=((cj0)*(r01));
IkReal x2069=((cj2)*(sj1));
IkReal x2070=((r00)*(sj0));
if( IKabs(((((r01)*(sj0)))+(((cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r02)*(sj1)*(x2067)))+(((x2069)*(x2070)))+(((IkReal(-1.00000000000000))*(cj1)*(x2067)*(x2068)))+(((IkReal(-1.00000000000000))*(x2068)*(x2069)))+(((cj1)*(sj2)*(x2070)))+(((cj1)*(cj2)*(r02))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r01)*(sj0)))+(((cj0)*(r00)))))+IKsqr(((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r02)*(sj1)*(x2067)))+(((x2069)*(x2070)))+(((IkReal(-1.00000000000000))*(cj1)*(x2067)*(x2068)))+(((IkReal(-1.00000000000000))*(x2068)*(x2069)))+(((cj1)*(sj2)*(x2070)))+(((cj1)*(cj2)*(r02)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((r01)*(sj0)))+(((cj0)*(r00)))), ((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r02)*(sj1)*(x2067)))+(((x2069)*(x2070)))+(((IkReal(-1.00000000000000))*(cj1)*(x2067)*(x2068)))+(((IkReal(-1.00000000000000))*(x2068)*(x2069)))+(((cj1)*(sj2)*(x2070)))+(((cj1)*(cj2)*(r02)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x2071=IKcos(j5);
IkReal x2072=((r02)*(sj2));
IkReal x2073=((IkReal(1.00000000000000))*(sj2));
IkReal x2074=((r00)*(sj0));
IkReal x2075=((IkReal(1.00000000000000))*(cj2));
IkReal x2076=((cj0)*(r01)*(sj1));
IkReal x2077=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((cj0)*(r00))));
evalcond[1]=((((sj2)*(x2077)))+(((IkReal(-1.00000000000000))*(cj1)*(x2073)*(x2074)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x2075)))+(((IkReal(-1.00000000000000))*(sj1)*(x2074)*(x2075)))+(((sj1)*(x2072)))+(((cj2)*(x2076)))+(((cj3)*(x2071))));
evalcond[2]=((((sj3)*(x2071)))+(((sj1)*(sj2)*(x2074)))+(((cj2)*(r02)*(sj1)))+(((cj1)*(x2072)))+(((IkReal(-1.00000000000000))*(x2073)*(x2076)))+(((IkReal(-1.00000000000000))*(cj1)*(x2074)*(x2075)))+(((cj2)*(x2077))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x2078=((cj1)*(sj2));
IkReal x2079=((px)*(sj0));
IkReal x2080=((sj1)*(sj2));
IkReal x2081=((cj0)*(py));
IkReal x2082=((cj2)*(pz));
IkReal x2083=((IkReal(1.00000000000000))*(cj1));
IkReal x2084=((cj2)*(x2081));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.000790000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((IkReal(-0.261090000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((sj1)*(x2082)))+(((cj1)*(x2084)))+(((IkReal(-1.00000000000000))*(cj2)*(x2079)*(x2083)))+(((pz)*(x2078)))+(((x2079)*(x2080)))+(((IkReal(0.0513300000000000))*(sj3)))+(((IkReal(0.0576700000000000))*(cj3)))+(((IkReal(-0.521670000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(x2080)*(x2081))));
evalcond[3]=((IkReal(0.00750000000000000))+(((IkReal(-1.00000000000000))*(x2078)*(x2079)))+(((IkReal(-0.0576700000000000))*(sj3)))+(((x2078)*(x2081)))+(((sj1)*(x2084)))+(((IkReal(0.0513300000000000))*(cj3)))+(((pz)*(x2080)))+(((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x2079)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x2082)*(x2083)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2085=((sj1)*(sj2));
IkReal x2086=((cj0)*(r01));
IkReal x2087=((r00)*(sj0));
IkReal x2088=((IkReal(1.00000000000000))*(cj1));
if( IKabs(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((x2085)*(x2086)))+(((cj1)*(cj2)*(x2087)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x2088)))+(((IkReal(-1.00000000000000))*(x2085)*(x2087)))+(((IkReal(-1.00000000000000))*(cj2)*(x2086)*(x2088)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))))+IKsqr(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((x2085)*(x2086)))+(((cj1)*(cj2)*(x2087)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x2088)))+(((IkReal(-1.00000000000000))*(x2085)*(x2087)))+(((IkReal(-1.00000000000000))*(cj2)*(x2086)*(x2088)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))), ((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((x2085)*(x2086)))+(((cj1)*(cj2)*(x2087)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x2088)))+(((IkReal(-1.00000000000000))*(x2085)*(x2087)))+(((IkReal(-1.00000000000000))*(cj2)*(x2086)*(x2088)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x2089=IKcos(j5);
IkReal x2090=((r02)*(sj2));
IkReal x2091=((IkReal(1.00000000000000))*(sj2));
IkReal x2092=((r00)*(sj0));
IkReal x2093=((IkReal(1.00000000000000))*(cj2));
IkReal x2094=((cj0)*(r01)*(sj1));
IkReal x2095=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(IKsin(j5))+(((cj0)*(r00))));
evalcond[1]=((((sj1)*(x2090)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x2093)))+(((cj2)*(x2094)))+(((sj2)*(x2095)))+(((IkReal(-1.00000000000000))*(sj1)*(x2092)*(x2093)))+(((IkReal(-1.00000000000000))*(cj1)*(x2091)*(x2092)))+(((cj3)*(x2089))));
evalcond[2]=((((cj1)*(x2090)))+(((IkReal(-1.00000000000000))*(x2091)*(x2094)))+(((cj2)*(x2095)))+(((sj1)*(sj2)*(x2092)))+(((cj2)*(r02)*(sj1)))+(((sj3)*(x2089)))+(((IkReal(-1.00000000000000))*(cj1)*(x2092)*(x2093))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2096=((IkReal(1.00000000000000))*(sj2));
IkReal x2097=((cj0)*(r01));
IkReal x2098=((cj2)*(sj1));
IkReal x2099=((r00)*(sj0));
if( IKabs(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((x2098)*(x2099)))+(((IkReal(-1.00000000000000))*(cj1)*(x2096)*(x2097)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x2096)))+(((IkReal(-1.00000000000000))*(x2097)*(x2098)))+(((cj1)*(sj2)*(x2099)))+(((cj1)*(cj2)*(r02))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))))+IKsqr(((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((x2098)*(x2099)))+(((IkReal(-1.00000000000000))*(cj1)*(x2096)*(x2097)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x2096)))+(((IkReal(-1.00000000000000))*(x2097)*(x2098)))+(((cj1)*(sj2)*(x2099)))+(((cj1)*(cj2)*(r02)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))), ((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((x2098)*(x2099)))+(((IkReal(-1.00000000000000))*(cj1)*(x2096)*(x2097)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x2096)))+(((IkReal(-1.00000000000000))*(x2097)*(x2098)))+(((cj1)*(sj2)*(x2099)))+(((cj1)*(cj2)*(r02)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x2100=IKcos(j5);
IkReal x2101=((r02)*(sj2));
IkReal x2102=((IkReal(1.00000000000000))*(sj2));
IkReal x2103=((r00)*(sj0));
IkReal x2104=((IkReal(1.00000000000000))*(cj2));
IkReal x2105=((cj0)*(r01)*(sj1));
IkReal x2106=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(IKsin(j5))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj1)*(x2103)*(x2104)))+(((cj3)*(x2100)))+(((cj2)*(x2105)))+(((IkReal(-1.00000000000000))*(cj1)*(x2102)*(x2103)))+(((sj2)*(x2106)))+(((sj1)*(x2101)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x2104))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2102)*(x2105)))+(((IkReal(-1.00000000000000))*(cj1)*(x2103)*(x2104)))+(((cj2)*(x2106)))+(((cj2)*(r02)*(sj1)))+(((sj1)*(sj2)*(x2103)))+(((cj1)*(x2101)))+(((sj3)*(x2100))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2107=((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30);
IkReal x2108=((cj0)*(r00));
IkReal x2109=((r00)*(sj0));
IkReal x2110=((r01)*(sj0));
IkReal x2111=((cj4)*(r02));
IkReal x2112=((cj1)*(cj4)*(sj2));
IkReal x2113=((IkReal(1.00000000000000))*(sj3)*(sj4));
IkReal x2114=((IkReal(1.00000000000000))*(cj0)*(r01));
IkReal x2115=((cj2)*(cj4)*(sj1));
if( IKabs(((x2107)*(((x2110)+(x2108))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x2107)*(((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x2114)*(x2115)))+(((x2109)*(x2115)))+(((x2109)*(x2112)))+(((IkReal(-1.00000000000000))*(x2112)*(x2114)))+(((IkReal(-1.00000000000000))*(sj1)*(sj2)*(x2111)))+(((IkReal(-1.00000000000000))*(x2108)*(x2113)))+(((IkReal(-1.00000000000000))*(x2110)*(x2113)))+(((cj1)*(cj2)*(x2111))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x2107)*(((x2110)+(x2108)))))+IKsqr(((x2107)*(((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x2114)*(x2115)))+(((x2109)*(x2115)))+(((x2109)*(x2112)))+(((IkReal(-1.00000000000000))*(x2112)*(x2114)))+(((IkReal(-1.00000000000000))*(sj1)*(sj2)*(x2111)))+(((IkReal(-1.00000000000000))*(x2108)*(x2113)))+(((IkReal(-1.00000000000000))*(x2110)*(x2113)))+(((cj1)*(cj2)*(x2111)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((x2107)*(((x2110)+(x2108)))), ((x2107)*(((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x2114)*(x2115)))+(((x2109)*(x2115)))+(((x2109)*(x2112)))+(((IkReal(-1.00000000000000))*(x2112)*(x2114)))+(((IkReal(-1.00000000000000))*(sj1)*(sj2)*(x2111)))+(((IkReal(-1.00000000000000))*(x2108)*(x2113)))+(((IkReal(-1.00000000000000))*(x2110)*(x2113)))+(((cj1)*(cj2)*(x2111)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x2116=IKsin(j5);
IkReal x2117=IKcos(j5);
IkReal x2118=((r02)*(sj2));
IkReal x2119=((IkReal(1.00000000000000))*(sj2));
IkReal x2120=((r00)*(sj0));
IkReal x2121=((IkReal(1.00000000000000))*(cj2));
IkReal x2122=((IkReal(1.00000000000000))*(x2116));
IkReal x2123=((cj0)*(r01)*(sj1));
IkReal x2124=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x2122)))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj1)*(x2120)*(x2121)))+(((sj2)*(x2124)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x2121)))+(((sj1)*(x2118)))+(((cj2)*(x2123)))+(((sj3)*(sj4)*(x2116)))+(((IkReal(-1.00000000000000))*(cj1)*(x2119)*(x2120)))+(((cj3)*(x2117))));
evalcond[2]=((((sj1)*(sj2)*(x2120)))+(((IkReal(-1.00000000000000))*(x2119)*(x2123)))+(((cj2)*(x2124)))+(((sj3)*(x2117)))+(((IkReal(-1.00000000000000))*(cj3)*(sj4)*(x2122)))+(((IkReal(-1.00000000000000))*(cj1)*(x2120)*(x2121)))+(((cj2)*(r02)*(sj1)))+(((cj1)*(x2118))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2125=((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30);
IkReal x2126=((cj0)*(r00));
IkReal x2127=((r01)*(sj0));
IkReal x2128=((cj3)*(sj4));
IkReal x2129=((cj0)*(r01));
IkReal x2130=((cj4)*(sj2));
IkReal x2131=((r00)*(sj0));
IkReal x2132=((IkReal(1.00000000000000))*(cj2)*(cj4));
if( IKabs(((x2125)*(((x2127)+(x2126))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x2125)*(((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(sj1)*(x2130)*(x2131)))+(((IkReal(-1.00000000000000))*(cj1)*(x2129)*(x2132)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x2130)))+(((cj1)*(cj2)*(cj4)*(x2131)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x2132)))+(((sj1)*(x2129)*(x2130)))+(((x2126)*(x2128)))+(((x2127)*(x2128))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x2125)*(((x2127)+(x2126)))))+IKsqr(((x2125)*(((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(sj1)*(x2130)*(x2131)))+(((IkReal(-1.00000000000000))*(cj1)*(x2129)*(x2132)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x2130)))+(((cj1)*(cj2)*(cj4)*(x2131)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x2132)))+(((sj1)*(x2129)*(x2130)))+(((x2126)*(x2128)))+(((x2127)*(x2128)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((x2125)*(((x2127)+(x2126)))), ((x2125)*(((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(sj1)*(x2130)*(x2131)))+(((IkReal(-1.00000000000000))*(cj1)*(x2129)*(x2132)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x2130)))+(((cj1)*(cj2)*(cj4)*(x2131)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x2132)))+(((sj1)*(x2129)*(x2130)))+(((x2126)*(x2128)))+(((x2127)*(x2128)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x2133=IKsin(j5);
IkReal x2134=IKcos(j5);
IkReal x2135=((r02)*(sj2));
IkReal x2136=((IkReal(1.00000000000000))*(sj2));
IkReal x2137=((r00)*(sj0));
IkReal x2138=((IkReal(1.00000000000000))*(cj2));
IkReal x2139=((IkReal(1.00000000000000))*(x2133));
IkReal x2140=((cj0)*(r01)*(sj1));
IkReal x2141=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x2139)))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj1)*(x2137)*(x2138)))+(((cj2)*(x2140)))+(((sj3)*(sj4)*(x2133)))+(((cj3)*(x2134)))+(((sj1)*(x2135)))+(((IkReal(-1.00000000000000))*(cj1)*(x2136)*(x2137)))+(((sj2)*(x2141)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x2138))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2136)*(x2140)))+(((IkReal(-1.00000000000000))*(cj1)*(x2137)*(x2138)))+(((cj2)*(x2141)))+(((IkReal(-1.00000000000000))*(cj3)*(sj4)*(x2139)))+(((sj1)*(sj2)*(x2137)))+(((cj2)*(r02)*(sj1)))+(((sj3)*(x2134)))+(((cj1)*(x2135))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2142=(cj3)*(cj3);
IkReal x2143=(sj3)*(sj3);
IkReal x2144=((cj1)*(sj3));
IkReal x2145=((cj0)*(r01));
IkReal x2146=((r02)*(sj2));
IkReal x2147=((cj2)*(sj1));
IkReal x2148=((cj1)*(cj3));
IkReal x2149=((cj2)*(r02));
IkReal x2150=((cj3)*(sj1));
IkReal x2151=((IkReal(1.00000000000000))*(sj3));
IkReal x2152=((r00)*(sj0));
IkReal x2153=((IkReal(1.00000000000000))*(sj1)*(sj2));
IkReal x2154=((IkReal(1.00000000000000))*(x2152));
if( IKabs(((((IKabs(((((sj4)*(x2142)))+(((sj4)*(x2143))))) != 0)?((IkReal)1/(((((sj4)*(x2142)))+(((sj4)*(x2143)))))):(IkReal)1.0e30))*(((((x2146)*(x2148)))+(((cj2)*(x2145)*(x2148)))+(((sj2)*(x2150)*(x2152)))+(((sj2)*(x2144)*(x2152)))+(((IkReal(-1.00000000000000))*(sj2)*(x2144)*(x2145)))+(((IkReal(-1.00000000000000))*(sj1)*(x2146)*(x2151)))+(((sj3)*(x2147)*(x2152)))+(((IkReal(-1.00000000000000))*(cj2)*(x2148)*(x2154)))+(((x2144)*(x2149)))+(((cj3)*(r02)*(x2147)))+(((IkReal(-1.00000000000000))*(x2145)*(x2147)*(x2151)))+(((IkReal(-1.00000000000000))*(sj2)*(x2145)*(x2150))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(((((IkReal(-1.00000000000000))*(x2143)))+(((IkReal(-1.00000000000000))*(x2142))))) != 0)?((IkReal)1/(((((IkReal(-1.00000000000000))*(x2143)))+(((IkReal(-1.00000000000000))*(x2142)))))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj2)*(x2144)*(x2154)))+(((x2146)*(x2150)))+(((sj2)*(x2145)*(x2148)))+(((r02)*(sj3)*(x2147)))+(((sj1)*(sj2)*(sj3)*(x2152)))+(((cj2)*(x2144)*(x2145)))+(((x2144)*(x2146)))+(((cj3)*(x2145)*(x2147)))+(((IkReal(-1.00000000000000))*(cj3)*(x2147)*(x2154)))+(((IkReal(-1.00000000000000))*(sj2)*(x2148)*(x2154)))+(((IkReal(-1.00000000000000))*(sj1)*(sj2)*(x2145)*(x2151)))+(((IkReal(-1.00000000000000))*(x2148)*(x2149))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(((((sj4)*(x2142)))+(((sj4)*(x2143))))) != 0)?((IkReal)1/(((((sj4)*(x2142)))+(((sj4)*(x2143)))))):(IkReal)1.0e30))*(((((x2146)*(x2148)))+(((cj2)*(x2145)*(x2148)))+(((sj2)*(x2150)*(x2152)))+(((sj2)*(x2144)*(x2152)))+(((IkReal(-1.00000000000000))*(sj2)*(x2144)*(x2145)))+(((IkReal(-1.00000000000000))*(sj1)*(x2146)*(x2151)))+(((sj3)*(x2147)*(x2152)))+(((IkReal(-1.00000000000000))*(cj2)*(x2148)*(x2154)))+(((x2144)*(x2149)))+(((cj3)*(r02)*(x2147)))+(((IkReal(-1.00000000000000))*(x2145)*(x2147)*(x2151)))+(((IkReal(-1.00000000000000))*(sj2)*(x2145)*(x2150)))))))+IKsqr(((((IKabs(((((IkReal(-1.00000000000000))*(x2143)))+(((IkReal(-1.00000000000000))*(x2142))))) != 0)?((IkReal)1/(((((IkReal(-1.00000000000000))*(x2143)))+(((IkReal(-1.00000000000000))*(x2142)))))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj2)*(x2144)*(x2154)))+(((x2146)*(x2150)))+(((sj2)*(x2145)*(x2148)))+(((r02)*(sj3)*(x2147)))+(((sj1)*(sj2)*(sj3)*(x2152)))+(((cj2)*(x2144)*(x2145)))+(((x2144)*(x2146)))+(((cj3)*(x2145)*(x2147)))+(((IkReal(-1.00000000000000))*(cj3)*(x2147)*(x2154)))+(((IkReal(-1.00000000000000))*(sj2)*(x2148)*(x2154)))+(((IkReal(-1.00000000000000))*(sj1)*(sj2)*(x2145)*(x2151)))+(((IkReal(-1.00000000000000))*(x2148)*(x2149)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(((((sj4)*(x2142)))+(((sj4)*(x2143))))) != 0)?((IkReal)1/(((((sj4)*(x2142)))+(((sj4)*(x2143)))))):(IkReal)1.0e30))*(((((x2146)*(x2148)))+(((cj2)*(x2145)*(x2148)))+(((sj2)*(x2150)*(x2152)))+(((sj2)*(x2144)*(x2152)))+(((IkReal(-1.00000000000000))*(sj2)*(x2144)*(x2145)))+(((IkReal(-1.00000000000000))*(sj1)*(x2146)*(x2151)))+(((sj3)*(x2147)*(x2152)))+(((IkReal(-1.00000000000000))*(cj2)*(x2148)*(x2154)))+(((x2144)*(x2149)))+(((cj3)*(r02)*(x2147)))+(((IkReal(-1.00000000000000))*(x2145)*(x2147)*(x2151)))+(((IkReal(-1.00000000000000))*(sj2)*(x2145)*(x2150)))))), ((((IKabs(((((IkReal(-1.00000000000000))*(x2143)))+(((IkReal(-1.00000000000000))*(x2142))))) != 0)?((IkReal)1/(((((IkReal(-1.00000000000000))*(x2143)))+(((IkReal(-1.00000000000000))*(x2142)))))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj2)*(x2144)*(x2154)))+(((x2146)*(x2150)))+(((sj2)*(x2145)*(x2148)))+(((r02)*(sj3)*(x2147)))+(((sj1)*(sj2)*(sj3)*(x2152)))+(((cj2)*(x2144)*(x2145)))+(((x2144)*(x2146)))+(((cj3)*(x2145)*(x2147)))+(((IkReal(-1.00000000000000))*(cj3)*(x2147)*(x2154)))+(((IkReal(-1.00000000000000))*(sj2)*(x2148)*(x2154)))+(((IkReal(-1.00000000000000))*(sj1)*(sj2)*(x2145)*(x2151)))+(((IkReal(-1.00000000000000))*(x2148)*(x2149)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x2155=IKsin(j5);
IkReal x2156=IKcos(j5);
IkReal x2157=((r02)*(sj2));
IkReal x2158=((IkReal(1.00000000000000))*(sj2));
IkReal x2159=((r00)*(sj0));
IkReal x2160=((IkReal(1.00000000000000))*(cj2));
IkReal x2161=((IkReal(1.00000000000000))*(x2155));
IkReal x2162=((cj0)*(r01)*(sj1));
IkReal x2163=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x2161)))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj1)*(x2159)*(x2160)))+(((cj3)*(x2156)))+(((IkReal(-1.00000000000000))*(cj1)*(x2158)*(x2159)))+(((sj2)*(x2163)))+(((sj1)*(x2157)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x2160)))+(((sj3)*(sj4)*(x2155)))+(((cj2)*(x2162))));
evalcond[2]=((((sj1)*(sj2)*(x2159)))+(((IkReal(-1.00000000000000))*(cj3)*(sj4)*(x2161)))+(((IkReal(-1.00000000000000))*(x2158)*(x2162)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(x2159)*(x2160)))+(((cj2)*(x2163)))+(((sj3)*(x2156)))+(((cj1)*(x2157))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
    }
}
return solutions.GetNumSolutions()>0;
}

static inline bool checkconsistency8(const IkReal* Breal)
{
    IkReal norm = 0.1;
    for(int i = 0; i < 7; ++i) {
        norm += IKabs(Breal[i]);
    }
    IkReal tol = 1e-5*norm; // have to increase the threshold since many computations are involved
    return IKabs(Breal[0]*Breal[1]-Breal[2]) < tol && IKabs(Breal[1]*Breal[1]-Breal[3]) < tol && IKabs(Breal[0]*Breal[3]-Breal[4]) < tol && IKabs(Breal[1]*Breal[3]-Breal[5]) < tol && IKabs(Breal[0]*Breal[5]-Breal[6]) < tol;
}
/// \brief Solve the det Ax^2+Bx+C = 0 problem using the Manocha and Canny method (1994)
///
/// matcoeffs is of length 54*3, for 3 matrices
static inline void solvedialyticpoly8qep(const IkReal* matcoeffs, IkReal* rawroots, int& numroots)
{
    const IkReal tol = 128.0*std::numeric_limits<IkReal>::epsilon();
    IkReal IKFAST_ALIGNED16(M[16*16]) = {0};
    IkReal IKFAST_ALIGNED16(A[8*8]);
    IkReal IKFAST_ALIGNED16(work[16*16*15]);
    int ipiv[8];
    int info, coeffindex;
    const int worksize=16*16*15;
    const int matrixdim = 8;
    const int matrixdim2 = 16;
    numroots = 0;
    // first setup M = [0 I; -C -B] and A
    coeffindex = 0;
    for(int j = 0; j < 4; ++j) {
        for(int k = 0; k < 6; ++k) {
            M[matrixdim+(j+4)+2*matrixdim*k] = M[matrixdim+j+2*matrixdim*(k+2)] = -matcoeffs[coeffindex++];
        }
    }
    for(int j = 0; j < 4; ++j) {
        for(int k = 0; k < 6; ++k) {
            M[matrixdim+(j+4)+2*matrixdim*k+matrixdim*2*matrixdim] = M[matrixdim+j+2*matrixdim*(k+2)+matrixdim*2*matrixdim] = -matcoeffs[coeffindex++];
        }
    }
    for(int j = 0; j < 4; ++j) {
        for(int k = 0; k < 6; ++k) {
            A[(j+4)+matrixdim*k] = A[j+matrixdim*(k+2)] = matcoeffs[coeffindex++];
        }
        for(int k = 0; k < 2; ++k) {
            A[j+matrixdim*k] = A[(j+4)+matrixdim*(k+6)] = 0;
        }
    }
    const IkReal lfpossibilities[4][4] = {{1,-1,1,1},{1,0,-2,1},{1,1,2,0},{1,-1,4,1}};
    int lfindex = -1;
    bool bsingular = true;
    do {
        dgetrf_(&matrixdim,&matrixdim,A,&matrixdim,&ipiv[0],&info);
        if( info == 0 ) {
            bsingular = false;
            for(int j = 0; j < matrixdim; ++j) {
                if( IKabs(A[j*matrixdim+j]) < 100*tol ) {
                    bsingular = true;
                    break;
                }
            }
            if( !bsingular ) {
                break;
            }
        }
        if( lfindex == 3 ) {
            break;
        }
        // transform by the linear functional
        lfindex++;
        const IkReal* lf = lfpossibilities[lfindex];
        // have to reinitialize A
        coeffindex = 0;
        for(int j = 0; j < 4; ++j) {
            for(int k = 0; k < 6; ++k) {
                IkReal a = matcoeffs[coeffindex+48], b = matcoeffs[coeffindex+24], c = matcoeffs[coeffindex];
                A[(j+4)+matrixdim*k] = A[j+matrixdim*(k+2)] = lf[0]*lf[0]*a+lf[0]*lf[2]*b+lf[2]*lf[2]*c;
                M[matrixdim+(j+4)+2*matrixdim*k] = M[matrixdim+j+2*matrixdim*(k+2)] = -(lf[1]*lf[1]*a + lf[1]*lf[3]*b + lf[3]*lf[3]*c);
                M[matrixdim+(j+4)+2*matrixdim*k+matrixdim*2*matrixdim] = M[matrixdim+j+2*matrixdim*(k+2)+matrixdim*2*matrixdim] = -(2*lf[0]*lf[1]*a + (lf[0]*lf[3]+lf[1]*lf[2])*b + 2*lf[2]*lf[3]*c);
                coeffindex++;
            }
            for(int k = 0; k < 2; ++k) {
                A[j+matrixdim*k] = A[(j+4)+matrixdim*(k+6)] = 0;
            }
        }
    } while(lfindex<4);

    if( bsingular ) {
        return;
    }
    dgetrs_("No transpose", &matrixdim, &matrixdim2, A, &matrixdim, &ipiv[0], &M[matrixdim], &matrixdim2, &info);
    if( info != 0 ) {
        return;
    }

    // set identity in upper corner
    for(int j = 0; j < matrixdim; ++j) {
        M[matrixdim*2*matrixdim+j+matrixdim*2*j] = 1;
    }
    IkReal IKFAST_ALIGNED16(wr[16]);
    IkReal IKFAST_ALIGNED16(wi[16]);
    IkReal IKFAST_ALIGNED16(vr[16*16]);
    int one=1;
    dgeev_("N", "V", &matrixdim2, M, &matrixdim2, wr, wi,NULL, &one, vr, &matrixdim2, work, &worksize, &info);
    if( info != 0 ) {
        return;
    }
    IkReal Breal[matrixdim-1];
    for(int i = 0; i < matrixdim2; ++i) {
        if( IKabs(wi[i]) < tol*100 ) {
            IkReal* ev = vr+matrixdim2*i;
            if( IKabs(wr[i]) > 1 ) {
                ev += matrixdim;
            }
            // consistency has to be checked!!
            if( IKabs(ev[0]) < tol ) {
                continue;
            }
            IkReal iconst = 1/ev[0];
            for(int j = 1; j < matrixdim; ++j) {
                Breal[j-1] = ev[j]*iconst;
            }
            if( checkconsistency8(Breal) ) {
                if( lfindex >= 0 ) {
                    const IkReal* lf = lfpossibilities[lfindex];
                    rawroots[numroots++] = (wr[i]*lf[0]+lf[1])/(wr[i]*lf[2]+lf[3]);
                }
                else {
                    rawroots[numroots++] = wr[i];
                }
                bool bsmall0=IKabs(ev[0]) > IKabs(ev[2]);
                bool bsmall1=IKabs(ev[0]) > IKabs(ev[1]);
                if( bsmall0 && bsmall1 ) {
                    rawroots[numroots++] = ev[2]/ev[0];
                    rawroots[numroots++] = ev[1]/ev[0];
                }
                else if( bsmall0 && !bsmall1 ) {
                    rawroots[numroots++] = ev[3]/ev[1];
                    rawroots[numroots++] = ev[1]/ev[0];
                }
                else if( !bsmall0 && bsmall1 ) {
                    rawroots[numroots++] = ev[6]/ev[4];
                    rawroots[numroots++] = ev[7]/ev[6];
                }
                else if( !bsmall0 && !bsmall1 ) {
                    rawroots[numroots++] = ev[7]/ev[5];
                    rawroots[numroots++] = ev[7]/ev[6];
                }
            }
        }
    }
}};


/// solves the inverse kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
IKSolver solver;
return solver.ComputeIk(eetrans,eerot,pfree,solutions);
}

IKFAST_API const char* GetKinematicsHash() { return "<robot:GenericRobot - grips_simple_gripper (0ded24523eb0e17e4eab3bcad02e5819)>"; }

IKFAST_API const char* GetIkFastVersion() { return IKFAST_STRINGIZE(IKFAST_VERSION); }

#ifdef IKFAST_NAMESPACE
} // end namespace
#endif

#ifndef IKFAST_NO_MAIN
#include <stdio.h>
#include <stdlib.h>
#ifdef IKFAST_NAMESPACE
using namespace IKFAST_NAMESPACE;
#endif
int main(int argc, char** argv)
{
    if( argc != 12+GetNumFreeParameters()+1 ) {
        printf("\nUsage: ./ik r00 r01 r02 t0 r10 r11 r12 t1 r20 r21 r22 t2 free0 ...\n\n"
               "Returns the ik solutions given the transformation of the end effector specified by\n"
               "a 3x3 rotation R (rXX), and a 3x1 translation (tX).\n"
               "There are %d free parameters that have to be specified.\n\n",GetNumFreeParameters());
        return 1;
    }

    IkSolutionList<IkReal> solutions;
    std::vector<IkReal> vfree(GetNumFreeParameters());
    IkReal eerot[9],eetrans[3];
    eerot[0] = atof(argv[1]); eerot[1] = atof(argv[2]); eerot[2] = atof(argv[3]); eetrans[0] = atof(argv[4]);
    eerot[3] = atof(argv[5]); eerot[4] = atof(argv[6]); eerot[5] = atof(argv[7]); eetrans[1] = atof(argv[8]);
    eerot[6] = atof(argv[9]); eerot[7] = atof(argv[10]); eerot[8] = atof(argv[11]); eetrans[2] = atof(argv[12]);
    for(std::size_t i = 0; i < vfree.size(); ++i)
        vfree[i] = atof(argv[13+i]);
    bool bSuccess = ComputeIk(eetrans, eerot, vfree.size() > 0 ? &vfree[0] : NULL, solutions);

    if( !bSuccess ) {
        fprintf(stderr,"Failed to get ik solution\n");
        return -1;
    }

    printf("Found %d ik solutions:\n", (int)solutions.GetNumSolutions());
    std::vector<IkReal> solvalues(GetNumJoints());
    for(std::size_t i = 0; i < solutions.GetNumSolutions(); ++i) {
        const IkSolutionBase<IkReal>& sol = solutions.GetSolution(i);
        printf("sol%d (free=%d): ", (int)i, (int)sol.GetFree().size());
        std::vector<IkReal> vsolfree(sol.GetFree().size());
        sol.GetSolution(&solvalues[0],vsolfree.size()>0?&vsolfree[0]:NULL);
        for( std::size_t j = 0; j < solvalues.size(); ++j)
            printf("%.15f, ", solvalues[j]);
        printf("\n");
    }
    return 0;
}

#endif
