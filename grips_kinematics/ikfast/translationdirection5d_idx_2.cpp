/// autogenerated analytical inverse kinematics code from ikfast program part of OpenRAVE
/// \author Rosen Diankov
///
/// Licensed under the Apache License, Version 2.0 (the "License");
/// you may not use this file except in compliance with the License.
/// You may obtain a copy of the License at
///     http://www.apache.org/licenses/LICENSE-2.0
/// 
/// Unless required by applicable law or agreed to in writing, software
/// distributed under the License is distributed on an "AS IS" BASIS,
/// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
/// See the License for the specific language governing permissions and
/// limitations under the License.
///
/// ikfast version 61 generated on 2013-08-08 17:24:39.063349
/// To compile with gcc:
///     gcc -lstdc++ ik.cpp
/// To compile without any main function as a shared object (might need -llapack):
///     gcc -fPIC -lstdc++ -DIKFAST_NO_MAIN -DIKFAST_CLIBRARY -shared -Wl,-soname,libik.so -o libik.so ik.cpp
#define IKFAST_HAS_LIBRARY
#include "ikfast.h" // found inside share/openrave-X.Y/python/ikfast.h
using namespace ikfast;

// check if the included ikfast version matches what this file was compiled with
#define IKFAST_COMPILE_ASSERT(x) extern int __dummy[(int)x]
IKFAST_COMPILE_ASSERT(IKFAST_VERSION==61);

#include <cmath>
#include <vector>
#include <limits>
#include <algorithm>
#include <complex>

#define IKFAST_STRINGIZE2(s) #s
#define IKFAST_STRINGIZE(s) IKFAST_STRINGIZE2(s)

#ifndef IKFAST_ASSERT
#include <stdexcept>
#include <sstream>
#include <iostream>

#ifdef _MSC_VER
#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __FUNCDNAME__
#endif
#endif

#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __func__
#endif

#define IKFAST_ASSERT(b) { if( !(b) ) { std::stringstream ss; ss << "ikfast exception: " << __FILE__ << ":" << __LINE__ << ": " <<__PRETTY_FUNCTION__ << ": Assertion '" << #b << "' failed"; throw std::runtime_error(ss.str()); } }

#endif

#if defined(_MSC_VER)
#define IKFAST_ALIGNED16(x) __declspec(align(16)) x
#else
#define IKFAST_ALIGNED16(x) x __attribute((aligned(16)))
#endif

#define IK2PI  ((IkReal)6.28318530717959)
#define IKPI  ((IkReal)3.14159265358979)
#define IKPI_2  ((IkReal)1.57079632679490)

#ifdef _MSC_VER
#ifndef isnan
#define isnan _isnan
#endif
#endif // _MSC_VER

// lapack routines
extern "C" {
  void dgetrf_ (const int* m, const int* n, double* a, const int* lda, int* ipiv, int* info);
  void zgetrf_ (const int* m, const int* n, std::complex<double>* a, const int* lda, int* ipiv, int* info);
  void dgetri_(const int* n, const double* a, const int* lda, int* ipiv, double* work, const int* lwork, int* info);
  void dgesv_ (const int* n, const int* nrhs, double* a, const int* lda, int* ipiv, double* b, const int* ldb, int* info);
  void dgetrs_(const char *trans, const int *n, const int *nrhs, double *a, const int *lda, int *ipiv, double *b, const int *ldb, int *info);
  void dgeev_(const char *jobvl, const char *jobvr, const int *n, double *a, const int *lda, double *wr, double *wi,double *vl, const int *ldvl, double *vr, const int *ldvr, double *work, const int *lwork, int *info);
}

using namespace std; // necessary to get std math routines

#ifdef IKFAST_NAMESPACE
namespace IKFAST_NAMESPACE {
#endif

inline float IKabs(float f) { return fabsf(f); }
inline double IKabs(double f) { return fabs(f); }

inline float IKsqr(float f) { return f*f; }
inline double IKsqr(double f) { return f*f; }

inline float IKlog(float f) { return logf(f); }
inline double IKlog(double f) { return log(f); }

// allows asin and acos to exceed 1
#ifndef IKFAST_SINCOS_THRESH
#define IKFAST_SINCOS_THRESH ((IkReal)0.000001)
#endif

// used to check input to atan2 for degenerate cases
#ifndef IKFAST_ATAN2_MAGTHRESH
#define IKFAST_ATAN2_MAGTHRESH ((IkReal)2e-6)
#endif

// minimum distance of separate solutions
#ifndef IKFAST_SOLUTION_THRESH
#define IKFAST_SOLUTION_THRESH ((IkReal)1e-6)
#endif

inline float IKasin(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(-IKPI_2);
else if( f >= 1 ) return float(IKPI_2);
return asinf(f);
}
inline double IKasin(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return -IKPI_2;
else if( f >= 1 ) return IKPI_2;
return asin(f);
}

// return positive value in [0,y)
inline float IKfmod(float x, float y)
{
    while(x < 0) {
        x += y;
    }
    return fmodf(x,y);
}

// return positive value in [0,y)
inline double IKfmod(double x, double y)
{
    while(x < 0) {
        x += y;
    }
    return fmod(x,y);
}

inline float IKacos(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(IKPI);
else if( f >= 1 ) return float(0);
return acosf(f);
}
inline double IKacos(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return IKPI;
else if( f >= 1 ) return 0;
return acos(f);
}
inline float IKsin(float f) { return sinf(f); }
inline double IKsin(double f) { return sin(f); }
inline float IKcos(float f) { return cosf(f); }
inline double IKcos(double f) { return cos(f); }
inline float IKtan(float f) { return tanf(f); }
inline double IKtan(double f) { return tan(f); }
inline float IKsqrt(float f) { if( f <= 0.0f ) return 0.0f; return sqrtf(f); }
inline double IKsqrt(double f) { if( f <= 0.0 ) return 0.0; return sqrt(f); }
inline float IKatan2(float fy, float fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return float(IKPI_2);
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2f(fy,fx);
}
inline double IKatan2(double fy, double fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return IKPI_2;
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2(fy,fx);
}

inline float IKsign(float f) {
    if( f > 0 ) {
        return float(1);
    }
    else if( f < 0 ) {
        return float(-1);
    }
    return 0;
}

inline double IKsign(double f) {
    if( f > 0 ) {
        return 1.0;
    }
    else if( f < 0 ) {
        return -1.0;
    }
    return 0;
}

/// solves the forward kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API void ComputeFk(const IkReal* j, IkReal* eetrans, IkReal* eerot) {
IkReal x0,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,x31,x32,x33,x34,x35,x36,x37,x38,x39,x40,x41,x42,x43,x44,x45,x46,x47,x48,x49;
x0=IKsin(j[0]);
x1=IKcos(j[1]);
x2=IKsin(j[1]);
x3=IKsin(j[2]);
x4=IKcos(j[2]);
x5=IKcos(j[3]);
x6=IKsin(j[3]);
x7=IKcos(j[4]);
x8=IKcos(j[0]);
x9=IKsin(j[4]);
x10=IKcos(j[5]);
x11=IKsin(j[5]);
x12=((IkReal(0.133220000000000))*(x1));
x13=((IkReal(0.00750000000000000))*(x3));
x14=((IkReal(0.190892000000000))*(x6));
x15=((IkReal(0.0513310000000000))*(x3));
x16=((IkReal(0.190892000000000))*(x5));
x17=((IkReal(0.190892000000000))*(x9));
x18=((IkReal(0.133220000000000))*(x8));
x19=((IkReal(0.0513310000000000))*(x0));
x20=((IkReal(1.00000000000000))*(x0));
x21=((IkReal(0.133220000000000))*(x0));
x22=((IkReal(1.00000000000000))*(x3));
x23=((IkReal(0.261090000000000))*(x0));
x24=((IkReal(1.00000000000000))*(x5));
x25=((IkReal(1.00000000000000))*(x8));
x26=((IkReal(1.00000000000000))*(x6));
x27=((x2)*(x4));
x28=((x4)*(x8));
x29=((x1)*(x8));
x30=((x0)*(x7));
x31=((x1)*(x4));
x32=((x0)*(x1));
x33=((x2)*(x3));
x34=((x2)*(x8));
x35=((x1)*(x3));
x36=((x7)*(x8));
x37=((x0)*(x2));
x38=((IkReal(-0.000787000000000000))*(x6));
x39=((IkReal(-0.000787000000000000))*(x5));
x40=((IkReal(1.00000000000000))*(x31));
x41=((x35)+(x27));
x42=((((IkReal(-1.00000000000000))*(x2)*(x22)))+(x40));
x43=((x41)*(x5));
x44=((((IkReal(-1.00000000000000))*(x20)*(x31)))+(((x0)*(x33))));
x45=((((x1)*(x28)))+(((IkReal(-1.00000000000000))*(x22)*(x34))));
x46=((x20)*(((x35)+(x27))));
x47=((((IkReal(-1.00000000000000))*(x25)*(x27)))+(((IkReal(-1.00000000000000))*(x22)*(x29))));
x48=((x45)*(x5));
x49=((x46)*(x6));
IkReal x50=((x0)*(x12));
eetrans[0]=((((x5)*(((((x19)*(x27)))+(((x15)*(x32)))))))+(((x9)*(((((x38)*(x46)))+(((x39)*(x44)))))))+(((x23)*(x33)))+(((IkReal(0.00750000000000000))*(x0)*(x27)))+(((x5)*(((((IkReal(-1.00000000000000))*(x4)*(x50)))+(((x21)*(x33)))))))+(((IkReal(-1.00000000000000))*(x17)*(x8)))+(((IkReal(-0.000787000000000000))*(x36)))+(((x6)*(((((x21)*(x27)))+(((x3)*(x50)))))))+(((x13)*(x32)))+(((x6)*(((((x19)*(x31)))+(((IkReal(-1.00000000000000))*(x15)*(x37)))))))+(((IkReal(-1.00000000000000))*(x23)*(x31)))+(((IkReal(0.521670000000000))*(x37)))+(((IkReal(0.00982000000000000))*(x32)))+(((x7)*(((((x16)*(x44)))+(((x14)*(x46))))))));
IkReal x51=((IkReal(1.00000000000000))*(x18));
IkReal x52=((x1)*(x28));
IkReal x53=((IkReal(1.00000000000000))*(x29));
IkReal x54=((x27)*(x8));
eetrans[1]=((((x7)*(((((x16)*(x45)))+(((x14)*(x47)))))))+(((IkReal(-1.00000000000000))*(x13)*(x53)))+(((IkReal(-0.521670000000000))*(x34)))+(((IkReal(-0.261090000000000))*(x33)*(x8)))+(((x6)*(((((x15)*(x34)))+(((IkReal(-0.0513310000000000))*(x52)))))))+(((IkReal(-1.00000000000000))*(x0)*(x17)))+(((x5)*(((((IkReal(-1.00000000000000))*(x15)*(x53)))+(((IkReal(-0.0513310000000000))*(x54)))))))+(((IkReal(-0.00750000000000000))*(x54)))+(((IkReal(-0.000787000000000000))*(x30)))+(((x6)*(((((IkReal(-1.00000000000000))*(x27)*(x51)))+(((IkReal(-1.00000000000000))*(x12)*(x3)*(x8)))))))+(((x9)*(((((x38)*(x47)))+(((x39)*(x45)))))))+(((IkReal(-0.00982000000000000))*(x29)))+(((x5)*(((((IkReal(-1.00000000000000))*(x33)*(x51)))+(((x12)*(x28)))))))+(((IkReal(0.261090000000000))*(x52))));
IkReal x55=((IkReal(1.00000000000000))*(x2));
eetrans[2]=((IkReal(0.353360000000000))+(((x9)*(((((x38)*(x42)))+(((x39)*(x41)))))))+(((IkReal(-1.00000000000000))*(x13)*(x55)))+(((x6)*(((((IkReal(-0.133220000000000))*(x33)))+(((x12)*(x4)))))))+(((x6)*(((((IkReal(-1.00000000000000))*(x1)*(x15)))+(((IkReal(-0.0513310000000000))*(x27)))))))+(((IkReal(0.261090000000000))*(x27)))+(((IkReal(0.00750000000000000))*(x31)))+(((x7)*(((((x16)*(x41)))+(((x14)*(x42)))))))+(((x5)*(((((IkReal(0.0513310000000000))*(x31)))+(((IkReal(-1.00000000000000))*(x15)*(x55)))))))+(((IkReal(0.521670000000000))*(x1)))+(((x5)*(((((IkReal(0.133220000000000))*(x27)))+(((x12)*(x3)))))))+(((IkReal(0.261090000000000))*(x35)))+(((IkReal(-0.00982000000000000))*(x2))));
eerot[0]=((((x10)*(((((IkReal(1.00000000000000))*(x46)*(x5)))+(((IkReal(-1.00000000000000))*(x44)*(x6)))))))+(((x11)*(((x36)+(((x9)*(((x49)+(((x44)*(x5))))))))))));
eerot[1]=((((x11)*(((x30)+(((x9)*(((((x47)*(x6)))+(x48)))))))))+(((x10)*(((((IkReal(-1.00000000000000))*(x24)*(((((x29)*(x3)))+(((x27)*(x8)))))))+(((IkReal(-1.00000000000000))*(x26)*(x45))))))));
eerot[2]=((((x11)*(x9)*(((((x42)*(x6)))+(x43)))))+(((IkReal(-1.00000000000000))*(x10)*(((((x26)*(x41)))+(((x24)*(((((IkReal(-1.00000000000000))*(x40)))+(x33))))))))));
}

IKFAST_API int GetNumFreeParameters() { return 1; }
IKFAST_API int* GetFreeParameters() { static int freeparams[] = {2}; return freeparams; }
IKFAST_API int GetNumJoints() { return 6; }

IKFAST_API int GetIkRealSize() { return sizeof(IkReal); }

IKFAST_API int GetIkType() { return 0x56000007; }

class IKSolver {
public:
IkReal j0,cj0,sj0,htj0,j1,cj1,sj1,htj1,j3,cj3,sj3,htj3,j4,cj4,sj4,htj4,j5,cj5,sj5,htj5,j2,cj2,sj2,htj2,new_r00,r00,rxp0_0,new_r01,r01,rxp0_1,new_r02,r02,rxp0_2,new_px,px,npx,new_py,py,npy,new_pz,pz,npz,pp;
unsigned char _ij0[2], _nj0,_ij1[2], _nj1,_ij3[2], _nj3,_ij4[2], _nj4,_ij5[2], _nj5,_ij2[2], _nj2;

bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
j0=numeric_limits<IkReal>::quiet_NaN(); _ij0[0] = -1; _ij0[1] = -1; _nj0 = -1; j1=numeric_limits<IkReal>::quiet_NaN(); _ij1[0] = -1; _ij1[1] = -1; _nj1 = -1; j3=numeric_limits<IkReal>::quiet_NaN(); _ij3[0] = -1; _ij3[1] = -1; _nj3 = -1; j4=numeric_limits<IkReal>::quiet_NaN(); _ij4[0] = -1; _ij4[1] = -1; _nj4 = -1; j5=numeric_limits<IkReal>::quiet_NaN(); _ij5[0] = -1; _ij5[1] = -1; _nj5 = -1;  _ij2[0] = -1; _ij2[1] = -1; _nj2 = 0; 
for(int dummyiter = 0; dummyiter < 1; ++dummyiter) {
    solutions.Clear();
px = eetrans[0]; py = eetrans[1]; pz = eetrans[2];

j2=pfree[0]; cj2=cos(pfree[0]); sj2=sin(pfree[0]);
r00 = eerot[0];
r01 = eerot[1];
r02 = eerot[2];
px = eetrans[0]; py = eetrans[1]; pz = eetrans[2];
new_r00=r00;
new_px=px;
new_r01=r01;
new_py=py;
new_r02=r02;
new_pz=((IkReal(-0.353360000000000))+(pz));
r00 = new_r00; r01 = new_r01; r02 = new_r02; px = new_px; py = new_py; pz = new_pz;

pp=(((px)*(px))+((py)*(py))+((pz)*(pz)));
IkReal op[72], zeror[48];
int numroots;
IkReal x56=((IkReal(0.0196400000000000))*(py));
IkReal x57=((IkReal(8.08016000000000e-5))*(cj2));
IkReal x58=((IkReal(0.411546695400000))*(sj2));
IkReal x59=((IkReal(1.04334000000000))*(pz));
IkReal x60=((IkReal(1.00000000000000))*(pp));
IkReal x61=((IkReal(0.00261644080000000))*(sj2));
IkReal x62=((IkReal(0.138993754800000))*(cj2));
IkReal x63=((IkReal(0.0392800000000000))*(pz));
IkReal x64=((IkReal(2.08668000000000))*(py));
IkReal x65=((IkReal(0.00531368320000000))*(cj2));
IkReal x66=((IkReal(0.133559185800000))*(sj2));
IkReal x67=(pz)*(pz);
IkReal x68=(py)*(py);
IkReal x69=((IkReal(0.0665085431400000))*(r01));
IkReal x70=((IkReal(0.00149473560621439))*(r00));
IkReal x71=((IkReal(0.271250199760000))*(r02));
IkReal x72=((IkReal(0.133264585800000))*(r01));
IkReal x73=((IkReal(5.41209473565157e-5))*(r00));
IkReal x74=((IkReal(0.0103364168000000))*(r02));
IkReal x75=((IkReal(0.411252095400000))*(r01));
IkReal x76=((IkReal(0.000166891614547179))*(r00));
IkReal x77=((IkReal(0.0155692984000000))*(r02));
IkReal x78=((IkReal(0.00148838685975042))*(r00));
IkReal x79=((IkReal(0.0406028279400000))*(r01));
IkReal x80=((IkReal(0.273266481440000))*(r02));
IkReal x81=((IkReal(4.17336000000000))*(px));
IkReal x82=(px)*(px);
IkReal x83=((IkReal(0.00298947121242879))*(r01));
IkReal x84=((IkReal(0.133017086280000))*(r00));
IkReal x85=((IkReal(0.266529171600000))*(r00));
IkReal x86=((IkReal(0.000108241894713031))*(r01));
IkReal x87=((IkReal(0.000333783229094357))*(r01));
IkReal x88=((IkReal(0.822504190800000))*(r00));
IkReal x89=((IkReal(0.0812056558800000))*(r00));
IkReal x90=((IkReal(0.00297677371950085))*(r01));
IkReal x91=((IkReal(0.542500399520000))*(r01));
IkReal x92=((IkReal(0.133017086280000))*(r02));
IkReal x93=((IkReal(0.266529171600000))*(r02));
IkReal x94=((IkReal(0.0206728336000000))*(r01));
IkReal x95=((pz)*(sj2));
IkReal x96=((r01)*(sj2));
IkReal x97=((cj2)*(r00));
IkReal x98=((IkReal(2.00000000000000))*(py));
IkReal x99=((IkReal(4.00000000000000))*(pz));
IkReal x100=((pz)*(r00));
IkReal x101=((px)*(r02));
IkReal x102=((pp)*(r02));
IkReal x103=((px)*(r01));
IkReal x104=((py)*(sj2));
IkReal x105=((py)*(r02));
IkReal x106=((IkReal(2.00000000000000))*(cj2));
IkReal x107=((cj2)*(r01));
IkReal x108=((cj2)*(r02));
IkReal x109=((IkReal(0.0196400000000000))*(r02));
IkReal x110=((r02)*(sj2));
IkReal x111=((cj2)*(py));
IkReal x112=((IkReal(4.00000000000000))*(pp));
IkReal x113=((r00)*(sj2));
IkReal x114=((IkReal(2.00000000000000))*(pp));
IkReal x115=((pz)*(r01));
IkReal x116=((cj2)*(pz));
IkReal x117=((IkReal(1.04334000000000))*(r02));
IkReal x118=((pp)*(r01));
IkReal x119=((px)*(r00));
IkReal x120=((py)*(r00));
IkReal x121=((cj2)*(px));
IkReal x122=((px)*(py));
IkReal x123=((IkReal(0.0196400000000000))*(px));
IkReal x124=((IkReal(1.04334000000000))*(py));
IkReal x125=((IkReal(1.04334000000000))*(px));
IkReal x126=((IkReal(0.0196400000000000))*(pz));
IkReal x127=((px)*(sj2));
IkReal x128=((py)*(r01));
IkReal x129=((pz)*(r02));
IkReal x130=((IkReal(0.0150000000000000))*(x104));
IkReal x131=((IkReal(0.788620000000000))*(x111));
IkReal x132=((IkReal(0.788620000000000))*(x95));
IkReal x133=((IkReal(0.0150000000000000))*(x116));
IkReal x134=((IkReal(0.266440000000000))*(x104));
IkReal x135=((IkReal(0.266440000000000))*(x116));
IkReal x136=((IkReal(0.0300000000000000))*(x111));
IkReal x137=((IkReal(0.0300000000000000))*(x95));
IkReal x138=((IkReal(0.255740000000000))*(x95));
IkReal x139=((IkReal(0.255740000000000))*(x111));
IkReal x140=((IkReal(0.00430143002325923))*(x100));
IkReal x141=((IkReal(8.09708107201978e-5))*(x103));
IkReal x142=((IkReal(0.117662000000000))*(x115));
IkReal x143=((IkReal(0.00112782395853823))*(x113));
IkReal x144=((IkReal(0.000231916760727427))*(x97));
IkReal x145=((IkReal(0.0409659703800000))*(x96));
IkReal x146=((IkReal(0.188643448328000))*(x107));
IkReal x147=((IkReal(0.00412275003666995))*(pp)*(r00));
IkReal x148=((IkReal(0.0204747727800000))*(x108));
IkReal x149=((IkReal(8.09708107201978e-5))*(x120));
IkReal x150=((IkReal(0.522180000000000))*(x119));
IkReal x151=((IkReal(0.00430143002325923))*(x101));
IkReal x152=((IkReal(0.117662000000000))*(x105));
IkReal x153=((IkReal(0.522180000000000))*(x129));
IkReal x154=((IkReal(0.522180000000000))*(x128));
IkReal x155=((IkReal(0.355442864672000))*(x110));
IkReal x156=((IkReal(0.255740000000000))*(x105));
IkReal x157=((IkReal(0.00832754880000000))*(x107));
IkReal x158=((IkReal(4.15631268507847e-6))*(x97));
IkReal x159=((IkReal(0.000220796704523919))*(x113));
IkReal x160=((IkReal(0.0150000000000000))*(x129));
IkReal x161=((IkReal(0.254532139928000))*(x96));
IkReal x162=((IkReal(0.0150000000000000))*(x119));
IkReal x163=((IkReal(0.0150000000000000))*(x128));
IkReal x164=((IkReal(0.255740000000000))*(x115));
IkReal x165=((IkReal(0.289554173072000))*(x108));
IkReal x166=((IkReal(0.0121636488000000))*(x110));
IkReal x167=((cj2)*(x102));
IkReal x168=((IkReal(0.000161941621440396))*(x101));
IkReal x169=((IkReal(0.00860286004651845))*(x103));
IkReal x170=((IkReal(0.000161941621440396))*(x100));
IkReal x171=((IkReal(0.00860286004651845))*(x120));
IkReal x172=((IkReal(0.0161602488000000))*(x110));
IkReal x173=((IkReal(0.788620000000000))*(x115));
IkReal x174=((pp)*(x96));
IkReal x175=((IkReal(0.393661779128000))*(x96));
IkReal x176=((IkReal(0.150424533872000))*(x108));
IkReal x177=((IkReal(0.788620000000000))*(x105));
IkReal x178=((IkReal(0.00433094880000000))*(x107));
IkReal x179=((IkReal(0.000209676648320412))*(x97));
IkReal x180=((IkReal(0.0331332703800000))*(x108));
IkReal x181=((sj2)*(x102));
IkReal x182=((IkReal(0.0876620000000000))*(x105));
IkReal x183=((IkReal(0.187103518328000))*(x107));
IkReal x184=((pp)*(x107));
IkReal x185=((IkReal(0.0126420727800000))*(x96));
IkReal x186=((IkReal(0.0876620000000000))*(x115));
IkReal x187=((IkReal(0.00111951133316807))*(x113));
IkReal x188=((IkReal(0.356982794672000))*(x110));
IkReal x189=((IkReal(1.57724000000000))*(x121));
IkReal x190=((IkReal(0.532880000000000))*(x127));
IkReal x191=((IkReal(1.06576000000000))*(x121));
IkReal x192=((IkReal(0.0600000000000000))*(x121));
IkReal x193=((IkReal(0.511480000000000))*(x121));
IkReal x194=((IkReal(0.00860286004651845))*(x115));
IkReal x195=((IkReal(0.235324000000000))*(x101));
IkReal x196=((IkReal(0.000463833521454854))*(x107));
IkReal x197=((IkReal(0.00824550007333990))*(x118));
IkReal x198=((IkReal(0.00225564791707646))*(x96));
IkReal x199=((IkReal(0.235324000000000))*(x100));
IkReal x200=((IkReal(0.00860286004651845))*(x105));
IkReal x201=((IkReal(0.377286896656000))*(x97));
IkReal x202=((IkReal(0.0819319407600000))*(x113));
IkReal x203=((IkReal(0.511480000000000))*(x100));
IkReal x204=((IkReal(8.31262537015695e-6))*(x107));
IkReal x205=((IkReal(0.509064279856000))*(x113));
IkReal x206=((IkReal(0.000441593409047839))*(x96));
IkReal x207=((IkReal(0.511480000000000))*(x101));
IkReal x208=((IkReal(0.0166550976000000))*(x97));
IkReal x209=((IkReal(0.000323883242880791))*(x105));
IkReal x210=((IkReal(0.000323883242880791))*(x115));
IkReal x211=((IkReal(0.00866189760000000))*(x97));
IkReal x212=((IkReal(1.57724000000000))*(x101));
IkReal x213=((IkReal(1.57724000000000))*(x100));
IkReal x214=((IkReal(0.787323558256000))*(x113));
IkReal x215=((IkReal(0.000419353296640823))*(x107));
IkReal x216=((IkReal(0.175324000000000))*(x100));
IkReal x217=((IkReal(0.0252841455600000))*(x113));
IkReal x218=((IkReal(0.175324000000000))*(x101));
IkReal x219=((IkReal(0.00223902266633615))*(x96));
IkReal x220=((IkReal(0.374207036656000))*(x97));
IkReal x221=((IkReal(1.57724000000000))*(x116));
IkReal x222=((IkReal(1.57724000000000))*(x104));
IkReal x223=((IkReal(0.532880000000000))*(x111));
IkReal x224=((IkReal(0.532880000000000))*(x95));
IkReal x225=((IkReal(0.511480000000000))*(x116));
IkReal x226=((IkReal(0.511480000000000))*(x104));
IkReal x227=((IkReal(0.710885729344000))*(x96));
IkReal x228=((IkReal(0.0409495455600000))*(x107));
IkReal x229=((IkReal(0.0819319407600000))*(x110));
IkReal x230=((IkReal(0.377286896656000))*(x108));
IkReal x231=((IkReal(0.579108346144000))*(x107));
IkReal x232=((IkReal(0.0243272976000000))*(x96));
IkReal x233=((IkReal(0.509064279856000))*(x110));
IkReal x234=((IkReal(0.0166550976000000))*(x108));
IkReal x235=((IkReal(8.00000000000000))*(x82));
IkReal x236=((cj2)*(x105));
IkReal x237=((IkReal(4.00000000000000))*(x119));
IkReal x238=((IkReal(4.00000000000000))*(x67));
IkReal x239=((IkReal(4.00000000000000))*(x68));
IkReal x240=((IkReal(4.00000000000000))*(x82));
IkReal x241=((r01)*(x68));
IkReal x242=((IkReal(0.0196400000000000))*(r01)*(x95));
IkReal x243=((x123)*(x97));
IkReal x244=((IkReal(0.00215281761414831))*(r00)*(x95));
IkReal x245=((x107)*(x59));
IkReal x246=((IkReal(0.00215281761414831))*(py)*(x97));
IkReal x247=((x107)*(x56));
IkReal x248=((IkReal(0.000485091014814660))*(px)*(x96));
IkReal x249=((x108)*(x126));
IkReal x250=((IkReal(0.000485091014814660))*(pz)*(x97));
IkReal x251=((x110)*(x56));
IkReal x252=((IkReal(0.000485091014814660))*(cj2)*(x101));
IkReal x253=((x110)*(x59));
IkReal x254=((x113)*(x125));
IkReal x255=((IkReal(0.00824550007333990))*(r00)*(x82));
IkReal x256=((IkReal(0.00215281761414831))*(sj2)*(x101));
IkReal x257=((IkReal(1.04334000000000))*(x236));
IkReal x258=((IkReal(0.000485091014814660))*(r00)*(x104));
IkReal x259=((IkReal(0.00824550007333990))*(py)*(x103));
IkReal x260=((IkReal(0.00824550007333990))*(pz)*(x101));
IkReal x261=((IkReal(0.00215281761414831))*(cj2)*(x103));
IkReal x262=((x124)*(x96));
IkReal x263=((IkReal(0.000423249764264610))*(cj2)*(x103));
IkReal x264=((IkReal(0.000423249764264610))*(sj2)*(x101));
IkReal x265=((x104)*(x117));
IkReal x266=((x107)*(x126));
IkReal x267=((IkReal(0.000423249764264610))*(r00)*(x95));
IkReal x268=((x125)*(x97));
IkReal x269=((IkReal(0.000423249764264610))*(py)*(x97));
IkReal x270=((x108)*(x59));
IkReal x271=((x107)*(x124));
IkReal x272=((x109)*(x95));
IkReal x273=((x108)*(x56));
IkReal x274=((x56)*(x96));
IkReal x275=((x113)*(x123));
IkReal x276=((x59)*(x96));
IkReal x277=((x60)*(x96));
IkReal x278=((x107)*(x60));
IkReal x279=((x110)*(x60));
IkReal x280=((IkReal(0.000846499528529221))*(cj2)*(x101));
IkReal x281=((IkReal(0.000846499528529221))*(r00)*(x104));
IkReal x282=((x106)*(x118));
IkReal x283=((IkReal(0.000846499528529221))*(pz)*(x97));
IkReal x284=((IkReal(0.000846499528529221))*(px)*(x96));
IkReal x285=((IkReal(2.00000000000000))*(x181));
IkReal x286=((IkReal(0.00430563522829663))*(pz)*(x97));
IkReal x287=((x114)*(x96));
IkReal x288=((IkReal(0.00430563522829663))*(px)*(x96));
IkReal x289=((x102)*(x106));
IkReal x290=((IkReal(0.00430563522829663))*(cj2)*(x101));
IkReal x291=((IkReal(0.00430563522829663))*(r00)*(x104));
IkReal x292=((x108)*(x60));
IkReal x293=((IkReal(0.000361408513714561))*(px)*(x96));
IkReal x294=((IkReal(0.000361408513714561))*(pz)*(x97));
IkReal x295=((IkReal(0.000361408513714561))*(r00)*(x104));
IkReal x296=((IkReal(0.000361408513714561))*(cj2)*(x101));
IkReal x297=((IkReal(-0.532880000000000))*(x127));
IkReal x298=((IkReal(0.0392800000000000))*(sj2)*(x101));
IkReal x299=((IkReal(0.00430563522829663))*(r01)*(x95));
IkReal x300=((IkReal(2.08668000000000))*(cj2)*(x101));
IkReal x301=((IkReal(0.000970182029629319))*(pz)*(x107));
IkReal x302=((x114)*(x97));
IkReal x303=((IkReal(0.0164910001466798))*(pz)*(x105));
IkReal x304=((x113)*(x63));
IkReal x305=((IkReal(2.08668000000000))*(pz)*(x97));
IkReal x306=((IkReal(0.00430563522829663))*(r02)*(x104));
IkReal x307=((IkReal(0.0164910001466798))*(x241));
IkReal x308=((IkReal(0.000970182029629319))*(x236));
IkReal x309=((IkReal(0.0164910001466798))*(py)*(x119));
IkReal x310=((IkReal(0.000846499528529221))*(r02)*(x104));
IkReal x311=((IkReal(2.08668000000000))*(r00)*(x95));
IkReal x312=((x113)*(x114));
IkReal x313=((IkReal(0.0392800000000000))*(cj2)*(x101));
IkReal x314=((IkReal(2.08668000000000))*(sj2)*(x101));
IkReal x315=((x63)*(x97));
IkReal x316=((IkReal(0.000846499528529221))*(r01)*(x95));
IkReal x317=((IkReal(0.00169299905705844))*(pz)*(x107));
IkReal x318=((IkReal(0.00861127045659326))*(pz)*(x107));
IkReal x319=((x112)*(x113));
IkReal x320=((IkReal(0.00861127045659326))*(x236));
IkReal x321=((IkReal(0.000722817027429122))*(pz)*(x107));
IkReal x322=((IkReal(0.000722817027429122))*(x236));
IkReal x323=((x61)+(x62));
IkReal x324=((IkReal(0.000970182029629319))*(sj2)*(x101));
IkReal x325=((IkReal(0.000970182029629319))*(py)*(x97));
IkReal x326=((IkReal(0.000970182029629319))*(r00)*(x95));
IkReal x327=((IkReal(0.000970182029629319))*(cj2)*(x103));
IkReal x328=((IkReal(-0.388697400806000))+(x132));
IkReal x329=((IkReal(0.0116783316400000))+(x135));
IkReal x330=((IkReal(-0.249567761606000))+(x139));
IkReal x331=((IkReal(2.00000000000000))*(x110)*(x67));
IkReal x332=((px)*(x97)*(x98));
IkReal x333=((r01)*(x95)*(x98));
IkReal x334=((pz)*(x108)*(x98));
IkReal x335=((x106)*(x241));
IkReal x336=((IkReal(2.00000000000000))*(x119)*(x95));
IkReal x337=((r02)*(x95)*(x98));
IkReal x338=((px)*(x113)*(x98));
IkReal x339=((IkReal(2.00000000000000))*(x68)*(x96));
IkReal x340=((IkReal(2.00000000000000))*(px)*(pz)*(x97));
IkReal x341=((pz)*(x107)*(x98));
IkReal x342=((r02)*(x106)*(x67));
IkReal x343=((x107)*(x239));
IkReal x344=((x236)*(x99));
IkReal x345=((x110)*(x238));
IkReal x346=((IkReal(4.00000000000000))*(x122)*(x97));
IkReal x347=((IkReal(4.00000000000000))*(x128)*(x95));
IkReal x348=((x237)*(x95));
IkReal x349=((py)*(x107)*(x99));
IkReal x350=((x108)*(x238));
IkReal x351=((px)*(x97)*(x99));
IkReal x352=((x239)*(x96));
IkReal x353=((x104)*(x237));
IkReal x354=((IkReal(4.00000000000000))*(x105)*(x95));
IkReal x355=((((IkReal(0.0392800000000000))*(px)))+(((IkReal(0.0300000000000000))*(x127))));
IkReal x356=((x240)*(x97));
IkReal x357=((cj2)*(x101)*(x99));
IkReal x358=((IkReal(4.00000000000000))*(x103)*(x111));
IkReal x359=((x113)*(x240));
IkReal x360=((IkReal(4.00000000000000))*(x122)*(x96));
IkReal x361=((IkReal(4.00000000000000))*(x101)*(x95));
IkReal x362=((x235)*(x97));
IkReal x363=((IkReal(8.00000000000000))*(x103)*(x111));
IkReal x364=((IkReal(8.00000000000000))*(x101)*(x116));
IkReal x365=((IkReal(8.00000000000000))*(x122)*(x96));
IkReal x366=((IkReal(8.00000000000000))*(x101)*(x95));
IkReal x367=((x113)*(x235));
IkReal x368=((x223)+(((IkReal(-1.00000000000000))*(x224))));
IkReal x369=((x137)+(x63));
IkReal x370=((x133)+(x59));
IkReal x371=((x130)+(x56));
IkReal x372=((x136)+(x64));
IkReal x373=((x233)+(x93));
IkReal x374=((x173)+(x76));
IkReal x375=((x192)+(x81));
IkReal x376=((((IkReal(-1.00000000000000))*(x223)))+(((IkReal(-1.00000000000000))*(x224))));
IkReal x377=((x215)+(x216));
IkReal x378=((x58)+(x57)+(x60));
IkReal x379=((x135)+(x134));
IkReal x380=((x60)+(x65)+(x66));
IkReal x381=((x134)+(x323));
IkReal x382=((x135)+(x323));
IkReal x383=((x181)+(x248));
IkReal x384=((x152)+(x252));
IkReal x385=((x151)+(x256));
IkReal x386=((x320)+(x210));
IkReal x387=((x167)+(x263));
IkReal x388=((x318)+(x209));
IkReal x389=((((IkReal(0.00169299905705844))*(x236)))+(((x112)*(x97))));
IkReal x390=((x292)+(x263));
IkReal x391=((x283)+(x282));
IkReal x392=((x285)+(x284));
IkReal x393=((x300)+(x298));
IkReal x394=((x304)+(x305));
IkReal x395=((x139)+(x380));
IkReal x396=((x323)+(x379));
IkReal x397=((x147)+(x186)+(x187)+(x78));
IkReal x398=((x152)+(x257)+(x251));
IkReal x399=((x197)+(x218)+(x219)+(x90));
IkReal x400=((x171)+(x325)+(x291));
IkReal x401=((x169)+(x288)+(x287));
IkReal x402=((x170)+(x326)+(x290));
IkReal x403=((x194)+(x301)+(x299));
IkReal x404=((x309)+(x307)+(x303));
IkReal x405=((x145)+(x146)+(x250)+(x69));
IkReal x406=((x324)+(x228)+(x227)+(x91));
IkReal x407=((x259)+(x255)+(x260));
IkReal x408=((x310)+(x312)+(x214)+(x88));
IkReal x409=((x310)+(x312)+(x205)+(x85));
IkReal x410=((x172)+(x175)+(x176)+(x77)+(x75));
IkReal x411=((x179)+(x182)+(x242)+(x245));
IkReal x412=((x156)+(x158)+(x265)+(x266));
IkReal x413=((x311)+(x313)+(x213)+(x204));
IkReal x414=((x198)+(x197)+(x196)+(x195)+(x83));
IkReal x415=((x311)+(x313)+(x204)+(x203));
IkReal x416=((x177)+(x158)+(x265)+(x266));
IkReal x417=((x140)+(x141)+(x246)+(x244));
IkReal x418=((x385)+(x257)+(x251));
IkReal x419=((x365)+(x366)+(x367));
IkReal x420=((x353)+(x352)+(x354));
IkReal x421=((x357)+(x356)+(x358));
IkReal x422=((x315)+(x314)+(x212)+(x206)+(x87));
IkReal x423=((x327)+(x229)+(x230)+(x289)+(x92));
IkReal x424=((x306)+(x321)+(x217)+(x200)+(x89));
IkReal x425=((x315)+(x314)+(x207)+(x206)+(x86));
IkReal x426=((x185)+(x188)+(x295)+(x296)+(x79)+(x80));
IkReal x427=((x194)+(x302)+(x322)+(x220)+(x299));
IkReal x428=((x317)+(x362)+(x363)+(x364));
IkReal x429=((x155)+(x148)+(x149)+(x258)+(x261)+(x71));
IkReal x430=((x149)+(x180)+(x183)+(x293)+(x294)+(x261));
IkReal x431=((x154)+(x153)+(x150)+(x254)+(x253)+(x262));
IkReal x432=((x140)+(x333)+(x331)+(x336)+(x244));
IkReal x433=((x359)+(x316)+(x360)+(x361)+(x211));
IkReal x434=((x157)+(x339)+(x338)+(x337)+(x264));
IkReal x435=((x168)+(x351)+(x350)+(x349)+(x286));
IkReal x436=((x347)+(x345)+(x348)+(x234)+(x281));
IkReal x437=((x359)+(x316)+(x360)+(x361)+(x208));
IkReal x438=((x178)+(x339)+(x338)+(x337)+(x264));
IkReal x439=((x142)+(x143)+(x144)+(x147)+(x242)+(x245)+(x70));
IkReal x440=((x141)+(x332)+(x335)+(x334)+(x246));
IkReal x441=((x308)+(x306)+(x302)+(x202)+(x201)+(x200)+(x84));
IkReal x442=((x342)+(x340)+(x341)+(x267)+(x269));
IkReal x443=((x184)+(x243)+(x247)+(x249)+(x407));
IkReal x444=((x343)+(x346)+(x344)+(x232)+(x231)+(x280)+(x94));
IkReal x445=((x278)+(x279)+(x431));
IkReal x446=((x333)+(x332)+(x331)+(x336)+(x335)+(x334));
IkReal x447=((x243)+(x247)+(x249)+(x439));
IkReal x448=((x166)+(x164)+(x165)+(x159)+(x342)+(x340)+(x341)+(x269)+(x276)+(x273)+(x74)+(x73));
IkReal x449=((x162)+(x163)+(x160)+(x159)+(x268)+(x276)+(x274)+(x275)+(x272)+(x273)+(x270)+(x271));
IkReal x450=((x162)+(x163)+(x160)+(x161)+(x267)+(x268)+(x277)+(x274)+(x275)+(x272)+(x270)+(x271)+(x72));
IkReal x451=((x243)+(x247)+(x249)+(x407)+(x440));
op[0]=((((IkReal(-1.00000000000000))*(x378)))+(((IkReal(-1.00000000000000))*(x371)))+(x131)+(x328)+(x370));
op[1]=((x329)+(((IkReal(-1.00000000000000))*(x381))));
op[2]=((((IkReal(-1.00000000000000))*(x369)))+(((IkReal(-1.00000000000000))*(x372)))+(x221)+(((IkReal(-1.00000000000000))*(x222))));
op[3]=x376;
op[4]=((IkReal(-0.388697400806000))+(((IkReal(-1.00000000000000))*(x378)))+(((IkReal(-1.00000000000000))*(x370)))+(x371)+(((IkReal(-1.00000000000000))*(x132)))+(((IkReal(-1.00000000000000))*(x131))));
op[5]=((IkReal(0.0116783316400000))+(x134)+(((IkReal(-1.00000000000000))*(x382))));
op[6]=((IkReal(-0.0156749316400000))+(x135)+(((IkReal(-1.00000000000000))*(x381))));
op[7]=((((IkReal(-1.00000000000000))*(x371)))+(x138)+(x330)+(x370)+(((IkReal(-1.00000000000000))*(x380))));
op[8]=x376;
op[9]=((((IkReal(-1.00000000000000))*(x369)))+(((IkReal(-1.00000000000000))*(x372)))+(x225)+(((IkReal(-1.00000000000000))*(x226))));
op[10]=((IkReal(-0.0156749316400000))+(x134)+(((IkReal(-1.00000000000000))*(x382))));
op[11]=((IkReal(-0.249567761606000))+(((IkReal(-1.00000000000000))*(x395)))+(((IkReal(-1.00000000000000))*(x370)))+(x371)+(((IkReal(-1.00000000000000))*(x138))));
op[12]=((((IkReal(-1.00000000000000))*(x445)))+(((IkReal(-1.00000000000000))*(x398)))+(x385)+(x252)+(x429)+(x447)+(x446)+(((IkReal(-1.00000000000000))*(x248)))+(((IkReal(-1.00000000000000))*(x417)))+(((IkReal(-1.00000000000000))*(x407)))+(((IkReal(-1.00000000000000))*(x405))));
op[13]=((((IkReal(-1.00000000000000))*(x449)))+(((IkReal(-1.00000000000000))*(x434)))+(((IkReal(-1.00000000000000))*(x390)))+(((IkReal(-1.00000000000000))*(x164)))+(((IkReal(-1.00000000000000))*(x73)))+(x174)+(x161)+(x166)+(x165)+(x412)+(x442)+(x74)+(x72));
op[14]=((((IkReal(-1.00000000000000))*(x169)))+(((IkReal(-1.00000000000000))*(x168)))+(((IkReal(-1.00000000000000))*(x420)))+(((IkReal(-1.00000000000000))*(x423)))+(x351)+(x350)+(x349)+(x287)+(x400)+(x402)+(((IkReal(-1.00000000000000))*(x286)))+(((IkReal(-1.00000000000000))*(x288)))+(((IkReal(-1.00000000000000))*(x406))));
op[15]=((((IkReal(-1.00000000000000))*(x444)))+(((IkReal(-1.00000000000000))*(x436)))+(x373)+(x391)+(x392));
op[16]=((((IkReal(-1.00000000000000))*(x446)))+(((IkReal(-1.00000000000000))*(x431)))+(((IkReal(-1.00000000000000))*(x429)))+(x184)+(x383)+(x405)+(x417)+(x447)+(((IkReal(-1.00000000000000))*(x384)))+(((IkReal(-1.00000000000000))*(x418)))+(((IkReal(-1.00000000000000))*(x407))));
op[17]=((((IkReal(-1.00000000000000))*(x449)))+(((IkReal(-1.00000000000000))*(x442)))+(((IkReal(-1.00000000000000))*(x165)))+(((IkReal(-1.00000000000000))*(x164)))+(((IkReal(-1.00000000000000))*(x166)))+(((IkReal(-1.00000000000000))*(x161)))+(((IkReal(-1.00000000000000))*(x72)))+(((IkReal(-1.00000000000000))*(x73)))+(((IkReal(-1.00000000000000))*(x74)))+(x387)+(x412)+(x434)+(((IkReal(-1.00000000000000))*(x277))));
op[18]=((((IkReal(-1.00000000000000))*(x442)))+(x387)+(x374)+(x438)+(x449)+(((IkReal(-1.00000000000000))*(x277)))+(((IkReal(-1.00000000000000))*(x416)))+(((IkReal(-1.00000000000000))*(x410))));
op[19]=((((IkReal(-1.00000000000000))*(x445)))+(((IkReal(-1.00000000000000))*(x430)))+(((IkReal(-1.00000000000000))*(x397)))+(x243)+(x247)+(x249)+(x407)+(x411)+(x417)+(x426)+(x446)+(((IkReal(-1.00000000000000))*(x418))));
op[20]=((((IkReal(-0.822504190800000))*(r02)))+(((IkReal(0.00866189760000000))*(x108)))+(((IkReal(-1.00000000000000))*(x392)))+(((IkReal(-1.00000000000000))*(x391)))+(((IkReal(-0.787323558256000))*(x110)))+(((IkReal(0.0323204976000000))*(x96)))+(x343)+(x346)+(x347)+(x344)+(x345)+(x348)+(x281)+(x280)+(((IkReal(0.0311385968000000))*(r01)))+(((IkReal(0.300849067744000))*(x107))));
op[21]=((((IkReal(-0.000722817027429122))*(cj2)*(x103)))+(((IkReal(0.000722817027429122))*(py)*(x97)))+(((IkReal(-1.00000000000000))*(x170)))+(((IkReal(-1.00000000000000))*(x171)))+(((IkReal(-0.713965589344000))*(x96)))+(((IkReal(-1.00000000000000))*(x420)))+(((IkReal(-0.374207036656000))*(x108)))+(((IkReal(-1.00000000000000))*(x291)))+(((IkReal(-1.00000000000000))*(x290)))+(((IkReal(0.000722817027429122))*(r00)*(x95)))+(((IkReal(0.0662665407600000))*(x107)))+(((IkReal(-0.000722817027429122))*(sj2)*(x101)))+(x401)+(x435)+(((IkReal(0.0252841455600000))*(x110)))+(((IkReal(0.0812056558800000))*(r02)))+(((IkReal(-1.00000000000000))*(x289)))+(((IkReal(-0.546532962880000))*(r01))));
op[22]=((((IkReal(-1.00000000000000))*(x438)))+(((IkReal(-1.00000000000000))*(x390)))+(x174)+(x374)+(x410)+(x449)+(x442)+(((IkReal(-1.00000000000000))*(x416))));
op[23]=((((IkReal(-1.00000000000000))*(x446)))+(((IkReal(-1.00000000000000))*(x431)))+(((IkReal(-1.00000000000000))*(x397)))+(((IkReal(-1.00000000000000))*(x426)))+(x181)+(x385)+(x411)+(x430)+(x443)+(((IkReal(-1.00000000000000))*(x417)))+(((IkReal(-1.00000000000000))*(x251)))+(((IkReal(-1.00000000000000))*(x257))));
op[24]=((((IkReal(-1.00000000000000))*(x189)))+(x355));
op[25]=x190;
op[26]=((((IkReal(3.15448000000000))*(x127)))+(x375));
op[27]=x191;
op[28]=((((IkReal(-1.00000000000000))*(x355)))+(x189));
op[29]=x297;
op[30]=x190;
op[31]=((((IkReal(-1.00000000000000))*(x193)))+(x355));
op[32]=x191;
op[33]=((x375)+(((IkReal(1.02296000000000))*(x127))));
op[34]=x297;
op[35]=((((IkReal(-1.00000000000000))*(x355)))+(x193));
op[36]=((((IkReal(-1.00000000000000))*(x394)))+(((IkReal(-1.00000000000000))*(x421)))+(((IkReal(-1.00000000000000))*(x199)))+(x393)+(x414)+(x441)+(((IkReal(-1.00000000000000))*(x404)))+(((IkReal(-1.00000000000000))*(x403))));
op[37]=((((IkReal(-1.00000000000000))*(x425)))+(x415)+(x437)+(((IkReal(-1.00000000000000))*(x409))));
op[38]=((x386)+(((IkReal(-1.00000000000000))*(x319)))+(x419)+(((IkReal(-1.00000000000000))*(x388)))+(((IkReal(1.08500079904000))*(r00)))+(((IkReal(0.00194036405925864))*(r01)*(x95)))+(((IkReal(0.0818990911200000))*(x97)))+(((IkReal(-0.00194036405925864))*(r02)*(x104)))+(((IkReal(1.42177145868800))*(x113))));
op[39]=((((IkReal(1.15821669228800))*(x97)))+(((IkReal(0.0486545952000000))*(x113)))+(x428)+(((IkReal(-1.00000000000000))*(x389)))+(((IkReal(0.0413456672000000))*(r00))));
op[40]=((((IkReal(-1.00000000000000))*(x441)))+(((IkReal(-1.00000000000000))*(x394)))+(((IkReal(-1.00000000000000))*(x199)))+(x393)+(x403)+(x414)+(x421)+(((IkReal(-1.00000000000000))*(x404))));
op[41]=((((IkReal(-1.00000000000000))*(x437)))+(((IkReal(-1.00000000000000))*(x425)))+(x409)+(x415));
op[42]=((((IkReal(-1.00000000000000))*(x433)))+(x408)+(x422)+(((IkReal(-1.00000000000000))*(x413))));
op[43]=((((IkReal(-1.00000000000000))*(x394)))+(((IkReal(-1.00000000000000))*(x399)))+(((IkReal(-1.00000000000000))*(x421)))+(((IkReal(-1.00000000000000))*(x424)))+(x377)+(x393)+(x404)+(x427));
op[44]=((((IkReal(-1.00000000000000))*(x428)))+(((IkReal(-0.601698135488000))*(x97)))+(x389)+(((IkReal(-0.0622771936000000))*(r00)))+(((IkReal(-0.0646409952000000))*(x113))));
op[45]=((((IkReal(-0.00144563405485824))*(r02)*(x104)))+(((IkReal(1.09306592576000))*(r00)))+(((IkReal(0.00144563405485824))*(r01)*(x95)))+(x388)+(((IkReal(-1.00000000000000))*(x319)))+(x419)+(((IkReal(-1.00000000000000))*(x386)))+(((IkReal(-0.132533081520000))*(x97)))+(((IkReal(1.42793117868800))*(x113))));
op[46]=((x422)+(x433)+(((IkReal(-1.00000000000000))*(x413)))+(((IkReal(-1.00000000000000))*(x408))));
op[47]=((((IkReal(-1.00000000000000))*(x394)))+(((IkReal(-1.00000000000000))*(x399)))+(((IkReal(-1.00000000000000))*(x427)))+(x377)+(x393)+(x404)+(x424)+(x421));
op[48]=((((IkReal(-1.00000000000000))*(x378)))+(x328)+(x371)+(x370)+(((IkReal(-1.00000000000000))*(x131))));
op[49]=((((IkReal(-1.00000000000000))*(x323)))+(x134)+(x329));
op[50]=((((IkReal(-1.00000000000000))*(x369)))+(x372)+(x221)+(x222));
op[51]=x368;
op[52]=((IkReal(-0.388697400806000))+(((IkReal(-1.00000000000000))*(x378)))+(((IkReal(-1.00000000000000))*(x370)))+(((IkReal(-1.00000000000000))*(x371)))+(x131)+(((IkReal(-1.00000000000000))*(x132))));
op[53]=((IkReal(0.0116783316400000))+(((IkReal(-1.00000000000000))*(x396))));
op[54]=((IkReal(-0.0156749316400000))+(((IkReal(-1.00000000000000))*(x323)))+(x379));
op[55]=((IkReal(-0.249567761606000))+(((IkReal(-1.00000000000000))*(x395)))+(x138)+(x371)+(x370));
op[56]=x368;
op[57]=((((IkReal(-1.00000000000000))*(x369)))+(x372)+(x225)+(x226));
op[58]=((IkReal(-0.0156749316400000))+(((IkReal(-1.00000000000000))*(x396))));
op[59]=((((IkReal(-1.00000000000000))*(x370)))+(((IkReal(-1.00000000000000))*(x371)))+(x330)+(((IkReal(-1.00000000000000))*(x138)))+(((IkReal(-1.00000000000000))*(x380))));
op[60]=((((IkReal(-1.00000000000000))*(x440)))+(((IkReal(-1.00000000000000))*(x439)))+(((IkReal(-1.00000000000000))*(x431)))+(x398)+(x405)+(x429)+(x432)+(x443)+(((IkReal(-1.00000000000000))*(x385)))+(((IkReal(-1.00000000000000))*(x279)))+(((IkReal(-1.00000000000000))*(x248)))+(((IkReal(-1.00000000000000))*(x252))));
op[61]=((((IkReal(-1.00000000000000))*(x390)))+(((IkReal(-1.00000000000000))*(x450)))+(x434)+(x448)+(((IkReal(-1.00000000000000))*(x412))));
op[62]=((((IkReal(-1.00000000000000))*(x423)))+(x400)+(x406)+(x420)+(x435)+(((IkReal(-1.00000000000000))*(x402)))+(((IkReal(-1.00000000000000))*(x401))));
op[63]=((((IkReal(-1.00000000000000))*(x436)))+(((IkReal(-1.00000000000000))*(x391)))+(x373)+(x392)+(x444));
op[64]=((((IkReal(-1.00000000000000))*(x439)))+(((IkReal(-1.00000000000000))*(x432)))+(((IkReal(-1.00000000000000))*(x431)))+(((IkReal(-1.00000000000000))*(x429)))+(x384)+(x383)+(x418)+(x451)+(((IkReal(-1.00000000000000))*(x278)))+(((IkReal(-1.00000000000000))*(x405))));
IkReal x452=(pz)*(pz);
IkReal x453=(py)*(py);
IkReal x454=((IkReal(0.0155692984000000))*(r02));
IkReal x455=((IkReal(0.411252095400000))*(r01));
IkReal x456=((IkReal(0.000166891614547179))*(r00));
IkReal x457=((IkReal(0.00148838685975042))*(r00));
IkReal x458=((IkReal(0.0406028279400000))*(r01));
IkReal x459=((IkReal(0.273266481440000))*(r02));
IkReal x460=((cj2)*(py));
IkReal x461=((px)*(r00));
IkReal x462=((IkReal(4.00000000000000))*(r02));
IkReal x463=((pz)*(sj2));
IkReal x464=((IkReal(0.00215281761414831))*(r00));
IkReal x465=((pp)*(sj2));
IkReal x466=((px)*(r01));
IkReal x467=((py)*(r02));
IkReal x468=((IkReal(0.00430563522829663))*(r00));
IkReal x469=((py)*(sj2));
IkReal x470=((IkReal(1.04334000000000))*(r02));
IkReal x471=((IkReal(1.00000000000000))*(r01));
IkReal x472=((cj2)*(r02));
IkReal x473=((IkReal(2.00000000000000))*(pp));
IkReal x474=((IkReal(4.00000000000000))*(r01));
IkReal x475=((cj2)*(pz));
IkReal x476=((IkReal(0.0196400000000000))*(sj2));
IkReal x477=((r01)*(sj2));
IkReal x478=((pz)*(r00));
IkReal x479=((IkReal(0.000722817027429122))*(r00));
IkReal x480=((IkReal(2.00000000000000))*(r01));
IkReal x481=((px)*(r02));
IkReal x482=((IkReal(0.0196400000000000))*(r01));
IkReal x483=((r02)*(sj2));
IkReal x484=((IkReal(1.04334000000000))*(sj2));
IkReal x485=((IkReal(0.000846499528529221))*(r00));
IkReal x486=((cj2)*(r01));
IkReal x487=((py)*(r00));
IkReal x488=((IkReal(1.04334000000000))*(r01));
IkReal x489=((IkReal(2.00000000000000))*(r02));
IkReal x490=((pz)*(r01));
IkReal x491=((IkReal(0.0196400000000000))*(r02));
IkReal x492=((r00)*(sj2));
IkReal x493=((IkReal(0.000423249764264610))*(r00));
IkReal x494=((cj2)*(r00));
IkReal x495=((IkReal(0.000361408513714561))*(r00));
IkReal x496=((pz)*(r02));
IkReal x497=((py)*(r01));
IkReal x498=((IkReal(0.0150000000000000))*(x496));
IkReal x499=((IkReal(0.0150000000000000))*(x461));
IkReal x500=((IkReal(0.0150000000000000))*(x497));
IkReal x501=((r01)*(x465));
IkReal x502=((IkReal(4.15631268507847e-6))*(x494));
IkReal x503=((pp)*(x472));
IkReal x504=((IkReal(0.000220796704523919))*(x492));
IkReal x505=((IkReal(0.0161602488000000))*(x483));
IkReal x506=((IkReal(0.788620000000000))*(x467));
IkReal x507=((IkReal(0.00433094880000000))*(x486));
IkReal x508=((IkReal(0.150424533872000))*(x472));
IkReal x509=((IkReal(0.788620000000000))*(x490));
IkReal x510=((IkReal(0.393661779128000))*(x477));
IkReal x511=((IkReal(0.0126420727800000))*(x477));
IkReal x512=((IkReal(0.00430143002325923))*(x478));
IkReal x513=((IkReal(8.09708107201978e-5))*(x487));
IkReal x514=((IkReal(0.0331332703800000))*(x472));
IkReal x515=((IkReal(0.0876620000000000))*(x490));
IkReal x516=((IkReal(0.00111951133316807))*(x492));
IkReal x517=((IkReal(0.00412275003666995))*(pp)*(r00));
IkReal x518=((IkReal(0.000209676648320412))*(x494));
IkReal x519=((IkReal(0.522180000000000))*(x461));
IkReal x520=((IkReal(8.09708107201978e-5))*(x466));
IkReal x521=((IkReal(0.00430143002325923))*(x481));
IkReal x522=((IkReal(0.0876620000000000))*(x467));
IkReal x523=((IkReal(0.522180000000000))*(x496));
IkReal x524=((IkReal(0.187103518328000))*(x486));
IkReal x525=((IkReal(0.522180000000000))*(x497));
IkReal x526=((IkReal(0.356982794672000))*(x483));
IkReal x527=((sj2)*(x452));
IkReal x528=((cj2)*(x453));
IkReal x529=((x463)*(x493));
IkReal x530=((IkReal(1.04334000000000))*(cj2)*(x461));
IkReal x531=((x470)*(x475));
IkReal x532=((IkReal(0.000423249764264610))*(cj2)*(x466));
IkReal x533=((x460)*(x488));
IkReal x534=((x463)*(x491));
IkReal x535=((x469)*(x482));
IkReal x536=((x461)*(x476));
IkReal x537=((x467)*(x484));
IkReal x538=((x475)*(x482));
IkReal x539=((x460)*(x493));
IkReal x540=((x460)*(x491));
IkReal x541=((IkReal(0.000423249764264610))*(sj2)*(x481));
IkReal x542=((x463)*(x488));
IkReal x543=((x467)*(x476));
IkReal x544=((IkReal(0.000361408513714561))*(sj2)*(x466));
IkReal x545=((IkReal(0.0196400000000000))*(cj2)*(x461));
IkReal x546=((x463)*(x464));
IkReal x547=((x460)*(x470));
IkReal x548=((x460)*(x482));
IkReal x549=((IkReal(0.000361408513714561))*(px)*(x472));
IkReal x550=((IkReal(0.0196400000000000))*(pz)*(x472));
IkReal x551=((IkReal(0.00215281761414831))*(cj2)*(x466));
IkReal x552=((x463)*(x482));
IkReal x553=((x469)*(x495));
IkReal x554=((x463)*(x470));
IkReal x555=((x461)*(x484));
IkReal x556=((IkReal(0.00824550007333990))*(px)*(x461));
IkReal x557=((x475)*(x488));
IkReal x558=((x475)*(x495));
IkReal x559=((IkReal(0.00215281761414831))*(sj2)*(x481));
IkReal x560=((x460)*(x464));
IkReal x561=((IkReal(0.00824550007333990))*(py)*(x466));
IkReal x562=((IkReal(0.00824550007333990))*(pz)*(x481));
IkReal x563=((x469)*(x488));
IkReal x564=((IkReal(2.00000000000000))*(x463)*(x467));
IkReal x565=((IkReal(2.00000000000000))*(x461)*(x475));
IkReal x566=((pz)*(x460)*(x480));
IkReal x567=((IkReal(2.00000000000000))*(x461)*(x469));
IkReal x568=((IkReal(2.00000000000000))*(x453)*(x477));
IkReal x569=((IkReal(2.00000000000000))*(x452)*(x472));
IkReal x570=((IkReal(2.00000000000000))*(x460)*(x461));
IkReal x571=((pz)*(x460)*(x489));
IkReal x572=((x480)*(x528));
IkReal x573=((IkReal(2.00000000000000))*(x452)*(x483));
IkReal x574=((py)*(x463)*(x480));
IkReal x575=((IkReal(2.00000000000000))*(x461)*(x463));
IkReal x576=((x456)+(x509));
IkReal x577=((x501)+(x503));
IkReal x578=((x504)+(x540)+(x542));
IkReal x579=((x455)+(x532)+(x529)+(x510));
IkReal x580=((x457)+(x550)+(x545)+(x547)+(x543)+(x548)+(x517)+(x516)+(x515));
IkReal x581=((x459)+(x559)+(x558)+(x553)+(x520)+(x521)+(x526)+(x524)+(x575)+(x574)+(x573)+(x560));
IkReal x582=((x458)+(x551)+(x544)+(x546)+(x549)+(x514)+(x513)+(x512)+(x511)+(x571)+(x570)+(x572));
IkReal x583=((x498)+(x499)+(x500)+(x502)+(x506)+(x531)+(x530)+(x533)+(x535)+(x534)+(x537)+(x536)+(x538));
IkReal x584=((x552)+(x557)+(x556)+(x555)+(x554)+(x522)+(x523)+(x525)+(x519)+(x518)+(x562)+(x563)+(x561));
IkReal x585=((x454)+(x508)+(x505)+(x507)+(x541)+(x539)+(x568)+(x569)+(x566)+(x567)+(x564)+(x565));
op[65]=((((IkReal(0.133264585800000))*(r01)))+(((IkReal(-1.00000000000000))*(x499)))+(((IkReal(-1.00000000000000))*(x498)))+(((IkReal(-0.255740000000000))*(x467)))+(((IkReal(-1.00000000000000))*(x502)))+(((IkReal(-1.00000000000000))*(x500)))+(((IkReal(0.254532139928000))*(x477)))+(((IkReal(-1.00000000000000))*(x538)))+(((IkReal(-1.00000000000000))*(x539)))+(((IkReal(-1.00000000000000))*(x536)))+(((IkReal(-1.00000000000000))*(x537)))+(((IkReal(-1.00000000000000))*(x534)))+(((IkReal(-1.00000000000000))*(x535)))+(((IkReal(-1.00000000000000))*(x533)))+(((IkReal(-1.00000000000000))*(x530)))+(((IkReal(-1.00000000000000))*(x531)))+(((IkReal(-0.0121636488000000))*(x483)))+(((IkReal(-1.00000000000000))*(x541)))+(((IkReal(-0.289554173072000))*(x472)))+(x532)+(x529)+(x578)+(x577)+(((IkReal(-0.0103364168000000))*(r02)))+(((IkReal(5.41209473565157e-5))*(r00)))+(((IkReal(0.255740000000000))*(x490)))+(((IkReal(-0.00832754880000000))*(x486)))+(((IkReal(-1.00000000000000))*(x565)))+(((IkReal(-1.00000000000000))*(x564)))+(((IkReal(-1.00000000000000))*(x567)))+(((IkReal(-1.00000000000000))*(x566)))+(((IkReal(-1.00000000000000))*(x569)))+(((IkReal(-1.00000000000000))*(x568))));
op[66]=((((IkReal(-1.00000000000000))*(x578)))+(((IkReal(-1.00000000000000))*(x576)))+(x579)+(x577)+(x583)+(((IkReal(-1.00000000000000))*(x585))));
op[67]=((((pp)*(x486)))+(((IkReal(-1.00000000000000))*(r02)*(x465)))+(x580)+(x581)+(((IkReal(-1.00000000000000))*(x584)))+(((IkReal(-1.00000000000000))*(x582))));
op[68]=((((IkReal(-0.822504190800000))*(r02)))+(((py)*(x463)*(x474)))+(((IkReal(0.00866189760000000))*(x472)))+(((x475)*(x485)))+(((IkReal(-0.787323558256000))*(x483)))+(((IkReal(-1.00000000000000))*(x465)*(x489)))+(((x462)*(x527)))+(((IkReal(-0.0323204976000000))*(x477)))+(((IkReal(-0.000846499528529221))*(sj2)*(x466)))+(((x469)*(x485)))+(((IkReal(-0.300849067744000))*(x486)))+(((IkReal(-0.000846499528529221))*(px)*(x472)))+(((IkReal(-4.00000000000000))*(x460)*(x461)))+(((IkReal(-1.00000000000000))*(x474)*(x528)))+(((IkReal(-0.0311385968000000))*(r01)))+(((IkReal(4.00000000000000))*(x461)*(x463)))+(((IkReal(-1.00000000000000))*(pz)*(x460)*(x462)))+(((x473)*(x486))));
op[69]=((((IkReal(-0.374207036656000))*(x472)))+(((IkReal(0.0252841455600000))*(x483)))+(((IkReal(0.00430563522829663))*(sj2)*(x466)))+(((IkReal(0.000161941621440396))*(x478)))+(((IkReal(-1.00000000000000))*(x468)*(x475)))+(((IkReal(-1.00000000000000))*(x465)*(x480)))+(((IkReal(0.00860286004651845))*(x466)))+(((IkReal(-1.00000000000000))*(x468)*(x469)))+(((py)*(x462)*(x463)))+(((IkReal(-0.00860286004651845))*(x487)))+(((IkReal(-1.00000000000000))*(x472)*(x473)))+(((x460)*(x479)))+(((IkReal(4.00000000000000))*(x461)*(x475)))+(((cj2)*(x452)*(x462)))+(((pz)*(x460)*(x474)))+(((IkReal(0.0812056558800000))*(r02)))+(((IkReal(-0.000161941621440396))*(x481)))+(((IkReal(0.546532962880000))*(r01)))+(((IkReal(4.00000000000000))*(x461)*(x469)))+(((IkReal(-0.0662665407600000))*(x486)))+(((IkReal(0.00430563522829663))*(px)*(x472)))+(((IkReal(-0.000722817027429122))*(cj2)*(x466)))+(((IkReal(0.713965589344000))*(x477)))+(((IkReal(-1.00000000000000))*(x463)*(x479)))+(((IkReal(0.000722817027429122))*(sj2)*(x481)))+(((sj2)*(x453)*(x474))));
op[70]=((((IkReal(-1.00000000000000))*(x578)))+(((IkReal(-1.00000000000000))*(x579)))+(((IkReal(-1.00000000000000))*(x576)))+(x583)+(x585)+(((IkReal(-1.00000000000000))*(x503)))+(((IkReal(-1.00000000000000))*(x465)*(x471))));
op[71]=((((IkReal(-1.00000000000000))*(cj2)*(pp)*(x471)))+(((r02)*(x465)))+(x580)+(x582)+(((IkReal(-1.00000000000000))*(x581)))+(((IkReal(-1.00000000000000))*(x584))));
solvedialyticpoly8qep(op,zeror,numroots);
IkReal j0array[16], cj0array[16], sj0array[16], j1array[16], cj1array[16], sj1array[16], j3array[16], cj3array[16], sj3array[16];
int numsolutions = 0;
for(int ij0 = 0; ij0 < numroots; ij0 += 3)
{
IkReal htj0 = zeror[ij0+0], htj1 = zeror[ij0+1], htj3 = zeror[ij0+2];
j0array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj0)));
j1array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj1)));
j3array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj3)));
IkReal x586=(htj0)*(htj0);
IkReal x587=(htj1)*(htj1);
IkReal x588=(htj3)*(htj3);
cj0array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x586))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x586)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x586))))));
cj1array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x587))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x587)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x587))))));
cj3array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x588))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x588)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x588))))));
sj0array[numsolutions]=((IkReal(2.00000000000000))*(htj0)*(((IKabs(((IkReal(1.00000000000000))+((htj0)*(htj0)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj0)*(htj0))))):(IkReal)1.0e30)));
sj1array[numsolutions]=((IkReal(2.00000000000000))*(htj1)*(((IKabs(((IkReal(1.00000000000000))+((htj1)*(htj1)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj1)*(htj1))))):(IkReal)1.0e30)));
sj3array[numsolutions]=((IkReal(2.00000000000000))*(htj3)*(((IKabs(((IkReal(1.00000000000000))+((htj3)*(htj3)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj3)*(htj3))))):(IkReal)1.0e30)));
if( j0array[numsolutions] > IKPI )
{
    j0array[numsolutions]-=IK2PI;
}
else if( j0array[numsolutions] < -IKPI )
{
    j0array[numsolutions]+=IK2PI;
}
if( j1array[numsolutions] > IKPI )
{
    j1array[numsolutions]-=IK2PI;
}
else if( j1array[numsolutions] < -IKPI )
{
    j1array[numsolutions]+=IK2PI;
}
if( j3array[numsolutions] > IKPI )
{
    j3array[numsolutions]-=IK2PI;
}
else if( j3array[numsolutions] < -IKPI )
{
    j3array[numsolutions]+=IK2PI;
}
numsolutions++;
}
bool j0valid[16]={true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true};
_nj0 = 16;
_nj1 = 1;
_nj3 = 1;
for(int ij0 = 0; ij0 < numsolutions; ++ij0)
    {
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
_ij1[0] = 0; _ij1[1] = -1;
_ij3[0] = 0; _ij3[1] = -1;
for(int iij0 = ij0+1; iij0 < numsolutions; ++iij0)
{
if( !j0valid[iij0] ) { continue; }
if( IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(cj1array[ij0]-cj1array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij0]-sj1array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(cj3array[ij0]-cj3array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij0]-sj3array[iij0]) < IKFAST_SOLUTION_THRESH &&  1 )
{
    j0valid[iij0]=false; _ij0[1] = iij0; _ij1[1] = 0; _ij3[1] = 0;  break; 
}
}
    j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

    j1 = j1array[ij0]; cj1 = cj1array[ij0]; sj1 = sj1array[ij0];

    j3 = j3array[ij0]; cj3 = cj3array[ij0]; sj3 = sj3array[ij0];

{
IkReal dummyeval[1];
IkReal gconst0;
gconst0=IKsign(cj3);
dummyeval[0]=cj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst1;
gconst1=IKsign(sj3);
dummyeval[0]=sj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[2];
IkReal x589=((cj1)*(sj2));
IkReal x590=((cj2)*(sj1));
IkReal x591=((cj0)*(py));
IkReal x592=((IkReal(1.00000000000000))*(px)*(sj0));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0588310000000000))+(((IkReal(-1.00000000000000))*(x589)*(x592)))+(((pz)*(sj1)*(sj2)))+(((IkReal(-1.00000000000000))*(x590)*(x592)))+(((IkReal(0.521670000000000))*(cj2)))+(((x590)*(x591)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(pz)))+(((x589)*(x591)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x593=((IkReal(0.0215969237223081))*(cj1));
IkReal x594=((pz)*(sj2));
IkReal x595=((cj0)*(px));
IkReal x596=((IkReal(5.23847517560207))*(sj0));
IkReal x597=((cj1)*(cj2));
IkReal x598=((cj0)*(py));
IkReal x599=((IkReal(0.0215969237223081))*(sj1));
IkReal x600=((px)*(sj0));
IkReal x601=((cj2)*(pz));
IkReal x602=((IkReal(5.23847517560207))*(sj1));
if( IKabs(((IkReal(0.00851588299294329))+(((IkReal(-1.00000000000000))*(sj2)*(x599)*(x600)))+(((IkReal(-1.00000000000000))*(py)*(x596)))+(((IkReal(0.0112664671982164))*(sj2)))+(((IkReal(-1.00000000000000))*(x599)*(x601)))+(((IkReal(-1.00000000000000))*(x593)*(x594)))+(((IkReal(-0.000212081790953065))*(cj2)))+(((sj2)*(x598)*(x599)))+(((IkReal(-1.00000000000000))*(cj2)*(x593)*(x598)))+(((cj2)*(x593)*(x600)))+(((IkReal(-5.23847517560207))*(x595))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-2.06558314649165))+(((IkReal(5.23847517560207))*(cj1)*(x594)))+(((x601)*(x602)))+(((IkReal(-2.73275534485633))*(sj2)))+(((IkReal(0.0514418262244123))*(cj2)))+(((IkReal(5.23847517560207))*(x597)*(x598)))+(((IkReal(-1.00000000000000))*(sj2)*(x598)*(x602)))+(((px)*(sj1)*(sj2)*(x596)))+(((IkReal(-0.0215969237223081))*(x595)))+(((IkReal(-1.00000000000000))*(px)*(x596)*(x597)))+(((IkReal(-0.0215969237223081))*(py)*(sj0))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.00851588299294329))+(((IkReal(-1.00000000000000))*(sj2)*(x599)*(x600)))+(((IkReal(-1.00000000000000))*(py)*(x596)))+(((IkReal(0.0112664671982164))*(sj2)))+(((IkReal(-1.00000000000000))*(x599)*(x601)))+(((IkReal(-1.00000000000000))*(x593)*(x594)))+(((IkReal(-0.000212081790953065))*(cj2)))+(((sj2)*(x598)*(x599)))+(((IkReal(-1.00000000000000))*(cj2)*(x593)*(x598)))+(((cj2)*(x593)*(x600)))+(((IkReal(-5.23847517560207))*(x595)))))+IKsqr(((IkReal(-2.06558314649165))+(((IkReal(5.23847517560207))*(cj1)*(x594)))+(((x601)*(x602)))+(((IkReal(-2.73275534485633))*(sj2)))+(((IkReal(0.0514418262244123))*(cj2)))+(((IkReal(5.23847517560207))*(x597)*(x598)))+(((IkReal(-1.00000000000000))*(sj2)*(x598)*(x602)))+(((px)*(sj1)*(sj2)*(x596)))+(((IkReal(-0.0215969237223081))*(x595)))+(((IkReal(-1.00000000000000))*(px)*(x596)*(x597)))+(((IkReal(-0.0215969237223081))*(py)*(sj0)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((IkReal(0.00851588299294329))+(((IkReal(-1.00000000000000))*(sj2)*(x599)*(x600)))+(((IkReal(-1.00000000000000))*(py)*(x596)))+(((IkReal(0.0112664671982164))*(sj2)))+(((IkReal(-1.00000000000000))*(x599)*(x601)))+(((IkReal(-1.00000000000000))*(x593)*(x594)))+(((IkReal(-0.000212081790953065))*(cj2)))+(((sj2)*(x598)*(x599)))+(((IkReal(-1.00000000000000))*(cj2)*(x593)*(x598)))+(((cj2)*(x593)*(x600)))+(((IkReal(-5.23847517560207))*(x595)))), ((IkReal(-2.06558314649165))+(((IkReal(5.23847517560207))*(cj1)*(x594)))+(((x601)*(x602)))+(((IkReal(-2.73275534485633))*(sj2)))+(((IkReal(0.0514418262244123))*(cj2)))+(((IkReal(5.23847517560207))*(x597)*(x598)))+(((IkReal(-1.00000000000000))*(sj2)*(x598)*(x602)))+(((px)*(sj1)*(sj2)*(x596)))+(((IkReal(-0.0215969237223081))*(x595)))+(((IkReal(-1.00000000000000))*(px)*(x596)*(x597)))+(((IkReal(-0.0215969237223081))*(py)*(sj0)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[2];
IkReal x603=IKsin(j4);
IkReal x604=IKcos(j4);
IkReal x605=((cj1)*(cj2));
IkReal x606=((px)*(sj0));
IkReal x607=((cj0)*(py));
IkReal x608=((sj1)*(sj2));
evalcond[0]=((((IkReal(0.000787000000000000))*(x604)))+(((IkReal(0.190892000000000))*(x603)))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[1]=((IkReal(-0.394310000000000))+(((x605)*(x607)))+(((IkReal(0.000787000000000000))*(x603)))+(((IkReal(-1.00000000000000))*(x607)*(x608)))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x605)*(x606)))+(((IkReal(-0.190892000000000))*(x604)))+(((cj2)*(pz)*(sj1)))+(((x606)*(x608)))+(((cj1)*(pz)*(sj2)))+(((IkReal(-0.521670000000000))*(sj2))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
dummyeval[0]=cj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x609=((IkReal(1.00000000000000))*(sj2));
IkReal x610=((px)*(sj0));
IkReal x611=((pz)*(sj2));
IkReal x612=((cj0)*(sj1));
IkReal x613=((cj1)*(sj2));
IkReal x614=((sj1)*(sj2));
IkReal x615=((cj2)*(sj1));
IkReal x616=((r00)*(sj0));
IkReal x617=((cj0)*(cj1)*(cj2));
IkReal x618=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.000787000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((r01)*(x617)))+(((r02)*(x615)))+(((r02)*(x613)))+(((x614)*(x616)))+(((IkReal(-1.00000000000000))*(r01)*(x609)*(x612)))+(((IkReal(-1.00000000000000))*(x616)*(x618))));
evalcond[3]=((IkReal(-0.585202000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x610)*(x618)))+(((IkReal(-1.00000000000000))*(py)*(x609)*(x612)))+(((pz)*(x615)))+(((py)*(x617)))+(((cj1)*(x611)))+(((x610)*(x614)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(0.0588310000000000))+(((sj1)*(x611)))+(((cj2)*(py)*(x612)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(cj1)*(x609)*(x610)))+(((IkReal(-1.00000000000000))*(x610)*(x615)))+(((IkReal(-1.00000000000000))*(pz)*(x618)))+(((cj0)*(py)*(x613)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x619=((IkReal(1.00000000000000))*(sj2));
IkReal x620=((cj0)*(r01));
IkReal x621=((r00)*(sj0));
IkReal x622=((cj2)*(sj1));
if( IKabs(((((r01)*(sj0)))+(((cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x620)*(x622)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x619)))+(((cj1)*(sj2)*(x621)))+(((IkReal(-1.00000000000000))*(cj1)*(x619)*(x620)))+(((x621)*(x622)))+(((cj1)*(cj2)*(r02))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r01)*(sj0)))+(((cj0)*(r00)))))+IKsqr(((((IkReal(-1.00000000000000))*(x620)*(x622)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x619)))+(((cj1)*(sj2)*(x621)))+(((IkReal(-1.00000000000000))*(cj1)*(x619)*(x620)))+(((x621)*(x622)))+(((cj1)*(cj2)*(r02)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((r01)*(sj0)))+(((cj0)*(r00)))), ((((IkReal(-1.00000000000000))*(x620)*(x622)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x619)))+(((cj1)*(sj2)*(x621)))+(((IkReal(-1.00000000000000))*(cj1)*(x619)*(x620)))+(((x621)*(x622)))+(((cj1)*(cj2)*(r02)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x623=((cj2)*(sj1));
IkReal x624=((cj0)*(r01));
IkReal x625=((cj1)*(sj2));
IkReal x626=((IkReal(1.00000000000000))*(r00)*(sj0));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x623)*(x626)))+(IKcos(j5))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(x625)*(x626)))+(((x624)*(x625)))+(((r02)*(sj1)*(sj2)))+(((x623)*(x624))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x627=((IkReal(1.00000000000000))*(sj2));
IkReal x628=((px)*(sj0));
IkReal x629=((pz)*(sj2));
IkReal x630=((cj0)*(sj1));
IkReal x631=((cj1)*(sj2));
IkReal x632=((sj1)*(sj2));
IkReal x633=((cj2)*(sj1));
IkReal x634=((r00)*(sj0));
IkReal x635=((cj0)*(cj1)*(cj2));
IkReal x636=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.000787000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((r02)*(x633)))+(((r02)*(x631)))+(((IkReal(-1.00000000000000))*(r01)*(x627)*(x630)))+(((IkReal(-1.00000000000000))*(x634)*(x636)))+(((r01)*(x635)))+(((x632)*(x634))));
evalcond[3]=((IkReal(-0.203418000000000))+(((py)*(x635)))+(((IkReal(0.00982000000000000))*(cj2)))+(((pz)*(x633)))+(((x628)*(x632)))+(((IkReal(-1.00000000000000))*(x628)*(x636)))+(((IkReal(-1.00000000000000))*(py)*(x627)*(x630)))+(((IkReal(-0.521670000000000))*(sj2)))+(((cj1)*(x629))));
evalcond[4]=((IkReal(0.0588310000000000))+(((cj2)*(py)*(x630)))+(((IkReal(-1.00000000000000))*(pz)*(x636)))+(((cj0)*(py)*(x631)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(cj1)*(x627)*(x628)))+(((sj1)*(x629)))+(((IkReal(0.00982000000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(x628)*(x633))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x637=((IkReal(1.00000000000000))*(sj2));
IkReal x638=((cj0)*(r01));
IkReal x639=((r00)*(sj0));
IkReal x640=((cj2)*(sj1));
if( IKabs(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(cj1)*(x637)*(x638)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x637)))+(((x639)*(x640)))+(((cj1)*(sj2)*(x639)))+(((IkReal(-1.00000000000000))*(x638)*(x640)))+(((cj1)*(cj2)*(r02))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))))+IKsqr(((((IkReal(-1.00000000000000))*(cj1)*(x637)*(x638)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x637)))+(((x639)*(x640)))+(((cj1)*(sj2)*(x639)))+(((IkReal(-1.00000000000000))*(x638)*(x640)))+(((cj1)*(cj2)*(r02)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))), ((((IkReal(-1.00000000000000))*(cj1)*(x637)*(x638)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x637)))+(((x639)*(x640)))+(((cj1)*(sj2)*(x639)))+(((IkReal(-1.00000000000000))*(x638)*(x640)))+(((cj1)*(cj2)*(r02)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x641=((cj2)*(sj1));
IkReal x642=((cj0)*(r01));
IkReal x643=((cj1)*(sj2));
IkReal x644=((IkReal(1.00000000000000))*(r00)*(sj0));
evalcond[0]=((((r01)*(sj0)))+(IKsin(j5))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x641)*(x644)))+(((x641)*(x642)))+(IKcos(j5))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(x643)*(x644)))+(((r02)*(sj1)*(sj2)))+(((x642)*(x643))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x645=((pz)*(sj1));
IkReal x646=((cj0)*(py));
IkReal x647=((IkReal(1.00000000000000))*(sj2));
IkReal x648=((cj1)*(cj2));
IkReal x649=((px)*(sj0));
IkReal x650=((cj2)*(sj1));
IkReal x651=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(0.190892000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.393523000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(sj1)*(x646)*(x647)))+(((pz)*(x651)))+(((IkReal(-1.00000000000000))*(x648)*(x649)))+(((cj2)*(x645)))+(((sj1)*(sj2)*(x649)))+(((x646)*(x648)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(0.0588310000000000))+(((x646)*(x651)))+(((x646)*(x650)))+(((IkReal(-1.00000000000000))*(pz)*(x648)))+(((IkReal(-1.00000000000000))*(cj1)*(x647)*(x649)))+(((IkReal(0.521670000000000))*(cj2)))+(((sj2)*(x645)))+(((IkReal(-1.00000000000000))*(x649)*(x650)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x652=((IkReal(1.00000000000000))*(sj2));
IkReal x653=((r02)*(sj1));
IkReal x654=((cj0)*(r01));
IkReal x655=((IkReal(1.00000000000000))*(cj2));
IkReal x656=((cj1)*(r02));
IkReal x657=((cj1)*(r00)*(sj0));
IkReal x658=((r00)*(sj0)*(sj1));
if( IKabs(((((IkReal(-1.00000000000000))*(x655)*(x657)))+(((cj2)*(x653)))+(((sj2)*(x658)))+(((sj2)*(x656)))+(((cj1)*(cj2)*(x654)))+(((IkReal(-1.00000000000000))*(sj1)*(x652)*(x654))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj2)*(x656)))+(((cj2)*(x658)))+(((sj2)*(x657)))+(((IkReal(-1.00000000000000))*(sj1)*(x654)*(x655)))+(((IkReal(-1.00000000000000))*(x652)*(x653)))+(((IkReal(-1.00000000000000))*(cj1)*(x652)*(x654))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x655)*(x657)))+(((cj2)*(x653)))+(((sj2)*(x658)))+(((sj2)*(x656)))+(((cj1)*(cj2)*(x654)))+(((IkReal(-1.00000000000000))*(sj1)*(x652)*(x654)))))+IKsqr(((((cj2)*(x656)))+(((cj2)*(x658)))+(((sj2)*(x657)))+(((IkReal(-1.00000000000000))*(sj1)*(x654)*(x655)))+(((IkReal(-1.00000000000000))*(x652)*(x653)))+(((IkReal(-1.00000000000000))*(cj1)*(x652)*(x654)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x655)*(x657)))+(((cj2)*(x653)))+(((sj2)*(x658)))+(((sj2)*(x656)))+(((cj1)*(cj2)*(x654)))+(((IkReal(-1.00000000000000))*(sj1)*(x652)*(x654)))), ((((cj2)*(x656)))+(((cj2)*(x658)))+(((sj2)*(x657)))+(((IkReal(-1.00000000000000))*(sj1)*(x654)*(x655)))+(((IkReal(-1.00000000000000))*(x652)*(x653)))+(((IkReal(-1.00000000000000))*(cj1)*(x652)*(x654)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x659=((r02)*(sj2));
IkReal x660=((IkReal(1.00000000000000))*(sj2));
IkReal x661=((r00)*(sj0));
IkReal x662=((cj1)*(cj2));
IkReal x663=((cj0)*(r01));
IkReal x664=((sj1)*(x663));
IkReal x665=((IkReal(1.00000000000000))*(cj2)*(x661));
evalcond[0]=((((cj2)*(x664)))+(((IkReal(-1.00000000000000))*(sj1)*(x665)))+(((sj1)*(x659)))+(((cj1)*(sj2)*(x663)))+(IKcos(j5))+(((IkReal(-1.00000000000000))*(cj1)*(x660)*(x661)))+(((IkReal(-1.00000000000000))*(r02)*(x662))));
evalcond[1]=((((sj1)*(sj2)*(x661)))+(((x662)*(x663)))+(((IkReal(-1.00000000000000))*(x660)*(x664)))+(((cj1)*(x659)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x661)*(x662)))+(((IkReal(-1.00000000000000))*(IKsin(j5)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x666=((pz)*(sj1));
IkReal x667=((cj0)*(py));
IkReal x668=((IkReal(1.00000000000000))*(sj2));
IkReal x669=((cj1)*(cj2));
IkReal x670=((px)*(sj0));
IkReal x671=((cj2)*(sj1));
IkReal x672=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(-0.190892000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.395097000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((pz)*(x672)))+(((x667)*(x669)))+(((cj2)*(x666)))+(((sj1)*(sj2)*(x670)))+(((IkReal(-1.00000000000000))*(sj1)*(x667)*(x668)))+(((IkReal(-1.00000000000000))*(x669)*(x670)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(0.0588310000000000))+(((IkReal(-1.00000000000000))*(pz)*(x669)))+(((IkReal(0.521670000000000))*(cj2)))+(((x667)*(x671)))+(((x667)*(x672)))+(((IkReal(-1.00000000000000))*(x670)*(x671)))+(((sj2)*(x666)))+(((IkReal(-1.00000000000000))*(cj1)*(x668)*(x670)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x673=((IkReal(1.00000000000000))*(sj2));
IkReal x674=((r02)*(sj1));
IkReal x675=((cj0)*(r01));
IkReal x676=((r00)*(sj0));
IkReal x677=((cj1)*(r02));
IkReal x678=((IkReal(1.00000000000000))*(cj2));
if( IKabs(((((sj1)*(sj2)*(x675)))+(((IkReal(-1.00000000000000))*(cj1)*(x675)*(x678)))+(((IkReal(-1.00000000000000))*(x674)*(x678)))+(((IkReal(-1.00000000000000))*(x673)*(x677)))+(((cj1)*(cj2)*(x676)))+(((IkReal(-1.00000000000000))*(sj1)*(x673)*(x676))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj2)*(x677)))+(((IkReal(-1.00000000000000))*(cj1)*(x673)*(x675)))+(((IkReal(-1.00000000000000))*(sj1)*(x675)*(x678)))+(((cj1)*(sj2)*(x676)))+(((cj2)*(sj1)*(x676)))+(((IkReal(-1.00000000000000))*(x673)*(x674))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((sj1)*(sj2)*(x675)))+(((IkReal(-1.00000000000000))*(cj1)*(x675)*(x678)))+(((IkReal(-1.00000000000000))*(x674)*(x678)))+(((IkReal(-1.00000000000000))*(x673)*(x677)))+(((cj1)*(cj2)*(x676)))+(((IkReal(-1.00000000000000))*(sj1)*(x673)*(x676)))))+IKsqr(((((cj2)*(x677)))+(((IkReal(-1.00000000000000))*(cj1)*(x673)*(x675)))+(((IkReal(-1.00000000000000))*(sj1)*(x675)*(x678)))+(((cj1)*(sj2)*(x676)))+(((cj2)*(sj1)*(x676)))+(((IkReal(-1.00000000000000))*(x673)*(x674)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((sj1)*(sj2)*(x675)))+(((IkReal(-1.00000000000000))*(cj1)*(x675)*(x678)))+(((IkReal(-1.00000000000000))*(x674)*(x678)))+(((IkReal(-1.00000000000000))*(x673)*(x677)))+(((cj1)*(cj2)*(x676)))+(((IkReal(-1.00000000000000))*(sj1)*(x673)*(x676)))), ((((cj2)*(x677)))+(((IkReal(-1.00000000000000))*(cj1)*(x673)*(x675)))+(((IkReal(-1.00000000000000))*(sj1)*(x675)*(x678)))+(((cj1)*(sj2)*(x676)))+(((cj2)*(sj1)*(x676)))+(((IkReal(-1.00000000000000))*(x673)*(x674)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x679=((r02)*(sj2));
IkReal x680=((IkReal(1.00000000000000))*(sj2));
IkReal x681=((r00)*(sj0));
IkReal x682=((cj1)*(cj2));
IkReal x683=((cj0)*(r01));
IkReal x684=((sj1)*(x683));
IkReal x685=((IkReal(1.00000000000000))*(cj2)*(x681));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj1)*(x680)*(x681)))+(IKcos(j5))+(((IkReal(-1.00000000000000))*(sj1)*(x685)))+(((cj1)*(sj2)*(x683)))+(((sj1)*(x679)))+(((IkReal(-1.00000000000000))*(r02)*(x682)))+(((cj2)*(x684))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x680)*(x684)))+(((IkReal(-1.00000000000000))*(x681)*(x682)))+(((x682)*(x683)))+(IKsin(j5))+(((cj2)*(r02)*(sj1)))+(((sj1)*(sj2)*(x681)))+(((cj1)*(x679))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x686=((IkReal(1.00000000000000))*(sj2));
IkReal x687=((r02)*(sj1));
IkReal x688=((cj0)*(r01));
IkReal x689=((IkReal(1.00000000000000))*(cj2));
IkReal x690=((cj1)*(r02));
IkReal x691=((cj1)*(r00)*(sj0));
IkReal x692=((r00)*(sj0)*(sj1));
if( IKabs(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((cj1)*(cj2)*(x688)))+(((IkReal(-1.00000000000000))*(sj1)*(x686)*(x688)))+(((sj2)*(x690)))+(((sj2)*(x692)))+(((IkReal(-1.00000000000000))*(x689)*(x691)))+(((cj2)*(x687))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(sj1)*(x688)*(x689)))+(((IkReal(-1.00000000000000))*(x686)*(x687)))+(((sj2)*(x691)))+(((cj2)*(x690)))+(((cj2)*(x692)))+(((IkReal(-1.00000000000000))*(cj1)*(x686)*(x688))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((cj1)*(cj2)*(x688)))+(((IkReal(-1.00000000000000))*(sj1)*(x686)*(x688)))+(((sj2)*(x690)))+(((sj2)*(x692)))+(((IkReal(-1.00000000000000))*(x689)*(x691)))+(((cj2)*(x687)))))))+IKsqr(((((IkReal(-1.00000000000000))*(sj1)*(x688)*(x689)))+(((IkReal(-1.00000000000000))*(x686)*(x687)))+(((sj2)*(x691)))+(((cj2)*(x690)))+(((cj2)*(x692)))+(((IkReal(-1.00000000000000))*(cj1)*(x686)*(x688)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((cj1)*(cj2)*(x688)))+(((IkReal(-1.00000000000000))*(sj1)*(x686)*(x688)))+(((sj2)*(x690)))+(((sj2)*(x692)))+(((IkReal(-1.00000000000000))*(x689)*(x691)))+(((cj2)*(x687)))))), ((((IkReal(-1.00000000000000))*(sj1)*(x688)*(x689)))+(((IkReal(-1.00000000000000))*(x686)*(x687)))+(((sj2)*(x691)))+(((cj2)*(x690)))+(((cj2)*(x692)))+(((IkReal(-1.00000000000000))*(cj1)*(x686)*(x688)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x693=IKsin(j5);
IkReal x694=((r02)*(sj2));
IkReal x695=((IkReal(1.00000000000000))*(sj2));
IkReal x696=((r00)*(sj0));
IkReal x697=((IkReal(1.00000000000000))*(cj2));
IkReal x698=((IkReal(1.00000000000000))*(x693));
IkReal x699=((cj0)*(r01)*(sj1));
IkReal x700=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x698)))+(((cj0)*(r00))));
evalcond[1]=((((sj1)*(x694)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x697)))+(((sj2)*(x700)))+(IKcos(j5))+(((IkReal(-1.00000000000000))*(sj1)*(x696)*(x697)))+(((cj2)*(x699)))+(((IkReal(-1.00000000000000))*(cj1)*(x695)*(x696))));
evalcond[2]=((((cj1)*(x694)))+(((IkReal(-1.00000000000000))*(cj1)*(x696)*(x697)))+(((IkReal(-1.00000000000000))*(sj4)*(x698)))+(((cj2)*(r02)*(sj1)))+(((sj1)*(sj2)*(x696)))+(((IkReal(-1.00000000000000))*(x695)*(x699)))+(((cj2)*(x700))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x701=((IkReal(1.00000000000000))*(sj2));
IkReal x702=((cj0)*(r01));
IkReal x703=((r00)*(sj0));
IkReal x704=((cj2)*(sj1));
if( IKabs(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r02)*(sj1)*(x701)))+(((IkReal(-1.00000000000000))*(x702)*(x704)))+(((x703)*(x704)))+(((cj1)*(sj2)*(x703)))+(((IkReal(-1.00000000000000))*(cj1)*(x701)*(x702)))+(((cj1)*(cj2)*(r02))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))))+IKsqr(((((IkReal(-1.00000000000000))*(r02)*(sj1)*(x701)))+(((IkReal(-1.00000000000000))*(x702)*(x704)))+(((x703)*(x704)))+(((cj1)*(sj2)*(x703)))+(((IkReal(-1.00000000000000))*(cj1)*(x701)*(x702)))+(((cj1)*(cj2)*(r02)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))), ((((IkReal(-1.00000000000000))*(r02)*(sj1)*(x701)))+(((IkReal(-1.00000000000000))*(x702)*(x704)))+(((x703)*(x704)))+(((cj1)*(sj2)*(x703)))+(((IkReal(-1.00000000000000))*(cj1)*(x701)*(x702)))+(((cj1)*(cj2)*(r02)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x705=IKsin(j5);
IkReal x706=((r02)*(sj2));
IkReal x707=((IkReal(1.00000000000000))*(sj2));
IkReal x708=((r00)*(sj0));
IkReal x709=((IkReal(1.00000000000000))*(cj2));
IkReal x710=((IkReal(1.00000000000000))*(x705));
IkReal x711=((cj0)*(r01)*(sj1));
IkReal x712=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x710)))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj1)*(x708)*(x709)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x709)))+(((sj2)*(x712)))+(IKcos(j5))+(((sj1)*(x706)))+(((IkReal(-1.00000000000000))*(cj1)*(x707)*(x708)))+(((cj2)*(x711))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x707)*(x711)))+(((IkReal(-1.00000000000000))*(cj1)*(x708)*(x709)))+(((cj2)*(r02)*(sj1)))+(((cj2)*(x712)))+(((sj1)*(sj2)*(x708)))+(((cj1)*(x706)))+(((IkReal(-1.00000000000000))*(sj4)*(x710))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x713=((cj1)*(sj2));
IkReal x714=((cj2)*(sj1));
IkReal x715=((cj0)*(py));
IkReal x716=((IkReal(1.00000000000000))*(px)*(sj0));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0438310000000000))+(((IkReal(-1.00000000000000))*(x714)*(x716)))+(((x714)*(x715)))+(((pz)*(sj1)*(sj2)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(pz)))+(((IkReal(-1.00000000000000))*(x713)*(x716)))+(((IkReal(0.00982000000000000))*(sj2)))+(((x713)*(x715))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x717=((IkReal(0.0215969237223081))*(cj1));
IkReal x718=((pz)*(sj2));
IkReal x719=((cj0)*(px));
IkReal x720=((IkReal(5.23847517560207))*(sj0));
IkReal x721=((IkReal(0.0215969237223081))*(sj1));
IkReal x722=((px)*(sj0));
IkReal x723=((cj2)*(pz));
IkReal x724=((IkReal(5.23847517560207))*(sj1));
IkReal x725=((IkReal(5.23847517560207))*(cj1));
IkReal x726=((cj0)*(cj2)*(py));
IkReal x727=((cj0)*(py)*(sj2));
if( IKabs(((IkReal(-0.00276159863637153))+(((x721)*(x723)))+(((IkReal(-1.00000000000000))*(cj2)*(x717)*(x722)))+(((x717)*(x726)))+(((sj2)*(x721)*(x722)))+(((x717)*(x718)))+(((IkReal(0.000212081790953065))*(cj2)))+(((IkReal(-1.00000000000000))*(x721)*(x727)))+(((IkReal(-0.0112664671982164))*(sj2)))+(((IkReal(-5.23847517560207))*(x719)))+(((IkReal(-1.00000000000000))*(py)*(x720))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(0.669843820704237))+(((IkReal(-0.0514418262244123))*(cj2)))+(((IkReal(-1.00000000000000))*(x723)*(x724)))+(((IkReal(-0.0215969237223081))*(x719)))+(((IkReal(-1.00000000000000))*(px)*(sj1)*(sj2)*(x720)))+(((IkReal(-1.00000000000000))*(x725)*(x726)))+(((cj1)*(cj2)*(px)*(x720)))+(((IkReal(2.73275534485633))*(sj2)))+(((x724)*(x727)))+(((IkReal(-0.0215969237223081))*(py)*(sj0)))+(((IkReal(-1.00000000000000))*(x718)*(x725))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(-0.00276159863637153))+(((x721)*(x723)))+(((IkReal(-1.00000000000000))*(cj2)*(x717)*(x722)))+(((x717)*(x726)))+(((sj2)*(x721)*(x722)))+(((x717)*(x718)))+(((IkReal(0.000212081790953065))*(cj2)))+(((IkReal(-1.00000000000000))*(x721)*(x727)))+(((IkReal(-0.0112664671982164))*(sj2)))+(((IkReal(-5.23847517560207))*(x719)))+(((IkReal(-1.00000000000000))*(py)*(x720)))))+IKsqr(((IkReal(0.669843820704237))+(((IkReal(-0.0514418262244123))*(cj2)))+(((IkReal(-1.00000000000000))*(x723)*(x724)))+(((IkReal(-0.0215969237223081))*(x719)))+(((IkReal(-1.00000000000000))*(px)*(sj1)*(sj2)*(x720)))+(((IkReal(-1.00000000000000))*(x725)*(x726)))+(((cj1)*(cj2)*(px)*(x720)))+(((IkReal(2.73275534485633))*(sj2)))+(((x724)*(x727)))+(((IkReal(-0.0215969237223081))*(py)*(sj0)))+(((IkReal(-1.00000000000000))*(x718)*(x725)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((IkReal(-0.00276159863637153))+(((x721)*(x723)))+(((IkReal(-1.00000000000000))*(cj2)*(x717)*(x722)))+(((x717)*(x726)))+(((sj2)*(x721)*(x722)))+(((x717)*(x718)))+(((IkReal(0.000212081790953065))*(cj2)))+(((IkReal(-1.00000000000000))*(x721)*(x727)))+(((IkReal(-0.0112664671982164))*(sj2)))+(((IkReal(-5.23847517560207))*(x719)))+(((IkReal(-1.00000000000000))*(py)*(x720)))), ((IkReal(0.669843820704237))+(((IkReal(-0.0514418262244123))*(cj2)))+(((IkReal(-1.00000000000000))*(x723)*(x724)))+(((IkReal(-0.0215969237223081))*(x719)))+(((IkReal(-1.00000000000000))*(px)*(sj1)*(sj2)*(x720)))+(((IkReal(-1.00000000000000))*(x725)*(x726)))+(((cj1)*(cj2)*(px)*(x720)))+(((IkReal(2.73275534485633))*(sj2)))+(((x724)*(x727)))+(((IkReal(-0.0215969237223081))*(py)*(sj0)))+(((IkReal(-1.00000000000000))*(x718)*(x725)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[2];
IkReal x728=IKcos(j4);
IkReal x729=IKsin(j4);
IkReal x730=((cj1)*(cj2));
IkReal x731=((px)*(sj0));
IkReal x732=((cj0)*(py));
IkReal x733=((sj1)*(sj2));
evalcond[0]=((((IkReal(0.000787000000000000))*(x728)))+(((IkReal(0.190892000000000))*(x729)))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[1]=((IkReal(-0.127870000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-0.000787000000000000))*(x729)))+(((x731)*(x733)))+(((IkReal(-1.00000000000000))*(x732)*(x733)))+(((IkReal(-1.00000000000000))*(x730)*(x731)))+(((cj2)*(pz)*(sj1)))+(((cj1)*(pz)*(sj2)))+(((IkReal(0.190892000000000))*(x728)))+(((IkReal(-0.521670000000000))*(sj2)))+(((x730)*(x732))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
dummyeval[0]=cj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x734=((IkReal(1.00000000000000))*(sj2));
IkReal x735=((px)*(sj0));
IkReal x736=((pz)*(sj2));
IkReal x737=((cj0)*(sj1));
IkReal x738=((cj1)*(sj2));
IkReal x739=((sj1)*(sj2));
IkReal x740=((cj2)*(sj1));
IkReal x741=((r00)*(sj0));
IkReal x742=((cj0)*(cj1)*(cj2));
IkReal x743=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.000787000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((r02)*(x740)))+(((x739)*(x741)))+(((IkReal(-1.00000000000000))*(r01)*(x734)*(x737)))+(((r01)*(x742)))+(((r02)*(x738)))+(((IkReal(-1.00000000000000))*(x741)*(x743))));
evalcond[3]=((IkReal(0.0630220000000000))+(((py)*(x742)))+(((IkReal(0.00982000000000000))*(cj2)))+(((x735)*(x739)))+(((IkReal(-1.00000000000000))*(py)*(x734)*(x737)))+(((IkReal(-0.521670000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(x735)*(x743)))+(((cj1)*(x736)))+(((pz)*(x740))));
evalcond[4]=((IkReal(-0.0438310000000000))+(((IkReal(-1.00000000000000))*(cj1)*(x734)*(x735)))+(((cj0)*(py)*(x738)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(pz)*(x743)))+(((IkReal(-1.00000000000000))*(x735)*(x740)))+(((sj1)*(x736)))+(((IkReal(0.00982000000000000))*(sj2)))+(((cj2)*(py)*(x737))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x744=((cj2)*(sj1));
IkReal x745=((cj0)*(r01));
IkReal x746=((cj1)*(sj2));
IkReal x747=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((r01)*(sj0)))+(((cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x745)*(x746)))+(((IkReal(-1.00000000000000))*(x746)*(x747)))+(((x744)*(x745)))+(((IkReal(-1.00000000000000))*(x744)*(x747)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((r02)*(sj1)*(sj2))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r01)*(sj0)))+(((cj0)*(r00)))))+IKsqr(((((x745)*(x746)))+(((IkReal(-1.00000000000000))*(x746)*(x747)))+(((x744)*(x745)))+(((IkReal(-1.00000000000000))*(x744)*(x747)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((r02)*(sj1)*(sj2)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((r01)*(sj0)))+(((cj0)*(r00)))), ((((x745)*(x746)))+(((IkReal(-1.00000000000000))*(x746)*(x747)))+(((x744)*(x745)))+(((IkReal(-1.00000000000000))*(x744)*(x747)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((r02)*(sj1)*(sj2)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x748=((cj2)*(sj1));
IkReal x749=((cj0)*(r01));
IkReal x750=((cj1)*(sj2));
IkReal x751=((IkReal(1.00000000000000))*(r00)*(sj0));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x750)*(x751)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((r02)*(sj1)*(sj2)))+(((x749)*(x750)))+(((IkReal(-1.00000000000000))*(x748)*(x751)))+(((x748)*(x749))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x752=((IkReal(1.00000000000000))*(sj2));
IkReal x753=((px)*(sj0));
IkReal x754=((pz)*(sj2));
IkReal x755=((cj0)*(sj1));
IkReal x756=((cj1)*(sj2));
IkReal x757=((sj1)*(sj2));
IkReal x758=((cj2)*(sj1));
IkReal x759=((r00)*(sj0));
IkReal x760=((cj0)*(cj1)*(cj2));
IkReal x761=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.000787000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((r02)*(x756)))+(((r02)*(x758)))+(((IkReal(-1.00000000000000))*(r01)*(x752)*(x755)))+(((x757)*(x759)))+(((IkReal(-1.00000000000000))*(x759)*(x761)))+(((r01)*(x760))));
evalcond[3]=((IkReal(-0.318762000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(py)*(x752)*(x755)))+(((cj1)*(x754)))+(((pz)*(x758)))+(((IkReal(-1.00000000000000))*(x753)*(x761)))+(((py)*(x760)))+(((x753)*(x757)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(-0.0438310000000000))+(((cj0)*(py)*(x756)))+(((IkReal(-1.00000000000000))*(cj1)*(x752)*(x753)))+(((sj1)*(x754)))+(((IkReal(-1.00000000000000))*(x753)*(x758)))+(((IkReal(0.521670000000000))*(cj2)))+(((cj2)*(py)*(x755)))+(((IkReal(0.00982000000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(pz)*(x761))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x762=((cj2)*(sj1));
IkReal x763=((cj0)*(r01));
IkReal x764=((cj1)*(sj2));
IkReal x765=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x762)*(x765)))+(((IkReal(-1.00000000000000))*(x764)*(x765)))+(((x763)*(x764)))+(((x762)*(x763)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((r02)*(sj1)*(sj2))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))))+IKsqr(((((IkReal(-1.00000000000000))*(x762)*(x765)))+(((IkReal(-1.00000000000000))*(x764)*(x765)))+(((x763)*(x764)))+(((x762)*(x763)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((r02)*(sj1)*(sj2)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))), ((((IkReal(-1.00000000000000))*(x762)*(x765)))+(((IkReal(-1.00000000000000))*(x764)*(x765)))+(((x763)*(x764)))+(((x762)*(x763)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((r02)*(sj1)*(sj2)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x766=((cj2)*(sj1));
IkReal x767=((cj0)*(r01));
IkReal x768=((cj1)*(sj2));
IkReal x769=((IkReal(1.00000000000000))*(r00)*(sj0));
evalcond[0]=((((r01)*(sj0)))+(IKsin(j5))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x766)*(x769)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((x766)*(x767)))+(((IkReal(-1.00000000000000))*(x768)*(x769)))+(((x767)*(x768)))+(((r02)*(sj1)*(sj2))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x770=((pz)*(sj1));
IkReal x771=((cj0)*(py));
IkReal x772=((IkReal(1.00000000000000))*(sj2));
IkReal x773=((cj1)*(cj2));
IkReal x774=((px)*(sj0));
IkReal x775=((cj2)*(sj1));
IkReal x776=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(0.190892000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.128657000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((pz)*(x776)))+(((x771)*(x773)))+(((sj1)*(sj2)*(x774)))+(((cj2)*(x770)))+(((IkReal(-1.00000000000000))*(sj1)*(x771)*(x772)))+(((IkReal(-0.521670000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(x773)*(x774))));
evalcond[4]=((IkReal(-0.0438310000000000))+(((IkReal(-1.00000000000000))*(pz)*(x773)))+(((x771)*(x776)))+(((x771)*(x775)))+(((IkReal(-1.00000000000000))*(x774)*(x775)))+(((IkReal(0.521670000000000))*(cj2)))+(((sj2)*(x770)))+(((IkReal(-1.00000000000000))*(cj1)*(x772)*(x774)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x777=((sj1)*(sj2));
IkReal x778=((cj2)*(sj1));
IkReal x779=((cj1)*(sj2));
IkReal x780=((IkReal(1.00000000000000))*(r02));
IkReal x781=((cj1)*(cj2));
IkReal x782=((cj0)*(r01));
IkReal x783=((sj1)*(x782));
IkReal x784=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((IkReal(-1.00000000000000))*(x777)*(x784)))+(((IkReal(-1.00000000000000))*(x781)*(x782)))+(((x777)*(x782)))+(((IkReal(-1.00000000000000))*(x778)*(x780)))+(((r00)*(sj0)*(x781)))+(((IkReal(-1.00000000000000))*(x779)*(x780))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x779)*(x782)))+(((x778)*(x782)))+(((IkReal(-1.00000000000000))*(x780)*(x781)))+(((IkReal(-1.00000000000000))*(x778)*(x784)))+(((r02)*(x777)))+(((IkReal(-1.00000000000000))*(x779)*(x784))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x777)*(x784)))+(((IkReal(-1.00000000000000))*(x781)*(x782)))+(((x777)*(x782)))+(((IkReal(-1.00000000000000))*(x778)*(x780)))+(((r00)*(sj0)*(x781)))+(((IkReal(-1.00000000000000))*(x779)*(x780)))))+IKsqr(((((x779)*(x782)))+(((x778)*(x782)))+(((IkReal(-1.00000000000000))*(x780)*(x781)))+(((IkReal(-1.00000000000000))*(x778)*(x784)))+(((r02)*(x777)))+(((IkReal(-1.00000000000000))*(x779)*(x784)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x777)*(x784)))+(((IkReal(-1.00000000000000))*(x781)*(x782)))+(((x777)*(x782)))+(((IkReal(-1.00000000000000))*(x778)*(x780)))+(((r00)*(sj0)*(x781)))+(((IkReal(-1.00000000000000))*(x779)*(x780)))), ((((x779)*(x782)))+(((x778)*(x782)))+(((IkReal(-1.00000000000000))*(x780)*(x781)))+(((IkReal(-1.00000000000000))*(x778)*(x784)))+(((r02)*(x777)))+(((IkReal(-1.00000000000000))*(x779)*(x784)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x785=((r02)*(sj2));
IkReal x786=((IkReal(1.00000000000000))*(sj2));
IkReal x787=((r00)*(sj0));
IkReal x788=((cj1)*(cj2));
IkReal x789=((cj0)*(r01));
IkReal x790=((sj1)*(x789));
IkReal x791=((IkReal(1.00000000000000))*(cj2)*(x787));
evalcond[0]=((((sj1)*(x785)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((IkReal(-1.00000000000000))*(cj1)*(x786)*(x787)))+(((IkReal(-1.00000000000000))*(r02)*(x788)))+(((cj2)*(x790)))+(((IkReal(-1.00000000000000))*(sj1)*(x791)))+(((cj1)*(sj2)*(x789))));
evalcond[1]=((((sj1)*(sj2)*(x787)))+(((cj1)*(x785)))+(((x788)*(x789)))+(IKsin(j5))+(((IkReal(-1.00000000000000))*(x787)*(x788)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x786)*(x790))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x792=((pz)*(sj1));
IkReal x793=((cj0)*(py));
IkReal x794=((IkReal(1.00000000000000))*(sj2));
IkReal x795=((cj1)*(cj2));
IkReal x796=((px)*(sj0));
IkReal x797=((cj2)*(sj1));
IkReal x798=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(-0.190892000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.127083000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((sj1)*(sj2)*(x796)))+(((x793)*(x795)))+(((pz)*(x798)))+(((IkReal(-1.00000000000000))*(x795)*(x796)))+(((IkReal(-0.521670000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(sj1)*(x793)*(x794)))+(((cj2)*(x792))));
evalcond[4]=((IkReal(-0.0438310000000000))+(((IkReal(-1.00000000000000))*(x796)*(x797)))+(((IkReal(-1.00000000000000))*(cj1)*(x794)*(x796)))+(((x793)*(x797)))+(((x793)*(x798)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(pz)*(x795)))+(((IkReal(0.00982000000000000))*(sj2)))+(((sj2)*(x792))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x799=((cj2)*(sj1));
IkReal x800=((cj0)*(r01));
IkReal x801=((sj1)*(sj2));
IkReal x802=((cj1)*(cj2));
IkReal x803=((cj1)*(sj2));
IkReal x804=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((x800)*(x802)))+(((IkReal(-1.00000000000000))*(x800)*(x801)))+(((r02)*(x803)))+(((r00)*(sj0)*(x801)))+(((r02)*(x799)))+(((IkReal(-1.00000000000000))*(x802)*(x804))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x799)*(x804)))+(((x800)*(x803)))+(((r02)*(x801)))+(((x799)*(x800)))+(((IkReal(-1.00000000000000))*(x803)*(x804)))+(((IkReal(-1.00000000000000))*(r02)*(x802))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((x800)*(x802)))+(((IkReal(-1.00000000000000))*(x800)*(x801)))+(((r02)*(x803)))+(((r00)*(sj0)*(x801)))+(((r02)*(x799)))+(((IkReal(-1.00000000000000))*(x802)*(x804)))))+IKsqr(((((IkReal(-1.00000000000000))*(x799)*(x804)))+(((x800)*(x803)))+(((r02)*(x801)))+(((x799)*(x800)))+(((IkReal(-1.00000000000000))*(x803)*(x804)))+(((IkReal(-1.00000000000000))*(r02)*(x802)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((x800)*(x802)))+(((IkReal(-1.00000000000000))*(x800)*(x801)))+(((r02)*(x803)))+(((r00)*(sj0)*(x801)))+(((r02)*(x799)))+(((IkReal(-1.00000000000000))*(x802)*(x804)))), ((((IkReal(-1.00000000000000))*(x799)*(x804)))+(((x800)*(x803)))+(((r02)*(x801)))+(((x799)*(x800)))+(((IkReal(-1.00000000000000))*(x803)*(x804)))+(((IkReal(-1.00000000000000))*(r02)*(x802)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x805=((r02)*(sj2));
IkReal x806=((IkReal(1.00000000000000))*(sj2));
IkReal x807=((r00)*(sj0));
IkReal x808=((cj1)*(cj2));
IkReal x809=((cj0)*(r01));
IkReal x810=((sj1)*(x809));
IkReal x811=((IkReal(1.00000000000000))*(cj2)*(x807));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj1)*(x806)*(x807)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((IkReal(-1.00000000000000))*(r02)*(x808)))+(((cj1)*(sj2)*(x809)))+(((sj1)*(x805)))+(((IkReal(-1.00000000000000))*(sj1)*(x811)))+(((cj2)*(x810))));
evalcond[1]=((((cj1)*(x805)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x807)*(x808)))+(((sj1)*(sj2)*(x807)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((x808)*(x809)))+(((IkReal(-1.00000000000000))*(x806)*(x810))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x812=((sj1)*(sj2));
IkReal x813=((cj2)*(sj1));
IkReal x814=((cj1)*(sj2));
IkReal x815=((IkReal(1.00000000000000))*(r02));
IkReal x816=((cj1)*(cj2));
IkReal x817=((cj0)*(r01));
IkReal x818=((sj1)*(x817));
IkReal x819=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x812)*(x819)))+(((x812)*(x817)))+(((IkReal(-1.00000000000000))*(x816)*(x817)))+(((IkReal(-1.00000000000000))*(x814)*(x815)))+(((IkReal(-1.00000000000000))*(x813)*(x815)))+(((r00)*(sj0)*(x816))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x813)*(x817)))+(((IkReal(-1.00000000000000))*(x815)*(x816)))+(((x814)*(x817)))+(((IkReal(-1.00000000000000))*(x814)*(x819)))+(((IkReal(-1.00000000000000))*(x813)*(x819)))+(((r02)*(x812))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x812)*(x819)))+(((x812)*(x817)))+(((IkReal(-1.00000000000000))*(x816)*(x817)))+(((IkReal(-1.00000000000000))*(x814)*(x815)))+(((IkReal(-1.00000000000000))*(x813)*(x815)))+(((r00)*(sj0)*(x816)))))))+IKsqr(((((x813)*(x817)))+(((IkReal(-1.00000000000000))*(x815)*(x816)))+(((x814)*(x817)))+(((IkReal(-1.00000000000000))*(x814)*(x819)))+(((IkReal(-1.00000000000000))*(x813)*(x819)))+(((r02)*(x812)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x812)*(x819)))+(((x812)*(x817)))+(((IkReal(-1.00000000000000))*(x816)*(x817)))+(((IkReal(-1.00000000000000))*(x814)*(x815)))+(((IkReal(-1.00000000000000))*(x813)*(x815)))+(((r00)*(sj0)*(x816)))))), ((((x813)*(x817)))+(((IkReal(-1.00000000000000))*(x815)*(x816)))+(((x814)*(x817)))+(((IkReal(-1.00000000000000))*(x814)*(x819)))+(((IkReal(-1.00000000000000))*(x813)*(x819)))+(((r02)*(x812)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x820=IKsin(j5);
IkReal x821=((r02)*(sj2));
IkReal x822=((IkReal(1.00000000000000))*(sj2));
IkReal x823=((r00)*(sj0));
IkReal x824=((IkReal(1.00000000000000))*(cj2));
IkReal x825=((cj0)*(r01)*(sj1));
IkReal x826=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x820)))+(((cj0)*(r00))));
evalcond[1]=((((sj1)*(x821)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x824)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((sj2)*(x826)))+(((IkReal(-1.00000000000000))*(sj1)*(x823)*(x824)))+(((cj2)*(x825)))+(((IkReal(-1.00000000000000))*(cj1)*(x822)*(x823))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj1)*(x823)*(x824)))+(((IkReal(-1.00000000000000))*(x822)*(x825)))+(((sj1)*(sj2)*(x823)))+(((cj2)*(r02)*(sj1)))+(((cj1)*(x821)))+(((sj4)*(x820)))+(((cj2)*(x826))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x827=((cj2)*(sj1));
IkReal x828=((cj0)*(r01));
IkReal x829=((cj1)*(sj2));
IkReal x830=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x827)*(x830)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((x828)*(x829)))+(((r02)*(sj1)*(sj2)))+(((IkReal(-1.00000000000000))*(x829)*(x830)))+(((x827)*(x828))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))))+IKsqr(((((IkReal(-1.00000000000000))*(x827)*(x830)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((x828)*(x829)))+(((r02)*(sj1)*(sj2)))+(((IkReal(-1.00000000000000))*(x829)*(x830)))+(((x827)*(x828)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))), ((((IkReal(-1.00000000000000))*(x827)*(x830)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((x828)*(x829)))+(((r02)*(sj1)*(sj2)))+(((IkReal(-1.00000000000000))*(x829)*(x830)))+(((x827)*(x828)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x831=IKsin(j5);
IkReal x832=((r02)*(sj2));
IkReal x833=((IkReal(1.00000000000000))*(sj2));
IkReal x834=((r00)*(sj0));
IkReal x835=((IkReal(1.00000000000000))*(cj2));
IkReal x836=((cj0)*(r01)*(sj1));
IkReal x837=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x831)))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj1)*(r02)*(x835)))+(((IkReal(-1.00000000000000))*(cj1)*(x833)*(x834)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((cj2)*(x836)))+(((sj2)*(x837)))+(((sj1)*(x832)))+(((IkReal(-1.00000000000000))*(sj1)*(x834)*(x835))));
evalcond[2]=((((sj1)*(sj2)*(x834)))+(((IkReal(-1.00000000000000))*(cj1)*(x834)*(x835)))+(((sj4)*(x831)))+(((IkReal(-1.00000000000000))*(x833)*(x836)))+(((cj2)*(r02)*(sj1)))+(((cj2)*(x837)))+(((cj1)*(x832))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x838=((cj1)*(cj2));
IkReal x839=((cj0)*(py));
IkReal x840=((px)*(sj0));
IkReal x841=((sj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.209759000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((x838)*(x839)))+(((x840)*(x841)))+(((cj2)*(pz)*(sj1)))+(((cj1)*(pz)*(sj2)))+(((IkReal(-1.00000000000000))*(x838)*(x840)))+(((IkReal(-0.521670000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(x839)*(x841))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x842=((IkReal(0.0215969237223081))*(cj0));
IkReal x843=((py)*(sj0));
IkReal x844=((IkReal(5.23847517560207))*(cj0));
IkReal x845=((IkReal(0.0215969237223081))*(sj2));
IkReal x846=((pz)*(sj1));
IkReal x847=((IkReal(5.23847517560207))*(sj2));
IkReal x848=((cj1)*(cj2)*(pz));
IkReal x849=((cj1)*(py)*(sj2));
IkReal x850=((cj1)*(px)*(sj0));
IkReal x851=((cj2)*(py)*(sj1));
IkReal x852=((cj2)*(px)*(sj0)*(sj1));
if( IKabs(((IkReal(0.00303911910620319))+(((IkReal(-0.0215969237223081))*(x848)))+(((IkReal(0.000212081790953065))*(sj2)))+(((x842)*(x851)))+(((IkReal(-1.00000000000000))*(x845)*(x850)))+(((IkReal(-5.23847517560207))*(x843)))+(((IkReal(-1.00000000000000))*(px)*(x844)))+(((x842)*(x849)))+(((IkReal(-0.0215969237223081))*(x852)))+(((x845)*(x846)))+(((IkReal(0.0112664671982164))*(cj2))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.737158226710723))+(((IkReal(-0.0514418262244123))*(sj2)))+(((IkReal(-0.0215969237223081))*(x843)))+(((IkReal(5.23847517560207))*(x852)))+(((IkReal(-2.73275534485633))*(cj2)))+(((IkReal(-1.00000000000000))*(x844)*(x851)))+(((x847)*(x850)))+(((IkReal(-1.00000000000000))*(px)*(x842)))+(((IkReal(-1.00000000000000))*(x846)*(x847)))+(((IkReal(-1.00000000000000))*(x844)*(x849)))+(((IkReal(5.23847517560207))*(x848))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.00303911910620319))+(((IkReal(-0.0215969237223081))*(x848)))+(((IkReal(0.000212081790953065))*(sj2)))+(((x842)*(x851)))+(((IkReal(-1.00000000000000))*(x845)*(x850)))+(((IkReal(-5.23847517560207))*(x843)))+(((IkReal(-1.00000000000000))*(px)*(x844)))+(((x842)*(x849)))+(((IkReal(-0.0215969237223081))*(x852)))+(((x845)*(x846)))+(((IkReal(0.0112664671982164))*(cj2)))))+IKsqr(((IkReal(-0.737158226710723))+(((IkReal(-0.0514418262244123))*(sj2)))+(((IkReal(-0.0215969237223081))*(x843)))+(((IkReal(5.23847517560207))*(x852)))+(((IkReal(-2.73275534485633))*(cj2)))+(((IkReal(-1.00000000000000))*(x844)*(x851)))+(((x847)*(x850)))+(((IkReal(-1.00000000000000))*(px)*(x842)))+(((IkReal(-1.00000000000000))*(x846)*(x847)))+(((IkReal(-1.00000000000000))*(x844)*(x849)))+(((IkReal(5.23847517560207))*(x848)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((IkReal(0.00303911910620319))+(((IkReal(-0.0215969237223081))*(x848)))+(((IkReal(0.000212081790953065))*(sj2)))+(((x842)*(x851)))+(((IkReal(-1.00000000000000))*(x845)*(x850)))+(((IkReal(-5.23847517560207))*(x843)))+(((IkReal(-1.00000000000000))*(px)*(x844)))+(((x842)*(x849)))+(((IkReal(-0.0215969237223081))*(x852)))+(((x845)*(x846)))+(((IkReal(0.0112664671982164))*(cj2)))), ((IkReal(-0.737158226710723))+(((IkReal(-0.0514418262244123))*(sj2)))+(((IkReal(-0.0215969237223081))*(x843)))+(((IkReal(5.23847517560207))*(x852)))+(((IkReal(-2.73275534485633))*(cj2)))+(((IkReal(-1.00000000000000))*(x844)*(x851)))+(((x847)*(x850)))+(((IkReal(-1.00000000000000))*(px)*(x842)))+(((IkReal(-1.00000000000000))*(x846)*(x847)))+(((IkReal(-1.00000000000000))*(x844)*(x849)))+(((IkReal(5.23847517560207))*(x848)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[2];
IkReal x853=IKcos(j4);
IkReal x854=IKsin(j4);
IkReal x855=((cj2)*(sj1));
IkReal x856=((cj0)*(py));
IkReal x857=((cj1)*(sj2));
IkReal x858=((IkReal(1.00000000000000))*(px)*(sj0));
evalcond[0]=((((IkReal(0.000787000000000000))*(x853)))+(((cj0)*(px)))+(((py)*(sj0)))+(((IkReal(0.190892000000000))*(x854))));
evalcond[1]=((IkReal(0.140720000000000))+(((x855)*(x856)))+(((pz)*(sj1)*(sj2)))+(((IkReal(-0.000787000000000000))*(x854)))+(((IkReal(0.521670000000000))*(cj2)))+(((x856)*(x857)))+(((IkReal(-1.00000000000000))*(x855)*(x858)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(pz)))+(((IkReal(0.190892000000000))*(x853)))+(((IkReal(-1.00000000000000))*(x857)*(x858)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
dummyeval[0]=cj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x859=((IkReal(1.00000000000000))*(sj0));
IkReal x860=((cj1)*(sj2));
IkReal x861=((sj1)*(sj2));
IkReal x862=((cj2)*(sj1));
IkReal x863=((cj0)*(r01));
IkReal x864=((cj0)*(py));
IkReal x865=((cj2)*(x864));
IkReal x866=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.000787000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r00)*(x859)*(x862)))+(((IkReal(-1.00000000000000))*(r00)*(x859)*(x860)))+(((r02)*(x861)))+(((x862)*(x863)))+(((x860)*(x863)))+(((IkReal(-1.00000000000000))*(r02)*(x866))));
evalcond[3]=((IkReal(-0.209759000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((px)*(sj0)*(x861)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(px)*(x859)))+(((cj1)*(x865)))+(((IkReal(-1.00000000000000))*(x861)*(x864)))+(((pz)*(x860)))+(((pz)*(x862)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(0.331612000000000))+(((IkReal(-1.00000000000000))*(pz)*(x866)))+(((IkReal(0.521670000000000))*(cj2)))+(((x862)*(x864)))+(((x860)*(x864)))+(((pz)*(x861)))+(((IkReal(-1.00000000000000))*(px)*(x859)*(x862)))+(((IkReal(-1.00000000000000))*(px)*(x859)*(x860)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x867=((cj0)*(r01));
IkReal x868=((sj1)*(sj2));
IkReal x869=((IkReal(1.00000000000000))*(cj1));
IkReal x870=((r00)*(sj0));
if( IKabs(((((r01)*(sj0)))+(((cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj1)*(cj2)*(x870)))+(((x867)*(x868)))+(((IkReal(-1.00000000000000))*(cj2)*(x867)*(x869)))+(((IkReal(-1.00000000000000))*(x868)*(x870)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x869))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r01)*(sj0)))+(((cj0)*(r00)))))+IKsqr(((((cj1)*(cj2)*(x870)))+(((x867)*(x868)))+(((IkReal(-1.00000000000000))*(cj2)*(x867)*(x869)))+(((IkReal(-1.00000000000000))*(x868)*(x870)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x869)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((r01)*(sj0)))+(((cj0)*(r00)))), ((((cj1)*(cj2)*(x870)))+(((x867)*(x868)))+(((IkReal(-1.00000000000000))*(cj2)*(x867)*(x869)))+(((IkReal(-1.00000000000000))*(x868)*(x870)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x869)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x871=((sj1)*(sj2));
IkReal x872=((cj0)*(r01));
IkReal x873=((r00)*(sj0));
IkReal x874=((cj1)*(cj2));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((cj0)*(r00))));
evalcond[1]=((((x872)*(x874)))+(((x871)*(x873)))+(((IkReal(-1.00000000000000))*(x873)*(x874)))+(((IkReal(-1.00000000000000))*(x871)*(x872)))+(IKcos(j5))+(((cj2)*(r02)*(sj1)))+(((cj1)*(r02)*(sj2))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x875=((IkReal(1.00000000000000))*(sj0));
IkReal x876=((cj1)*(sj2));
IkReal x877=((sj1)*(sj2));
IkReal x878=((cj2)*(sj1));
IkReal x879=((cj0)*(r01));
IkReal x880=((cj0)*(py));
IkReal x881=((cj2)*(x880));
IkReal x882=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.000787000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((x876)*(x879)))+(((x878)*(x879)))+(((IkReal(-1.00000000000000))*(r00)*(x875)*(x876)))+(((IkReal(-1.00000000000000))*(r00)*(x875)*(x878)))+(((r02)*(x877)))+(((IkReal(-1.00000000000000))*(r02)*(x882))));
evalcond[3]=((IkReal(-0.209759000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(px)*(x875)))+(((px)*(sj0)*(x877)))+(((IkReal(-1.00000000000000))*(x877)*(x880)))+(((cj1)*(x881)))+(((pz)*(x878)))+(((pz)*(x876)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(-0.0501720000000000))+(((x876)*(x880)))+(((IkReal(-1.00000000000000))*(pz)*(x882)))+(((IkReal(0.521670000000000))*(cj2)))+(((x878)*(x880)))+(((IkReal(-1.00000000000000))*(px)*(x875)*(x876)))+(((IkReal(-1.00000000000000))*(px)*(x875)*(x878)))+(((pz)*(x877)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x883=((sj1)*(sj2));
IkReal x884=((cj0)*(r01));
IkReal x885=((r00)*(sj0));
IkReal x886=((IkReal(1.00000000000000))*(cj1));
if( IKabs(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x883)*(x885)))+(((x883)*(x884)))+(((IkReal(-1.00000000000000))*(cj2)*(x884)*(x886)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x886)))+(((cj1)*(cj2)*(x885)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))))+IKsqr(((((IkReal(-1.00000000000000))*(x883)*(x885)))+(((x883)*(x884)))+(((IkReal(-1.00000000000000))*(cj2)*(x884)*(x886)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x886)))+(((cj1)*(cj2)*(x885)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))), ((((IkReal(-1.00000000000000))*(x883)*(x885)))+(((x883)*(x884)))+(((IkReal(-1.00000000000000))*(cj2)*(x884)*(x886)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x886)))+(((cj1)*(cj2)*(x885)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x887=((sj1)*(sj2));
IkReal x888=((cj0)*(r01));
IkReal x889=((r00)*(sj0));
IkReal x890=((cj1)*(cj2));
evalcond[0]=((((r01)*(sj0)))+(IKsin(j5))+(((cj0)*(r00))));
evalcond[1]=((((x887)*(x889)))+(((IkReal(-1.00000000000000))*(x887)*(x888)))+(((IkReal(-1.00000000000000))*(x889)*(x890)))+(IKcos(j5))+(((cj2)*(r02)*(sj1)))+(((x888)*(x890)))+(((cj1)*(r02)*(sj2))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x891=((pz)*(sj1));
IkReal x892=((cj0)*(py));
IkReal x893=((IkReal(1.00000000000000))*(sj2));
IkReal x894=((cj1)*(cj2));
IkReal x895=((px)*(sj0));
IkReal x896=((cj2)*(sj1));
IkReal x897=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(0.190892000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.209759000000000))+(((cj2)*(x891)))+(((IkReal(0.00982000000000000))*(cj2)))+(((pz)*(x897)))+(((sj1)*(sj2)*(x895)))+(((IkReal(-1.00000000000000))*(sj1)*(x892)*(x893)))+(((x892)*(x894)))+(((IkReal(-1.00000000000000))*(x894)*(x895)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(0.139933000000000))+(((IkReal(-1.00000000000000))*(cj1)*(x893)*(x895)))+(((sj2)*(x891)))+(((IkReal(0.521670000000000))*(cj2)))+(((x892)*(x897)))+(((x892)*(x896)))+(((IkReal(-1.00000000000000))*(pz)*(x894)))+(((IkReal(-1.00000000000000))*(x895)*(x896)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x898=((IkReal(1.00000000000000))*(sj2));
IkReal x899=((r02)*(sj1));
IkReal x900=((cj0)*(r01));
IkReal x901=((r00)*(sj0));
IkReal x902=((cj1)*(r02));
IkReal x903=((IkReal(1.00000000000000))*(cj2));
if( IKabs(((((cj2)*(sj1)*(x901)))+(((IkReal(-1.00000000000000))*(sj1)*(x900)*(x903)))+(((cj1)*(sj2)*(x901)))+(((IkReal(-1.00000000000000))*(x898)*(x899)))+(((cj2)*(x902)))+(((IkReal(-1.00000000000000))*(cj1)*(x898)*(x900))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(cj1)*(x900)*(x903)))+(((sj1)*(sj2)*(x900)))+(((IkReal(-1.00000000000000))*(x898)*(x902)))+(((IkReal(-1.00000000000000))*(sj1)*(x898)*(x901)))+(((IkReal(-1.00000000000000))*(x899)*(x903)))+(((cj1)*(cj2)*(x901))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj2)*(sj1)*(x901)))+(((IkReal(-1.00000000000000))*(sj1)*(x900)*(x903)))+(((cj1)*(sj2)*(x901)))+(((IkReal(-1.00000000000000))*(x898)*(x899)))+(((cj2)*(x902)))+(((IkReal(-1.00000000000000))*(cj1)*(x898)*(x900)))))+IKsqr(((((IkReal(-1.00000000000000))*(cj1)*(x900)*(x903)))+(((sj1)*(sj2)*(x900)))+(((IkReal(-1.00000000000000))*(x898)*(x902)))+(((IkReal(-1.00000000000000))*(sj1)*(x898)*(x901)))+(((IkReal(-1.00000000000000))*(x899)*(x903)))+(((cj1)*(cj2)*(x901)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((cj2)*(sj1)*(x901)))+(((IkReal(-1.00000000000000))*(sj1)*(x900)*(x903)))+(((cj1)*(sj2)*(x901)))+(((IkReal(-1.00000000000000))*(x898)*(x899)))+(((cj2)*(x902)))+(((IkReal(-1.00000000000000))*(cj1)*(x898)*(x900)))), ((((IkReal(-1.00000000000000))*(cj1)*(x900)*(x903)))+(((sj1)*(sj2)*(x900)))+(((IkReal(-1.00000000000000))*(x898)*(x902)))+(((IkReal(-1.00000000000000))*(sj1)*(x898)*(x901)))+(((IkReal(-1.00000000000000))*(x899)*(x903)))+(((cj1)*(cj2)*(x901)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x904=((r02)*(sj2));
IkReal x905=((IkReal(1.00000000000000))*(sj2));
IkReal x906=((r00)*(sj0));
IkReal x907=((cj1)*(cj2));
IkReal x908=((cj0)*(r01));
IkReal x909=((sj1)*(x908));
IkReal x910=((IkReal(1.00000000000000))*(cj2)*(x906));
evalcond[0]=((((cj1)*(sj2)*(x908)))+(((IkReal(-1.00000000000000))*(r02)*(x907)))+(((IkReal(-1.00000000000000))*(cj1)*(x905)*(x906)))+(((cj2)*(x909)))+(IKsin(j5))+(((IkReal(-1.00000000000000))*(sj1)*(x910)))+(((sj1)*(x904))));
evalcond[1]=((((cj1)*(x904)))+(((IkReal(-1.00000000000000))*(x906)*(x907)))+(((x907)*(x908)))+(((sj1)*(sj2)*(x906)))+(IKcos(j5))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x905)*(x909))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x911=((pz)*(sj1));
IkReal x912=((cj0)*(py));
IkReal x913=((IkReal(1.00000000000000))*(sj2));
IkReal x914=((cj1)*(cj2));
IkReal x915=((px)*(sj0));
IkReal x916=((cj2)*(sj1));
IkReal x917=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(-0.190892000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.209759000000000))+(((pz)*(x917)))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(sj1)*(x912)*(x913)))+(((cj2)*(x911)))+(((sj1)*(sj2)*(x915)))+(((x912)*(x914)))+(((IkReal(-0.521670000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(x914)*(x915))));
evalcond[4]=((IkReal(0.141507000000000))+(((sj2)*(x911)))+(((IkReal(-1.00000000000000))*(x915)*(x916)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(cj1)*(x913)*(x915)))+(((x912)*(x917)))+(((x912)*(x916)))+(((IkReal(-1.00000000000000))*(pz)*(x914)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x918=((cj2)*(sj1));
IkReal x919=((IkReal(1.00000000000000))*(r02));
IkReal x920=((cj0)*(r01));
IkReal x921=((sj1)*(sj2));
IkReal x922=((cj1)*(cj2));
IkReal x923=((cj1)*(sj2));
IkReal x924=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((x918)*(x920)))+(((x920)*(x923)))+(((IkReal(-1.00000000000000))*(x918)*(x924)))+(((IkReal(-1.00000000000000))*(x919)*(x922)))+(((IkReal(-1.00000000000000))*(x923)*(x924)))+(((r02)*(x921))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x918)*(x919)))+(((x920)*(x921)))+(((IkReal(-1.00000000000000))*(x920)*(x922)))+(((IkReal(-1.00000000000000))*(x919)*(x923)))+(((IkReal(-1.00000000000000))*(x921)*(x924)))+(((r00)*(sj0)*(x922))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((x918)*(x920)))+(((x920)*(x923)))+(((IkReal(-1.00000000000000))*(x918)*(x924)))+(((IkReal(-1.00000000000000))*(x919)*(x922)))+(((IkReal(-1.00000000000000))*(x923)*(x924)))+(((r02)*(x921)))))+IKsqr(((((IkReal(-1.00000000000000))*(x918)*(x919)))+(((x920)*(x921)))+(((IkReal(-1.00000000000000))*(x920)*(x922)))+(((IkReal(-1.00000000000000))*(x919)*(x923)))+(((IkReal(-1.00000000000000))*(x921)*(x924)))+(((r00)*(sj0)*(x922)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((x918)*(x920)))+(((x920)*(x923)))+(((IkReal(-1.00000000000000))*(x918)*(x924)))+(((IkReal(-1.00000000000000))*(x919)*(x922)))+(((IkReal(-1.00000000000000))*(x923)*(x924)))+(((r02)*(x921)))), ((((IkReal(-1.00000000000000))*(x918)*(x919)))+(((x920)*(x921)))+(((IkReal(-1.00000000000000))*(x920)*(x922)))+(((IkReal(-1.00000000000000))*(x919)*(x923)))+(((IkReal(-1.00000000000000))*(x921)*(x924)))+(((r00)*(sj0)*(x922)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x925=((r02)*(sj2));
IkReal x926=((IkReal(1.00000000000000))*(sj2));
IkReal x927=((r00)*(sj0));
IkReal x928=((cj1)*(cj2));
IkReal x929=((cj0)*(r01));
IkReal x930=((sj1)*(x929));
IkReal x931=((IkReal(1.00000000000000))*(cj2)*(x927));
evalcond[0]=((((IkReal(-1.00000000000000))*(sj1)*(x931)))+(((IkReal(-1.00000000000000))*(cj1)*(x926)*(x927)))+(((sj1)*(x925)))+(((cj2)*(x930)))+(((cj1)*(sj2)*(x929)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((IkReal(-1.00000000000000))*(r02)*(x928))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x927)*(x928)))+(((x928)*(x929)))+(IKcos(j5))+(((sj1)*(sj2)*(x927)))+(((IkReal(-1.00000000000000))*(x926)*(x930)))+(((cj2)*(r02)*(sj1)))+(((cj1)*(x925))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x932=((IkReal(1.00000000000000))*(sj2));
IkReal x933=((r02)*(sj1));
IkReal x934=((cj0)*(r01));
IkReal x935=((cj1)*(r02));
IkReal x936=((r00)*(sj0));
IkReal x937=((IkReal(1.00000000000000))*(cj2));
if( IKabs(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj1)*(x932)*(x934)))+(((cj2)*(sj1)*(x936)))+(((cj2)*(x935)))+(((cj1)*(sj2)*(x936)))+(((IkReal(-1.00000000000000))*(x932)*(x933)))+(((IkReal(-1.00000000000000))*(sj1)*(x934)*(x937))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(cj1)*(x934)*(x937)))+(((cj1)*(cj2)*(x936)))+(((IkReal(-1.00000000000000))*(sj1)*(x932)*(x936)))+(((sj1)*(sj2)*(x934)))+(((IkReal(-1.00000000000000))*(x932)*(x935)))+(((IkReal(-1.00000000000000))*(x933)*(x937))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj1)*(x932)*(x934)))+(((cj2)*(sj1)*(x936)))+(((cj2)*(x935)))+(((cj1)*(sj2)*(x936)))+(((IkReal(-1.00000000000000))*(x932)*(x933)))+(((IkReal(-1.00000000000000))*(sj1)*(x934)*(x937)))))))+IKsqr(((((IkReal(-1.00000000000000))*(cj1)*(x934)*(x937)))+(((cj1)*(cj2)*(x936)))+(((IkReal(-1.00000000000000))*(sj1)*(x932)*(x936)))+(((sj1)*(sj2)*(x934)))+(((IkReal(-1.00000000000000))*(x932)*(x935)))+(((IkReal(-1.00000000000000))*(x933)*(x937)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj1)*(x932)*(x934)))+(((cj2)*(sj1)*(x936)))+(((cj2)*(x935)))+(((cj1)*(sj2)*(x936)))+(((IkReal(-1.00000000000000))*(x932)*(x933)))+(((IkReal(-1.00000000000000))*(sj1)*(x934)*(x937)))))), ((((IkReal(-1.00000000000000))*(cj1)*(x934)*(x937)))+(((cj1)*(cj2)*(x936)))+(((IkReal(-1.00000000000000))*(sj1)*(x932)*(x936)))+(((sj1)*(sj2)*(x934)))+(((IkReal(-1.00000000000000))*(x932)*(x935)))+(((IkReal(-1.00000000000000))*(x933)*(x937)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x938=IKsin(j5);
IkReal x939=((r02)*(sj2));
IkReal x940=((IkReal(1.00000000000000))*(sj2));
IkReal x941=((r00)*(sj0));
IkReal x942=((IkReal(1.00000000000000))*(cj2));
IkReal x943=((cj0)*(r01)*(sj1));
IkReal x944=((cj0)*(cj1)*(r01));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj4)*(x938)))+(((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[1]=((((sj2)*(x944)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x942)))+(((IkReal(-1.00000000000000))*(sj1)*(x941)*(x942)))+(((IkReal(-1.00000000000000))*(cj1)*(x940)*(x941)))+(((sj1)*(x939)))+(((cj2)*(x943)))+(((sj4)*(x938))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj1)*(x941)*(x942)))+(((cj2)*(x944)))+(IKcos(j5))+(((cj2)*(r02)*(sj1)))+(((cj1)*(x939)))+(((sj1)*(sj2)*(x941)))+(((IkReal(-1.00000000000000))*(x940)*(x943))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x945=((cj0)*(r01));
IkReal x946=((sj1)*(sj2));
IkReal x947=((IkReal(1.00000000000000))*(cj1));
IkReal x948=((r00)*(sj0));
if( IKabs(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r02)*(sj2)*(x947)))+(((x945)*(x946)))+(((IkReal(-1.00000000000000))*(x946)*(x948)))+(((cj1)*(cj2)*(x948)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj2)*(x945)*(x947))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))))+IKsqr(((((IkReal(-1.00000000000000))*(r02)*(sj2)*(x947)))+(((x945)*(x946)))+(((IkReal(-1.00000000000000))*(x946)*(x948)))+(((cj1)*(cj2)*(x948)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj2)*(x945)*(x947)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))), ((((IkReal(-1.00000000000000))*(r02)*(sj2)*(x947)))+(((x945)*(x946)))+(((IkReal(-1.00000000000000))*(x946)*(x948)))+(((cj1)*(cj2)*(x948)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj2)*(x945)*(x947)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x949=IKsin(j5);
IkReal x950=((r02)*(sj2));
IkReal x951=((IkReal(1.00000000000000))*(sj2));
IkReal x952=((r00)*(sj0));
IkReal x953=((IkReal(1.00000000000000))*(cj2));
IkReal x954=((cj0)*(r01)*(sj1));
IkReal x955=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x949)))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj1)*(x951)*(x952)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x953)))+(((cj2)*(x954)))+(((sj1)*(x950)))+(((sj4)*(x949)))+(((sj2)*(x955)))+(((IkReal(-1.00000000000000))*(sj1)*(x952)*(x953))));
evalcond[2]=((((sj1)*(sj2)*(x952)))+(((IkReal(-1.00000000000000))*(cj1)*(x952)*(x953)))+(((cj1)*(x950)))+(IKcos(j5))+(((cj2)*(x955)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x951)*(x954))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x956=((cj1)*(cj2));
IkReal x957=((cj0)*(py));
IkReal x958=((px)*(sj0));
IkReal x959=((sj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.312421000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x956)*(x958)))+(((IkReal(-1.00000000000000))*(x957)*(x959)))+(((cj2)*(pz)*(sj1)))+(((cj1)*(pz)*(sj2)))+(((x956)*(x957)))+(((x958)*(x959)))+(((IkReal(-0.521670000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x960=((IkReal(0.0215969237223081))*(cj0));
IkReal x961=((py)*(sj0));
IkReal x962=((IkReal(5.23847517560207))*(cj0));
IkReal x963=((IkReal(0.0215969237223081))*(cj1));
IkReal x964=((cj2)*(pz));
IkReal x965=((IkReal(5.23847517560207))*(cj1));
IkReal x966=((pz)*(sj1)*(sj2));
IkReal x967=((cj1)*(py)*(sj2));
IkReal x968=((px)*(sj0)*(sj2));
IkReal x969=((cj2)*(py)*(sj1));
IkReal x970=((cj2)*(px)*(sj0)*(sj1));
if( IKabs(((IkReal(0.00271516525036857))+(((IkReal(-1.00000000000000))*(x960)*(x967)))+(((IkReal(-1.00000000000000))*(x960)*(x969)))+(((IkReal(-0.0215969237223081))*(x966)))+(((IkReal(-0.000212081790953065))*(sj2)))+(((IkReal(-0.0112664671982164))*(cj2)))+(((x963)*(x968)))+(((x963)*(x964)))+(((IkReal(0.0215969237223081))*(x970)))+(((IkReal(-1.00000000000000))*(px)*(x962)))+(((IkReal(-5.23847517560207))*(x961))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.658581099076692))+(((IkReal(-0.0215969237223081))*(x961)))+(((IkReal(-1.00000000000000))*(x965)*(x968)))+(((x962)*(x969)))+(((x962)*(x967)))+(((IkReal(5.23847517560207))*(x966)))+(((IkReal(-1.00000000000000))*(x964)*(x965)))+(((IkReal(0.0514418262244123))*(sj2)))+(((IkReal(2.73275534485633))*(cj2)))+(((IkReal(-5.23847517560207))*(x970)))+(((IkReal(-1.00000000000000))*(px)*(x960))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.00271516525036857))+(((IkReal(-1.00000000000000))*(x960)*(x967)))+(((IkReal(-1.00000000000000))*(x960)*(x969)))+(((IkReal(-0.0215969237223081))*(x966)))+(((IkReal(-0.000212081790953065))*(sj2)))+(((IkReal(-0.0112664671982164))*(cj2)))+(((x963)*(x968)))+(((x963)*(x964)))+(((IkReal(0.0215969237223081))*(x970)))+(((IkReal(-1.00000000000000))*(px)*(x962)))+(((IkReal(-5.23847517560207))*(x961)))))+IKsqr(((IkReal(-0.658581099076692))+(((IkReal(-0.0215969237223081))*(x961)))+(((IkReal(-1.00000000000000))*(x965)*(x968)))+(((x962)*(x969)))+(((x962)*(x967)))+(((IkReal(5.23847517560207))*(x966)))+(((IkReal(-1.00000000000000))*(x964)*(x965)))+(((IkReal(0.0514418262244123))*(sj2)))+(((IkReal(2.73275534485633))*(cj2)))+(((IkReal(-5.23847517560207))*(x970)))+(((IkReal(-1.00000000000000))*(px)*(x960)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((IkReal(0.00271516525036857))+(((IkReal(-1.00000000000000))*(x960)*(x967)))+(((IkReal(-1.00000000000000))*(x960)*(x969)))+(((IkReal(-0.0215969237223081))*(x966)))+(((IkReal(-0.000212081790953065))*(sj2)))+(((IkReal(-0.0112664671982164))*(cj2)))+(((x963)*(x968)))+(((x963)*(x964)))+(((IkReal(0.0215969237223081))*(x970)))+(((IkReal(-1.00000000000000))*(px)*(x962)))+(((IkReal(-5.23847517560207))*(x961)))), ((IkReal(-0.658581099076692))+(((IkReal(-0.0215969237223081))*(x961)))+(((IkReal(-1.00000000000000))*(x965)*(x968)))+(((x962)*(x969)))+(((x962)*(x967)))+(((IkReal(5.23847517560207))*(x966)))+(((IkReal(-1.00000000000000))*(x964)*(x965)))+(((IkReal(0.0514418262244123))*(sj2)))+(((IkReal(2.73275534485633))*(cj2)))+(((IkReal(-5.23847517560207))*(x970)))+(((IkReal(-1.00000000000000))*(px)*(x960)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[2];
IkReal x971=IKsin(j4);
IkReal x972=IKcos(j4);
IkReal x973=((cj0)*(py));
IkReal x974=((cj2)*(sj1));
IkReal x975=((cj1)*(sj2));
IkReal x976=((IkReal(1.00000000000000))*(px)*(sj0));
evalcond[0]=((((IkReal(0.190892000000000))*(x971)))+(((cj0)*(px)))+(((IkReal(0.000787000000000000))*(x972)))+(((py)*(sj0))));
evalcond[1]=((IkReal(-0.125720000000000))+(((pz)*(sj1)*(sj2)))+(((IkReal(-1.00000000000000))*(x974)*(x976)))+(((x973)*(x974)))+(((x973)*(x975)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(pz)))+(((IkReal(0.000787000000000000))*(x971)))+(((IkReal(-1.00000000000000))*(x975)*(x976)))+(((IkReal(0.00982000000000000))*(sj2)))+(((IkReal(-0.190892000000000))*(x972))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
dummyeval[0]=cj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x977=((IkReal(1.00000000000000))*(sj0));
IkReal x978=((cj1)*(sj2));
IkReal x979=((sj1)*(sj2));
IkReal x980=((cj2)*(sj1));
IkReal x981=((cj0)*(r01));
IkReal x982=((cj0)*(py));
IkReal x983=((cj2)*(x982));
IkReal x984=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.000787000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r00)*(x977)*(x980)))+(((IkReal(-1.00000000000000))*(r00)*(x977)*(x978)))+(((IkReal(-1.00000000000000))*(r02)*(x984)))+(((r02)*(x979)))+(((x980)*(x981)))+(((x978)*(x981))));
evalcond[3]=((IkReal(-0.312421000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((px)*(sj0)*(x979)))+(((cj1)*(x983)))+(((IkReal(-1.00000000000000))*(x979)*(x982)))+(((pz)*(x980)))+(((pz)*(x978)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(px)*(x977)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(-0.316612000000000))+(((IkReal(-1.00000000000000))*(pz)*(x984)))+(((IkReal(0.521670000000000))*(cj2)))+(((pz)*(x979)))+(((IkReal(-1.00000000000000))*(px)*(x977)*(x980)))+(((IkReal(-1.00000000000000))*(px)*(x977)*(x978)))+(((x980)*(x982)))+(((IkReal(0.00982000000000000))*(sj2)))+(((x978)*(x982))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x985=((sj1)*(sj2));
IkReal x986=((cj0)*(r01));
IkReal x987=((r00)*(sj0));
IkReal x988=((cj1)*(cj2));
if( IKabs(((((r01)*(sj0)))+(((cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x986)*(x988)))+(((IkReal(-1.00000000000000))*(x987)*(x988)))+(((cj2)*(r02)*(sj1)))+(((x985)*(x987)))+(((IkReal(-1.00000000000000))*(x985)*(x986)))+(((cj1)*(r02)*(sj2))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r01)*(sj0)))+(((cj0)*(r00)))))+IKsqr(((((x986)*(x988)))+(((IkReal(-1.00000000000000))*(x987)*(x988)))+(((cj2)*(r02)*(sj1)))+(((x985)*(x987)))+(((IkReal(-1.00000000000000))*(x985)*(x986)))+(((cj1)*(r02)*(sj2)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((r01)*(sj0)))+(((cj0)*(r00)))), ((((x986)*(x988)))+(((IkReal(-1.00000000000000))*(x987)*(x988)))+(((cj2)*(r02)*(sj1)))+(((x985)*(x987)))+(((IkReal(-1.00000000000000))*(x985)*(x986)))+(((cj1)*(r02)*(sj2)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x989=((sj1)*(sj2));
IkReal x990=((cj0)*(r01));
IkReal x991=((r00)*(sj0));
IkReal x992=((cj1)*(cj2));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((cj0)*(r00))));
evalcond[1]=((((x989)*(x991)))+(((IkReal(-1.00000000000000))*(x991)*(x992)))+(((IkReal(-1.00000000000000))*(x989)*(x990)))+(((x990)*(x992)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((cj2)*(r02)*(sj1)))+(((cj1)*(r02)*(sj2))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x993=((IkReal(1.00000000000000))*(sj0));
IkReal x994=((cj1)*(sj2));
IkReal x995=((sj1)*(sj2));
IkReal x996=((cj2)*(sj1));
IkReal x997=((cj0)*(r01));
IkReal x998=((cj0)*(py));
IkReal x999=((cj2)*(x998));
IkReal x1000=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.000787000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((x994)*(x997)))+(((r02)*(x995)))+(((IkReal(-1.00000000000000))*(r02)*(x1000)))+(((x996)*(x997)))+(((IkReal(-1.00000000000000))*(r00)*(x993)*(x994)))+(((IkReal(-1.00000000000000))*(r00)*(x993)*(x996))));
evalcond[3]=((IkReal(-0.312421000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((cj1)*(x999)))+(((px)*(sj0)*(x995)))+(((pz)*(x994)))+(((pz)*(x996)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(px)*(x993)))+(((IkReal(-0.521670000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(x995)*(x998))));
evalcond[4]=((IkReal(0.0651720000000000))+(((x994)*(x998)))+(((IkReal(-1.00000000000000))*(pz)*(x1000)))+(((pz)*(x995)))+(((IkReal(0.521670000000000))*(cj2)))+(((x996)*(x998)))+(((IkReal(0.00982000000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(px)*(x993)*(x996)))+(((IkReal(-1.00000000000000))*(px)*(x993)*(x994))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1001=((r00)*(sj0));
IkReal x1002=((cj1)*(cj2));
IkReal x1003=((sj1)*(sj2));
IkReal x1004=((cj0)*(r01));
if( IKabs(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x1003)*(x1004)))+(((IkReal(-1.00000000000000))*(x1001)*(x1002)))+(((cj2)*(r02)*(sj1)))+(((x1002)*(x1004)))+(((x1001)*(x1003)))+(((cj1)*(r02)*(sj2))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))))+IKsqr(((((IkReal(-1.00000000000000))*(x1003)*(x1004)))+(((IkReal(-1.00000000000000))*(x1001)*(x1002)))+(((cj2)*(r02)*(sj1)))+(((x1002)*(x1004)))+(((x1001)*(x1003)))+(((cj1)*(r02)*(sj2)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))), ((((IkReal(-1.00000000000000))*(x1003)*(x1004)))+(((IkReal(-1.00000000000000))*(x1001)*(x1002)))+(((cj2)*(r02)*(sj1)))+(((x1002)*(x1004)))+(((x1001)*(x1003)))+(((cj1)*(r02)*(sj2)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1005=((sj1)*(sj2));
IkReal x1006=((cj0)*(r01));
IkReal x1007=((r00)*(sj0));
IkReal x1008=((cj1)*(cj2));
evalcond[0]=((((r01)*(sj0)))+(IKsin(j5))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1007)*(x1008)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((IkReal(-1.00000000000000))*(x1005)*(x1006)))+(((cj2)*(r02)*(sj1)))+(((x1006)*(x1008)))+(((x1005)*(x1007)))+(((cj1)*(r02)*(sj2))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1009=((pz)*(sj1));
IkReal x1010=((cj0)*(py));
IkReal x1011=((IkReal(1.00000000000000))*(sj2));
IkReal x1012=((cj1)*(cj2));
IkReal x1013=((px)*(sj0));
IkReal x1014=((cj2)*(sj1));
IkReal x1015=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(0.190892000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.312421000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((cj2)*(x1009)))+(((sj1)*(sj2)*(x1013)))+(((IkReal(-1.00000000000000))*(x1012)*(x1013)))+(((pz)*(x1015)))+(((IkReal(-1.00000000000000))*(sj1)*(x1010)*(x1011)))+(((IkReal(-0.521670000000000))*(sj2)))+(((x1010)*(x1012))));
evalcond[4]=((IkReal(-0.124933000000000))+(((IkReal(-1.00000000000000))*(x1013)*(x1014)))+(((IkReal(-1.00000000000000))*(pz)*(x1012)))+(((IkReal(-1.00000000000000))*(cj1)*(x1011)*(x1013)))+(((IkReal(0.521670000000000))*(cj2)))+(((sj2)*(x1009)))+(((x1010)*(x1015)))+(((x1010)*(x1014)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1016=((r02)*(sj2));
IkReal x1017=((IkReal(1.00000000000000))*(sj2));
IkReal x1018=((r00)*(sj0));
IkReal x1019=((cj1)*(cj2));
IkReal x1020=((cj0)*(r01));
IkReal x1021=((sj1)*(x1020));
IkReal x1022=((IkReal(1.00000000000000))*(cj2)*(x1018));
if( IKabs(((((cj2)*(x1021)))+(((IkReal(-1.00000000000000))*(sj1)*(x1022)))+(((cj1)*(sj2)*(x1020)))+(((sj1)*(x1016)))+(((IkReal(-1.00000000000000))*(cj1)*(x1017)*(x1018)))+(((IkReal(-1.00000000000000))*(r02)*(x1019))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((sj1)*(sj2)*(x1018)))+(((IkReal(-1.00000000000000))*(x1018)*(x1019)))+(((x1019)*(x1020)))+(((cj2)*(r02)*(sj1)))+(((cj1)*(x1016)))+(((IkReal(-1.00000000000000))*(x1017)*(x1021))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj2)*(x1021)))+(((IkReal(-1.00000000000000))*(sj1)*(x1022)))+(((cj1)*(sj2)*(x1020)))+(((sj1)*(x1016)))+(((IkReal(-1.00000000000000))*(cj1)*(x1017)*(x1018)))+(((IkReal(-1.00000000000000))*(r02)*(x1019)))))+IKsqr(((((sj1)*(sj2)*(x1018)))+(((IkReal(-1.00000000000000))*(x1018)*(x1019)))+(((x1019)*(x1020)))+(((cj2)*(r02)*(sj1)))+(((cj1)*(x1016)))+(((IkReal(-1.00000000000000))*(x1017)*(x1021)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((cj2)*(x1021)))+(((IkReal(-1.00000000000000))*(sj1)*(x1022)))+(((cj1)*(sj2)*(x1020)))+(((sj1)*(x1016)))+(((IkReal(-1.00000000000000))*(cj1)*(x1017)*(x1018)))+(((IkReal(-1.00000000000000))*(r02)*(x1019)))), ((((sj1)*(sj2)*(x1018)))+(((IkReal(-1.00000000000000))*(x1018)*(x1019)))+(((x1019)*(x1020)))+(((cj2)*(r02)*(sj1)))+(((cj1)*(x1016)))+(((IkReal(-1.00000000000000))*(x1017)*(x1021)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1023=((r02)*(sj2));
IkReal x1024=((IkReal(1.00000000000000))*(sj2));
IkReal x1025=((r00)*(sj0));
IkReal x1026=((cj1)*(cj2));
IkReal x1027=((cj0)*(r01));
IkReal x1028=((sj1)*(x1027));
IkReal x1029=((IkReal(1.00000000000000))*(cj2)*(x1025));
evalcond[0]=((((cj2)*(x1028)))+(((IkReal(-1.00000000000000))*(sj1)*(x1029)))+(((sj1)*(x1023)))+(((cj1)*(sj2)*(x1027)))+(((IkReal(-1.00000000000000))*(cj1)*(x1024)*(x1025)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((IkReal(-1.00000000000000))*(r02)*(x1026))));
evalcond[1]=((((sj1)*(sj2)*(x1025)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((x1026)*(x1027)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1025)*(x1026)))+(((IkReal(-1.00000000000000))*(x1024)*(x1028)))+(((cj1)*(x1023))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1030=((pz)*(sj1));
IkReal x1031=((cj0)*(py));
IkReal x1032=((IkReal(1.00000000000000))*(sj2));
IkReal x1033=((cj1)*(cj2));
IkReal x1034=((px)*(sj0));
IkReal x1035=((cj2)*(sj1));
IkReal x1036=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(-0.190892000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.312421000000000))+(((x1031)*(x1033)))+(((cj2)*(x1030)))+(((IkReal(0.00982000000000000))*(cj2)))+(((sj1)*(sj2)*(x1034)))+(((IkReal(-1.00000000000000))*(x1033)*(x1034)))+(((IkReal(-1.00000000000000))*(sj1)*(x1031)*(x1032)))+(((pz)*(x1036)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(-0.126507000000000))+(((x1031)*(x1035)))+(((x1031)*(x1036)))+(((IkReal(-1.00000000000000))*(x1034)*(x1035)))+(((IkReal(0.521670000000000))*(cj2)))+(((sj2)*(x1030)))+(((IkReal(-1.00000000000000))*(cj1)*(x1032)*(x1034)))+(((IkReal(-1.00000000000000))*(pz)*(x1033)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1037=((IkReal(1.00000000000000))*(sj2));
IkReal x1038=((r02)*(sj1));
IkReal x1039=((cj0)*(r01));
IkReal x1040=((IkReal(1.00000000000000))*(cj2));
IkReal x1041=((cj1)*(r02));
IkReal x1042=((cj1)*(r00)*(sj0));
IkReal x1043=((r00)*(sj0)*(sj1));
if( IKabs(((((IkReal(-1.00000000000000))*(x1037)*(x1038)))+(((sj2)*(x1042)))+(((cj2)*(x1043)))+(((cj2)*(x1041)))+(((IkReal(-1.00000000000000))*(sj1)*(x1039)*(x1040)))+(((IkReal(-1.00000000000000))*(cj1)*(x1037)*(x1039))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj2)*(x1038)))+(((IkReal(-1.00000000000000))*(sj1)*(x1037)*(x1039)))+(((sj2)*(x1043)))+(((sj2)*(x1041)))+(((IkReal(-1.00000000000000))*(x1040)*(x1042)))+(((cj1)*(cj2)*(x1039))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x1037)*(x1038)))+(((sj2)*(x1042)))+(((cj2)*(x1043)))+(((cj2)*(x1041)))+(((IkReal(-1.00000000000000))*(sj1)*(x1039)*(x1040)))+(((IkReal(-1.00000000000000))*(cj1)*(x1037)*(x1039)))))+IKsqr(((((cj2)*(x1038)))+(((IkReal(-1.00000000000000))*(sj1)*(x1037)*(x1039)))+(((sj2)*(x1043)))+(((sj2)*(x1041)))+(((IkReal(-1.00000000000000))*(x1040)*(x1042)))+(((cj1)*(cj2)*(x1039)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x1037)*(x1038)))+(((sj2)*(x1042)))+(((cj2)*(x1043)))+(((cj2)*(x1041)))+(((IkReal(-1.00000000000000))*(sj1)*(x1039)*(x1040)))+(((IkReal(-1.00000000000000))*(cj1)*(x1037)*(x1039)))), ((((cj2)*(x1038)))+(((IkReal(-1.00000000000000))*(sj1)*(x1037)*(x1039)))+(((sj2)*(x1043)))+(((sj2)*(x1041)))+(((IkReal(-1.00000000000000))*(x1040)*(x1042)))+(((cj1)*(cj2)*(x1039)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1044=((r02)*(sj2));
IkReal x1045=((IkReal(1.00000000000000))*(sj2));
IkReal x1046=((r00)*(sj0));
IkReal x1047=((cj1)*(cj2));
IkReal x1048=((cj0)*(r01));
IkReal x1049=((sj1)*(x1048));
IkReal x1050=((IkReal(1.00000000000000))*(cj2)*(x1046));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj1)*(x1045)*(x1046)))+(((IkReal(-1.00000000000000))*(r02)*(x1047)))+(IKsin(j5))+(((cj2)*(x1049)))+(((sj1)*(x1044)))+(((cj1)*(sj2)*(x1048)))+(((IkReal(-1.00000000000000))*(sj1)*(x1050))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1046)*(x1047)))+(((IkReal(-1.00000000000000))*(x1045)*(x1049)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((cj1)*(x1044)))+(((cj2)*(r02)*(sj1)))+(((sj1)*(sj2)*(x1046)))+(((x1047)*(x1048))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1051=((r02)*(sj2));
IkReal x1052=((IkReal(1.00000000000000))*(sj2));
IkReal x1053=((r00)*(sj0));
IkReal x1054=((cj1)*(cj2));
IkReal x1055=((cj0)*(r01));
IkReal x1056=((sj1)*(x1055));
IkReal x1057=((IkReal(1.00000000000000))*(cj2)*(x1053));
if( IKabs(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r02)*(x1054)))+(((sj1)*(x1051)))+(((IkReal(-1.00000000000000))*(cj1)*(x1052)*(x1053)))+(((cj2)*(x1056)))+(((IkReal(-1.00000000000000))*(sj1)*(x1057)))+(((cj1)*(sj2)*(x1055))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x1052)*(x1056)))+(((x1054)*(x1055)))+(((cj1)*(x1051)))+(((IkReal(-1.00000000000000))*(x1053)*(x1054)))+(((cj2)*(r02)*(sj1)))+(((sj1)*(sj2)*(x1053))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r02)*(x1054)))+(((sj1)*(x1051)))+(((IkReal(-1.00000000000000))*(cj1)*(x1052)*(x1053)))+(((cj2)*(x1056)))+(((IkReal(-1.00000000000000))*(sj1)*(x1057)))+(((cj1)*(sj2)*(x1055)))))))+IKsqr(((((IkReal(-1.00000000000000))*(x1052)*(x1056)))+(((x1054)*(x1055)))+(((cj1)*(x1051)))+(((IkReal(-1.00000000000000))*(x1053)*(x1054)))+(((cj2)*(r02)*(sj1)))+(((sj1)*(sj2)*(x1053)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r02)*(x1054)))+(((sj1)*(x1051)))+(((IkReal(-1.00000000000000))*(cj1)*(x1052)*(x1053)))+(((cj2)*(x1056)))+(((IkReal(-1.00000000000000))*(sj1)*(x1057)))+(((cj1)*(sj2)*(x1055)))))), ((((IkReal(-1.00000000000000))*(x1052)*(x1056)))+(((x1054)*(x1055)))+(((cj1)*(x1051)))+(((IkReal(-1.00000000000000))*(x1053)*(x1054)))+(((cj2)*(r02)*(sj1)))+(((sj1)*(sj2)*(x1053)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1058=IKsin(j5);
IkReal x1059=((r02)*(sj2));
IkReal x1060=((IkReal(1.00000000000000))*(sj2));
IkReal x1061=((r00)*(sj0));
IkReal x1062=((IkReal(1.00000000000000))*(cj2));
IkReal x1063=((IkReal(1.00000000000000))*(x1058));
IkReal x1064=((cj0)*(r01)*(sj1));
IkReal x1065=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x1063)))+(((cj0)*(r00))));
evalcond[1]=((((sj2)*(x1065)))+(((cj2)*(x1064)))+(((IkReal(-1.00000000000000))*(sj1)*(x1061)*(x1062)))+(((sj1)*(x1059)))+(((IkReal(-1.00000000000000))*(cj1)*(x1060)*(x1061)))+(((IkReal(-1.00000000000000))*(sj4)*(x1063)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1062))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj1)*(x1061)*(x1062)))+(((IkReal(-1.00000000000000))*(x1060)*(x1064)))+(((cj2)*(x1065)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((cj1)*(x1059)))+(((sj1)*(sj2)*(x1061)))+(((cj2)*(r02)*(sj1))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1066=((sj1)*(sj2));
IkReal x1067=((cj0)*(r01));
IkReal x1068=((r00)*(sj0));
IkReal x1069=((cj1)*(cj2));
if( IKabs(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x1066)*(x1067)))+(((x1066)*(x1068)))+(((x1067)*(x1069)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1068)*(x1069)))+(((cj1)*(r02)*(sj2))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))))+IKsqr(((((IkReal(-1.00000000000000))*(x1066)*(x1067)))+(((x1066)*(x1068)))+(((x1067)*(x1069)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1068)*(x1069)))+(((cj1)*(r02)*(sj2)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))), ((((IkReal(-1.00000000000000))*(x1066)*(x1067)))+(((x1066)*(x1068)))+(((x1067)*(x1069)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1068)*(x1069)))+(((cj1)*(r02)*(sj2)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1070=IKsin(j5);
IkReal x1071=((r02)*(sj2));
IkReal x1072=((IkReal(1.00000000000000))*(sj2));
IkReal x1073=((r00)*(sj0));
IkReal x1074=((IkReal(1.00000000000000))*(cj2));
IkReal x1075=((IkReal(1.00000000000000))*(x1070));
IkReal x1076=((cj0)*(r01)*(sj1));
IkReal x1077=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x1075)))+(((cj0)*(r00))));
evalcond[1]=((((sj2)*(x1077)))+(((IkReal(-1.00000000000000))*(sj1)*(x1073)*(x1074)))+(((cj2)*(x1076)))+(((IkReal(-1.00000000000000))*(sj4)*(x1075)))+(((sj1)*(x1071)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1074)))+(((IkReal(-1.00000000000000))*(cj1)*(x1072)*(x1073))));
evalcond[2]=((((IkReal(-1.00000000000000))*(IKcos(j5))))+(((cj2)*(x1077)))+(((cj1)*(x1071)))+(((sj1)*(sj2)*(x1073)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(x1073)*(x1074)))+(((IkReal(-1.00000000000000))*(x1072)*(x1076))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1078=((IkReal(787000000.000000))*(sj2));
IkReal x1079=((pz)*(sj1));
IkReal x1080=((IkReal(190892000000.000))*(sj3));
IkReal x1081=((py)*(sj0));
IkReal x1082=((cj0)*(px));
IkReal x1083=((IkReal(190892000000.000))*(cj2));
IkReal x1084=((cj1)*(pz));
IkReal x1085=((IkReal(787000000.000000))*(sj3));
IkReal x1086=((IkReal(190892000000.000))*(sj2));
IkReal x1087=((IkReal(787000000.000000))*(cj2));
IkReal x1088=((cj1)*(px)*(sj0));
IkReal x1089=((cj0)*(cj1)*(py));
IkReal x1090=((px)*(sj0)*(sj1));
IkReal x1091=((cj0)*(py)*(sj1));
if( IKabs(((gconst1)*(((IkReal(5902500.00000000))+(((IkReal(104844140.000000))*(sj3)))+(((x1087)*(x1091)))+(((x1078)*(x1089)))+(((x1078)*(x1079)))+(((IkReal(-1.00000000000000))*(x1078)*(x1088)))+(((IkReal(-1.00000000000000))*(x1080)*(x1082)))+(((IkReal(-1.00000000000000))*(x1080)*(x1081)))+(((IkReal(-1.00000000000000))*(x1087)*(x1090)))+(((IkReal(-1.00000000000000))*(x1084)*(x1087)))+(((IkReal(410554290.000000))*(cj2)))+(((IkReal(7728340.00000000))*(sj2)))+(((IkReal(40397497.0000000))*(cj3))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst1)*(((IkReal(-1431690000.00000))+(((x1083)*(x1090)))+(((IkReal(-99582629640.0000))*(cj2)))+(((IkReal(-1.00000000000000))*(x1083)*(x1091)))+(((IkReal(-1.00000000000000))*(x1081)*(x1085)))+(((IkReal(-25430632240.0000))*(sj3)))+(((IkReal(-1.00000000000000))*(x1079)*(x1086)))+(((IkReal(-9798677252.00000))*(cj3)))+(((IkReal(-1.00000000000000))*(x1082)*(x1085)))+(((x1086)*(x1088)))+(((IkReal(-1874559440.00000))*(sj2)))+(((IkReal(-1.00000000000000))*(x1086)*(x1089)))+(((x1083)*(x1084))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst1)*(((IkReal(5902500.00000000))+(((IkReal(104844140.000000))*(sj3)))+(((x1087)*(x1091)))+(((x1078)*(x1089)))+(((x1078)*(x1079)))+(((IkReal(-1.00000000000000))*(x1078)*(x1088)))+(((IkReal(-1.00000000000000))*(x1080)*(x1082)))+(((IkReal(-1.00000000000000))*(x1080)*(x1081)))+(((IkReal(-1.00000000000000))*(x1087)*(x1090)))+(((IkReal(-1.00000000000000))*(x1084)*(x1087)))+(((IkReal(410554290.000000))*(cj2)))+(((IkReal(7728340.00000000))*(sj2)))+(((IkReal(40397497.0000000))*(cj3)))))), ((gconst1)*(((IkReal(-1431690000.00000))+(((x1083)*(x1090)))+(((IkReal(-99582629640.0000))*(cj2)))+(((IkReal(-1.00000000000000))*(x1083)*(x1091)))+(((IkReal(-1.00000000000000))*(x1081)*(x1085)))+(((IkReal(-25430632240.0000))*(sj3)))+(((IkReal(-1.00000000000000))*(x1079)*(x1086)))+(((IkReal(-9798677252.00000))*(cj3)))+(((IkReal(-1.00000000000000))*(x1082)*(x1085)))+(((x1086)*(x1088)))+(((IkReal(-1874559440.00000))*(sj2)))+(((IkReal(-1.00000000000000))*(x1086)*(x1089)))+(((x1083)*(x1084)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[3];
IkReal x1092=IKsin(j4);
IkReal x1093=IKcos(j4);
IkReal x1094=((cj1)*(sj2));
IkReal x1095=((px)*(sj0));
IkReal x1096=((sj1)*(sj2));
IkReal x1097=((cj0)*(py));
IkReal x1098=((cj2)*(pz));
IkReal x1099=((IkReal(1.00000000000000))*(cj1));
IkReal x1100=((cj2)*(x1097));
IkReal x1101=((IkReal(0.000787000000000000))*(x1092));
IkReal x1102=((IkReal(0.190892000000000))*(x1093));
evalcond[0]=((((IkReal(0.190892000000000))*(x1092)))+(((IkReal(0.000787000000000000))*(x1093)))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[1]=((IkReal(-0.261090000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x1096)*(x1097)))+(((IkReal(-1.00000000000000))*(cj2)*(x1095)*(x1099)))+(((sj1)*(x1098)))+(((x1095)*(x1096)))+(((cj1)*(x1100)))+(((IkReal(-0.133220000000000))*(cj3)))+(((IkReal(0.0513310000000000))*(sj3)))+(((pz)*(x1094)))+(((cj3)*(x1101)))+(((IkReal(-1.00000000000000))*(cj3)*(x1102)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[2]=((IkReal(0.00750000000000000))+(((sj3)*(x1102)))+(((x1094)*(x1097)))+(((IkReal(0.133220000000000))*(sj3)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(sj3)*(x1101)))+(((sj1)*(x1100)))+(((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x1095)))+(((pz)*(x1096)))+(((IkReal(0.0513310000000000))*(cj3)))+(((IkReal(-1.00000000000000))*(x1094)*(x1095)))+(((IkReal(-1.00000000000000))*(x1098)*(x1099)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[2];
IkReal x1103=(cj3)*(cj3);
IkReal x1104=(sj3)*(sj3);
dummyeval[0]=((((sj4)*(x1104)))+(((sj4)*(x1103))));
dummyeval[1]=((((IkReal(-1.00000000000000))*(x1103)))+(((IkReal(-1.00000000000000))*(x1104))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=cj4;
dummyeval[1]=sj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=cj4;
dummyeval[1]=cj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x1105=((cj1)*(sj2));
IkReal x1106=((px)*(sj0));
IkReal x1107=((sj1)*(sj2));
IkReal x1108=((cj0)*(py));
IkReal x1109=((cj2)*(pz));
IkReal x1110=((IkReal(1.00000000000000))*(cj1));
IkReal x1111=((cj2)*(x1108));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(0.190892000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.261090000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((cj1)*(x1111)))+(((IkReal(-1.00000000000000))*(cj2)*(x1106)*(x1110)))+(((IkReal(-0.132433000000000))*(cj3)))+(((pz)*(x1105)))+(((IkReal(0.0513310000000000))*(sj3)))+(((sj1)*(x1109)))+(((IkReal(-0.521670000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(x1107)*(x1108)))+(((x1106)*(x1107))));
evalcond[4]=((IkReal(0.00750000000000000))+(((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x1106)))+(((IkReal(-1.00000000000000))*(x1109)*(x1110)))+(((x1105)*(x1108)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x1105)*(x1106)))+(((pz)*(x1107)))+(((sj1)*(x1111)))+(((IkReal(0.0513310000000000))*(cj3)))+(((IkReal(0.132433000000000))*(sj3)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst2;
gconst2=IKsign((((sj3)*(sj3))+((cj3)*(cj3))));
dummyeval[0]=(((sj3)*(sj3))+((cj3)*(cj3)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1112=((IkReal(1.00000000000000))*(cj3));
IkReal x1113=((cj1)*(cj2));
IkReal x1114=((r00)*(sj0));
IkReal x1115=((r02)*(sj3));
IkReal x1116=((cj3)*(r02));
IkReal x1117=((cj2)*(sj1));
IkReal x1118=((IkReal(1.00000000000000))*(sj3));
IkReal x1119=((cj0)*(r01));
IkReal x1120=((cj1)*(sj2));
IkReal x1121=((sj1)*(sj2));
IkReal x1122=((sj1)*(x1119));
if( IKabs(((gconst2)*(((((sj3)*(x1114)*(x1120)))+(((x1113)*(x1115)))+(((IkReal(-1.00000000000000))*(x1117)*(x1118)*(x1119)))+(((IkReal(-1.00000000000000))*(x1118)*(x1119)*(x1120)))+(((cj3)*(x1114)*(x1121)))+(((IkReal(-1.00000000000000))*(x1115)*(x1121)))+(((x1116)*(x1117)))+(((IkReal(-1.00000000000000))*(x1112)*(x1113)*(x1114)))+(((cj3)*(x1113)*(x1119)))+(((sj3)*(x1114)*(x1117)))+(((x1116)*(x1120)))+(((IkReal(-1.00000000000000))*(x1112)*(x1119)*(x1121))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst2)*(((((IkReal(-1.00000000000000))*(r02)*(x1112)*(x1121)))+(((IkReal(-1.00000000000000))*(x1112)*(x1117)*(x1119)))+(((x1113)*(x1116)))+(((IkReal(-1.00000000000000))*(x1114)*(x1118)*(x1121)))+(((cj3)*(x1114)*(x1117)))+(((sj3)*(x1119)*(x1121)))+(((cj3)*(x1114)*(x1120)))+(((IkReal(-1.00000000000000))*(x1115)*(x1120)))+(((IkReal(-1.00000000000000))*(x1115)*(x1117)))+(((IkReal(-1.00000000000000))*(x1113)*(x1118)*(x1119)))+(((sj3)*(x1113)*(x1114)))+(((IkReal(-1.00000000000000))*(x1112)*(x1119)*(x1120))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst2)*(((((sj3)*(x1114)*(x1120)))+(((x1113)*(x1115)))+(((IkReal(-1.00000000000000))*(x1117)*(x1118)*(x1119)))+(((IkReal(-1.00000000000000))*(x1118)*(x1119)*(x1120)))+(((cj3)*(x1114)*(x1121)))+(((IkReal(-1.00000000000000))*(x1115)*(x1121)))+(((x1116)*(x1117)))+(((IkReal(-1.00000000000000))*(x1112)*(x1113)*(x1114)))+(((cj3)*(x1113)*(x1119)))+(((sj3)*(x1114)*(x1117)))+(((x1116)*(x1120)))+(((IkReal(-1.00000000000000))*(x1112)*(x1119)*(x1121)))))), ((gconst2)*(((((IkReal(-1.00000000000000))*(r02)*(x1112)*(x1121)))+(((IkReal(-1.00000000000000))*(x1112)*(x1117)*(x1119)))+(((x1113)*(x1116)))+(((IkReal(-1.00000000000000))*(x1114)*(x1118)*(x1121)))+(((cj3)*(x1114)*(x1117)))+(((sj3)*(x1119)*(x1121)))+(((cj3)*(x1114)*(x1120)))+(((IkReal(-1.00000000000000))*(x1115)*(x1120)))+(((IkReal(-1.00000000000000))*(x1115)*(x1117)))+(((IkReal(-1.00000000000000))*(x1113)*(x1118)*(x1119)))+(((sj3)*(x1113)*(x1114)))+(((IkReal(-1.00000000000000))*(x1112)*(x1119)*(x1120)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1123=IKcos(j5);
IkReal x1124=IKsin(j5);
IkReal x1125=((r02)*(sj2));
IkReal x1126=((IkReal(1.00000000000000))*(sj2));
IkReal x1127=((r00)*(sj0));
IkReal x1128=((cj1)*(cj2));
IkReal x1129=((cj0)*(r01));
IkReal x1130=((sj1)*(x1129));
IkReal x1131=((IkReal(1.00000000000000))*(cj2)*(x1127));
evalcond[0]=((((cj2)*(x1130)))+(((IkReal(-1.00000000000000))*(r02)*(x1128)))+(((IkReal(-1.00000000000000))*(sj1)*(x1131)))+(((sj1)*(x1125)))+(((IkReal(-1.00000000000000))*(cj1)*(x1126)*(x1127)))+(((sj3)*(x1124)))+(((cj1)*(sj2)*(x1129)))+(((cj3)*(x1123))));
evalcond[1]=((((sj1)*(sj2)*(x1127)))+(((IkReal(-1.00000000000000))*(cj3)*(x1124)))+(((IkReal(-1.00000000000000))*(x1126)*(x1130)))+(((IkReal(-1.00000000000000))*(x1127)*(x1128)))+(((cj2)*(r02)*(sj1)))+(((x1128)*(x1129)))+(((cj1)*(x1125)))+(((sj3)*(x1123))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1132=((cj1)*(sj2));
IkReal x1133=((px)*(sj0));
IkReal x1134=((sj1)*(sj2));
IkReal x1135=((cj0)*(py));
IkReal x1136=((cj2)*(pz));
IkReal x1137=((IkReal(1.00000000000000))*(cj1));
IkReal x1138=((cj2)*(x1135));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(-0.190892000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.261090000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-0.134007000000000))*(cj3)))+(((sj1)*(x1136)))+(((IkReal(-1.00000000000000))*(x1134)*(x1135)))+(((pz)*(x1132)))+(((IkReal(-1.00000000000000))*(cj2)*(x1133)*(x1137)))+(((IkReal(0.0513310000000000))*(sj3)))+(((cj1)*(x1138)))+(((x1133)*(x1134)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(0.00750000000000000))+(((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x1133)))+(((IkReal(-1.00000000000000))*(x1132)*(x1133)))+(((sj1)*(x1138)))+(((IkReal(0.134007000000000))*(sj3)))+(((pz)*(x1134)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x1136)*(x1137)))+(((IkReal(0.0513310000000000))*(cj3)))+(((IkReal(0.00982000000000000))*(sj2)))+(((x1132)*(x1135))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst3;
gconst3=IKsign((((sj3)*(sj3))+((cj3)*(cj3))));
dummyeval[0]=(((sj3)*(sj3))+((cj3)*(cj3)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1139=((r00)*(sj0));
IkReal x1140=((sj1)*(sj2));
IkReal x1141=((r02)*(sj3));
IkReal x1142=((cj0)*(r01));
IkReal x1143=((cj3)*(r02));
IkReal x1144=((IkReal(1.00000000000000))*(cj2));
IkReal x1145=((cj1)*(sj3));
IkReal x1146=((sj1)*(sj3));
IkReal x1147=((cj3)*(sj1));
IkReal x1148=((cj1)*(cj2)*(cj3));
IkReal x1149=((IkReal(1.00000000000000))*(cj1)*(sj2));
if( IKabs(((gconst3)*(((((IkReal(-1.00000000000000))*(sj2)*(x1139)*(x1145)))+(((x1140)*(x1141)))+(((IkReal(-1.00000000000000))*(x1143)*(x1149)))+(((sj2)*(x1142)*(x1145)))+(((IkReal(-1.00000000000000))*(cj3)*(x1139)*(x1140)))+(((IkReal(-1.00000000000000))*(sj1)*(x1143)*(x1144)))+(((cj2)*(x1142)*(x1146)))+(((IkReal(-1.00000000000000))*(x1139)*(x1144)*(x1146)))+(((x1139)*(x1148)))+(((IkReal(-1.00000000000000))*(cj1)*(cj3)*(x1142)*(x1144)))+(((IkReal(-1.00000000000000))*(cj1)*(x1141)*(x1144)))+(((cj3)*(x1140)*(x1142))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst3)*(((((IkReal(-1.00000000000000))*(x1142)*(x1144)*(x1147)))+(((IkReal(-1.00000000000000))*(x1142)*(x1144)*(x1145)))+(((cj1)*(cj2)*(x1143)))+(((cj2)*(x1139)*(x1145)))+(((cj2)*(x1139)*(x1147)))+(((IkReal(-1.00000000000000))*(x1141)*(x1149)))+(((IkReal(-1.00000000000000))*(cj3)*(x1142)*(x1149)))+(((IkReal(-1.00000000000000))*(sj1)*(x1141)*(x1144)))+(((sj3)*(x1140)*(x1142)))+(((IkReal(-1.00000000000000))*(sj3)*(x1139)*(x1140)))+(((IkReal(-1.00000000000000))*(x1140)*(x1143)))+(((cj1)*(cj3)*(sj2)*(x1139))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst3)*(((((IkReal(-1.00000000000000))*(sj2)*(x1139)*(x1145)))+(((x1140)*(x1141)))+(((IkReal(-1.00000000000000))*(x1143)*(x1149)))+(((sj2)*(x1142)*(x1145)))+(((IkReal(-1.00000000000000))*(cj3)*(x1139)*(x1140)))+(((IkReal(-1.00000000000000))*(sj1)*(x1143)*(x1144)))+(((cj2)*(x1142)*(x1146)))+(((IkReal(-1.00000000000000))*(x1139)*(x1144)*(x1146)))+(((x1139)*(x1148)))+(((IkReal(-1.00000000000000))*(cj1)*(cj3)*(x1142)*(x1144)))+(((IkReal(-1.00000000000000))*(cj1)*(x1141)*(x1144)))+(((cj3)*(x1140)*(x1142)))))), ((gconst3)*(((((IkReal(-1.00000000000000))*(x1142)*(x1144)*(x1147)))+(((IkReal(-1.00000000000000))*(x1142)*(x1144)*(x1145)))+(((cj1)*(cj2)*(x1143)))+(((cj2)*(x1139)*(x1145)))+(((cj2)*(x1139)*(x1147)))+(((IkReal(-1.00000000000000))*(x1141)*(x1149)))+(((IkReal(-1.00000000000000))*(cj3)*(x1142)*(x1149)))+(((IkReal(-1.00000000000000))*(sj1)*(x1141)*(x1144)))+(((sj3)*(x1140)*(x1142)))+(((IkReal(-1.00000000000000))*(sj3)*(x1139)*(x1140)))+(((IkReal(-1.00000000000000))*(x1140)*(x1143)))+(((cj1)*(cj3)*(sj2)*(x1139)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1150=IKsin(j5);
IkReal x1151=IKcos(j5);
IkReal x1152=((r02)*(sj2));
IkReal x1153=((IkReal(1.00000000000000))*(sj2));
IkReal x1154=((r00)*(sj0));
IkReal x1155=((IkReal(1.00000000000000))*(cj2));
IkReal x1156=((cj0)*(r01)*(sj1));
IkReal x1157=((cj0)*(cj1)*(r01));
evalcond[0]=((((cj2)*(x1156)))+(((cj3)*(x1151)))+(((sj2)*(x1157)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1155)))+(((IkReal(-1.00000000000000))*(sj1)*(x1154)*(x1155)))+(((sj1)*(x1152)))+(((IkReal(-1.00000000000000))*(cj1)*(x1153)*(x1154)))+(((IkReal(-1.00000000000000))*(sj3)*(x1150))));
evalcond[1]=((((cj2)*(x1157)))+(((cj3)*(x1150)))+(((IkReal(-1.00000000000000))*(cj1)*(x1154)*(x1155)))+(((sj1)*(sj2)*(x1154)))+(((sj3)*(x1151)))+(((cj2)*(r02)*(sj1)))+(((cj1)*(x1152)))+(((IkReal(-1.00000000000000))*(x1153)*(x1156))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1158=((cj1)*(sj2));
IkReal x1159=((px)*(sj0));
IkReal x1160=((sj1)*(sj2));
IkReal x1161=((cj0)*(py));
IkReal x1162=((cj2)*(pz));
IkReal x1163=((IkReal(1.00000000000000))*(cj1));
IkReal x1164=((cj2)*(x1161));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(0.190892000000000))*(sj4)))+(((IkReal(0.000787000000000000))*(cj4)))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((IkReal(-0.209759000000000))+(((cj1)*(x1164)))+(((pz)*(x1158)))+(((IkReal(0.00982000000000000))*(cj2)))+(((x1159)*(x1160)))+(((sj1)*(x1162)))+(((IkReal(-1.00000000000000))*(cj2)*(x1159)*(x1163)))+(((IkReal(-1.00000000000000))*(x1160)*(x1161)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[3]=((IkReal(0.140720000000000))+(((IkReal(0.190892000000000))*(cj4)))+(((sj1)*(x1164)))+(((IkReal(-1.00000000000000))*(x1158)*(x1159)))+(((IkReal(-1.00000000000000))*(x1162)*(x1163)))+(((IkReal(0.521670000000000))*(cj2)))+(((pz)*(x1160)))+(((x1158)*(x1161)))+(((IkReal(-0.000787000000000000))*(sj4)))+(((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x1159)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x1165=((IkReal(1.00000000000000))*(sj0));
IkReal x1166=((cj1)*(sj2));
IkReal x1167=((sj1)*(sj2));
IkReal x1168=((cj2)*(sj1));
IkReal x1169=((cj0)*(r01));
IkReal x1170=((cj0)*(py));
IkReal x1171=((cj2)*(x1170));
IkReal x1172=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.000787000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r02)*(x1172)))+(((x1168)*(x1169)))+(((r02)*(x1167)))+(((x1166)*(x1169)))+(((IkReal(-1.00000000000000))*(r00)*(x1165)*(x1166)))+(((IkReal(-1.00000000000000))*(r00)*(x1165)*(x1168))));
evalcond[3]=((IkReal(-0.209759000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((cj1)*(x1171)))+(((px)*(sj0)*(x1167)))+(((pz)*(x1166)))+(((pz)*(x1168)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(px)*(x1165)))+(((IkReal(-1.00000000000000))*(x1167)*(x1170)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(0.331612000000000))+(((x1166)*(x1170)))+(((x1168)*(x1170)))+(((IkReal(-1.00000000000000))*(pz)*(x1172)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(px)*(x1165)*(x1166)))+(((IkReal(-1.00000000000000))*(px)*(x1165)*(x1168)))+(((pz)*(x1167)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1173=((cj0)*(r01));
IkReal x1174=((sj1)*(sj2));
IkReal x1175=((IkReal(1.00000000000000))*(cj1));
IkReal x1176=((r00)*(sj0));
if( IKabs(((((r01)*(sj0)))+(((cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(cj2)*(x1173)*(x1175)))+(((x1173)*(x1174)))+(((cj1)*(cj2)*(x1176)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1174)*(x1176)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1175))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r01)*(sj0)))+(((cj0)*(r00)))))+IKsqr(((((IkReal(-1.00000000000000))*(cj2)*(x1173)*(x1175)))+(((x1173)*(x1174)))+(((cj1)*(cj2)*(x1176)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1174)*(x1176)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1175)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((r01)*(sj0)))+(((cj0)*(r00)))), ((((IkReal(-1.00000000000000))*(cj2)*(x1173)*(x1175)))+(((x1173)*(x1174)))+(((cj1)*(cj2)*(x1176)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1174)*(x1176)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1175)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1177=((sj1)*(sj2));
IkReal x1178=((cj0)*(r01));
IkReal x1179=((r00)*(sj0));
IkReal x1180=((cj1)*(cj2));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((cj0)*(r00))));
evalcond[1]=((((x1178)*(x1180)))+(((x1177)*(x1179)))+(IKcos(j5))+(((IkReal(-1.00000000000000))*(x1177)*(x1178)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1179)*(x1180)))+(((cj1)*(r02)*(sj2))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1181=((IkReal(1.00000000000000))*(sj0));
IkReal x1182=((cj1)*(sj2));
IkReal x1183=((sj1)*(sj2));
IkReal x1184=((cj2)*(sj1));
IkReal x1185=((cj0)*(r01));
IkReal x1186=((cj0)*(py));
IkReal x1187=((cj2)*(x1186));
IkReal x1188=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.000787000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((x1184)*(x1185)))+(((x1182)*(x1185)))+(((r02)*(x1183)))+(((IkReal(-1.00000000000000))*(r00)*(x1181)*(x1184)))+(((IkReal(-1.00000000000000))*(r00)*(x1181)*(x1182)))+(((IkReal(-1.00000000000000))*(r02)*(x1188))));
evalcond[3]=((IkReal(-0.209759000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(px)*(x1181)))+(((pz)*(x1182)))+(((pz)*(x1184)))+(((IkReal(-1.00000000000000))*(x1183)*(x1186)))+(((px)*(sj0)*(x1183)))+(((cj1)*(x1187)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(-0.0501720000000000))+(((x1184)*(x1186)))+(((x1182)*(x1186)))+(((pz)*(x1183)))+(((IkReal(-1.00000000000000))*(pz)*(x1188)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(px)*(x1181)*(x1184)))+(((IkReal(-1.00000000000000))*(px)*(x1181)*(x1182)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1189=((sj1)*(sj2));
IkReal x1190=((cj0)*(r01));
IkReal x1191=((r00)*(sj0));
IkReal x1192=((IkReal(1.00000000000000))*(cj1));
if( IKabs(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(cj2)*(x1190)*(x1192)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1192)))+(((x1189)*(x1190)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1189)*(x1191)))+(((cj1)*(cj2)*(x1191))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))))+IKsqr(((((IkReal(-1.00000000000000))*(cj2)*(x1190)*(x1192)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1192)))+(((x1189)*(x1190)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1189)*(x1191)))+(((cj1)*(cj2)*(x1191)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))), ((((IkReal(-1.00000000000000))*(cj2)*(x1190)*(x1192)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1192)))+(((x1189)*(x1190)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1189)*(x1191)))+(((cj1)*(cj2)*(x1191)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1193=((sj1)*(sj2));
IkReal x1194=((cj0)*(r01));
IkReal x1195=((r00)*(sj0));
IkReal x1196=((cj1)*(cj2));
evalcond[0]=((((r01)*(sj0)))+(IKsin(j5))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1195)*(x1196)))+(((x1194)*(x1196)))+(((IkReal(-1.00000000000000))*(x1193)*(x1194)))+(IKcos(j5))+(((cj2)*(r02)*(sj1)))+(((x1193)*(x1195)))+(((cj1)*(r02)*(sj2))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1197=((pz)*(sj1));
IkReal x1198=((cj0)*(py));
IkReal x1199=((IkReal(1.00000000000000))*(sj2));
IkReal x1200=((cj1)*(cj2));
IkReal x1201=((px)*(sj0));
IkReal x1202=((cj2)*(sj1));
IkReal x1203=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(0.190892000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.209759000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(sj1)*(x1198)*(x1199)))+(((IkReal(-1.00000000000000))*(x1200)*(x1201)))+(((pz)*(x1203)))+(((sj1)*(sj2)*(x1201)))+(((IkReal(-0.521670000000000))*(sj2)))+(((cj2)*(x1197)))+(((x1198)*(x1200))));
evalcond[4]=((IkReal(0.139933000000000))+(((IkReal(-1.00000000000000))*(cj1)*(x1199)*(x1201)))+(((IkReal(-1.00000000000000))*(pz)*(x1200)))+(((IkReal(0.521670000000000))*(cj2)))+(((sj2)*(x1197)))+(((IkReal(-1.00000000000000))*(x1201)*(x1202)))+(((IkReal(0.00982000000000000))*(sj2)))+(((x1198)*(x1203)))+(((x1198)*(x1202))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1204=((IkReal(1.00000000000000))*(sj2));
IkReal x1205=((r02)*(sj1));
IkReal x1206=((cj0)*(r01));
IkReal x1207=((r00)*(sj0));
IkReal x1208=((cj1)*(r02));
IkReal x1209=((IkReal(1.00000000000000))*(cj2));
if( IKabs(((((IkReal(-1.00000000000000))*(x1204)*(x1205)))+(((IkReal(-1.00000000000000))*(sj1)*(x1206)*(x1209)))+(((IkReal(-1.00000000000000))*(cj1)*(x1204)*(x1206)))+(((cj2)*(x1208)))+(((cj1)*(sj2)*(x1207)))+(((cj2)*(sj1)*(x1207))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x1204)*(x1208)))+(((IkReal(-1.00000000000000))*(sj1)*(x1204)*(x1207)))+(((IkReal(-1.00000000000000))*(x1205)*(x1209)))+(((IkReal(-1.00000000000000))*(cj1)*(x1206)*(x1209)))+(((cj1)*(cj2)*(x1207)))+(((sj1)*(sj2)*(x1206))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x1204)*(x1205)))+(((IkReal(-1.00000000000000))*(sj1)*(x1206)*(x1209)))+(((IkReal(-1.00000000000000))*(cj1)*(x1204)*(x1206)))+(((cj2)*(x1208)))+(((cj1)*(sj2)*(x1207)))+(((cj2)*(sj1)*(x1207)))))+IKsqr(((((IkReal(-1.00000000000000))*(x1204)*(x1208)))+(((IkReal(-1.00000000000000))*(sj1)*(x1204)*(x1207)))+(((IkReal(-1.00000000000000))*(x1205)*(x1209)))+(((IkReal(-1.00000000000000))*(cj1)*(x1206)*(x1209)))+(((cj1)*(cj2)*(x1207)))+(((sj1)*(sj2)*(x1206)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x1204)*(x1205)))+(((IkReal(-1.00000000000000))*(sj1)*(x1206)*(x1209)))+(((IkReal(-1.00000000000000))*(cj1)*(x1204)*(x1206)))+(((cj2)*(x1208)))+(((cj1)*(sj2)*(x1207)))+(((cj2)*(sj1)*(x1207)))), ((((IkReal(-1.00000000000000))*(x1204)*(x1208)))+(((IkReal(-1.00000000000000))*(sj1)*(x1204)*(x1207)))+(((IkReal(-1.00000000000000))*(x1205)*(x1209)))+(((IkReal(-1.00000000000000))*(cj1)*(x1206)*(x1209)))+(((cj1)*(cj2)*(x1207)))+(((sj1)*(sj2)*(x1206)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1210=((r02)*(sj2));
IkReal x1211=((IkReal(1.00000000000000))*(sj2));
IkReal x1212=((r00)*(sj0));
IkReal x1213=((cj1)*(cj2));
IkReal x1214=((cj0)*(r01));
IkReal x1215=((sj1)*(x1214));
IkReal x1216=((IkReal(1.00000000000000))*(cj2)*(x1212));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj1)*(x1211)*(x1212)))+(IKsin(j5))+(((IkReal(-1.00000000000000))*(r02)*(x1213)))+(((sj1)*(x1210)))+(((cj2)*(x1215)))+(((IkReal(-1.00000000000000))*(sj1)*(x1216)))+(((cj1)*(sj2)*(x1214))));
evalcond[1]=((((x1213)*(x1214)))+(((sj1)*(sj2)*(x1212)))+(((IkReal(-1.00000000000000))*(x1212)*(x1213)))+(IKcos(j5))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1211)*(x1215)))+(((cj1)*(x1210))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1217=((pz)*(sj1));
IkReal x1218=((cj0)*(py));
IkReal x1219=((IkReal(1.00000000000000))*(sj2));
IkReal x1220=((cj1)*(cj2));
IkReal x1221=((px)*(sj0));
IkReal x1222=((cj2)*(sj1));
IkReal x1223=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(-0.190892000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.209759000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((pz)*(x1223)))+(((sj1)*(sj2)*(x1221)))+(((IkReal(-1.00000000000000))*(x1220)*(x1221)))+(((x1218)*(x1220)))+(((cj2)*(x1217)))+(((IkReal(-0.521670000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(sj1)*(x1218)*(x1219))));
evalcond[4]=((IkReal(0.141507000000000))+(((IkReal(-1.00000000000000))*(x1221)*(x1222)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(pz)*(x1220)))+(((sj2)*(x1217)))+(((x1218)*(x1223)))+(((x1218)*(x1222)))+(((IkReal(-1.00000000000000))*(cj1)*(x1219)*(x1221)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1224=((cj2)*(sj1));
IkReal x1225=((IkReal(1.00000000000000))*(r02));
IkReal x1226=((cj0)*(r01));
IkReal x1227=((sj1)*(sj2));
IkReal x1228=((cj1)*(cj2));
IkReal x1229=((cj1)*(sj2));
IkReal x1230=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((IkReal(-1.00000000000000))*(x1225)*(x1228)))+(((IkReal(-1.00000000000000))*(x1224)*(x1230)))+(((x1224)*(x1226)))+(((r02)*(x1227)))+(((x1226)*(x1229)))+(((IkReal(-1.00000000000000))*(x1229)*(x1230))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x1224)*(x1225)))+(((IkReal(-1.00000000000000))*(x1226)*(x1228)))+(((IkReal(-1.00000000000000))*(x1225)*(x1229)))+(((IkReal(-1.00000000000000))*(x1227)*(x1230)))+(((r00)*(sj0)*(x1228)))+(((x1226)*(x1227))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x1225)*(x1228)))+(((IkReal(-1.00000000000000))*(x1224)*(x1230)))+(((x1224)*(x1226)))+(((r02)*(x1227)))+(((x1226)*(x1229)))+(((IkReal(-1.00000000000000))*(x1229)*(x1230)))))+IKsqr(((((IkReal(-1.00000000000000))*(x1224)*(x1225)))+(((IkReal(-1.00000000000000))*(x1226)*(x1228)))+(((IkReal(-1.00000000000000))*(x1225)*(x1229)))+(((IkReal(-1.00000000000000))*(x1227)*(x1230)))+(((r00)*(sj0)*(x1228)))+(((x1226)*(x1227)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x1225)*(x1228)))+(((IkReal(-1.00000000000000))*(x1224)*(x1230)))+(((x1224)*(x1226)))+(((r02)*(x1227)))+(((x1226)*(x1229)))+(((IkReal(-1.00000000000000))*(x1229)*(x1230)))), ((((IkReal(-1.00000000000000))*(x1224)*(x1225)))+(((IkReal(-1.00000000000000))*(x1226)*(x1228)))+(((IkReal(-1.00000000000000))*(x1225)*(x1229)))+(((IkReal(-1.00000000000000))*(x1227)*(x1230)))+(((r00)*(sj0)*(x1228)))+(((x1226)*(x1227)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1231=((r02)*(sj2));
IkReal x1232=((IkReal(1.00000000000000))*(sj2));
IkReal x1233=((r00)*(sj0));
IkReal x1234=((cj1)*(cj2));
IkReal x1235=((cj0)*(r01));
IkReal x1236=((sj1)*(x1235));
IkReal x1237=((IkReal(1.00000000000000))*(cj2)*(x1233));
evalcond[0]=((((sj1)*(x1231)))+(((cj2)*(x1236)))+(((cj1)*(sj2)*(x1235)))+(((IkReal(-1.00000000000000))*(cj1)*(x1232)*(x1233)))+(((IkReal(-1.00000000000000))*(r02)*(x1234)))+(((IkReal(-1.00000000000000))*(sj1)*(x1237)))+(((IkReal(-1.00000000000000))*(IKsin(j5)))));
evalcond[1]=((((x1234)*(x1235)))+(((IkReal(-1.00000000000000))*(x1233)*(x1234)))+(((sj1)*(sj2)*(x1233)))+(IKcos(j5))+(((cj2)*(r02)*(sj1)))+(((cj1)*(x1231)))+(((IkReal(-1.00000000000000))*(x1232)*(x1236))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1238=((IkReal(1.00000000000000))*(sj2));
IkReal x1239=((r02)*(sj1));
IkReal x1240=((cj0)*(r01));
IkReal x1241=((cj1)*(r02));
IkReal x1242=((r00)*(sj0));
IkReal x1243=((IkReal(1.00000000000000))*(cj2));
if( IKabs(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((cj2)*(sj1)*(x1242)))+(((IkReal(-1.00000000000000))*(x1238)*(x1239)))+(((cj1)*(sj2)*(x1242)))+(((IkReal(-1.00000000000000))*(sj1)*(x1240)*(x1243)))+(((IkReal(-1.00000000000000))*(cj1)*(x1238)*(x1240)))+(((cj2)*(x1241))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x1239)*(x1243)))+(((sj1)*(sj2)*(x1240)))+(((IkReal(-1.00000000000000))*(sj1)*(x1238)*(x1242)))+(((IkReal(-1.00000000000000))*(x1238)*(x1241)))+(((IkReal(-1.00000000000000))*(cj1)*(x1240)*(x1243)))+(((cj1)*(cj2)*(x1242))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((cj2)*(sj1)*(x1242)))+(((IkReal(-1.00000000000000))*(x1238)*(x1239)))+(((cj1)*(sj2)*(x1242)))+(((IkReal(-1.00000000000000))*(sj1)*(x1240)*(x1243)))+(((IkReal(-1.00000000000000))*(cj1)*(x1238)*(x1240)))+(((cj2)*(x1241)))))))+IKsqr(((((IkReal(-1.00000000000000))*(x1239)*(x1243)))+(((sj1)*(sj2)*(x1240)))+(((IkReal(-1.00000000000000))*(sj1)*(x1238)*(x1242)))+(((IkReal(-1.00000000000000))*(x1238)*(x1241)))+(((IkReal(-1.00000000000000))*(cj1)*(x1240)*(x1243)))+(((cj1)*(cj2)*(x1242)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((cj2)*(sj1)*(x1242)))+(((IkReal(-1.00000000000000))*(x1238)*(x1239)))+(((cj1)*(sj2)*(x1242)))+(((IkReal(-1.00000000000000))*(sj1)*(x1240)*(x1243)))+(((IkReal(-1.00000000000000))*(cj1)*(x1238)*(x1240)))+(((cj2)*(x1241)))))), ((((IkReal(-1.00000000000000))*(x1239)*(x1243)))+(((sj1)*(sj2)*(x1240)))+(((IkReal(-1.00000000000000))*(sj1)*(x1238)*(x1242)))+(((IkReal(-1.00000000000000))*(x1238)*(x1241)))+(((IkReal(-1.00000000000000))*(cj1)*(x1240)*(x1243)))+(((cj1)*(cj2)*(x1242)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1244=IKsin(j5);
IkReal x1245=((r02)*(sj2));
IkReal x1246=((IkReal(1.00000000000000))*(sj2));
IkReal x1247=((r00)*(sj0));
IkReal x1248=((IkReal(1.00000000000000))*(cj2));
IkReal x1249=((cj0)*(r01)*(sj1));
IkReal x1250=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x1244)))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1248)))+(((IkReal(-1.00000000000000))*(sj1)*(x1247)*(x1248)))+(((IkReal(-1.00000000000000))*(cj1)*(x1246)*(x1247)))+(((sj1)*(x1245)))+(((cj2)*(x1249)))+(((sj4)*(x1244)))+(((sj2)*(x1250))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj1)*(x1247)*(x1248)))+(((cj1)*(x1245)))+(((sj1)*(sj2)*(x1247)))+(((cj2)*(x1250)))+(IKcos(j5))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1246)*(x1249))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1251=((cj0)*(r01));
IkReal x1252=((sj1)*(sj2));
IkReal x1253=((IkReal(1.00000000000000))*(cj1));
IkReal x1254=((r00)*(sj0));
if( IKabs(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x1252)*(x1254)))+(((cj1)*(cj2)*(x1254)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj2)*(x1251)*(x1253)))+(((x1251)*(x1252)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1253))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))))+IKsqr(((((IkReal(-1.00000000000000))*(x1252)*(x1254)))+(((cj1)*(cj2)*(x1254)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj2)*(x1251)*(x1253)))+(((x1251)*(x1252)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1253)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))), ((((IkReal(-1.00000000000000))*(x1252)*(x1254)))+(((cj1)*(cj2)*(x1254)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj2)*(x1251)*(x1253)))+(((x1251)*(x1252)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1253)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1255=IKsin(j5);
IkReal x1256=((r02)*(sj2));
IkReal x1257=((IkReal(1.00000000000000))*(sj2));
IkReal x1258=((r00)*(sj0));
IkReal x1259=((IkReal(1.00000000000000))*(cj2));
IkReal x1260=((cj0)*(r01)*(sj1));
IkReal x1261=((cj0)*(cj1)*(r01));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj4)*(x1255)))+(((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[1]=((((sj4)*(x1255)))+(((sj1)*(x1256)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1259)))+(((cj2)*(x1260)))+(((IkReal(-1.00000000000000))*(sj1)*(x1258)*(x1259)))+(((IkReal(-1.00000000000000))*(cj1)*(x1257)*(x1258)))+(((sj2)*(x1261))));
evalcond[2]=((((cj2)*(x1261)))+(((IkReal(-1.00000000000000))*(x1257)*(x1260)))+(IKcos(j5))+(((IkReal(-1.00000000000000))*(cj1)*(x1258)*(x1259)))+(((cj1)*(x1256)))+(((cj2)*(r02)*(sj1)))+(((sj1)*(sj2)*(x1258))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1262=((cj1)*(sj2));
IkReal x1263=((px)*(sj0));
IkReal x1264=((sj1)*(sj2));
IkReal x1265=((cj0)*(py));
IkReal x1266=((cj2)*(pz));
IkReal x1267=((IkReal(1.00000000000000))*(cj1));
IkReal x1268=((cj2)*(x1265));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(0.190892000000000))*(sj4)))+(((IkReal(0.000787000000000000))*(cj4)))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((IkReal(-0.312421000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((sj1)*(x1266)))+(((IkReal(-1.00000000000000))*(x1264)*(x1265)))+(((cj1)*(x1268)))+(((IkReal(-1.00000000000000))*(cj2)*(x1263)*(x1267)))+(((x1263)*(x1264)))+(((IkReal(-0.521670000000000))*(sj2)))+(((pz)*(x1262))));
evalcond[3]=((IkReal(-0.125720000000000))+(((sj1)*(x1268)))+(((IkReal(0.000787000000000000))*(sj4)))+(((IkReal(-1.00000000000000))*(x1266)*(x1267)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x1262)*(x1263)))+(((x1262)*(x1265)))+(((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x1263)))+(((IkReal(-0.190892000000000))*(cj4)))+(((pz)*(x1264)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x1269=((IkReal(1.00000000000000))*(sj0));
IkReal x1270=((cj1)*(sj2));
IkReal x1271=((sj1)*(sj2));
IkReal x1272=((cj2)*(sj1));
IkReal x1273=((cj0)*(r01));
IkReal x1274=((cj0)*(py));
IkReal x1275=((cj2)*(x1274));
IkReal x1276=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.000787000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r00)*(x1269)*(x1272)))+(((IkReal(-1.00000000000000))*(r00)*(x1269)*(x1270)))+(((x1272)*(x1273)))+(((r02)*(x1271)))+(((IkReal(-1.00000000000000))*(r02)*(x1276)))+(((x1270)*(x1273))));
evalcond[3]=((IkReal(-0.312421000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x1271)*(x1274)))+(((pz)*(x1272)))+(((pz)*(x1270)))+(((px)*(sj0)*(x1271)))+(((cj1)*(x1275)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(px)*(x1269)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(-0.316612000000000))+(((pz)*(x1271)))+(((x1272)*(x1274)))+(((IkReal(0.521670000000000))*(cj2)))+(((x1270)*(x1274)))+(((IkReal(-1.00000000000000))*(px)*(x1269)*(x1270)))+(((IkReal(-1.00000000000000))*(px)*(x1269)*(x1272)))+(((IkReal(0.00982000000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(pz)*(x1276))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1277=((sj1)*(sj2));
IkReal x1278=((cj0)*(r01));
IkReal x1279=((r00)*(sj0));
IkReal x1280=((cj1)*(cj2));
if( IKabs(((((r01)*(sj0)))+(((cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x1277)*(x1279)))+(((x1278)*(x1280)))+(((IkReal(-1.00000000000000))*(x1277)*(x1278)))+(((IkReal(-1.00000000000000))*(x1279)*(x1280)))+(((cj2)*(r02)*(sj1)))+(((cj1)*(r02)*(sj2))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r01)*(sj0)))+(((cj0)*(r00)))))+IKsqr(((((x1277)*(x1279)))+(((x1278)*(x1280)))+(((IkReal(-1.00000000000000))*(x1277)*(x1278)))+(((IkReal(-1.00000000000000))*(x1279)*(x1280)))+(((cj2)*(r02)*(sj1)))+(((cj1)*(r02)*(sj2)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((r01)*(sj0)))+(((cj0)*(r00)))), ((((x1277)*(x1279)))+(((x1278)*(x1280)))+(((IkReal(-1.00000000000000))*(x1277)*(x1278)))+(((IkReal(-1.00000000000000))*(x1279)*(x1280)))+(((cj2)*(r02)*(sj1)))+(((cj1)*(r02)*(sj2)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1281=((sj1)*(sj2));
IkReal x1282=((cj0)*(r01));
IkReal x1283=((r00)*(sj0));
IkReal x1284=((cj1)*(cj2));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1281)*(x1282)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1283)*(x1284)))+(((x1282)*(x1284)))+(((x1281)*(x1283)))+(((cj1)*(r02)*(sj2))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1285=((IkReal(1.00000000000000))*(sj0));
IkReal x1286=((cj1)*(sj2));
IkReal x1287=((sj1)*(sj2));
IkReal x1288=((cj2)*(sj1));
IkReal x1289=((cj0)*(r01));
IkReal x1290=((cj0)*(py));
IkReal x1291=((cj2)*(x1290));
IkReal x1292=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.000787000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((x1288)*(x1289)))+(((r02)*(x1287)))+(((x1286)*(x1289)))+(((IkReal(-1.00000000000000))*(r02)*(x1292)))+(((IkReal(-1.00000000000000))*(r00)*(x1285)*(x1286)))+(((IkReal(-1.00000000000000))*(r00)*(x1285)*(x1288))));
evalcond[3]=((IkReal(-0.312421000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x1287)*(x1290)))+(((px)*(sj0)*(x1287)))+(((cj1)*(x1291)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(px)*(x1285)))+(((IkReal(-0.521670000000000))*(sj2)))+(((pz)*(x1286)))+(((pz)*(x1288))));
evalcond[4]=((IkReal(0.0651720000000000))+(((x1286)*(x1290)))+(((IkReal(-1.00000000000000))*(px)*(x1285)*(x1288)))+(((IkReal(-1.00000000000000))*(px)*(x1285)*(x1286)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(pz)*(x1292)))+(((x1288)*(x1290)))+(((pz)*(x1287)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1293=((r00)*(sj0));
IkReal x1294=((cj1)*(cj2));
IkReal x1295=((sj1)*(sj2));
IkReal x1296=((cj0)*(r01));
if( IKabs(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x1294)*(x1296)))+(((x1293)*(x1295)))+(((IkReal(-1.00000000000000))*(x1293)*(x1294)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1295)*(x1296)))+(((cj1)*(r02)*(sj2))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))))+IKsqr(((((x1294)*(x1296)))+(((x1293)*(x1295)))+(((IkReal(-1.00000000000000))*(x1293)*(x1294)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1295)*(x1296)))+(((cj1)*(r02)*(sj2)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))), ((((x1294)*(x1296)))+(((x1293)*(x1295)))+(((IkReal(-1.00000000000000))*(x1293)*(x1294)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1295)*(x1296)))+(((cj1)*(r02)*(sj2)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1297=((sj1)*(sj2));
IkReal x1298=((cj0)*(r01));
IkReal x1299=((r00)*(sj0));
IkReal x1300=((cj1)*(cj2));
evalcond[0]=((((r01)*(sj0)))+(IKsin(j5))+(((cj0)*(r00))));
evalcond[1]=((((x1297)*(x1299)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((IkReal(-1.00000000000000))*(x1297)*(x1298)))+(((IkReal(-1.00000000000000))*(x1299)*(x1300)))+(((cj2)*(r02)*(sj1)))+(((x1298)*(x1300)))+(((cj1)*(r02)*(sj2))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1301=((pz)*(sj1));
IkReal x1302=((cj0)*(py));
IkReal x1303=((IkReal(1.00000000000000))*(sj2));
IkReal x1304=((cj1)*(cj2));
IkReal x1305=((px)*(sj0));
IkReal x1306=((cj2)*(sj1));
IkReal x1307=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(0.190892000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.312421000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((sj1)*(sj2)*(x1305)))+(((pz)*(x1307)))+(((IkReal(-1.00000000000000))*(x1304)*(x1305)))+(((x1302)*(x1304)))+(((IkReal(-1.00000000000000))*(sj1)*(x1302)*(x1303)))+(((cj2)*(x1301)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(-0.124933000000000))+(((sj2)*(x1301)))+(((IkReal(-1.00000000000000))*(x1305)*(x1306)))+(((IkReal(-1.00000000000000))*(pz)*(x1304)))+(((IkReal(-1.00000000000000))*(cj1)*(x1303)*(x1305)))+(((IkReal(0.521670000000000))*(cj2)))+(((x1302)*(x1307)))+(((x1302)*(x1306)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1308=((r02)*(sj2));
IkReal x1309=((IkReal(1.00000000000000))*(sj2));
IkReal x1310=((r00)*(sj0));
IkReal x1311=((cj1)*(cj2));
IkReal x1312=((cj0)*(r01));
IkReal x1313=((sj1)*(x1312));
IkReal x1314=((IkReal(1.00000000000000))*(cj2)*(x1310));
if( IKabs(((((cj1)*(sj2)*(x1312)))+(((IkReal(-1.00000000000000))*(sj1)*(x1314)))+(((cj2)*(x1313)))+(((sj1)*(x1308)))+(((IkReal(-1.00000000000000))*(cj1)*(x1309)*(x1310)))+(((IkReal(-1.00000000000000))*(r02)*(x1311))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((sj1)*(sj2)*(x1310)))+(((x1311)*(x1312)))+(((cj1)*(x1308)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1310)*(x1311)))+(((IkReal(-1.00000000000000))*(x1309)*(x1313))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj1)*(sj2)*(x1312)))+(((IkReal(-1.00000000000000))*(sj1)*(x1314)))+(((cj2)*(x1313)))+(((sj1)*(x1308)))+(((IkReal(-1.00000000000000))*(cj1)*(x1309)*(x1310)))+(((IkReal(-1.00000000000000))*(r02)*(x1311)))))+IKsqr(((((sj1)*(sj2)*(x1310)))+(((x1311)*(x1312)))+(((cj1)*(x1308)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1310)*(x1311)))+(((IkReal(-1.00000000000000))*(x1309)*(x1313)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((cj1)*(sj2)*(x1312)))+(((IkReal(-1.00000000000000))*(sj1)*(x1314)))+(((cj2)*(x1313)))+(((sj1)*(x1308)))+(((IkReal(-1.00000000000000))*(cj1)*(x1309)*(x1310)))+(((IkReal(-1.00000000000000))*(r02)*(x1311)))), ((((sj1)*(sj2)*(x1310)))+(((x1311)*(x1312)))+(((cj1)*(x1308)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1310)*(x1311)))+(((IkReal(-1.00000000000000))*(x1309)*(x1313)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1315=((r02)*(sj2));
IkReal x1316=((IkReal(1.00000000000000))*(sj2));
IkReal x1317=((r00)*(sj0));
IkReal x1318=((cj1)*(cj2));
IkReal x1319=((cj0)*(r01));
IkReal x1320=((sj1)*(x1319));
IkReal x1321=((IkReal(1.00000000000000))*(cj2)*(x1317));
evalcond[0]=((((cj1)*(sj2)*(x1319)))+(((IkReal(-1.00000000000000))*(sj1)*(x1321)))+(((cj2)*(x1320)))+(((IkReal(-1.00000000000000))*(cj1)*(x1316)*(x1317)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((sj1)*(x1315)))+(((IkReal(-1.00000000000000))*(r02)*(x1318))));
evalcond[1]=((((x1318)*(x1319)))+(((sj1)*(sj2)*(x1317)))+(((IkReal(-1.00000000000000))*(x1317)*(x1318)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((cj1)*(x1315)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1316)*(x1320))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1322=((pz)*(sj1));
IkReal x1323=((cj0)*(py));
IkReal x1324=((IkReal(1.00000000000000))*(sj2));
IkReal x1325=((cj1)*(cj2));
IkReal x1326=((px)*(sj0));
IkReal x1327=((cj2)*(sj1));
IkReal x1328=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(-0.190892000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.312421000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((pz)*(x1328)))+(((x1323)*(x1325)))+(((cj2)*(x1322)))+(((IkReal(-1.00000000000000))*(sj1)*(x1323)*(x1324)))+(((IkReal(-1.00000000000000))*(x1325)*(x1326)))+(((IkReal(-0.521670000000000))*(sj2)))+(((sj1)*(sj2)*(x1326))));
evalcond[4]=((IkReal(-0.126507000000000))+(((sj2)*(x1322)))+(((x1323)*(x1328)))+(((x1323)*(x1327)))+(((IkReal(-1.00000000000000))*(pz)*(x1325)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(0.00982000000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(cj1)*(x1324)*(x1326)))+(((IkReal(-1.00000000000000))*(x1326)*(x1327))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1329=((IkReal(1.00000000000000))*(sj2));
IkReal x1330=((r02)*(sj1));
IkReal x1331=((cj0)*(r01));
IkReal x1332=((IkReal(1.00000000000000))*(cj2));
IkReal x1333=((cj1)*(r02));
IkReal x1334=((cj1)*(r00)*(sj0));
IkReal x1335=((r00)*(sj0)*(sj1));
if( IKabs(((((IkReal(-1.00000000000000))*(sj1)*(x1331)*(x1332)))+(((IkReal(-1.00000000000000))*(cj1)*(x1329)*(x1331)))+(((sj2)*(x1334)))+(((IkReal(-1.00000000000000))*(x1329)*(x1330)))+(((cj2)*(x1335)))+(((cj2)*(x1333))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj1)*(cj2)*(x1331)))+(((IkReal(-1.00000000000000))*(sj1)*(x1329)*(x1331)))+(((sj2)*(x1335)))+(((sj2)*(x1333)))+(((cj2)*(x1330)))+(((IkReal(-1.00000000000000))*(x1332)*(x1334))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(sj1)*(x1331)*(x1332)))+(((IkReal(-1.00000000000000))*(cj1)*(x1329)*(x1331)))+(((sj2)*(x1334)))+(((IkReal(-1.00000000000000))*(x1329)*(x1330)))+(((cj2)*(x1335)))+(((cj2)*(x1333)))))+IKsqr(((((cj1)*(cj2)*(x1331)))+(((IkReal(-1.00000000000000))*(sj1)*(x1329)*(x1331)))+(((sj2)*(x1335)))+(((sj2)*(x1333)))+(((cj2)*(x1330)))+(((IkReal(-1.00000000000000))*(x1332)*(x1334)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(sj1)*(x1331)*(x1332)))+(((IkReal(-1.00000000000000))*(cj1)*(x1329)*(x1331)))+(((sj2)*(x1334)))+(((IkReal(-1.00000000000000))*(x1329)*(x1330)))+(((cj2)*(x1335)))+(((cj2)*(x1333)))), ((((cj1)*(cj2)*(x1331)))+(((IkReal(-1.00000000000000))*(sj1)*(x1329)*(x1331)))+(((sj2)*(x1335)))+(((sj2)*(x1333)))+(((cj2)*(x1330)))+(((IkReal(-1.00000000000000))*(x1332)*(x1334)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1336=((r02)*(sj2));
IkReal x1337=((IkReal(1.00000000000000))*(sj2));
IkReal x1338=((r00)*(sj0));
IkReal x1339=((cj1)*(cj2));
IkReal x1340=((cj0)*(r01));
IkReal x1341=((sj1)*(x1340));
IkReal x1342=((IkReal(1.00000000000000))*(cj2)*(x1338));
evalcond[0]=((((IkReal(-1.00000000000000))*(sj1)*(x1342)))+(IKsin(j5))+(((IkReal(-1.00000000000000))*(cj1)*(x1337)*(x1338)))+(((sj1)*(x1336)))+(((cj2)*(x1341)))+(((cj1)*(sj2)*(x1340)))+(((IkReal(-1.00000000000000))*(r02)*(x1339))));
evalcond[1]=((((x1339)*(x1340)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((cj1)*(x1336)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1338)*(x1339)))+(((IkReal(-1.00000000000000))*(x1337)*(x1341)))+(((sj1)*(sj2)*(x1338))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1343=((r02)*(sj2));
IkReal x1344=((IkReal(1.00000000000000))*(sj2));
IkReal x1345=((r00)*(sj0));
IkReal x1346=((cj1)*(cj2));
IkReal x1347=((cj0)*(r01));
IkReal x1348=((sj1)*(x1347));
IkReal x1349=((IkReal(1.00000000000000))*(cj2)*(x1345));
if( IKabs(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((sj1)*(x1343)))+(((IkReal(-1.00000000000000))*(cj1)*(x1344)*(x1345)))+(((IkReal(-1.00000000000000))*(sj1)*(x1349)))+(((IkReal(-1.00000000000000))*(r02)*(x1346)))+(((cj2)*(x1348)))+(((cj1)*(sj2)*(x1347))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj1)*(x1343)))+(((x1346)*(x1347)))+(((sj1)*(sj2)*(x1345)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1345)*(x1346)))+(((IkReal(-1.00000000000000))*(x1344)*(x1348))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((sj1)*(x1343)))+(((IkReal(-1.00000000000000))*(cj1)*(x1344)*(x1345)))+(((IkReal(-1.00000000000000))*(sj1)*(x1349)))+(((IkReal(-1.00000000000000))*(r02)*(x1346)))+(((cj2)*(x1348)))+(((cj1)*(sj2)*(x1347)))))))+IKsqr(((((cj1)*(x1343)))+(((x1346)*(x1347)))+(((sj1)*(sj2)*(x1345)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1345)*(x1346)))+(((IkReal(-1.00000000000000))*(x1344)*(x1348)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((sj1)*(x1343)))+(((IkReal(-1.00000000000000))*(cj1)*(x1344)*(x1345)))+(((IkReal(-1.00000000000000))*(sj1)*(x1349)))+(((IkReal(-1.00000000000000))*(r02)*(x1346)))+(((cj2)*(x1348)))+(((cj1)*(sj2)*(x1347)))))), ((((cj1)*(x1343)))+(((x1346)*(x1347)))+(((sj1)*(sj2)*(x1345)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1345)*(x1346)))+(((IkReal(-1.00000000000000))*(x1344)*(x1348)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1350=IKsin(j5);
IkReal x1351=((r02)*(sj2));
IkReal x1352=((IkReal(1.00000000000000))*(sj2));
IkReal x1353=((r00)*(sj0));
IkReal x1354=((IkReal(1.00000000000000))*(cj2));
IkReal x1355=((IkReal(1.00000000000000))*(x1350));
IkReal x1356=((cj0)*(r01)*(sj1));
IkReal x1357=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x1355)))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj1)*(x1352)*(x1353)))+(((sj1)*(x1351)))+(((IkReal(-1.00000000000000))*(sj4)*(x1355)))+(((IkReal(-1.00000000000000))*(sj1)*(x1353)*(x1354)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1354)))+(((sj2)*(x1357)))+(((cj2)*(x1356))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1352)*(x1356)))+(((cj1)*(x1351)))+(((sj1)*(sj2)*(x1353)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((cj2)*(r02)*(sj1)))+(((cj2)*(x1357)))+(((IkReal(-1.00000000000000))*(cj1)*(x1353)*(x1354))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1358=((sj1)*(sj2));
IkReal x1359=((cj0)*(r01));
IkReal x1360=((r00)*(sj0));
IkReal x1361=((cj1)*(cj2));
if( IKabs(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x1358)*(x1360)))+(((x1359)*(x1361)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1358)*(x1359)))+(((IkReal(-1.00000000000000))*(x1360)*(x1361)))+(((cj1)*(r02)*(sj2))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))))+IKsqr(((((x1358)*(x1360)))+(((x1359)*(x1361)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1358)*(x1359)))+(((IkReal(-1.00000000000000))*(x1360)*(x1361)))+(((cj1)*(r02)*(sj2)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))), ((((x1358)*(x1360)))+(((x1359)*(x1361)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1358)*(x1359)))+(((IkReal(-1.00000000000000))*(x1360)*(x1361)))+(((cj1)*(r02)*(sj2)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1362=IKsin(j5);
IkReal x1363=((r02)*(sj2));
IkReal x1364=((IkReal(1.00000000000000))*(sj2));
IkReal x1365=((r00)*(sj0));
IkReal x1366=((IkReal(1.00000000000000))*(cj2));
IkReal x1367=((IkReal(1.00000000000000))*(x1362));
IkReal x1368=((cj0)*(r01)*(sj1));
IkReal x1369=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x1367)))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj4)*(x1367)))+(((sj1)*(x1363)))+(((IkReal(-1.00000000000000))*(cj1)*(x1364)*(x1365)))+(((IkReal(-1.00000000000000))*(sj1)*(x1365)*(x1366)))+(((sj2)*(x1369)))+(((cj2)*(x1368)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1366))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1364)*(x1368)))+(((sj1)*(sj2)*(x1365)))+(((cj1)*(x1363)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((cj2)*(r02)*(sj1)))+(((cj2)*(x1369)))+(((IkReal(-1.00000000000000))*(cj1)*(x1365)*(x1366))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1370=((cj1)*(sj2));
IkReal x1371=((px)*(sj0));
IkReal x1372=((sj1)*(sj2));
IkReal x1373=((cj0)*(py));
IkReal x1374=((cj2)*(pz));
IkReal x1375=((IkReal(1.00000000000000))*(cj1));
IkReal x1376=((cj2)*(x1373));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(0.190892000000000))*(sj4)))+(((IkReal(0.000787000000000000))*(cj4)))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((IkReal(-0.394310000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x1372)*(x1373)))+(((pz)*(x1370)))+(((IkReal(0.000787000000000000))*(sj4)))+(((cj1)*(x1376)))+(((x1371)*(x1372)))+(((IkReal(-0.190892000000000))*(cj4)))+(((sj1)*(x1374)))+(((IkReal(-1.00000000000000))*(cj2)*(x1371)*(x1375)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[3]=((IkReal(0.0588310000000000))+(((pz)*(x1372)))+(((IkReal(-1.00000000000000))*(x1370)*(x1371)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x1374)*(x1375)))+(((x1370)*(x1373)))+(((sj1)*(x1376)))+(((IkReal(0.00982000000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x1371))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x1377=((IkReal(1.00000000000000))*(sj2));
IkReal x1378=((px)*(sj0));
IkReal x1379=((pz)*(sj2));
IkReal x1380=((cj0)*(sj1));
IkReal x1381=((cj1)*(sj2));
IkReal x1382=((sj1)*(sj2));
IkReal x1383=((cj2)*(sj1));
IkReal x1384=((r00)*(sj0));
IkReal x1385=((cj0)*(cj1)*(cj2));
IkReal x1386=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.000787000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r01)*(x1377)*(x1380)))+(((IkReal(-1.00000000000000))*(x1384)*(x1386)))+(((r01)*(x1385)))+(((x1382)*(x1384)))+(((r02)*(x1381)))+(((r02)*(x1383))));
evalcond[3]=((IkReal(-0.585202000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(py)*(x1377)*(x1380)))+(((cj1)*(x1379)))+(((pz)*(x1383)))+(((py)*(x1385)))+(((IkReal(-1.00000000000000))*(x1378)*(x1386)))+(((IkReal(-0.521670000000000))*(sj2)))+(((x1378)*(x1382))));
evalcond[4]=((IkReal(0.0588310000000000))+(((IkReal(-1.00000000000000))*(x1378)*(x1383)))+(((IkReal(-1.00000000000000))*(cj1)*(x1377)*(x1378)))+(((IkReal(0.521670000000000))*(cj2)))+(((cj0)*(py)*(x1381)))+(((sj1)*(x1379)))+(((cj2)*(py)*(x1380)))+(((IkReal(-1.00000000000000))*(pz)*(x1386)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1387=((IkReal(1.00000000000000))*(sj2));
IkReal x1388=((cj0)*(r01));
IkReal x1389=((r00)*(sj0));
IkReal x1390=((cj2)*(sj1));
if( IKabs(((((r01)*(sj0)))+(((cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x1388)*(x1390)))+(((IkReal(-1.00000000000000))*(cj1)*(x1387)*(x1388)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1387)))+(((cj1)*(sj2)*(x1389)))+(((x1389)*(x1390)))+(((cj1)*(cj2)*(r02))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r01)*(sj0)))+(((cj0)*(r00)))))+IKsqr(((((IkReal(-1.00000000000000))*(x1388)*(x1390)))+(((IkReal(-1.00000000000000))*(cj1)*(x1387)*(x1388)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1387)))+(((cj1)*(sj2)*(x1389)))+(((x1389)*(x1390)))+(((cj1)*(cj2)*(r02)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((r01)*(sj0)))+(((cj0)*(r00)))), ((((IkReal(-1.00000000000000))*(x1388)*(x1390)))+(((IkReal(-1.00000000000000))*(cj1)*(x1387)*(x1388)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1387)))+(((cj1)*(sj2)*(x1389)))+(((x1389)*(x1390)))+(((cj1)*(cj2)*(r02)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1391=((cj2)*(sj1));
IkReal x1392=((cj0)*(r01));
IkReal x1393=((cj1)*(sj2));
IkReal x1394=((IkReal(1.00000000000000))*(r00)*(sj0));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1391)*(x1394)))+(((IkReal(-1.00000000000000))*(x1393)*(x1394)))+(IKcos(j5))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((x1391)*(x1392)))+(((r02)*(sj1)*(sj2)))+(((x1392)*(x1393))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1395=((IkReal(1.00000000000000))*(sj2));
IkReal x1396=((px)*(sj0));
IkReal x1397=((pz)*(sj2));
IkReal x1398=((cj0)*(sj1));
IkReal x1399=((cj1)*(sj2));
IkReal x1400=((sj1)*(sj2));
IkReal x1401=((cj2)*(sj1));
IkReal x1402=((r00)*(sj0));
IkReal x1403=((cj0)*(cj1)*(cj2));
IkReal x1404=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.000787000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((r02)*(x1401)))+(((IkReal(-1.00000000000000))*(r01)*(x1395)*(x1398)))+(((r01)*(x1403)))+(((IkReal(-1.00000000000000))*(x1402)*(x1404)))+(((r02)*(x1399)))+(((x1400)*(x1402))));
evalcond[3]=((IkReal(-0.203418000000000))+(((IkReal(-1.00000000000000))*(py)*(x1395)*(x1398)))+(((IkReal(0.00982000000000000))*(cj2)))+(((x1396)*(x1400)))+(((pz)*(x1401)))+(((py)*(x1403)))+(((IkReal(-1.00000000000000))*(x1396)*(x1404)))+(((IkReal(-0.521670000000000))*(sj2)))+(((cj1)*(x1397))));
evalcond[4]=((IkReal(0.0588310000000000))+(((IkReal(-1.00000000000000))*(x1396)*(x1401)))+(((IkReal(0.521670000000000))*(cj2)))+(((sj1)*(x1397)))+(((IkReal(-1.00000000000000))*(cj1)*(x1395)*(x1396)))+(((cj0)*(py)*(x1399)))+(((IkReal(-1.00000000000000))*(pz)*(x1404)))+(((cj2)*(py)*(x1398)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1405=((IkReal(1.00000000000000))*(sj2));
IkReal x1406=((cj0)*(r01));
IkReal x1407=((r00)*(sj0));
IkReal x1408=((cj2)*(sj1));
if( IKabs(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(cj1)*(x1405)*(x1406)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1405)))+(((cj1)*(sj2)*(x1407)))+(((cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(x1406)*(x1408)))+(((x1407)*(x1408))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))))+IKsqr(((((IkReal(-1.00000000000000))*(cj1)*(x1405)*(x1406)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1405)))+(((cj1)*(sj2)*(x1407)))+(((cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(x1406)*(x1408)))+(((x1407)*(x1408)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))), ((((IkReal(-1.00000000000000))*(cj1)*(x1405)*(x1406)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1405)))+(((cj1)*(sj2)*(x1407)))+(((cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(x1406)*(x1408)))+(((x1407)*(x1408)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1409=((cj2)*(sj1));
IkReal x1410=((cj0)*(r01));
IkReal x1411=((cj1)*(sj2));
IkReal x1412=((IkReal(1.00000000000000))*(r00)*(sj0));
evalcond[0]=((((r01)*(sj0)))+(IKsin(j5))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1411)*(x1412)))+(IKcos(j5))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((x1410)*(x1411)))+(((IkReal(-1.00000000000000))*(x1409)*(x1412)))+(((x1409)*(x1410)))+(((r02)*(sj1)*(sj2))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1413=((pz)*(sj1));
IkReal x1414=((cj0)*(py));
IkReal x1415=((IkReal(1.00000000000000))*(sj2));
IkReal x1416=((cj1)*(cj2));
IkReal x1417=((px)*(sj0));
IkReal x1418=((cj2)*(sj1));
IkReal x1419=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(0.190892000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.393523000000000))+(((cj2)*(x1413)))+(((pz)*(x1419)))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x1416)*(x1417)))+(((IkReal(-1.00000000000000))*(sj1)*(x1414)*(x1415)))+(((sj1)*(sj2)*(x1417)))+(((IkReal(-0.521670000000000))*(sj2)))+(((x1414)*(x1416))));
evalcond[4]=((IkReal(0.0588310000000000))+(((sj2)*(x1413)))+(((IkReal(-1.00000000000000))*(pz)*(x1416)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(0.00982000000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(cj1)*(x1415)*(x1417)))+(((x1414)*(x1419)))+(((x1414)*(x1418)))+(((IkReal(-1.00000000000000))*(x1417)*(x1418))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1420=((IkReal(1.00000000000000))*(sj2));
IkReal x1421=((r02)*(sj1));
IkReal x1422=((cj0)*(r01));
IkReal x1423=((IkReal(1.00000000000000))*(cj2));
IkReal x1424=((cj1)*(r02));
IkReal x1425=((cj1)*(r00)*(sj0));
IkReal x1426=((r00)*(sj0)*(sj1));
if( IKabs(((((cj1)*(cj2)*(x1422)))+(((IkReal(-1.00000000000000))*(sj1)*(x1420)*(x1422)))+(((IkReal(-1.00000000000000))*(x1423)*(x1425)))+(((cj2)*(x1421)))+(((sj2)*(x1424)))+(((sj2)*(x1426))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(cj1)*(x1420)*(x1422)))+(((cj2)*(x1424)))+(((cj2)*(x1426)))+(((IkReal(-1.00000000000000))*(x1420)*(x1421)))+(((IkReal(-1.00000000000000))*(sj1)*(x1422)*(x1423)))+(((sj2)*(x1425))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj1)*(cj2)*(x1422)))+(((IkReal(-1.00000000000000))*(sj1)*(x1420)*(x1422)))+(((IkReal(-1.00000000000000))*(x1423)*(x1425)))+(((cj2)*(x1421)))+(((sj2)*(x1424)))+(((sj2)*(x1426)))))+IKsqr(((((IkReal(-1.00000000000000))*(cj1)*(x1420)*(x1422)))+(((cj2)*(x1424)))+(((cj2)*(x1426)))+(((IkReal(-1.00000000000000))*(x1420)*(x1421)))+(((IkReal(-1.00000000000000))*(sj1)*(x1422)*(x1423)))+(((sj2)*(x1425)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((cj1)*(cj2)*(x1422)))+(((IkReal(-1.00000000000000))*(sj1)*(x1420)*(x1422)))+(((IkReal(-1.00000000000000))*(x1423)*(x1425)))+(((cj2)*(x1421)))+(((sj2)*(x1424)))+(((sj2)*(x1426)))), ((((IkReal(-1.00000000000000))*(cj1)*(x1420)*(x1422)))+(((cj2)*(x1424)))+(((cj2)*(x1426)))+(((IkReal(-1.00000000000000))*(x1420)*(x1421)))+(((IkReal(-1.00000000000000))*(sj1)*(x1422)*(x1423)))+(((sj2)*(x1425)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1427=((r02)*(sj2));
IkReal x1428=((IkReal(1.00000000000000))*(sj2));
IkReal x1429=((r00)*(sj0));
IkReal x1430=((cj1)*(cj2));
IkReal x1431=((cj0)*(r01));
IkReal x1432=((sj1)*(x1431));
IkReal x1433=((IkReal(1.00000000000000))*(cj2)*(x1429));
evalcond[0]=((((sj1)*(x1427)))+(((IkReal(-1.00000000000000))*(r02)*(x1430)))+(IKcos(j5))+(((cj1)*(sj2)*(x1431)))+(((cj2)*(x1432)))+(((IkReal(-1.00000000000000))*(cj1)*(x1428)*(x1429)))+(((IkReal(-1.00000000000000))*(sj1)*(x1433))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1429)*(x1430)))+(((x1430)*(x1431)))+(((sj1)*(sj2)*(x1429)))+(((IkReal(-1.00000000000000))*(x1428)*(x1432)))+(((cj1)*(x1427)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(IKsin(j5)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1434=((pz)*(sj1));
IkReal x1435=((cj0)*(py));
IkReal x1436=((IkReal(1.00000000000000))*(sj2));
IkReal x1437=((cj1)*(cj2));
IkReal x1438=((px)*(sj0));
IkReal x1439=((cj2)*(sj1));
IkReal x1440=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(-0.190892000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.395097000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((x1435)*(x1437)))+(((IkReal(-1.00000000000000))*(x1437)*(x1438)))+(((sj1)*(sj2)*(x1438)))+(((pz)*(x1440)))+(((cj2)*(x1434)))+(((IkReal(-1.00000000000000))*(sj1)*(x1435)*(x1436)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(0.0588310000000000))+(((x1435)*(x1440)))+(((IkReal(-1.00000000000000))*(pz)*(x1437)))+(((x1435)*(x1439)))+(((sj2)*(x1434)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x1438)*(x1439)))+(((IkReal(-1.00000000000000))*(cj1)*(x1436)*(x1438)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1441=((IkReal(1.00000000000000))*(sj2));
IkReal x1442=((r02)*(sj1));
IkReal x1443=((cj0)*(r01));
IkReal x1444=((r00)*(sj0));
IkReal x1445=((cj1)*(r02));
IkReal x1446=((IkReal(1.00000000000000))*(cj2));
if( IKabs(((((cj1)*(cj2)*(x1444)))+(((IkReal(-1.00000000000000))*(sj1)*(x1441)*(x1444)))+(((IkReal(-1.00000000000000))*(x1441)*(x1445)))+(((sj1)*(sj2)*(x1443)))+(((IkReal(-1.00000000000000))*(cj1)*(x1443)*(x1446)))+(((IkReal(-1.00000000000000))*(x1442)*(x1446))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(cj1)*(x1441)*(x1443)))+(((IkReal(-1.00000000000000))*(x1441)*(x1442)))+(((cj2)*(x1445)))+(((cj2)*(sj1)*(x1444)))+(((IkReal(-1.00000000000000))*(sj1)*(x1443)*(x1446)))+(((cj1)*(sj2)*(x1444))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj1)*(cj2)*(x1444)))+(((IkReal(-1.00000000000000))*(sj1)*(x1441)*(x1444)))+(((IkReal(-1.00000000000000))*(x1441)*(x1445)))+(((sj1)*(sj2)*(x1443)))+(((IkReal(-1.00000000000000))*(cj1)*(x1443)*(x1446)))+(((IkReal(-1.00000000000000))*(x1442)*(x1446)))))+IKsqr(((((IkReal(-1.00000000000000))*(cj1)*(x1441)*(x1443)))+(((IkReal(-1.00000000000000))*(x1441)*(x1442)))+(((cj2)*(x1445)))+(((cj2)*(sj1)*(x1444)))+(((IkReal(-1.00000000000000))*(sj1)*(x1443)*(x1446)))+(((cj1)*(sj2)*(x1444)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((cj1)*(cj2)*(x1444)))+(((IkReal(-1.00000000000000))*(sj1)*(x1441)*(x1444)))+(((IkReal(-1.00000000000000))*(x1441)*(x1445)))+(((sj1)*(sj2)*(x1443)))+(((IkReal(-1.00000000000000))*(cj1)*(x1443)*(x1446)))+(((IkReal(-1.00000000000000))*(x1442)*(x1446)))), ((((IkReal(-1.00000000000000))*(cj1)*(x1441)*(x1443)))+(((IkReal(-1.00000000000000))*(x1441)*(x1442)))+(((cj2)*(x1445)))+(((cj2)*(sj1)*(x1444)))+(((IkReal(-1.00000000000000))*(sj1)*(x1443)*(x1446)))+(((cj1)*(sj2)*(x1444)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1447=((r02)*(sj2));
IkReal x1448=((IkReal(1.00000000000000))*(sj2));
IkReal x1449=((r00)*(sj0));
IkReal x1450=((cj1)*(cj2));
IkReal x1451=((cj0)*(r01));
IkReal x1452=((sj1)*(x1451));
IkReal x1453=((IkReal(1.00000000000000))*(cj2)*(x1449));
evalcond[0]=((((sj1)*(x1447)))+(IKcos(j5))+(((IkReal(-1.00000000000000))*(cj1)*(x1448)*(x1449)))+(((cj2)*(x1452)))+(((cj1)*(sj2)*(x1451)))+(((IkReal(-1.00000000000000))*(sj1)*(x1453)))+(((IkReal(-1.00000000000000))*(r02)*(x1450))));
evalcond[1]=((((cj1)*(x1447)))+(((IkReal(-1.00000000000000))*(x1448)*(x1452)))+(((x1450)*(x1451)))+(((sj1)*(sj2)*(x1449)))+(IKsin(j5))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1449)*(x1450))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1454=((IkReal(1.00000000000000))*(sj2));
IkReal x1455=((r02)*(sj1));
IkReal x1456=((cj0)*(r01));
IkReal x1457=((IkReal(1.00000000000000))*(cj2));
IkReal x1458=((cj1)*(r02));
IkReal x1459=((cj1)*(r00)*(sj0));
IkReal x1460=((r00)*(sj0)*(sj1));
if( IKabs(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x1457)*(x1459)))+(((sj2)*(x1460)))+(((sj2)*(x1458)))+(((cj2)*(x1455)))+(((cj1)*(cj2)*(x1456)))+(((IkReal(-1.00000000000000))*(sj1)*(x1454)*(x1456))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(sj1)*(x1456)*(x1457)))+(((cj2)*(x1460)))+(((sj2)*(x1459)))+(((IkReal(-1.00000000000000))*(x1454)*(x1455)))+(((IkReal(-1.00000000000000))*(cj1)*(x1454)*(x1456)))+(((cj2)*(x1458))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x1457)*(x1459)))+(((sj2)*(x1460)))+(((sj2)*(x1458)))+(((cj2)*(x1455)))+(((cj1)*(cj2)*(x1456)))+(((IkReal(-1.00000000000000))*(sj1)*(x1454)*(x1456)))))))+IKsqr(((((IkReal(-1.00000000000000))*(sj1)*(x1456)*(x1457)))+(((cj2)*(x1460)))+(((sj2)*(x1459)))+(((IkReal(-1.00000000000000))*(x1454)*(x1455)))+(((IkReal(-1.00000000000000))*(cj1)*(x1454)*(x1456)))+(((cj2)*(x1458)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x1457)*(x1459)))+(((sj2)*(x1460)))+(((sj2)*(x1458)))+(((cj2)*(x1455)))+(((cj1)*(cj2)*(x1456)))+(((IkReal(-1.00000000000000))*(sj1)*(x1454)*(x1456)))))), ((((IkReal(-1.00000000000000))*(sj1)*(x1456)*(x1457)))+(((cj2)*(x1460)))+(((sj2)*(x1459)))+(((IkReal(-1.00000000000000))*(x1454)*(x1455)))+(((IkReal(-1.00000000000000))*(cj1)*(x1454)*(x1456)))+(((cj2)*(x1458)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1461=IKsin(j5);
IkReal x1462=((r02)*(sj2));
IkReal x1463=((IkReal(1.00000000000000))*(sj2));
IkReal x1464=((r00)*(sj0));
IkReal x1465=((IkReal(1.00000000000000))*(cj2));
IkReal x1466=((IkReal(1.00000000000000))*(x1461));
IkReal x1467=((cj0)*(r01)*(sj1));
IkReal x1468=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x1466)))+(((cj0)*(r00))));
evalcond[1]=((((cj2)*(x1467)))+(((sj2)*(x1468)))+(((IkReal(-1.00000000000000))*(cj1)*(x1463)*(x1464)))+(IKcos(j5))+(((IkReal(-1.00000000000000))*(sj1)*(x1464)*(x1465)))+(((sj1)*(x1462)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1465))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj4)*(x1466)))+(((cj2)*(x1468)))+(((IkReal(-1.00000000000000))*(x1463)*(x1467)))+(((cj1)*(x1462)))+(((cj2)*(r02)*(sj1)))+(((sj1)*(sj2)*(x1464)))+(((IkReal(-1.00000000000000))*(cj1)*(x1464)*(x1465))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1469=((IkReal(1.00000000000000))*(sj2));
IkReal x1470=((cj0)*(r01));
IkReal x1471=((r00)*(sj0));
IkReal x1472=((cj2)*(sj1));
if( IKabs(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x1471)*(x1472)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1469)))+(((IkReal(-1.00000000000000))*(cj1)*(x1469)*(x1470)))+(((IkReal(-1.00000000000000))*(x1470)*(x1472)))+(((cj1)*(sj2)*(x1471)))+(((cj1)*(cj2)*(r02))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))))+IKsqr(((((x1471)*(x1472)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1469)))+(((IkReal(-1.00000000000000))*(cj1)*(x1469)*(x1470)))+(((IkReal(-1.00000000000000))*(x1470)*(x1472)))+(((cj1)*(sj2)*(x1471)))+(((cj1)*(cj2)*(r02)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))), ((((x1471)*(x1472)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1469)))+(((IkReal(-1.00000000000000))*(cj1)*(x1469)*(x1470)))+(((IkReal(-1.00000000000000))*(x1470)*(x1472)))+(((cj1)*(sj2)*(x1471)))+(((cj1)*(cj2)*(r02)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1473=IKsin(j5);
IkReal x1474=((r02)*(sj2));
IkReal x1475=((IkReal(1.00000000000000))*(sj2));
IkReal x1476=((r00)*(sj0));
IkReal x1477=((IkReal(1.00000000000000))*(cj2));
IkReal x1478=((IkReal(1.00000000000000))*(x1473));
IkReal x1479=((cj0)*(r01)*(sj1));
IkReal x1480=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x1478)))+(((cj0)*(r00))));
evalcond[1]=((((sj2)*(x1480)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1477)))+(((sj1)*(x1474)))+(((IkReal(-1.00000000000000))*(cj1)*(x1475)*(x1476)))+(((IkReal(-1.00000000000000))*(sj1)*(x1476)*(x1477)))+(IKcos(j5))+(((cj2)*(x1479))));
evalcond[2]=((((cj2)*(x1480)))+(((cj1)*(x1474)))+(((sj1)*(sj2)*(x1476)))+(((IkReal(-1.00000000000000))*(cj1)*(x1476)*(x1477)))+(((IkReal(-1.00000000000000))*(x1475)*(x1479)))+(((IkReal(-1.00000000000000))*(sj4)*(x1478)))+(((cj2)*(r02)*(sj1))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1481=((cj1)*(sj2));
IkReal x1482=((px)*(sj0));
IkReal x1483=((sj1)*(sj2));
IkReal x1484=((cj0)*(py));
IkReal x1485=((cj2)*(pz));
IkReal x1486=((IkReal(1.00000000000000))*(cj1));
IkReal x1487=((cj2)*(x1484));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(0.190892000000000))*(sj4)))+(((IkReal(0.000787000000000000))*(cj4)))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((IkReal(-0.127870000000000))+(((IkReal(0.190892000000000))*(cj4)))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x1483)*(x1484)))+(((x1482)*(x1483)))+(((pz)*(x1481)))+(((sj1)*(x1485)))+(((cj1)*(x1487)))+(((IkReal(-1.00000000000000))*(cj2)*(x1482)*(x1486)))+(((IkReal(-0.521670000000000))*(sj2)))+(((IkReal(-0.000787000000000000))*(sj4))));
evalcond[3]=((IkReal(-0.0438310000000000))+(((pz)*(x1483)))+(((sj1)*(x1487)))+(((IkReal(-1.00000000000000))*(x1485)*(x1486)))+(((x1481)*(x1484)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x1481)*(x1482)))+(((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x1482)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x1488=((IkReal(1.00000000000000))*(sj2));
IkReal x1489=((px)*(sj0));
IkReal x1490=((pz)*(sj2));
IkReal x1491=((cj0)*(sj1));
IkReal x1492=((cj1)*(sj2));
IkReal x1493=((sj1)*(sj2));
IkReal x1494=((cj2)*(sj1));
IkReal x1495=((r00)*(sj0));
IkReal x1496=((cj0)*(cj1)*(cj2));
IkReal x1497=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.000787000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((r01)*(x1496)))+(((IkReal(-1.00000000000000))*(x1495)*(x1497)))+(((IkReal(-1.00000000000000))*(r01)*(x1488)*(x1491)))+(((x1493)*(x1495)))+(((r02)*(x1492)))+(((r02)*(x1494))));
evalcond[3]=((IkReal(0.0630220000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((pz)*(x1494)))+(((x1489)*(x1493)))+(((cj1)*(x1490)))+(((IkReal(-1.00000000000000))*(py)*(x1488)*(x1491)))+(((py)*(x1496)))+(((IkReal(-0.521670000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(x1489)*(x1497))));
evalcond[4]=((IkReal(-0.0438310000000000))+(((sj1)*(x1490)))+(((cj2)*(py)*(x1491)))+(((IkReal(-1.00000000000000))*(x1489)*(x1494)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(cj1)*(x1488)*(x1489)))+(((cj0)*(py)*(x1492)))+(((IkReal(-1.00000000000000))*(pz)*(x1497)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1498=((cj2)*(sj1));
IkReal x1499=((cj0)*(r01));
IkReal x1500=((cj1)*(sj2));
IkReal x1501=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((r01)*(sj0)))+(((cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x1498)*(x1499)))+(((x1499)*(x1500)))+(((IkReal(-1.00000000000000))*(x1498)*(x1501)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(x1500)*(x1501)))+(((r02)*(sj1)*(sj2))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r01)*(sj0)))+(((cj0)*(r00)))))+IKsqr(((((x1498)*(x1499)))+(((x1499)*(x1500)))+(((IkReal(-1.00000000000000))*(x1498)*(x1501)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(x1500)*(x1501)))+(((r02)*(sj1)*(sj2)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((r01)*(sj0)))+(((cj0)*(r00)))), ((((x1498)*(x1499)))+(((x1499)*(x1500)))+(((IkReal(-1.00000000000000))*(x1498)*(x1501)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(x1500)*(x1501)))+(((r02)*(sj1)*(sj2)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1502=((cj2)*(sj1));
IkReal x1503=((cj0)*(r01));
IkReal x1504=((cj1)*(sj2));
IkReal x1505=((IkReal(1.00000000000000))*(r00)*(sj0));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1504)*(x1505)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((x1503)*(x1504)))+(((x1502)*(x1503)))+(((IkReal(-1.00000000000000))*(x1502)*(x1505)))+(((r02)*(sj1)*(sj2))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1506=((IkReal(1.00000000000000))*(sj2));
IkReal x1507=((px)*(sj0));
IkReal x1508=((pz)*(sj2));
IkReal x1509=((cj0)*(sj1));
IkReal x1510=((cj1)*(sj2));
IkReal x1511=((sj1)*(sj2));
IkReal x1512=((cj2)*(sj1));
IkReal x1513=((r00)*(sj0));
IkReal x1514=((cj0)*(cj1)*(cj2));
IkReal x1515=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.000787000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1513)*(x1515)))+(((r01)*(x1514)))+(((r02)*(x1510)))+(((r02)*(x1512)))+(((IkReal(-1.00000000000000))*(r01)*(x1506)*(x1509)))+(((x1511)*(x1513))));
evalcond[3]=((IkReal(-0.318762000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x1507)*(x1515)))+(((x1507)*(x1511)))+(((IkReal(-1.00000000000000))*(py)*(x1506)*(x1509)))+(((cj1)*(x1508)))+(((py)*(x1514)))+(((pz)*(x1512)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(-0.0438310000000000))+(((IkReal(-1.00000000000000))*(cj1)*(x1506)*(x1507)))+(((IkReal(-1.00000000000000))*(x1507)*(x1512)))+(((cj0)*(py)*(x1510)))+(((IkReal(0.521670000000000))*(cj2)))+(((sj1)*(x1508)))+(((IkReal(-1.00000000000000))*(pz)*(x1515)))+(((cj2)*(py)*(x1509)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1516=((cj2)*(sj1));
IkReal x1517=((cj0)*(r01));
IkReal x1518=((cj1)*(sj2));
IkReal x1519=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x1516)*(x1519)))+(((IkReal(-1.00000000000000))*(x1518)*(x1519)))+(((x1516)*(x1517)))+(((x1517)*(x1518)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((r02)*(sj1)*(sj2))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))))+IKsqr(((((IkReal(-1.00000000000000))*(x1516)*(x1519)))+(((IkReal(-1.00000000000000))*(x1518)*(x1519)))+(((x1516)*(x1517)))+(((x1517)*(x1518)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((r02)*(sj1)*(sj2)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))), ((((IkReal(-1.00000000000000))*(x1516)*(x1519)))+(((IkReal(-1.00000000000000))*(x1518)*(x1519)))+(((x1516)*(x1517)))+(((x1517)*(x1518)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((r02)*(sj1)*(sj2)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1520=((cj2)*(sj1));
IkReal x1521=((cj0)*(r01));
IkReal x1522=((cj1)*(sj2));
IkReal x1523=((IkReal(1.00000000000000))*(r00)*(sj0));
evalcond[0]=((((r01)*(sj0)))+(IKsin(j5))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(IKcos(j5))))+(((x1520)*(x1521)))+(((x1521)*(x1522)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(x1522)*(x1523)))+(((r02)*(sj1)*(sj2)))+(((IkReal(-1.00000000000000))*(x1520)*(x1523))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1524=((pz)*(sj1));
IkReal x1525=((cj0)*(py));
IkReal x1526=((IkReal(1.00000000000000))*(sj2));
IkReal x1527=((cj1)*(cj2));
IkReal x1528=((px)*(sj0));
IkReal x1529=((cj2)*(sj1));
IkReal x1530=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(0.190892000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.128657000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((x1525)*(x1527)))+(((sj1)*(sj2)*(x1528)))+(((cj2)*(x1524)))+(((IkReal(-1.00000000000000))*(x1527)*(x1528)))+(((IkReal(-0.521670000000000))*(sj2)))+(((pz)*(x1530)))+(((IkReal(-1.00000000000000))*(sj1)*(x1525)*(x1526))));
evalcond[4]=((IkReal(-0.0438310000000000))+(((x1525)*(x1530)))+(((x1525)*(x1529)))+(((sj2)*(x1524)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(cj1)*(x1526)*(x1528)))+(((IkReal(-1.00000000000000))*(x1528)*(x1529)))+(((IkReal(-1.00000000000000))*(pz)*(x1527)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1531=((sj1)*(sj2));
IkReal x1532=((cj2)*(sj1));
IkReal x1533=((cj1)*(sj2));
IkReal x1534=((IkReal(1.00000000000000))*(r02));
IkReal x1535=((cj1)*(cj2));
IkReal x1536=((cj0)*(r01));
IkReal x1537=((sj1)*(x1536));
IkReal x1538=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((IkReal(-1.00000000000000))*(x1535)*(x1536)))+(((IkReal(-1.00000000000000))*(x1531)*(x1538)))+(((IkReal(-1.00000000000000))*(x1532)*(x1534)))+(((x1531)*(x1536)))+(((r00)*(sj0)*(x1535)))+(((IkReal(-1.00000000000000))*(x1533)*(x1534))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x1532)*(x1538)))+(((x1532)*(x1536)))+(((IkReal(-1.00000000000000))*(x1533)*(x1538)))+(((r02)*(x1531)))+(((IkReal(-1.00000000000000))*(x1534)*(x1535)))+(((x1533)*(x1536))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x1535)*(x1536)))+(((IkReal(-1.00000000000000))*(x1531)*(x1538)))+(((IkReal(-1.00000000000000))*(x1532)*(x1534)))+(((x1531)*(x1536)))+(((r00)*(sj0)*(x1535)))+(((IkReal(-1.00000000000000))*(x1533)*(x1534)))))+IKsqr(((((IkReal(-1.00000000000000))*(x1532)*(x1538)))+(((x1532)*(x1536)))+(((IkReal(-1.00000000000000))*(x1533)*(x1538)))+(((r02)*(x1531)))+(((IkReal(-1.00000000000000))*(x1534)*(x1535)))+(((x1533)*(x1536)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x1535)*(x1536)))+(((IkReal(-1.00000000000000))*(x1531)*(x1538)))+(((IkReal(-1.00000000000000))*(x1532)*(x1534)))+(((x1531)*(x1536)))+(((r00)*(sj0)*(x1535)))+(((IkReal(-1.00000000000000))*(x1533)*(x1534)))), ((((IkReal(-1.00000000000000))*(x1532)*(x1538)))+(((x1532)*(x1536)))+(((IkReal(-1.00000000000000))*(x1533)*(x1538)))+(((r02)*(x1531)))+(((IkReal(-1.00000000000000))*(x1534)*(x1535)))+(((x1533)*(x1536)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1539=((r02)*(sj2));
IkReal x1540=((IkReal(1.00000000000000))*(sj2));
IkReal x1541=((r00)*(sj0));
IkReal x1542=((cj1)*(cj2));
IkReal x1543=((cj0)*(r01));
IkReal x1544=((sj1)*(x1543));
IkReal x1545=((IkReal(1.00000000000000))*(cj2)*(x1541));
evalcond[0]=((((cj2)*(x1544)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((sj1)*(x1539)))+(((IkReal(-1.00000000000000))*(cj1)*(x1540)*(x1541)))+(((IkReal(-1.00000000000000))*(r02)*(x1542)))+(((cj1)*(sj2)*(x1543)))+(((IkReal(-1.00000000000000))*(sj1)*(x1545))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1541)*(x1542)))+(((IkReal(-1.00000000000000))*(x1540)*(x1544)))+(((cj1)*(x1539)))+(IKsin(j5))+(((sj1)*(sj2)*(x1541)))+(((cj2)*(r02)*(sj1)))+(((x1542)*(x1543))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1546=((pz)*(sj1));
IkReal x1547=((cj0)*(py));
IkReal x1548=((IkReal(1.00000000000000))*(sj2));
IkReal x1549=((cj1)*(cj2));
IkReal x1550=((px)*(sj0));
IkReal x1551=((cj2)*(sj1));
IkReal x1552=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(-0.190892000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.127083000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(sj1)*(x1547)*(x1548)))+(((x1547)*(x1549)))+(((sj1)*(sj2)*(x1550)))+(((cj2)*(x1546)))+(((IkReal(-1.00000000000000))*(x1549)*(x1550)))+(((pz)*(x1552)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(-0.0438310000000000))+(((x1547)*(x1551)))+(((x1547)*(x1552)))+(((IkReal(-1.00000000000000))*(x1550)*(x1551)))+(((IkReal(-1.00000000000000))*(cj1)*(x1548)*(x1550)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(pz)*(x1549)))+(((sj2)*(x1546)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1553=((cj2)*(sj1));
IkReal x1554=((cj0)*(r01));
IkReal x1555=((sj1)*(sj2));
IkReal x1556=((cj1)*(cj2));
IkReal x1557=((cj1)*(sj2));
IkReal x1558=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((r00)*(sj0)*(x1555)))+(((x1554)*(x1556)))+(((r02)*(x1557)))+(((r02)*(x1553)))+(((IkReal(-1.00000000000000))*(x1556)*(x1558)))+(((IkReal(-1.00000000000000))*(x1554)*(x1555))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x1553)*(x1554)))+(((IkReal(-1.00000000000000))*(x1553)*(x1558)))+(((x1554)*(x1557)))+(((IkReal(-1.00000000000000))*(x1557)*(x1558)))+(((r02)*(x1555)))+(((IkReal(-1.00000000000000))*(r02)*(x1556))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r00)*(sj0)*(x1555)))+(((x1554)*(x1556)))+(((r02)*(x1557)))+(((r02)*(x1553)))+(((IkReal(-1.00000000000000))*(x1556)*(x1558)))+(((IkReal(-1.00000000000000))*(x1554)*(x1555)))))+IKsqr(((((x1553)*(x1554)))+(((IkReal(-1.00000000000000))*(x1553)*(x1558)))+(((x1554)*(x1557)))+(((IkReal(-1.00000000000000))*(x1557)*(x1558)))+(((r02)*(x1555)))+(((IkReal(-1.00000000000000))*(r02)*(x1556)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((r00)*(sj0)*(x1555)))+(((x1554)*(x1556)))+(((r02)*(x1557)))+(((r02)*(x1553)))+(((IkReal(-1.00000000000000))*(x1556)*(x1558)))+(((IkReal(-1.00000000000000))*(x1554)*(x1555)))), ((((x1553)*(x1554)))+(((IkReal(-1.00000000000000))*(x1553)*(x1558)))+(((x1554)*(x1557)))+(((IkReal(-1.00000000000000))*(x1557)*(x1558)))+(((r02)*(x1555)))+(((IkReal(-1.00000000000000))*(r02)*(x1556)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1559=((r02)*(sj2));
IkReal x1560=((IkReal(1.00000000000000))*(sj2));
IkReal x1561=((r00)*(sj0));
IkReal x1562=((cj1)*(cj2));
IkReal x1563=((cj0)*(r01));
IkReal x1564=((sj1)*(x1563));
IkReal x1565=((IkReal(1.00000000000000))*(cj2)*(x1561));
evalcond[0]=((((cj1)*(sj2)*(x1563)))+(((IkReal(-1.00000000000000))*(sj1)*(x1565)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((IkReal(-1.00000000000000))*(cj1)*(x1560)*(x1561)))+(((cj2)*(x1564)))+(((sj1)*(x1559)))+(((IkReal(-1.00000000000000))*(r02)*(x1562))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1561)*(x1562)))+(((cj1)*(x1559)))+(((IkReal(-1.00000000000000))*(x1560)*(x1564)))+(((sj1)*(sj2)*(x1561)))+(((cj2)*(r02)*(sj1)))+(((x1562)*(x1563)))+(((IkReal(-1.00000000000000))*(IKsin(j5)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1566=((sj1)*(sj2));
IkReal x1567=((cj2)*(sj1));
IkReal x1568=((cj1)*(sj2));
IkReal x1569=((IkReal(1.00000000000000))*(r02));
IkReal x1570=((cj1)*(cj2));
IkReal x1571=((cj0)*(r01));
IkReal x1572=((sj1)*(x1571));
IkReal x1573=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((r00)*(sj0)*(x1570)))+(((x1566)*(x1571)))+(((IkReal(-1.00000000000000))*(x1570)*(x1571)))+(((IkReal(-1.00000000000000))*(x1566)*(x1573)))+(((IkReal(-1.00000000000000))*(x1567)*(x1569)))+(((IkReal(-1.00000000000000))*(x1568)*(x1569))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x1567)*(x1571)))+(((IkReal(-1.00000000000000))*(x1567)*(x1573)))+(((x1568)*(x1571)))+(((IkReal(-1.00000000000000))*(x1568)*(x1573)))+(((IkReal(-1.00000000000000))*(x1569)*(x1570)))+(((r02)*(x1566))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((r00)*(sj0)*(x1570)))+(((x1566)*(x1571)))+(((IkReal(-1.00000000000000))*(x1570)*(x1571)))+(((IkReal(-1.00000000000000))*(x1566)*(x1573)))+(((IkReal(-1.00000000000000))*(x1567)*(x1569)))+(((IkReal(-1.00000000000000))*(x1568)*(x1569)))))))+IKsqr(((((x1567)*(x1571)))+(((IkReal(-1.00000000000000))*(x1567)*(x1573)))+(((x1568)*(x1571)))+(((IkReal(-1.00000000000000))*(x1568)*(x1573)))+(((IkReal(-1.00000000000000))*(x1569)*(x1570)))+(((r02)*(x1566)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((r00)*(sj0)*(x1570)))+(((x1566)*(x1571)))+(((IkReal(-1.00000000000000))*(x1570)*(x1571)))+(((IkReal(-1.00000000000000))*(x1566)*(x1573)))+(((IkReal(-1.00000000000000))*(x1567)*(x1569)))+(((IkReal(-1.00000000000000))*(x1568)*(x1569)))))), ((((x1567)*(x1571)))+(((IkReal(-1.00000000000000))*(x1567)*(x1573)))+(((x1568)*(x1571)))+(((IkReal(-1.00000000000000))*(x1568)*(x1573)))+(((IkReal(-1.00000000000000))*(x1569)*(x1570)))+(((r02)*(x1566)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1574=IKsin(j5);
IkReal x1575=((r02)*(sj2));
IkReal x1576=((IkReal(1.00000000000000))*(sj2));
IkReal x1577=((r00)*(sj0));
IkReal x1578=((IkReal(1.00000000000000))*(cj2));
IkReal x1579=((cj0)*(r01)*(sj1));
IkReal x1580=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x1574)))+(((cj0)*(r00))));
evalcond[1]=((((sj2)*(x1580)))+(((IkReal(-1.00000000000000))*(sj1)*(x1577)*(x1578)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1578)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((cj2)*(x1579)))+(((sj1)*(x1575)))+(((IkReal(-1.00000000000000))*(cj1)*(x1576)*(x1577))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1576)*(x1579)))+(((cj1)*(x1575)))+(((sj4)*(x1574)))+(((sj1)*(sj2)*(x1577)))+(((cj2)*(x1580)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(x1577)*(x1578))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1581=((cj2)*(sj1));
IkReal x1582=((cj0)*(r01));
IkReal x1583=((cj1)*(sj2));
IkReal x1584=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x1582)*(x1583)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(x1581)*(x1584)))+(((r02)*(sj1)*(sj2)))+(((x1581)*(x1582)))+(((IkReal(-1.00000000000000))*(x1583)*(x1584))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))))+IKsqr(((((x1582)*(x1583)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(x1581)*(x1584)))+(((r02)*(sj1)*(sj2)))+(((x1581)*(x1582)))+(((IkReal(-1.00000000000000))*(x1583)*(x1584)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))), ((((x1582)*(x1583)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(x1581)*(x1584)))+(((r02)*(sj1)*(sj2)))+(((x1581)*(x1582)))+(((IkReal(-1.00000000000000))*(x1583)*(x1584)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1585=IKsin(j5);
IkReal x1586=((r02)*(sj2));
IkReal x1587=((IkReal(1.00000000000000))*(sj2));
IkReal x1588=((r00)*(sj0));
IkReal x1589=((IkReal(1.00000000000000))*(cj2));
IkReal x1590=((cj0)*(r01)*(sj1));
IkReal x1591=((cj0)*(cj1)*(r01));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj4)*(x1585)))+(((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[1]=((((sj2)*(x1591)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1589)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((IkReal(-1.00000000000000))*(cj1)*(x1587)*(x1588)))+(((cj2)*(x1590)))+(((sj1)*(x1586)))+(((IkReal(-1.00000000000000))*(sj1)*(x1588)*(x1589))));
evalcond[2]=((((cj1)*(x1586)))+(((sj1)*(sj2)*(x1588)))+(((IkReal(-1.00000000000000))*(cj1)*(x1588)*(x1589)))+(((sj4)*(x1585)))+(((cj2)*(x1591)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1587)*(x1590))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1592=((cj1)*(sj2));
IkReal x1593=((px)*(sj0));
IkReal x1594=((sj1)*(sj2));
IkReal x1595=((cj0)*(py));
IkReal x1596=((cj2)*(pz));
IkReal x1597=((IkReal(1.00000000000000))*(cj1));
IkReal x1598=((cj2)*(x1595));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.000787000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((IkReal(-0.261090000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((cj1)*(x1598)))+(((IkReal(-1.00000000000000))*(cj2)*(x1593)*(x1597)))+(((x1593)*(x1594)))+(((sj1)*(x1596)))+(((pz)*(x1592)))+(((IkReal(0.0513310000000000))*(sj3)))+(((IkReal(-0.324112000000000))*(cj3)))+(((IkReal(-0.521670000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(x1594)*(x1595))));
evalcond[3]=((IkReal(0.00750000000000000))+(((x1592)*(x1595)))+(((IkReal(0.521670000000000))*(cj2)))+(((sj1)*(x1598)))+(((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x1593)))+(((pz)*(x1594)))+(((IkReal(-1.00000000000000))*(x1592)*(x1593)))+(((IkReal(0.0513310000000000))*(cj3)))+(((IkReal(0.324112000000000))*(sj3)))+(((IkReal(0.00982000000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(x1596)*(x1597))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1599=((cj0)*(r01));
IkReal x1600=((sj1)*(sj2));
IkReal x1601=((IkReal(1.00000000000000))*(cj1));
IkReal x1602=((r00)*(sj0));
if( IKabs(((((r01)*(sj0)))+(((cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x1600)*(x1602)))+(((cj1)*(cj2)*(x1602)))+(((x1599)*(x1600)))+(((IkReal(-1.00000000000000))*(cj2)*(x1599)*(x1601)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1601)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r01)*(sj0)))+(((cj0)*(r00)))))+IKsqr(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x1600)*(x1602)))+(((cj1)*(cj2)*(x1602)))+(((x1599)*(x1600)))+(((IkReal(-1.00000000000000))*(cj2)*(x1599)*(x1601)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1601)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((r01)*(sj0)))+(((cj0)*(r00)))), ((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x1600)*(x1602)))+(((cj1)*(cj2)*(x1602)))+(((x1599)*(x1600)))+(((IkReal(-1.00000000000000))*(cj2)*(x1599)*(x1601)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1601)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1603=IKcos(j5);
IkReal x1604=((r02)*(sj2));
IkReal x1605=((IkReal(1.00000000000000))*(sj2));
IkReal x1606=((r00)*(sj0));
IkReal x1607=((IkReal(1.00000000000000))*(cj2));
IkReal x1608=((cj0)*(r01)*(sj1));
IkReal x1609=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((cj0)*(r00))));
evalcond[1]=((((sj2)*(x1609)))+(((IkReal(-1.00000000000000))*(sj1)*(x1606)*(x1607)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1607)))+(((sj1)*(x1604)))+(((cj3)*(x1603)))+(((cj2)*(x1608)))+(((IkReal(-1.00000000000000))*(cj1)*(x1605)*(x1606))));
evalcond[2]=((((sj3)*(x1603)))+(((cj1)*(x1604)))+(((cj2)*(x1609)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1605)*(x1608)))+(((sj1)*(sj2)*(x1606)))+(((IkReal(-1.00000000000000))*(cj1)*(x1606)*(x1607))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1610=((IkReal(1.00000000000000))*(sj2));
IkReal x1611=((cj0)*(r01));
IkReal x1612=((cj2)*(sj1));
IkReal x1613=((r00)*(sj0));
if( IKabs(((((r01)*(sj0)))+(((cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x1611)*(x1612)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1610)))+(((cj1)*(sj2)*(x1613)))+(((x1612)*(x1613)))+(((cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(cj1)*(x1610)*(x1611))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r01)*(sj0)))+(((cj0)*(r00)))))+IKsqr(((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x1611)*(x1612)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1610)))+(((cj1)*(sj2)*(x1613)))+(((x1612)*(x1613)))+(((cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(cj1)*(x1610)*(x1611)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((r01)*(sj0)))+(((cj0)*(r00)))), ((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x1611)*(x1612)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1610)))+(((cj1)*(sj2)*(x1613)))+(((x1612)*(x1613)))+(((cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(cj1)*(x1610)*(x1611)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1614=IKcos(j5);
IkReal x1615=((r02)*(sj2));
IkReal x1616=((IkReal(1.00000000000000))*(sj2));
IkReal x1617=((r00)*(sj0));
IkReal x1618=((IkReal(1.00000000000000))*(cj2));
IkReal x1619=((cj0)*(r01)*(sj1));
IkReal x1620=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1618)))+(((IkReal(-1.00000000000000))*(cj1)*(x1616)*(x1617)))+(((sj2)*(x1620)))+(((IkReal(-1.00000000000000))*(sj1)*(x1617)*(x1618)))+(((sj1)*(x1615)))+(((cj2)*(x1619)))+(((cj3)*(x1614))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1616)*(x1619)))+(((sj3)*(x1614)))+(((cj2)*(r02)*(sj1)))+(((cj2)*(x1620)))+(((IkReal(-1.00000000000000))*(cj1)*(x1617)*(x1618)))+(((sj1)*(sj2)*(x1617)))+(((cj1)*(x1615))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1621=((cj1)*(sj2));
IkReal x1622=((px)*(sj0));
IkReal x1623=((sj1)*(sj2));
IkReal x1624=((cj0)*(py));
IkReal x1625=((cj2)*(pz));
IkReal x1626=((IkReal(1.00000000000000))*(cj1));
IkReal x1627=((cj2)*(x1624));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.000787000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((IkReal(-0.261090000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((pz)*(x1621)))+(((IkReal(0.0576720000000000))*(cj3)))+(((sj1)*(x1625)))+(((x1622)*(x1623)))+(((IkReal(0.0513310000000000))*(sj3)))+(((IkReal(-1.00000000000000))*(x1623)*(x1624)))+(((IkReal(-0.521670000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(cj2)*(x1622)*(x1626)))+(((cj1)*(x1627))));
evalcond[3]=((IkReal(0.00750000000000000))+(((pz)*(x1623)))+(((sj1)*(x1627)))+(((IkReal(-1.00000000000000))*(x1621)*(x1622)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x1625)*(x1626)))+(((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x1622)))+(((IkReal(-0.0576720000000000))*(sj3)))+(((IkReal(0.0513310000000000))*(cj3)))+(((IkReal(0.00982000000000000))*(sj2)))+(((x1621)*(x1624))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1628=((sj1)*(sj2));
IkReal x1629=((cj0)*(r01));
IkReal x1630=((r00)*(sj0));
IkReal x1631=((IkReal(1.00000000000000))*(cj1));
if( IKabs(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1631)))+(((x1628)*(x1629)))+(((IkReal(-1.00000000000000))*(cj2)*(x1629)*(x1631)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1628)*(x1630)))+(((cj1)*(cj2)*(x1630))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))))+IKsqr(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1631)))+(((x1628)*(x1629)))+(((IkReal(-1.00000000000000))*(cj2)*(x1629)*(x1631)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1628)*(x1630)))+(((cj1)*(cj2)*(x1630)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))), ((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1631)))+(((x1628)*(x1629)))+(((IkReal(-1.00000000000000))*(cj2)*(x1629)*(x1631)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1628)*(x1630)))+(((cj1)*(cj2)*(x1630)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1632=IKcos(j5);
IkReal x1633=((r02)*(sj2));
IkReal x1634=((IkReal(1.00000000000000))*(sj2));
IkReal x1635=((r00)*(sj0));
IkReal x1636=((IkReal(1.00000000000000))*(cj2));
IkReal x1637=((cj0)*(r01)*(sj1));
IkReal x1638=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(IKsin(j5))+(((cj0)*(r00))));
evalcond[1]=((((sj1)*(x1633)))+(((cj2)*(x1637)))+(((cj3)*(x1632)))+(((sj2)*(x1638)))+(((IkReal(-1.00000000000000))*(sj1)*(x1635)*(x1636)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1636)))+(((IkReal(-1.00000000000000))*(cj1)*(x1634)*(x1635))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1634)*(x1637)))+(((cj2)*(x1638)))+(((sj1)*(sj2)*(x1635)))+(((sj3)*(x1632)))+(((cj1)*(x1633)))+(((IkReal(-1.00000000000000))*(cj1)*(x1635)*(x1636)))+(((cj2)*(r02)*(sj1))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1639=((IkReal(1.00000000000000))*(sj2));
IkReal x1640=((cj0)*(r01));
IkReal x1641=((cj2)*(sj1));
IkReal x1642=((r00)*(sj0));
if( IKabs(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((cj1)*(sj2)*(x1642)))+(((x1641)*(x1642)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1639)))+(((cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(x1640)*(x1641)))+(((IkReal(-1.00000000000000))*(cj1)*(x1639)*(x1640))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))))+IKsqr(((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((cj1)*(sj2)*(x1642)))+(((x1641)*(x1642)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1639)))+(((cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(x1640)*(x1641)))+(((IkReal(-1.00000000000000))*(cj1)*(x1639)*(x1640)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))), ((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((cj1)*(sj2)*(x1642)))+(((x1641)*(x1642)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1639)))+(((cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(x1640)*(x1641)))+(((IkReal(-1.00000000000000))*(cj1)*(x1639)*(x1640)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1643=IKcos(j5);
IkReal x1644=((r02)*(sj2));
IkReal x1645=((IkReal(1.00000000000000))*(sj2));
IkReal x1646=((r00)*(sj0));
IkReal x1647=((IkReal(1.00000000000000))*(cj2));
IkReal x1648=((cj0)*(r01)*(sj1));
IkReal x1649=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(IKsin(j5))+(((cj0)*(r00))));
evalcond[1]=((((sj1)*(x1644)))+(((IkReal(-1.00000000000000))*(sj1)*(x1646)*(x1647)))+(((cj3)*(x1643)))+(((cj2)*(x1648)))+(((sj2)*(x1649)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1647)))+(((IkReal(-1.00000000000000))*(cj1)*(x1645)*(x1646))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1645)*(x1648)))+(((cj2)*(x1649)))+(((cj1)*(x1644)))+(((sj3)*(x1643)))+(((sj1)*(sj2)*(x1646)))+(((IkReal(-1.00000000000000))*(cj1)*(x1646)*(x1647)))+(((cj2)*(r02)*(sj1))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1650=((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30);
IkReal x1651=((cj0)*(r00));
IkReal x1652=((r00)*(sj0));
IkReal x1653=((r01)*(sj0));
IkReal x1654=((cj4)*(r02));
IkReal x1655=((cj1)*(cj4)*(sj2));
IkReal x1656=((IkReal(1.00000000000000))*(sj3)*(sj4));
IkReal x1657=((IkReal(1.00000000000000))*(cj0)*(r01));
IkReal x1658=((cj2)*(cj4)*(sj1));
if( IKabs(((x1650)*(((x1653)+(x1651))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x1650)*(((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x1655)*(x1657)))+(((IkReal(-1.00000000000000))*(x1653)*(x1656)))+(((IkReal(-1.00000000000000))*(sj1)*(sj2)*(x1654)))+(((IkReal(-1.00000000000000))*(x1657)*(x1658)))+(((cj1)*(cj2)*(x1654)))+(((IkReal(-1.00000000000000))*(x1651)*(x1656)))+(((x1652)*(x1658)))+(((x1652)*(x1655))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x1650)*(((x1653)+(x1651)))))+IKsqr(((x1650)*(((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x1655)*(x1657)))+(((IkReal(-1.00000000000000))*(x1653)*(x1656)))+(((IkReal(-1.00000000000000))*(sj1)*(sj2)*(x1654)))+(((IkReal(-1.00000000000000))*(x1657)*(x1658)))+(((cj1)*(cj2)*(x1654)))+(((IkReal(-1.00000000000000))*(x1651)*(x1656)))+(((x1652)*(x1658)))+(((x1652)*(x1655)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((x1650)*(((x1653)+(x1651)))), ((x1650)*(((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x1655)*(x1657)))+(((IkReal(-1.00000000000000))*(x1653)*(x1656)))+(((IkReal(-1.00000000000000))*(sj1)*(sj2)*(x1654)))+(((IkReal(-1.00000000000000))*(x1657)*(x1658)))+(((cj1)*(cj2)*(x1654)))+(((IkReal(-1.00000000000000))*(x1651)*(x1656)))+(((x1652)*(x1658)))+(((x1652)*(x1655)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1659=IKsin(j5);
IkReal x1660=IKcos(j5);
IkReal x1661=((r02)*(sj2));
IkReal x1662=((IkReal(1.00000000000000))*(sj2));
IkReal x1663=((r00)*(sj0));
IkReal x1664=((IkReal(1.00000000000000))*(cj2));
IkReal x1665=((IkReal(1.00000000000000))*(x1659));
IkReal x1666=((cj0)*(r01)*(sj1));
IkReal x1667=((cj0)*(cj1)*(r01));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj4)*(x1665)))+(((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[1]=((((sj1)*(x1661)))+(((IkReal(-1.00000000000000))*(sj1)*(x1663)*(x1664)))+(((IkReal(-1.00000000000000))*(cj1)*(x1662)*(x1663)))+(((cj3)*(x1660)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1664)))+(((sj3)*(sj4)*(x1659)))+(((cj2)*(x1666)))+(((sj2)*(x1667))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1662)*(x1666)))+(((IkReal(-1.00000000000000))*(cj1)*(x1663)*(x1664)))+(((cj1)*(x1661)))+(((IkReal(-1.00000000000000))*(cj3)*(sj4)*(x1665)))+(((sj3)*(x1660)))+(((cj2)*(x1667)))+(((sj1)*(sj2)*(x1663)))+(((cj2)*(r02)*(sj1))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1668=((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30);
IkReal x1669=((cj0)*(r00));
IkReal x1670=((r01)*(sj0));
IkReal x1671=((cj3)*(sj4));
IkReal x1672=((cj0)*(r01));
IkReal x1673=((cj4)*(sj2));
IkReal x1674=((r00)*(sj0));
IkReal x1675=((IkReal(1.00000000000000))*(cj2)*(cj4));
if( IKabs(((x1668)*(((x1669)+(x1670))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x1668)*(((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1673)))+(((IkReal(-1.00000000000000))*(cj1)*(x1672)*(x1675)))+(((IkReal(-1.00000000000000))*(sj1)*(x1673)*(x1674)))+(((x1669)*(x1671)))+(((cj1)*(cj2)*(cj4)*(x1674)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1675)))+(((sj1)*(x1672)*(x1673)))+(((x1670)*(x1671))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x1668)*(((x1669)+(x1670)))))+IKsqr(((x1668)*(((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1673)))+(((IkReal(-1.00000000000000))*(cj1)*(x1672)*(x1675)))+(((IkReal(-1.00000000000000))*(sj1)*(x1673)*(x1674)))+(((x1669)*(x1671)))+(((cj1)*(cj2)*(cj4)*(x1674)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1675)))+(((sj1)*(x1672)*(x1673)))+(((x1670)*(x1671)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((x1668)*(((x1669)+(x1670)))), ((x1668)*(((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1673)))+(((IkReal(-1.00000000000000))*(cj1)*(x1672)*(x1675)))+(((IkReal(-1.00000000000000))*(sj1)*(x1673)*(x1674)))+(((x1669)*(x1671)))+(((cj1)*(cj2)*(cj4)*(x1674)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1675)))+(((sj1)*(x1672)*(x1673)))+(((x1670)*(x1671)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1676=IKsin(j5);
IkReal x1677=IKcos(j5);
IkReal x1678=((r02)*(sj2));
IkReal x1679=((IkReal(1.00000000000000))*(sj2));
IkReal x1680=((r00)*(sj0));
IkReal x1681=((IkReal(1.00000000000000))*(cj2));
IkReal x1682=((IkReal(1.00000000000000))*(x1676));
IkReal x1683=((cj0)*(r01)*(sj1));
IkReal x1684=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x1682)))+(((cj0)*(r00))));
evalcond[1]=((((sj1)*(x1678)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1681)))+(((cj3)*(x1677)))+(((sj3)*(sj4)*(x1676)))+(((IkReal(-1.00000000000000))*(cj1)*(x1679)*(x1680)))+(((cj2)*(x1683)))+(((IkReal(-1.00000000000000))*(sj1)*(x1680)*(x1681)))+(((sj2)*(x1684))));
evalcond[2]=((((cj1)*(x1678)))+(((IkReal(-1.00000000000000))*(x1679)*(x1683)))+(((IkReal(-1.00000000000000))*(cj1)*(x1680)*(x1681)))+(((IkReal(-1.00000000000000))*(cj3)*(sj4)*(x1682)))+(((sj1)*(sj2)*(x1680)))+(((cj2)*(r02)*(sj1)))+(((sj3)*(x1677)))+(((cj2)*(x1684))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1685=(cj3)*(cj3);
IkReal x1686=(sj3)*(sj3);
IkReal x1687=((cj1)*(sj3));
IkReal x1688=((cj0)*(r01));
IkReal x1689=((r02)*(sj2));
IkReal x1690=((cj2)*(sj1));
IkReal x1691=((cj1)*(cj3));
IkReal x1692=((cj2)*(r02));
IkReal x1693=((cj3)*(sj1));
IkReal x1694=((IkReal(1.00000000000000))*(sj3));
IkReal x1695=((r00)*(sj0));
IkReal x1696=((IkReal(1.00000000000000))*(sj1)*(sj2));
IkReal x1697=((IkReal(1.00000000000000))*(x1695));
if( IKabs(((((IKabs(((((sj4)*(x1686)))+(((sj4)*(x1685))))) != 0)?((IkReal)1/(((((sj4)*(x1686)))+(((sj4)*(x1685)))))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(sj2)*(x1687)*(x1688)))+(((cj3)*(r02)*(x1690)))+(((IkReal(-1.00000000000000))*(sj2)*(x1688)*(x1693)))+(((sj2)*(x1693)*(x1695)))+(((IkReal(-1.00000000000000))*(x1688)*(x1690)*(x1694)))+(((x1689)*(x1691)))+(((IkReal(-1.00000000000000))*(sj1)*(x1689)*(x1694)))+(((cj2)*(x1688)*(x1691)))+(((sj3)*(x1690)*(x1695)))+(((x1687)*(x1692)))+(((sj2)*(x1687)*(x1695)))+(((IkReal(-1.00000000000000))*(cj2)*(x1691)*(x1697))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(((((IkReal(-1.00000000000000))*(x1686)))+(((IkReal(-1.00000000000000))*(x1685))))) != 0)?((IkReal)1/(((((IkReal(-1.00000000000000))*(x1686)))+(((IkReal(-1.00000000000000))*(x1685)))))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj2)*(x1687)*(x1697)))+(((IkReal(-1.00000000000000))*(x1691)*(x1692)))+(((IkReal(-1.00000000000000))*(sj1)*(sj2)*(x1688)*(x1694)))+(((cj2)*(x1687)*(x1688)))+(((x1689)*(x1693)))+(((sj2)*(x1688)*(x1691)))+(((r02)*(sj3)*(x1690)))+(((x1687)*(x1689)))+(((IkReal(-1.00000000000000))*(cj3)*(x1690)*(x1697)))+(((IkReal(-1.00000000000000))*(sj2)*(x1691)*(x1697)))+(((sj1)*(sj2)*(sj3)*(x1695)))+(((cj3)*(x1688)*(x1690))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(((((sj4)*(x1686)))+(((sj4)*(x1685))))) != 0)?((IkReal)1/(((((sj4)*(x1686)))+(((sj4)*(x1685)))))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(sj2)*(x1687)*(x1688)))+(((cj3)*(r02)*(x1690)))+(((IkReal(-1.00000000000000))*(sj2)*(x1688)*(x1693)))+(((sj2)*(x1693)*(x1695)))+(((IkReal(-1.00000000000000))*(x1688)*(x1690)*(x1694)))+(((x1689)*(x1691)))+(((IkReal(-1.00000000000000))*(sj1)*(x1689)*(x1694)))+(((cj2)*(x1688)*(x1691)))+(((sj3)*(x1690)*(x1695)))+(((x1687)*(x1692)))+(((sj2)*(x1687)*(x1695)))+(((IkReal(-1.00000000000000))*(cj2)*(x1691)*(x1697)))))))+IKsqr(((((IKabs(((((IkReal(-1.00000000000000))*(x1686)))+(((IkReal(-1.00000000000000))*(x1685))))) != 0)?((IkReal)1/(((((IkReal(-1.00000000000000))*(x1686)))+(((IkReal(-1.00000000000000))*(x1685)))))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj2)*(x1687)*(x1697)))+(((IkReal(-1.00000000000000))*(x1691)*(x1692)))+(((IkReal(-1.00000000000000))*(sj1)*(sj2)*(x1688)*(x1694)))+(((cj2)*(x1687)*(x1688)))+(((x1689)*(x1693)))+(((sj2)*(x1688)*(x1691)))+(((r02)*(sj3)*(x1690)))+(((x1687)*(x1689)))+(((IkReal(-1.00000000000000))*(cj3)*(x1690)*(x1697)))+(((IkReal(-1.00000000000000))*(sj2)*(x1691)*(x1697)))+(((sj1)*(sj2)*(sj3)*(x1695)))+(((cj3)*(x1688)*(x1690)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(((((sj4)*(x1686)))+(((sj4)*(x1685))))) != 0)?((IkReal)1/(((((sj4)*(x1686)))+(((sj4)*(x1685)))))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(sj2)*(x1687)*(x1688)))+(((cj3)*(r02)*(x1690)))+(((IkReal(-1.00000000000000))*(sj2)*(x1688)*(x1693)))+(((sj2)*(x1693)*(x1695)))+(((IkReal(-1.00000000000000))*(x1688)*(x1690)*(x1694)))+(((x1689)*(x1691)))+(((IkReal(-1.00000000000000))*(sj1)*(x1689)*(x1694)))+(((cj2)*(x1688)*(x1691)))+(((sj3)*(x1690)*(x1695)))+(((x1687)*(x1692)))+(((sj2)*(x1687)*(x1695)))+(((IkReal(-1.00000000000000))*(cj2)*(x1691)*(x1697)))))), ((((IKabs(((((IkReal(-1.00000000000000))*(x1686)))+(((IkReal(-1.00000000000000))*(x1685))))) != 0)?((IkReal)1/(((((IkReal(-1.00000000000000))*(x1686)))+(((IkReal(-1.00000000000000))*(x1685)))))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj2)*(x1687)*(x1697)))+(((IkReal(-1.00000000000000))*(x1691)*(x1692)))+(((IkReal(-1.00000000000000))*(sj1)*(sj2)*(x1688)*(x1694)))+(((cj2)*(x1687)*(x1688)))+(((x1689)*(x1693)))+(((sj2)*(x1688)*(x1691)))+(((r02)*(sj3)*(x1690)))+(((x1687)*(x1689)))+(((IkReal(-1.00000000000000))*(cj3)*(x1690)*(x1697)))+(((IkReal(-1.00000000000000))*(sj2)*(x1691)*(x1697)))+(((sj1)*(sj2)*(sj3)*(x1695)))+(((cj3)*(x1688)*(x1690)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1698=IKsin(j5);
IkReal x1699=IKcos(j5);
IkReal x1700=((r02)*(sj2));
IkReal x1701=((IkReal(1.00000000000000))*(sj2));
IkReal x1702=((r00)*(sj0));
IkReal x1703=((IkReal(1.00000000000000))*(cj2));
IkReal x1704=((IkReal(1.00000000000000))*(x1698));
IkReal x1705=((cj0)*(r01)*(sj1));
IkReal x1706=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x1704)))+(((cj0)*(r00))));
evalcond[1]=((((cj3)*(x1699)))+(((sj3)*(sj4)*(x1698)))+(((IkReal(-1.00000000000000))*(sj1)*(x1702)*(x1703)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1703)))+(((sj2)*(x1706)))+(((cj2)*(x1705)))+(((IkReal(-1.00000000000000))*(cj1)*(x1701)*(x1702)))+(((sj1)*(x1700))));
evalcond[2]=((((cj1)*(x1700)))+(((sj3)*(x1699)))+(((IkReal(-1.00000000000000))*(cj3)*(sj4)*(x1704)))+(((sj1)*(sj2)*(x1702)))+(((IkReal(-1.00000000000000))*(cj1)*(x1702)*(x1703)))+(((cj2)*(r02)*(sj1)))+(((cj2)*(x1706)))+(((IkReal(-1.00000000000000))*(x1701)*(x1705))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1707=((IkReal(190892000000.000))*(sj1));
IkReal x1708=((px)*(sj0));
IkReal x1709=((IkReal(787000000.000000))*(pz));
IkReal x1710=((cj1)*(sj2));
IkReal x1711=((IkReal(787000000.000000))*(cj3));
IkReal x1712=((py)*(sj0));
IkReal x1713=((cj0)*(px));
IkReal x1714=((cj0)*(py));
IkReal x1715=((cj1)*(cj2));
IkReal x1716=((IkReal(190892000000.000))*(cj3));
IkReal x1717=((IkReal(787000000.000000))*(sj1)*(sj2));
if( IKabs(((gconst0)*(((IkReal(205477830.000000))+(((IkReal(-7728340.00000000))*(cj2)))+(((IkReal(787000000.000000))*(x1708)*(x1715)))+(((IkReal(-1.00000000000000))*(x1712)*(x1716)))+(((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x1709)))+(((IkReal(-1.00000000000000))*(x1713)*(x1716)))+(((x1714)*(x1717)))+(((IkReal(-1.00000000000000))*(x1709)*(x1710)))+(((IkReal(-787000000.000000))*(x1714)*(x1715)))+(((IkReal(104844140.000000))*(cj3)))+(((IkReal(-1.00000000000000))*(x1708)*(x1717)))+(((IkReal(410554290.000000))*(sj2)))+(((IkReal(-40397497.0000000))*(sj3))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst0)*(((IkReal(-49839992280.0000))+(((IkReal(-99582629640.0000))*(sj2)))+(((IkReal(1874559440.00000))*(cj2)))+(((IkReal(-1.00000000000000))*(sj2)*(x1707)*(x1714)))+(((IkReal(190892000000.000))*(x1714)*(x1715)))+(((IkReal(-25430632240.0000))*(cj3)))+(((IkReal(9798677252.00000))*(sj3)))+(((IkReal(-1.00000000000000))*(x1711)*(x1712)))+(((IkReal(-1.00000000000000))*(x1711)*(x1713)))+(((cj2)*(pz)*(x1707)))+(((IkReal(190892000000.000))*(pz)*(x1710)))+(((sj2)*(x1707)*(x1708)))+(((IkReal(-190892000000.000))*(x1708)*(x1715))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst0)*(((IkReal(205477830.000000))+(((IkReal(-7728340.00000000))*(cj2)))+(((IkReal(787000000.000000))*(x1708)*(x1715)))+(((IkReal(-1.00000000000000))*(x1712)*(x1716)))+(((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x1709)))+(((IkReal(-1.00000000000000))*(x1713)*(x1716)))+(((x1714)*(x1717)))+(((IkReal(-1.00000000000000))*(x1709)*(x1710)))+(((IkReal(-787000000.000000))*(x1714)*(x1715)))+(((IkReal(104844140.000000))*(cj3)))+(((IkReal(-1.00000000000000))*(x1708)*(x1717)))+(((IkReal(410554290.000000))*(sj2)))+(((IkReal(-40397497.0000000))*(sj3)))))), ((gconst0)*(((IkReal(-49839992280.0000))+(((IkReal(-99582629640.0000))*(sj2)))+(((IkReal(1874559440.00000))*(cj2)))+(((IkReal(-1.00000000000000))*(sj2)*(x1707)*(x1714)))+(((IkReal(190892000000.000))*(x1714)*(x1715)))+(((IkReal(-25430632240.0000))*(cj3)))+(((IkReal(9798677252.00000))*(sj3)))+(((IkReal(-1.00000000000000))*(x1711)*(x1712)))+(((IkReal(-1.00000000000000))*(x1711)*(x1713)))+(((cj2)*(pz)*(x1707)))+(((IkReal(190892000000.000))*(pz)*(x1710)))+(((sj2)*(x1707)*(x1708)))+(((IkReal(-190892000000.000))*(x1708)*(x1715)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[3];
IkReal x1718=IKsin(j4);
IkReal x1719=IKcos(j4);
IkReal x1720=((cj1)*(sj2));
IkReal x1721=((px)*(sj0));
IkReal x1722=((sj1)*(sj2));
IkReal x1723=((cj0)*(py));
IkReal x1724=((cj2)*(pz));
IkReal x1725=((IkReal(1.00000000000000))*(cj1));
IkReal x1726=((cj2)*(x1723));
IkReal x1727=((IkReal(0.000787000000000000))*(x1718));
IkReal x1728=((IkReal(0.190892000000000))*(x1719));
evalcond[0]=((((IkReal(0.000787000000000000))*(x1719)))+(((IkReal(0.190892000000000))*(x1718)))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[1]=((IkReal(-0.261090000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((cj3)*(x1727)))+(((pz)*(x1720)))+(((x1721)*(x1722)))+(((IkReal(-1.00000000000000))*(cj2)*(x1721)*(x1725)))+(((sj1)*(x1724)))+(((IkReal(-1.00000000000000))*(cj3)*(x1728)))+(((IkReal(-0.133220000000000))*(cj3)))+(((cj1)*(x1726)))+(((IkReal(0.0513310000000000))*(sj3)))+(((IkReal(-1.00000000000000))*(x1722)*(x1723)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[2]=((IkReal(0.00750000000000000))+(((sj3)*(x1728)))+(((pz)*(x1722)))+(((IkReal(-1.00000000000000))*(x1720)*(x1721)))+(((sj1)*(x1726)))+(((IkReal(0.133220000000000))*(sj3)))+(((IkReal(0.521670000000000))*(cj2)))+(((x1720)*(x1723)))+(((IkReal(-1.00000000000000))*(x1724)*(x1725)))+(((IkReal(0.0513310000000000))*(cj3)))+(((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x1721)))+(((IkReal(-1.00000000000000))*(sj3)*(x1727)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[2];
IkReal x1729=(cj3)*(cj3);
IkReal x1730=(sj3)*(sj3);
dummyeval[0]=((((sj4)*(x1730)))+(((sj4)*(x1729))));
dummyeval[1]=((((IkReal(-1.00000000000000))*(x1729)))+(((IkReal(-1.00000000000000))*(x1730))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=cj4;
dummyeval[1]=sj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=cj4;
dummyeval[1]=cj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x1731=((cj1)*(sj2));
IkReal x1732=((px)*(sj0));
IkReal x1733=((sj1)*(sj2));
IkReal x1734=((cj0)*(py));
IkReal x1735=((cj2)*(pz));
IkReal x1736=((IkReal(1.00000000000000))*(cj1));
IkReal x1737=((cj2)*(x1734));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(0.190892000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.261090000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((pz)*(x1731)))+(((IkReal(-1.00000000000000))*(x1733)*(x1734)))+(((IkReal(-1.00000000000000))*(cj2)*(x1732)*(x1736)))+(((sj1)*(x1735)))+(((cj1)*(x1737)))+(((IkReal(-0.132433000000000))*(cj3)))+(((x1732)*(x1733)))+(((IkReal(0.0513310000000000))*(sj3)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(0.00750000000000000))+(((x1731)*(x1734)))+(((pz)*(x1733)))+(((sj1)*(x1737)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x1735)*(x1736)))+(((IkReal(-1.00000000000000))*(x1731)*(x1732)))+(((IkReal(0.0513310000000000))*(cj3)))+(((IkReal(0.132433000000000))*(sj3)))+(((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x1732)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst2;
gconst2=IKsign((((sj3)*(sj3))+((cj3)*(cj3))));
dummyeval[0]=(((sj3)*(sj3))+((cj3)*(cj3)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1738=((IkReal(1.00000000000000))*(cj3));
IkReal x1739=((cj1)*(cj2));
IkReal x1740=((r00)*(sj0));
IkReal x1741=((r02)*(sj3));
IkReal x1742=((cj3)*(r02));
IkReal x1743=((cj2)*(sj1));
IkReal x1744=((IkReal(1.00000000000000))*(sj3));
IkReal x1745=((cj0)*(r01));
IkReal x1746=((cj1)*(sj2));
IkReal x1747=((sj1)*(sj2));
IkReal x1748=((sj1)*(x1745));
if( IKabs(((gconst2)*(((((IkReal(-1.00000000000000))*(x1743)*(x1744)*(x1745)))+(((IkReal(-1.00000000000000))*(x1738)*(x1745)*(x1747)))+(((x1739)*(x1741)))+(((cj3)*(x1740)*(x1747)))+(((IkReal(-1.00000000000000))*(x1741)*(x1747)))+(((x1742)*(x1746)))+(((x1742)*(x1743)))+(((cj3)*(x1739)*(x1745)))+(((IkReal(-1.00000000000000))*(x1744)*(x1745)*(x1746)))+(((IkReal(-1.00000000000000))*(x1738)*(x1739)*(x1740)))+(((sj3)*(x1740)*(x1743)))+(((sj3)*(x1740)*(x1746))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst2)*(((((IkReal(-1.00000000000000))*(x1738)*(x1745)*(x1746)))+(((x1739)*(x1742)))+(((sj3)*(x1739)*(x1740)))+(((cj3)*(x1740)*(x1743)))+(((cj3)*(x1740)*(x1746)))+(((IkReal(-1.00000000000000))*(x1740)*(x1744)*(x1747)))+(((IkReal(-1.00000000000000))*(x1739)*(x1744)*(x1745)))+(((IkReal(-1.00000000000000))*(x1741)*(x1743)))+(((IkReal(-1.00000000000000))*(x1741)*(x1746)))+(((IkReal(-1.00000000000000))*(x1738)*(x1743)*(x1745)))+(((sj3)*(x1745)*(x1747)))+(((IkReal(-1.00000000000000))*(r02)*(x1738)*(x1747))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst2)*(((((IkReal(-1.00000000000000))*(x1743)*(x1744)*(x1745)))+(((IkReal(-1.00000000000000))*(x1738)*(x1745)*(x1747)))+(((x1739)*(x1741)))+(((cj3)*(x1740)*(x1747)))+(((IkReal(-1.00000000000000))*(x1741)*(x1747)))+(((x1742)*(x1746)))+(((x1742)*(x1743)))+(((cj3)*(x1739)*(x1745)))+(((IkReal(-1.00000000000000))*(x1744)*(x1745)*(x1746)))+(((IkReal(-1.00000000000000))*(x1738)*(x1739)*(x1740)))+(((sj3)*(x1740)*(x1743)))+(((sj3)*(x1740)*(x1746)))))), ((gconst2)*(((((IkReal(-1.00000000000000))*(x1738)*(x1745)*(x1746)))+(((x1739)*(x1742)))+(((sj3)*(x1739)*(x1740)))+(((cj3)*(x1740)*(x1743)))+(((cj3)*(x1740)*(x1746)))+(((IkReal(-1.00000000000000))*(x1740)*(x1744)*(x1747)))+(((IkReal(-1.00000000000000))*(x1739)*(x1744)*(x1745)))+(((IkReal(-1.00000000000000))*(x1741)*(x1743)))+(((IkReal(-1.00000000000000))*(x1741)*(x1746)))+(((IkReal(-1.00000000000000))*(x1738)*(x1743)*(x1745)))+(((sj3)*(x1745)*(x1747)))+(((IkReal(-1.00000000000000))*(r02)*(x1738)*(x1747)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1749=IKcos(j5);
IkReal x1750=IKsin(j5);
IkReal x1751=((r02)*(sj2));
IkReal x1752=((IkReal(1.00000000000000))*(sj2));
IkReal x1753=((r00)*(sj0));
IkReal x1754=((cj1)*(cj2));
IkReal x1755=((cj0)*(r01));
IkReal x1756=((sj1)*(x1755));
IkReal x1757=((IkReal(1.00000000000000))*(cj2)*(x1753));
evalcond[0]=((((IkReal(-1.00000000000000))*(r02)*(x1754)))+(((cj2)*(x1756)))+(((cj3)*(x1749)))+(((IkReal(-1.00000000000000))*(sj1)*(x1757)))+(((cj1)*(sj2)*(x1755)))+(((sj1)*(x1751)))+(((sj3)*(x1750)))+(((IkReal(-1.00000000000000))*(cj1)*(x1752)*(x1753))));
evalcond[1]=((((sj1)*(sj2)*(x1753)))+(((x1754)*(x1755)))+(((cj1)*(x1751)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1752)*(x1756)))+(((sj3)*(x1749)))+(((IkReal(-1.00000000000000))*(x1753)*(x1754)))+(((IkReal(-1.00000000000000))*(cj3)*(x1750))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1758=((cj1)*(sj2));
IkReal x1759=((px)*(sj0));
IkReal x1760=((sj1)*(sj2));
IkReal x1761=((cj0)*(py));
IkReal x1762=((cj2)*(pz));
IkReal x1763=((IkReal(1.00000000000000))*(cj1));
IkReal x1764=((cj2)*(x1761));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(-0.190892000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.261090000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((pz)*(x1758)))+(((sj1)*(x1762)))+(((IkReal(-0.134007000000000))*(cj3)))+(((x1759)*(x1760)))+(((IkReal(-1.00000000000000))*(cj2)*(x1759)*(x1763)))+(((IkReal(0.0513310000000000))*(sj3)))+(((IkReal(-0.521670000000000))*(sj2)))+(((cj1)*(x1764)))+(((IkReal(-1.00000000000000))*(x1760)*(x1761))));
evalcond[4]=((IkReal(0.00750000000000000))+(((IkReal(-1.00000000000000))*(x1762)*(x1763)))+(((IkReal(-1.00000000000000))*(x1758)*(x1759)))+(((sj1)*(x1764)))+(((IkReal(0.134007000000000))*(sj3)))+(((IkReal(0.521670000000000))*(cj2)))+(((pz)*(x1760)))+(((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x1759)))+(((x1758)*(x1761)))+(((IkReal(0.0513310000000000))*(cj3)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst3;
gconst3=IKsign((((sj3)*(sj3))+((cj3)*(cj3))));
dummyeval[0]=(((sj3)*(sj3))+((cj3)*(cj3)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1765=((r00)*(sj0));
IkReal x1766=((sj1)*(sj2));
IkReal x1767=((r02)*(sj3));
IkReal x1768=((cj0)*(r01));
IkReal x1769=((cj3)*(r02));
IkReal x1770=((IkReal(1.00000000000000))*(cj2));
IkReal x1771=((cj1)*(sj3));
IkReal x1772=((sj1)*(sj3));
IkReal x1773=((cj3)*(sj1));
IkReal x1774=((cj1)*(cj2)*(cj3));
IkReal x1775=((IkReal(1.00000000000000))*(cj1)*(sj2));
if( IKabs(((gconst3)*(((((sj2)*(x1768)*(x1771)))+(((cj2)*(x1768)*(x1772)))+(((cj3)*(x1766)*(x1768)))+(((IkReal(-1.00000000000000))*(sj1)*(x1769)*(x1770)))+(((IkReal(-1.00000000000000))*(cj1)*(x1767)*(x1770)))+(((x1765)*(x1774)))+(((IkReal(-1.00000000000000))*(sj2)*(x1765)*(x1771)))+(((x1766)*(x1767)))+(((IkReal(-1.00000000000000))*(x1765)*(x1770)*(x1772)))+(((IkReal(-1.00000000000000))*(x1769)*(x1775)))+(((IkReal(-1.00000000000000))*(cj1)*(cj3)*(x1768)*(x1770)))+(((IkReal(-1.00000000000000))*(cj3)*(x1765)*(x1766))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst3)*(((((IkReal(-1.00000000000000))*(sj3)*(x1765)*(x1766)))+(((IkReal(-1.00000000000000))*(x1767)*(x1775)))+(((sj3)*(x1766)*(x1768)))+(((cj2)*(x1765)*(x1771)))+(((cj2)*(x1765)*(x1773)))+(((IkReal(-1.00000000000000))*(x1768)*(x1770)*(x1773)))+(((IkReal(-1.00000000000000))*(x1768)*(x1770)*(x1771)))+(((cj1)*(cj2)*(x1769)))+(((IkReal(-1.00000000000000))*(sj1)*(x1767)*(x1770)))+(((cj1)*(cj3)*(sj2)*(x1765)))+(((IkReal(-1.00000000000000))*(cj3)*(x1768)*(x1775)))+(((IkReal(-1.00000000000000))*(x1766)*(x1769))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst3)*(((((sj2)*(x1768)*(x1771)))+(((cj2)*(x1768)*(x1772)))+(((cj3)*(x1766)*(x1768)))+(((IkReal(-1.00000000000000))*(sj1)*(x1769)*(x1770)))+(((IkReal(-1.00000000000000))*(cj1)*(x1767)*(x1770)))+(((x1765)*(x1774)))+(((IkReal(-1.00000000000000))*(sj2)*(x1765)*(x1771)))+(((x1766)*(x1767)))+(((IkReal(-1.00000000000000))*(x1765)*(x1770)*(x1772)))+(((IkReal(-1.00000000000000))*(x1769)*(x1775)))+(((IkReal(-1.00000000000000))*(cj1)*(cj3)*(x1768)*(x1770)))+(((IkReal(-1.00000000000000))*(cj3)*(x1765)*(x1766)))))), ((gconst3)*(((((IkReal(-1.00000000000000))*(sj3)*(x1765)*(x1766)))+(((IkReal(-1.00000000000000))*(x1767)*(x1775)))+(((sj3)*(x1766)*(x1768)))+(((cj2)*(x1765)*(x1771)))+(((cj2)*(x1765)*(x1773)))+(((IkReal(-1.00000000000000))*(x1768)*(x1770)*(x1773)))+(((IkReal(-1.00000000000000))*(x1768)*(x1770)*(x1771)))+(((cj1)*(cj2)*(x1769)))+(((IkReal(-1.00000000000000))*(sj1)*(x1767)*(x1770)))+(((cj1)*(cj3)*(sj2)*(x1765)))+(((IkReal(-1.00000000000000))*(cj3)*(x1768)*(x1775)))+(((IkReal(-1.00000000000000))*(x1766)*(x1769)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1776=IKsin(j5);
IkReal x1777=IKcos(j5);
IkReal x1778=((r02)*(sj2));
IkReal x1779=((IkReal(1.00000000000000))*(sj2));
IkReal x1780=((r00)*(sj0));
IkReal x1781=((IkReal(1.00000000000000))*(cj2));
IkReal x1782=((cj0)*(r01)*(sj1));
IkReal x1783=((cj0)*(cj1)*(r01));
evalcond[0]=((((IkReal(-1.00000000000000))*(sj1)*(x1780)*(x1781)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1781)))+(((sj2)*(x1783)))+(((cj2)*(x1782)))+(((IkReal(-1.00000000000000))*(sj3)*(x1776)))+(((IkReal(-1.00000000000000))*(cj1)*(x1779)*(x1780)))+(((cj3)*(x1777)))+(((sj1)*(x1778))));
evalcond[1]=((((sj1)*(sj2)*(x1780)))+(((cj2)*(x1783)))+(((IkReal(-1.00000000000000))*(cj1)*(x1780)*(x1781)))+(((sj3)*(x1777)))+(((cj2)*(r02)*(sj1)))+(((cj3)*(x1776)))+(((IkReal(-1.00000000000000))*(x1779)*(x1782)))+(((cj1)*(x1778))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1784=((cj1)*(sj2));
IkReal x1785=((px)*(sj0));
IkReal x1786=((sj1)*(sj2));
IkReal x1787=((cj0)*(py));
IkReal x1788=((cj2)*(pz));
IkReal x1789=((IkReal(1.00000000000000))*(cj1));
IkReal x1790=((cj2)*(x1787));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(0.190892000000000))*(sj4)))+(((IkReal(0.000787000000000000))*(cj4)))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((IkReal(-0.209759000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((sj1)*(x1788)))+(((pz)*(x1784)))+(((cj1)*(x1790)))+(((IkReal(-1.00000000000000))*(cj2)*(x1785)*(x1789)))+(((x1785)*(x1786)))+(((IkReal(-0.521670000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(x1786)*(x1787))));
evalcond[3]=((IkReal(0.140720000000000))+(((IkReal(0.190892000000000))*(cj4)))+(((sj1)*(x1790)))+(((pz)*(x1786)))+(((IkReal(0.521670000000000))*(cj2)))+(((x1784)*(x1787)))+(((IkReal(-1.00000000000000))*(x1788)*(x1789)))+(((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x1785)))+(((IkReal(-1.00000000000000))*(x1784)*(x1785)))+(((IkReal(-0.000787000000000000))*(sj4)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x1791=((IkReal(1.00000000000000))*(sj0));
IkReal x1792=((cj1)*(sj2));
IkReal x1793=((sj1)*(sj2));
IkReal x1794=((cj2)*(sj1));
IkReal x1795=((cj0)*(r01));
IkReal x1796=((cj0)*(py));
IkReal x1797=((cj2)*(x1796));
IkReal x1798=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.000787000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r00)*(x1791)*(x1792)))+(((IkReal(-1.00000000000000))*(r00)*(x1791)*(x1794)))+(((r02)*(x1793)))+(((x1794)*(x1795)))+(((x1792)*(x1795)))+(((IkReal(-1.00000000000000))*(r02)*(x1798))));
evalcond[3]=((IkReal(-0.209759000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x1793)*(x1796)))+(((pz)*(x1794)))+(((pz)*(x1792)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(px)*(x1791)))+(((cj1)*(x1797)))+(((IkReal(-0.521670000000000))*(sj2)))+(((px)*(sj0)*(x1793))));
evalcond[4]=((IkReal(0.331612000000000))+(((IkReal(-1.00000000000000))*(px)*(x1791)*(x1792)))+(((IkReal(-1.00000000000000))*(px)*(x1791)*(x1794)))+(((pz)*(x1793)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(pz)*(x1798)))+(((x1794)*(x1796)))+(((x1792)*(x1796)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1799=((cj0)*(r01));
IkReal x1800=((sj1)*(sj2));
IkReal x1801=((IkReal(1.00000000000000))*(cj1));
IkReal x1802=((r00)*(sj0));
if( IKabs(((((r01)*(sj0)))+(((cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x1800)*(x1802)))+(((x1799)*(x1800)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1801)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((cj1)*(cj2)*(x1802)))+(((IkReal(-1.00000000000000))*(cj2)*(x1799)*(x1801))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r01)*(sj0)))+(((cj0)*(r00)))))+IKsqr(((((IkReal(-1.00000000000000))*(x1800)*(x1802)))+(((x1799)*(x1800)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1801)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((cj1)*(cj2)*(x1802)))+(((IkReal(-1.00000000000000))*(cj2)*(x1799)*(x1801)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((r01)*(sj0)))+(((cj0)*(r00)))), ((((IkReal(-1.00000000000000))*(x1800)*(x1802)))+(((x1799)*(x1800)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1801)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((cj1)*(cj2)*(x1802)))+(((IkReal(-1.00000000000000))*(cj2)*(x1799)*(x1801)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1803=((sj1)*(sj2));
IkReal x1804=((cj0)*(r01));
IkReal x1805=((r00)*(sj0));
IkReal x1806=((cj1)*(cj2));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((cj0)*(r00))));
evalcond[1]=((((x1803)*(x1805)))+(IKcos(j5))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1803)*(x1804)))+(((x1804)*(x1806)))+(((IkReal(-1.00000000000000))*(x1805)*(x1806)))+(((cj1)*(r02)*(sj2))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1807=((IkReal(1.00000000000000))*(sj0));
IkReal x1808=((cj1)*(sj2));
IkReal x1809=((sj1)*(sj2));
IkReal x1810=((cj2)*(sj1));
IkReal x1811=((cj0)*(r01));
IkReal x1812=((cj0)*(py));
IkReal x1813=((cj2)*(x1812));
IkReal x1814=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.000787000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r02)*(x1814)))+(((IkReal(-1.00000000000000))*(r00)*(x1807)*(x1810)))+(((r02)*(x1809)))+(((x1808)*(x1811)))+(((IkReal(-1.00000000000000))*(r00)*(x1807)*(x1808)))+(((x1810)*(x1811))));
evalcond[3]=((IkReal(-0.209759000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x1809)*(x1812)))+(((px)*(sj0)*(x1809)))+(((pz)*(x1810)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(px)*(x1807)))+(((cj1)*(x1813)))+(((IkReal(-0.521670000000000))*(sj2)))+(((pz)*(x1808))));
evalcond[4]=((IkReal(-0.0501720000000000))+(((IkReal(-1.00000000000000))*(px)*(x1807)*(x1808)))+(((IkReal(-1.00000000000000))*(px)*(x1807)*(x1810)))+(((IkReal(0.521670000000000))*(cj2)))+(((x1808)*(x1812)))+(((IkReal(-1.00000000000000))*(pz)*(x1814)))+(((pz)*(x1809)))+(((x1810)*(x1812)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1815=((sj1)*(sj2));
IkReal x1816=((cj0)*(r01));
IkReal x1817=((r00)*(sj0));
IkReal x1818=((IkReal(1.00000000000000))*(cj1));
if( IKabs(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(cj2)*(x1816)*(x1818)))+(((IkReal(-1.00000000000000))*(x1815)*(x1817)))+(((cj1)*(cj2)*(x1817)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((x1815)*(x1816)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1818))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))))+IKsqr(((((IkReal(-1.00000000000000))*(cj2)*(x1816)*(x1818)))+(((IkReal(-1.00000000000000))*(x1815)*(x1817)))+(((cj1)*(cj2)*(x1817)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((x1815)*(x1816)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1818)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))), ((((IkReal(-1.00000000000000))*(cj2)*(x1816)*(x1818)))+(((IkReal(-1.00000000000000))*(x1815)*(x1817)))+(((cj1)*(cj2)*(x1817)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((x1815)*(x1816)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1818)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1819=((sj1)*(sj2));
IkReal x1820=((cj0)*(r01));
IkReal x1821=((r00)*(sj0));
IkReal x1822=((cj1)*(cj2));
evalcond[0]=((((r01)*(sj0)))+(IKsin(j5))+(((cj0)*(r00))));
evalcond[1]=((((x1819)*(x1821)))+(((IkReal(-1.00000000000000))*(x1819)*(x1820)))+(((IkReal(-1.00000000000000))*(x1821)*(x1822)))+(IKcos(j5))+(((cj2)*(r02)*(sj1)))+(((x1820)*(x1822)))+(((cj1)*(r02)*(sj2))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1823=((pz)*(sj1));
IkReal x1824=((cj0)*(py));
IkReal x1825=((IkReal(1.00000000000000))*(sj2));
IkReal x1826=((cj1)*(cj2));
IkReal x1827=((px)*(sj0));
IkReal x1828=((cj2)*(sj1));
IkReal x1829=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(0.190892000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.209759000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((pz)*(x1829)))+(((x1824)*(x1826)))+(((sj1)*(sj2)*(x1827)))+(((IkReal(-1.00000000000000))*(sj1)*(x1824)*(x1825)))+(((cj2)*(x1823)))+(((IkReal(-0.521670000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(x1826)*(x1827))));
evalcond[4]=((IkReal(0.139933000000000))+(((IkReal(-1.00000000000000))*(pz)*(x1826)))+(((x1824)*(x1829)))+(((x1824)*(x1828)))+(((IkReal(0.521670000000000))*(cj2)))+(((sj2)*(x1823)))+(((IkReal(-1.00000000000000))*(x1827)*(x1828)))+(((IkReal(-1.00000000000000))*(cj1)*(x1825)*(x1827)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1830=((IkReal(1.00000000000000))*(sj2));
IkReal x1831=((r02)*(sj1));
IkReal x1832=((cj0)*(r01));
IkReal x1833=((r00)*(sj0));
IkReal x1834=((cj1)*(r02));
IkReal x1835=((IkReal(1.00000000000000))*(cj2));
if( IKabs(((((cj2)*(x1834)))+(((IkReal(-1.00000000000000))*(cj1)*(x1830)*(x1832)))+(((cj2)*(sj1)*(x1833)))+(((IkReal(-1.00000000000000))*(sj1)*(x1832)*(x1835)))+(((cj1)*(sj2)*(x1833)))+(((IkReal(-1.00000000000000))*(x1830)*(x1831))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((sj1)*(sj2)*(x1832)))+(((IkReal(-1.00000000000000))*(cj1)*(x1832)*(x1835)))+(((IkReal(-1.00000000000000))*(x1831)*(x1835)))+(((cj1)*(cj2)*(x1833)))+(((IkReal(-1.00000000000000))*(sj1)*(x1830)*(x1833)))+(((IkReal(-1.00000000000000))*(x1830)*(x1834))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj2)*(x1834)))+(((IkReal(-1.00000000000000))*(cj1)*(x1830)*(x1832)))+(((cj2)*(sj1)*(x1833)))+(((IkReal(-1.00000000000000))*(sj1)*(x1832)*(x1835)))+(((cj1)*(sj2)*(x1833)))+(((IkReal(-1.00000000000000))*(x1830)*(x1831)))))+IKsqr(((((sj1)*(sj2)*(x1832)))+(((IkReal(-1.00000000000000))*(cj1)*(x1832)*(x1835)))+(((IkReal(-1.00000000000000))*(x1831)*(x1835)))+(((cj1)*(cj2)*(x1833)))+(((IkReal(-1.00000000000000))*(sj1)*(x1830)*(x1833)))+(((IkReal(-1.00000000000000))*(x1830)*(x1834)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((cj2)*(x1834)))+(((IkReal(-1.00000000000000))*(cj1)*(x1830)*(x1832)))+(((cj2)*(sj1)*(x1833)))+(((IkReal(-1.00000000000000))*(sj1)*(x1832)*(x1835)))+(((cj1)*(sj2)*(x1833)))+(((IkReal(-1.00000000000000))*(x1830)*(x1831)))), ((((sj1)*(sj2)*(x1832)))+(((IkReal(-1.00000000000000))*(cj1)*(x1832)*(x1835)))+(((IkReal(-1.00000000000000))*(x1831)*(x1835)))+(((cj1)*(cj2)*(x1833)))+(((IkReal(-1.00000000000000))*(sj1)*(x1830)*(x1833)))+(((IkReal(-1.00000000000000))*(x1830)*(x1834)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1836=((r02)*(sj2));
IkReal x1837=((IkReal(1.00000000000000))*(sj2));
IkReal x1838=((r00)*(sj0));
IkReal x1839=((cj1)*(cj2));
IkReal x1840=((cj0)*(r01));
IkReal x1841=((sj1)*(x1840));
IkReal x1842=((IkReal(1.00000000000000))*(cj2)*(x1838));
evalcond[0]=((((sj1)*(x1836)))+(((IkReal(-1.00000000000000))*(sj1)*(x1842)))+(((cj2)*(x1841)))+(IKsin(j5))+(((IkReal(-1.00000000000000))*(cj1)*(x1837)*(x1838)))+(((cj1)*(sj2)*(x1840)))+(((IkReal(-1.00000000000000))*(r02)*(x1839))));
evalcond[1]=((((sj1)*(sj2)*(x1838)))+(IKcos(j5))+(((x1839)*(x1840)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1838)*(x1839)))+(((IkReal(-1.00000000000000))*(x1837)*(x1841)))+(((cj1)*(x1836))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1843=((pz)*(sj1));
IkReal x1844=((cj0)*(py));
IkReal x1845=((IkReal(1.00000000000000))*(sj2));
IkReal x1846=((cj1)*(cj2));
IkReal x1847=((px)*(sj0));
IkReal x1848=((cj2)*(sj1));
IkReal x1849=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(-0.190892000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.209759000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x1846)*(x1847)))+(((x1844)*(x1846)))+(((cj2)*(x1843)))+(((pz)*(x1849)))+(((sj1)*(sj2)*(x1847)))+(((IkReal(-1.00000000000000))*(sj1)*(x1844)*(x1845)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(0.141507000000000))+(((IkReal(-1.00000000000000))*(x1847)*(x1848)))+(((IkReal(-1.00000000000000))*(pz)*(x1846)))+(((x1844)*(x1848)))+(((x1844)*(x1849)))+(((sj2)*(x1843)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(cj1)*(x1845)*(x1847)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1850=((cj2)*(sj1));
IkReal x1851=((IkReal(1.00000000000000))*(r02));
IkReal x1852=((cj0)*(r01));
IkReal x1853=((sj1)*(sj2));
IkReal x1854=((cj1)*(cj2));
IkReal x1855=((cj1)*(sj2));
IkReal x1856=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((x1852)*(x1855)))+(((x1850)*(x1852)))+(((IkReal(-1.00000000000000))*(x1851)*(x1854)))+(((IkReal(-1.00000000000000))*(x1850)*(x1856)))+(((r02)*(x1853)))+(((IkReal(-1.00000000000000))*(x1855)*(x1856))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x1852)*(x1853)))+(((IkReal(-1.00000000000000))*(x1851)*(x1855)))+(((IkReal(-1.00000000000000))*(x1852)*(x1854)))+(((IkReal(-1.00000000000000))*(x1850)*(x1851)))+(((IkReal(-1.00000000000000))*(x1853)*(x1856)))+(((r00)*(sj0)*(x1854))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((x1852)*(x1855)))+(((x1850)*(x1852)))+(((IkReal(-1.00000000000000))*(x1851)*(x1854)))+(((IkReal(-1.00000000000000))*(x1850)*(x1856)))+(((r02)*(x1853)))+(((IkReal(-1.00000000000000))*(x1855)*(x1856)))))+IKsqr(((((x1852)*(x1853)))+(((IkReal(-1.00000000000000))*(x1851)*(x1855)))+(((IkReal(-1.00000000000000))*(x1852)*(x1854)))+(((IkReal(-1.00000000000000))*(x1850)*(x1851)))+(((IkReal(-1.00000000000000))*(x1853)*(x1856)))+(((r00)*(sj0)*(x1854)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((x1852)*(x1855)))+(((x1850)*(x1852)))+(((IkReal(-1.00000000000000))*(x1851)*(x1854)))+(((IkReal(-1.00000000000000))*(x1850)*(x1856)))+(((r02)*(x1853)))+(((IkReal(-1.00000000000000))*(x1855)*(x1856)))), ((((x1852)*(x1853)))+(((IkReal(-1.00000000000000))*(x1851)*(x1855)))+(((IkReal(-1.00000000000000))*(x1852)*(x1854)))+(((IkReal(-1.00000000000000))*(x1850)*(x1851)))+(((IkReal(-1.00000000000000))*(x1853)*(x1856)))+(((r00)*(sj0)*(x1854)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1857=((r02)*(sj2));
IkReal x1858=((IkReal(1.00000000000000))*(sj2));
IkReal x1859=((r00)*(sj0));
IkReal x1860=((cj1)*(cj2));
IkReal x1861=((cj0)*(r01));
IkReal x1862=((sj1)*(x1861));
IkReal x1863=((IkReal(1.00000000000000))*(cj2)*(x1859));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj1)*(x1858)*(x1859)))+(((cj1)*(sj2)*(x1861)))+(((sj1)*(x1857)))+(((IkReal(-1.00000000000000))*(sj1)*(x1863)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((IkReal(-1.00000000000000))*(r02)*(x1860)))+(((cj2)*(x1862))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1859)*(x1860)))+(((x1860)*(x1861)))+(((sj1)*(sj2)*(x1859)))+(((cj1)*(x1857)))+(IKcos(j5))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1858)*(x1862))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1864=((IkReal(1.00000000000000))*(sj2));
IkReal x1865=((r02)*(sj1));
IkReal x1866=((cj0)*(r01));
IkReal x1867=((cj1)*(r02));
IkReal x1868=((r00)*(sj0));
IkReal x1869=((IkReal(1.00000000000000))*(cj2));
if( IKabs(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj1)*(x1864)*(x1866)))+(((IkReal(-1.00000000000000))*(x1864)*(x1865)))+(((cj2)*(sj1)*(x1868)))+(((cj1)*(sj2)*(x1868)))+(((IkReal(-1.00000000000000))*(sj1)*(x1866)*(x1869)))+(((cj2)*(x1867))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x1864)*(x1867)))+(((IkReal(-1.00000000000000))*(cj1)*(x1866)*(x1869)))+(((cj1)*(cj2)*(x1868)))+(((IkReal(-1.00000000000000))*(x1865)*(x1869)))+(((sj1)*(sj2)*(x1866)))+(((IkReal(-1.00000000000000))*(sj1)*(x1864)*(x1868))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj1)*(x1864)*(x1866)))+(((IkReal(-1.00000000000000))*(x1864)*(x1865)))+(((cj2)*(sj1)*(x1868)))+(((cj1)*(sj2)*(x1868)))+(((IkReal(-1.00000000000000))*(sj1)*(x1866)*(x1869)))+(((cj2)*(x1867)))))))+IKsqr(((((IkReal(-1.00000000000000))*(x1864)*(x1867)))+(((IkReal(-1.00000000000000))*(cj1)*(x1866)*(x1869)))+(((cj1)*(cj2)*(x1868)))+(((IkReal(-1.00000000000000))*(x1865)*(x1869)))+(((sj1)*(sj2)*(x1866)))+(((IkReal(-1.00000000000000))*(sj1)*(x1864)*(x1868)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj1)*(x1864)*(x1866)))+(((IkReal(-1.00000000000000))*(x1864)*(x1865)))+(((cj2)*(sj1)*(x1868)))+(((cj1)*(sj2)*(x1868)))+(((IkReal(-1.00000000000000))*(sj1)*(x1866)*(x1869)))+(((cj2)*(x1867)))))), ((((IkReal(-1.00000000000000))*(x1864)*(x1867)))+(((IkReal(-1.00000000000000))*(cj1)*(x1866)*(x1869)))+(((cj1)*(cj2)*(x1868)))+(((IkReal(-1.00000000000000))*(x1865)*(x1869)))+(((sj1)*(sj2)*(x1866)))+(((IkReal(-1.00000000000000))*(sj1)*(x1864)*(x1868)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1870=IKsin(j5);
IkReal x1871=((r02)*(sj2));
IkReal x1872=((IkReal(1.00000000000000))*(sj2));
IkReal x1873=((r00)*(sj0));
IkReal x1874=((IkReal(1.00000000000000))*(cj2));
IkReal x1875=((cj0)*(r01)*(sj1));
IkReal x1876=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x1870)))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj1)*(x1873)*(x1874)))+(((sj2)*(x1876)))+(((cj2)*(x1875)))+(((sj1)*(x1871)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1874)))+(((sj4)*(x1870)))+(((IkReal(-1.00000000000000))*(cj1)*(x1872)*(x1873))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj1)*(x1873)*(x1874)))+(((IkReal(-1.00000000000000))*(x1872)*(x1875)))+(((cj2)*(x1876)))+(IKcos(j5))+(((sj1)*(sj2)*(x1873)))+(((cj1)*(x1871)))+(((cj2)*(r02)*(sj1))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1877=((cj0)*(r01));
IkReal x1878=((sj1)*(sj2));
IkReal x1879=((IkReal(1.00000000000000))*(cj1));
IkReal x1880=((r00)*(sj0));
if( IKabs(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x1877)*(x1878)))+(((cj1)*(cj2)*(x1880)))+(((IkReal(-1.00000000000000))*(x1878)*(x1880)))+(((IkReal(-1.00000000000000))*(cj2)*(x1877)*(x1879)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1879))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))))+IKsqr(((((x1877)*(x1878)))+(((cj1)*(cj2)*(x1880)))+(((IkReal(-1.00000000000000))*(x1878)*(x1880)))+(((IkReal(-1.00000000000000))*(cj2)*(x1877)*(x1879)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1879)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))), ((((x1877)*(x1878)))+(((cj1)*(cj2)*(x1880)))+(((IkReal(-1.00000000000000))*(x1878)*(x1880)))+(((IkReal(-1.00000000000000))*(cj2)*(x1877)*(x1879)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1879)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1881=IKsin(j5);
IkReal x1882=((r02)*(sj2));
IkReal x1883=((IkReal(1.00000000000000))*(sj2));
IkReal x1884=((r00)*(sj0));
IkReal x1885=((IkReal(1.00000000000000))*(cj2));
IkReal x1886=((cj0)*(r01)*(sj1));
IkReal x1887=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x1881)))+(((cj0)*(r00))));
evalcond[1]=((((sj2)*(x1887)))+(((IkReal(-1.00000000000000))*(cj1)*(x1883)*(x1884)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1885)))+(((sj4)*(x1881)))+(((cj2)*(x1886)))+(((IkReal(-1.00000000000000))*(sj1)*(x1884)*(x1885)))+(((sj1)*(x1882))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1883)*(x1886)))+(((IkReal(-1.00000000000000))*(cj1)*(x1884)*(x1885)))+(((cj2)*(x1887)))+(((cj1)*(x1882)))+(IKcos(j5))+(((cj2)*(r02)*(sj1)))+(((sj1)*(sj2)*(x1884))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1888=((cj1)*(sj2));
IkReal x1889=((px)*(sj0));
IkReal x1890=((sj1)*(sj2));
IkReal x1891=((cj0)*(py));
IkReal x1892=((cj2)*(pz));
IkReal x1893=((IkReal(1.00000000000000))*(cj1));
IkReal x1894=((cj2)*(x1891));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(0.190892000000000))*(sj4)))+(((IkReal(0.000787000000000000))*(cj4)))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((IkReal(-0.312421000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((pz)*(x1888)))+(((IkReal(-1.00000000000000))*(cj2)*(x1889)*(x1893)))+(((IkReal(-1.00000000000000))*(x1890)*(x1891)))+(((cj1)*(x1894)))+(((x1889)*(x1890)))+(((sj1)*(x1892)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[3]=((IkReal(-0.125720000000000))+(((IkReal(-1.00000000000000))*(x1892)*(x1893)))+(((IkReal(0.000787000000000000))*(sj4)))+(((x1888)*(x1891)))+(((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x1889)))+(((pz)*(x1890)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x1888)*(x1889)))+(((IkReal(-0.190892000000000))*(cj4)))+(((sj1)*(x1894)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x1895=((IkReal(1.00000000000000))*(sj0));
IkReal x1896=((cj1)*(sj2));
IkReal x1897=((sj1)*(sj2));
IkReal x1898=((cj2)*(sj1));
IkReal x1899=((cj0)*(r01));
IkReal x1900=((cj0)*(py));
IkReal x1901=((cj2)*(x1900));
IkReal x1902=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.000787000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((r02)*(x1897)))+(((IkReal(-1.00000000000000))*(r00)*(x1895)*(x1896)))+(((IkReal(-1.00000000000000))*(r00)*(x1895)*(x1898)))+(((x1896)*(x1899)))+(((x1898)*(x1899)))+(((IkReal(-1.00000000000000))*(r02)*(x1902))));
evalcond[3]=((IkReal(-0.312421000000000))+(((px)*(sj0)*(x1897)))+(((IkReal(0.00982000000000000))*(cj2)))+(((cj1)*(x1901)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(px)*(x1895)))+(((IkReal(-1.00000000000000))*(x1897)*(x1900)))+(((pz)*(x1898)))+(((pz)*(x1896)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(-0.316612000000000))+(((IkReal(-1.00000000000000))*(pz)*(x1902)))+(((x1898)*(x1900)))+(((pz)*(x1897)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(px)*(x1895)*(x1898)))+(((IkReal(-1.00000000000000))*(px)*(x1895)*(x1896)))+(((IkReal(0.00982000000000000))*(sj2)))+(((x1896)*(x1900))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1903=((sj1)*(sj2));
IkReal x1904=((cj0)*(r01));
IkReal x1905=((r00)*(sj0));
IkReal x1906=((cj1)*(cj2));
if( IKabs(((((r01)*(sj0)))+(((cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x1904)*(x1906)))+(((IkReal(-1.00000000000000))*(x1905)*(x1906)))+(((x1903)*(x1905)))+(((IkReal(-1.00000000000000))*(x1903)*(x1904)))+(((cj2)*(r02)*(sj1)))+(((cj1)*(r02)*(sj2))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r01)*(sj0)))+(((cj0)*(r00)))))+IKsqr(((((x1904)*(x1906)))+(((IkReal(-1.00000000000000))*(x1905)*(x1906)))+(((x1903)*(x1905)))+(((IkReal(-1.00000000000000))*(x1903)*(x1904)))+(((cj2)*(r02)*(sj1)))+(((cj1)*(r02)*(sj2)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((r01)*(sj0)))+(((cj0)*(r00)))), ((((x1904)*(x1906)))+(((IkReal(-1.00000000000000))*(x1905)*(x1906)))+(((x1903)*(x1905)))+(((IkReal(-1.00000000000000))*(x1903)*(x1904)))+(((cj2)*(r02)*(sj1)))+(((cj1)*(r02)*(sj2)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1907=((sj1)*(sj2));
IkReal x1908=((cj0)*(r01));
IkReal x1909=((r00)*(sj0));
IkReal x1910=((cj1)*(cj2));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(IKcos(j5))))+(((x1908)*(x1910)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1907)*(x1908)))+(((cj1)*(r02)*(sj2)))+(((x1907)*(x1909)))+(((IkReal(-1.00000000000000))*(x1909)*(x1910))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1911=((IkReal(1.00000000000000))*(sj0));
IkReal x1912=((cj1)*(sj2));
IkReal x1913=((sj1)*(sj2));
IkReal x1914=((cj2)*(sj1));
IkReal x1915=((cj0)*(r01));
IkReal x1916=((cj0)*(py));
IkReal x1917=((cj2)*(x1916));
IkReal x1918=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.000787000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((x1912)*(x1915)))+(((IkReal(-1.00000000000000))*(r02)*(x1918)))+(((x1914)*(x1915)))+(((IkReal(-1.00000000000000))*(r00)*(x1911)*(x1912)))+(((IkReal(-1.00000000000000))*(r00)*(x1911)*(x1914)))+(((r02)*(x1913))));
evalcond[3]=((IkReal(-0.312421000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((pz)*(x1914)))+(((pz)*(x1912)))+(((IkReal(-1.00000000000000))*(x1913)*(x1916)))+(((cj1)*(x1917)))+(((px)*(sj0)*(x1913)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(px)*(x1911)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(0.0651720000000000))+(((IkReal(-1.00000000000000))*(pz)*(x1918)))+(((x1912)*(x1916)))+(((pz)*(x1913)))+(((x1914)*(x1916)))+(((IkReal(-1.00000000000000))*(px)*(x1911)*(x1912)))+(((IkReal(-1.00000000000000))*(px)*(x1911)*(x1914)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1919=((r00)*(sj0));
IkReal x1920=((cj1)*(cj2));
IkReal x1921=((sj1)*(sj2));
IkReal x1922=((cj0)*(r01));
if( IKabs(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x1919)*(x1920)))+(((cj2)*(r02)*(sj1)))+(((x1919)*(x1921)))+(((IkReal(-1.00000000000000))*(x1921)*(x1922)))+(((x1920)*(x1922)))+(((cj1)*(r02)*(sj2))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))))+IKsqr(((((IkReal(-1.00000000000000))*(x1919)*(x1920)))+(((cj2)*(r02)*(sj1)))+(((x1919)*(x1921)))+(((IkReal(-1.00000000000000))*(x1921)*(x1922)))+(((x1920)*(x1922)))+(((cj1)*(r02)*(sj2)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))), ((((IkReal(-1.00000000000000))*(x1919)*(x1920)))+(((cj2)*(r02)*(sj1)))+(((x1919)*(x1921)))+(((IkReal(-1.00000000000000))*(x1921)*(x1922)))+(((x1920)*(x1922)))+(((cj1)*(r02)*(sj2)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1923=((sj1)*(sj2));
IkReal x1924=((cj0)*(r01));
IkReal x1925=((r00)*(sj0));
IkReal x1926=((cj1)*(cj2));
evalcond[0]=((((r01)*(sj0)))+(IKsin(j5))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1923)*(x1924)))+(((IkReal(-1.00000000000000))*(x1925)*(x1926)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((x1923)*(x1925)))+(((cj2)*(r02)*(sj1)))+(((x1924)*(x1926)))+(((cj1)*(r02)*(sj2))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1927=((pz)*(sj1));
IkReal x1928=((cj0)*(py));
IkReal x1929=((IkReal(1.00000000000000))*(sj2));
IkReal x1930=((cj1)*(cj2));
IkReal x1931=((px)*(sj0));
IkReal x1932=((cj2)*(sj1));
IkReal x1933=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(0.190892000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.312421000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x1930)*(x1931)))+(((sj1)*(sj2)*(x1931)))+(((pz)*(x1933)))+(((cj2)*(x1927)))+(((IkReal(-1.00000000000000))*(sj1)*(x1928)*(x1929)))+(((x1928)*(x1930)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(-0.124933000000000))+(((IkReal(-1.00000000000000))*(cj1)*(x1929)*(x1931)))+(((IkReal(-1.00000000000000))*(pz)*(x1930)))+(((IkReal(0.521670000000000))*(cj2)))+(((sj2)*(x1927)))+(((x1928)*(x1932)))+(((x1928)*(x1933)))+(((IkReal(-1.00000000000000))*(x1931)*(x1932)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1934=((r02)*(sj2));
IkReal x1935=((IkReal(1.00000000000000))*(sj2));
IkReal x1936=((r00)*(sj0));
IkReal x1937=((cj1)*(cj2));
IkReal x1938=((cj0)*(r01));
IkReal x1939=((sj1)*(x1938));
IkReal x1940=((IkReal(1.00000000000000))*(cj2)*(x1936));
if( IKabs(((((cj1)*(sj2)*(x1938)))+(((IkReal(-1.00000000000000))*(sj1)*(x1940)))+(((cj2)*(x1939)))+(((sj1)*(x1934)))+(((IkReal(-1.00000000000000))*(cj1)*(x1935)*(x1936)))+(((IkReal(-1.00000000000000))*(r02)*(x1937))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj1)*(x1934)))+(((sj1)*(sj2)*(x1936)))+(((IkReal(-1.00000000000000))*(x1936)*(x1937)))+(((cj2)*(r02)*(sj1)))+(((x1937)*(x1938)))+(((IkReal(-1.00000000000000))*(x1935)*(x1939))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj1)*(sj2)*(x1938)))+(((IkReal(-1.00000000000000))*(sj1)*(x1940)))+(((cj2)*(x1939)))+(((sj1)*(x1934)))+(((IkReal(-1.00000000000000))*(cj1)*(x1935)*(x1936)))+(((IkReal(-1.00000000000000))*(r02)*(x1937)))))+IKsqr(((((cj1)*(x1934)))+(((sj1)*(sj2)*(x1936)))+(((IkReal(-1.00000000000000))*(x1936)*(x1937)))+(((cj2)*(r02)*(sj1)))+(((x1937)*(x1938)))+(((IkReal(-1.00000000000000))*(x1935)*(x1939)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((cj1)*(sj2)*(x1938)))+(((IkReal(-1.00000000000000))*(sj1)*(x1940)))+(((cj2)*(x1939)))+(((sj1)*(x1934)))+(((IkReal(-1.00000000000000))*(cj1)*(x1935)*(x1936)))+(((IkReal(-1.00000000000000))*(r02)*(x1937)))), ((((cj1)*(x1934)))+(((sj1)*(sj2)*(x1936)))+(((IkReal(-1.00000000000000))*(x1936)*(x1937)))+(((cj2)*(r02)*(sj1)))+(((x1937)*(x1938)))+(((IkReal(-1.00000000000000))*(x1935)*(x1939)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1941=((r02)*(sj2));
IkReal x1942=((IkReal(1.00000000000000))*(sj2));
IkReal x1943=((r00)*(sj0));
IkReal x1944=((cj1)*(cj2));
IkReal x1945=((cj0)*(r01));
IkReal x1946=((sj1)*(x1945));
IkReal x1947=((IkReal(1.00000000000000))*(cj2)*(x1943));
evalcond[0]=((((cj1)*(sj2)*(x1945)))+(((IkReal(-1.00000000000000))*(sj1)*(x1947)))+(((cj2)*(x1946)))+(((sj1)*(x1941)))+(((IkReal(-1.00000000000000))*(r02)*(x1944)))+(((IkReal(-1.00000000000000))*(cj1)*(x1942)*(x1943)))+(((IkReal(-1.00000000000000))*(IKsin(j5)))));
evalcond[1]=((((x1944)*(x1945)))+(((IkReal(-1.00000000000000))*(x1942)*(x1946)))+(((IkReal(-1.00000000000000))*(x1943)*(x1944)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((cj1)*(x1941)))+(((cj2)*(r02)*(sj1)))+(((sj1)*(sj2)*(x1943))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1948=((pz)*(sj1));
IkReal x1949=((cj0)*(py));
IkReal x1950=((IkReal(1.00000000000000))*(sj2));
IkReal x1951=((cj1)*(cj2));
IkReal x1952=((px)*(sj0));
IkReal x1953=((cj2)*(sj1));
IkReal x1954=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(-0.190892000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.312421000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(sj1)*(x1949)*(x1950)))+(((cj2)*(x1948)))+(((IkReal(-1.00000000000000))*(x1951)*(x1952)))+(((pz)*(x1954)))+(((sj1)*(sj2)*(x1952)))+(((IkReal(-0.521670000000000))*(sj2)))+(((x1949)*(x1951))));
evalcond[4]=((IkReal(-0.126507000000000))+(((IkReal(-1.00000000000000))*(pz)*(x1951)))+(((sj2)*(x1948)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(cj1)*(x1950)*(x1952)))+(((IkReal(-1.00000000000000))*(x1952)*(x1953)))+(((IkReal(0.00982000000000000))*(sj2)))+(((x1949)*(x1954)))+(((x1949)*(x1953))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1955=((IkReal(1.00000000000000))*(sj2));
IkReal x1956=((r02)*(sj1));
IkReal x1957=((cj0)*(r01));
IkReal x1958=((IkReal(1.00000000000000))*(cj2));
IkReal x1959=((cj1)*(r02));
IkReal x1960=((cj1)*(r00)*(sj0));
IkReal x1961=((r00)*(sj0)*(sj1));
if( IKabs(((((IkReal(-1.00000000000000))*(sj1)*(x1957)*(x1958)))+(((cj2)*(x1959)))+(((sj2)*(x1960)))+(((cj2)*(x1961)))+(((IkReal(-1.00000000000000))*(x1955)*(x1956)))+(((IkReal(-1.00000000000000))*(cj1)*(x1955)*(x1957))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((sj2)*(x1959)))+(((cj2)*(x1956)))+(((IkReal(-1.00000000000000))*(x1958)*(x1960)))+(((sj2)*(x1961)))+(((IkReal(-1.00000000000000))*(sj1)*(x1955)*(x1957)))+(((cj1)*(cj2)*(x1957))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(sj1)*(x1957)*(x1958)))+(((cj2)*(x1959)))+(((sj2)*(x1960)))+(((cj2)*(x1961)))+(((IkReal(-1.00000000000000))*(x1955)*(x1956)))+(((IkReal(-1.00000000000000))*(cj1)*(x1955)*(x1957)))))+IKsqr(((((sj2)*(x1959)))+(((cj2)*(x1956)))+(((IkReal(-1.00000000000000))*(x1958)*(x1960)))+(((sj2)*(x1961)))+(((IkReal(-1.00000000000000))*(sj1)*(x1955)*(x1957)))+(((cj1)*(cj2)*(x1957)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(sj1)*(x1957)*(x1958)))+(((cj2)*(x1959)))+(((sj2)*(x1960)))+(((cj2)*(x1961)))+(((IkReal(-1.00000000000000))*(x1955)*(x1956)))+(((IkReal(-1.00000000000000))*(cj1)*(x1955)*(x1957)))), ((((sj2)*(x1959)))+(((cj2)*(x1956)))+(((IkReal(-1.00000000000000))*(x1958)*(x1960)))+(((sj2)*(x1961)))+(((IkReal(-1.00000000000000))*(sj1)*(x1955)*(x1957)))+(((cj1)*(cj2)*(x1957)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1962=((r02)*(sj2));
IkReal x1963=((IkReal(1.00000000000000))*(sj2));
IkReal x1964=((r00)*(sj0));
IkReal x1965=((cj1)*(cj2));
IkReal x1966=((cj0)*(r01));
IkReal x1967=((sj1)*(x1966));
IkReal x1968=((IkReal(1.00000000000000))*(cj2)*(x1964));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj1)*(x1963)*(x1964)))+(((IkReal(-1.00000000000000))*(sj1)*(x1968)))+(((sj1)*(x1962)))+(((cj2)*(x1967)))+(IKsin(j5))+(((IkReal(-1.00000000000000))*(r02)*(x1965)))+(((cj1)*(sj2)*(x1966))));
evalcond[1]=((((cj1)*(x1962)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((IkReal(-1.00000000000000))*(x1964)*(x1965)))+(((cj2)*(r02)*(sj1)))+(((x1965)*(x1966)))+(((IkReal(-1.00000000000000))*(x1963)*(x1967)))+(((sj1)*(sj2)*(x1964))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1969=((r02)*(sj2));
IkReal x1970=((IkReal(1.00000000000000))*(sj2));
IkReal x1971=((r00)*(sj0));
IkReal x1972=((cj1)*(cj2));
IkReal x1973=((cj0)*(r01));
IkReal x1974=((sj1)*(x1973));
IkReal x1975=((IkReal(1.00000000000000))*(cj2)*(x1971));
if( IKabs(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(sj1)*(x1975)))+(((sj1)*(x1969)))+(((cj2)*(x1974)))+(((IkReal(-1.00000000000000))*(cj1)*(x1970)*(x1971)))+(((IkReal(-1.00000000000000))*(r02)*(x1972)))+(((cj1)*(sj2)*(x1973))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x1972)*(x1973)))+(((cj1)*(x1969)))+(((IkReal(-1.00000000000000))*(x1970)*(x1974)))+(((cj2)*(r02)*(sj1)))+(((sj1)*(sj2)*(x1971)))+(((IkReal(-1.00000000000000))*(x1971)*(x1972))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(sj1)*(x1975)))+(((sj1)*(x1969)))+(((cj2)*(x1974)))+(((IkReal(-1.00000000000000))*(cj1)*(x1970)*(x1971)))+(((IkReal(-1.00000000000000))*(r02)*(x1972)))+(((cj1)*(sj2)*(x1973)))))))+IKsqr(((((x1972)*(x1973)))+(((cj1)*(x1969)))+(((IkReal(-1.00000000000000))*(x1970)*(x1974)))+(((cj2)*(r02)*(sj1)))+(((sj1)*(sj2)*(x1971)))+(((IkReal(-1.00000000000000))*(x1971)*(x1972)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(sj1)*(x1975)))+(((sj1)*(x1969)))+(((cj2)*(x1974)))+(((IkReal(-1.00000000000000))*(cj1)*(x1970)*(x1971)))+(((IkReal(-1.00000000000000))*(r02)*(x1972)))+(((cj1)*(sj2)*(x1973)))))), ((((x1972)*(x1973)))+(((cj1)*(x1969)))+(((IkReal(-1.00000000000000))*(x1970)*(x1974)))+(((cj2)*(r02)*(sj1)))+(((sj1)*(sj2)*(x1971)))+(((IkReal(-1.00000000000000))*(x1971)*(x1972)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1976=IKsin(j5);
IkReal x1977=((r02)*(sj2));
IkReal x1978=((IkReal(1.00000000000000))*(sj2));
IkReal x1979=((r00)*(sj0));
IkReal x1980=((IkReal(1.00000000000000))*(cj2));
IkReal x1981=((IkReal(1.00000000000000))*(x1976));
IkReal x1982=((cj0)*(r01)*(sj1));
IkReal x1983=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x1981)))+(((cj0)*(r00))));
evalcond[1]=((((sj2)*(x1983)))+(((cj2)*(x1982)))+(((IkReal(-1.00000000000000))*(cj1)*(x1978)*(x1979)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1980)))+(((sj1)*(x1977)))+(((IkReal(-1.00000000000000))*(sj1)*(x1979)*(x1980)))+(((IkReal(-1.00000000000000))*(sj4)*(x1981))));
evalcond[2]=((((cj2)*(x1983)))+(((cj1)*(x1977)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(x1979)*(x1980)))+(((IkReal(-1.00000000000000))*(x1978)*(x1982)))+(((sj1)*(sj2)*(x1979))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1984=((sj1)*(sj2));
IkReal x1985=((cj0)*(r01));
IkReal x1986=((r00)*(sj0));
IkReal x1987=((cj1)*(cj2));
if( IKabs(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x1984)*(x1986)))+(((IkReal(-1.00000000000000))*(x1984)*(x1985)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1986)*(x1987)))+(((x1985)*(x1987)))+(((cj1)*(r02)*(sj2))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))))+IKsqr(((((x1984)*(x1986)))+(((IkReal(-1.00000000000000))*(x1984)*(x1985)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1986)*(x1987)))+(((x1985)*(x1987)))+(((cj1)*(r02)*(sj2)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))), ((((x1984)*(x1986)))+(((IkReal(-1.00000000000000))*(x1984)*(x1985)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1986)*(x1987)))+(((x1985)*(x1987)))+(((cj1)*(r02)*(sj2)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1988=IKsin(j5);
IkReal x1989=((r02)*(sj2));
IkReal x1990=((IkReal(1.00000000000000))*(sj2));
IkReal x1991=((r00)*(sj0));
IkReal x1992=((IkReal(1.00000000000000))*(cj2));
IkReal x1993=((IkReal(1.00000000000000))*(x1988));
IkReal x1994=((cj0)*(r01)*(sj1));
IkReal x1995=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x1993)))+(((cj0)*(r00))));
evalcond[1]=((((cj2)*(x1994)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1992)))+(((IkReal(-1.00000000000000))*(sj4)*(x1993)))+(((sj1)*(x1989)))+(((sj2)*(x1995)))+(((IkReal(-1.00000000000000))*(cj1)*(x1990)*(x1991)))+(((IkReal(-1.00000000000000))*(sj1)*(x1991)*(x1992))));
evalcond[2]=((((cj2)*(x1995)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((cj1)*(x1989)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(x1991)*(x1992)))+(((IkReal(-1.00000000000000))*(x1990)*(x1994)))+(((sj1)*(sj2)*(x1991))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1996=((cj1)*(sj2));
IkReal x1997=((px)*(sj0));
IkReal x1998=((sj1)*(sj2));
IkReal x1999=((cj0)*(py));
IkReal x2000=((cj2)*(pz));
IkReal x2001=((IkReal(1.00000000000000))*(cj1));
IkReal x2002=((cj2)*(x1999));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(0.190892000000000))*(sj4)))+(((IkReal(0.000787000000000000))*(cj4)))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((IkReal(-0.394310000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x1998)*(x1999)))+(((IkReal(-1.00000000000000))*(cj2)*(x1997)*(x2001)))+(((IkReal(0.000787000000000000))*(sj4)))+(((sj1)*(x2000)))+(((IkReal(-0.190892000000000))*(cj4)))+(((pz)*(x1996)))+(((IkReal(-0.521670000000000))*(sj2)))+(((x1997)*(x1998)))+(((cj1)*(x2002))));
evalcond[3]=((IkReal(0.0588310000000000))+(((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x1997)))+(((x1996)*(x1999)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x2000)*(x2001)))+(((sj1)*(x2002)))+(((IkReal(-1.00000000000000))*(x1996)*(x1997)))+(((pz)*(x1998)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x2003=((IkReal(1.00000000000000))*(sj2));
IkReal x2004=((px)*(sj0));
IkReal x2005=((pz)*(sj2));
IkReal x2006=((cj0)*(sj1));
IkReal x2007=((cj1)*(sj2));
IkReal x2008=((sj1)*(sj2));
IkReal x2009=((cj2)*(sj1));
IkReal x2010=((r00)*(sj0));
IkReal x2011=((cj0)*(cj1)*(cj2));
IkReal x2012=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.000787000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2010)*(x2012)))+(((r02)*(x2009)))+(((r02)*(x2007)))+(((r01)*(x2011)))+(((x2008)*(x2010)))+(((IkReal(-1.00000000000000))*(r01)*(x2003)*(x2006))));
evalcond[3]=((IkReal(-0.585202000000000))+(((py)*(x2011)))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(py)*(x2003)*(x2006)))+(((IkReal(-1.00000000000000))*(x2004)*(x2012)))+(((pz)*(x2009)))+(((x2004)*(x2008)))+(((IkReal(-0.521670000000000))*(sj2)))+(((cj1)*(x2005))));
evalcond[4]=((IkReal(0.0588310000000000))+(((IkReal(-1.00000000000000))*(pz)*(x2012)))+(((IkReal(-1.00000000000000))*(cj1)*(x2003)*(x2004)))+(((cj0)*(py)*(x2007)))+(((IkReal(0.521670000000000))*(cj2)))+(((sj1)*(x2005)))+(((cj2)*(py)*(x2006)))+(((IkReal(-1.00000000000000))*(x2004)*(x2009)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2013=((IkReal(1.00000000000000))*(sj2));
IkReal x2014=((cj0)*(r01));
IkReal x2015=((r00)*(sj0));
IkReal x2016=((cj2)*(sj1));
if( IKabs(((((r01)*(sj0)))+(((cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x2015)*(x2016)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x2013)))+(((IkReal(-1.00000000000000))*(cj1)*(x2013)*(x2014)))+(((cj1)*(cj2)*(r02)))+(((cj1)*(sj2)*(x2015)))+(((IkReal(-1.00000000000000))*(x2014)*(x2016))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r01)*(sj0)))+(((cj0)*(r00)))))+IKsqr(((((x2015)*(x2016)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x2013)))+(((IkReal(-1.00000000000000))*(cj1)*(x2013)*(x2014)))+(((cj1)*(cj2)*(r02)))+(((cj1)*(sj2)*(x2015)))+(((IkReal(-1.00000000000000))*(x2014)*(x2016)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((r01)*(sj0)))+(((cj0)*(r00)))), ((((x2015)*(x2016)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x2013)))+(((IkReal(-1.00000000000000))*(cj1)*(x2013)*(x2014)))+(((cj1)*(cj2)*(r02)))+(((cj1)*(sj2)*(x2015)))+(((IkReal(-1.00000000000000))*(x2014)*(x2016)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x2017=((cj2)*(sj1));
IkReal x2018=((cj0)*(r01));
IkReal x2019=((cj1)*(sj2));
IkReal x2020=((IkReal(1.00000000000000))*(r00)*(sj0));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2017)*(x2020)))+(((IkReal(-1.00000000000000))*(x2019)*(x2020)))+(IKcos(j5))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((x2017)*(x2018)))+(((r02)*(sj1)*(sj2)))+(((x2018)*(x2019))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x2021=((IkReal(1.00000000000000))*(sj2));
IkReal x2022=((px)*(sj0));
IkReal x2023=((pz)*(sj2));
IkReal x2024=((cj0)*(sj1));
IkReal x2025=((cj1)*(sj2));
IkReal x2026=((sj1)*(sj2));
IkReal x2027=((cj2)*(sj1));
IkReal x2028=((r00)*(sj0));
IkReal x2029=((cj0)*(cj1)*(cj2));
IkReal x2030=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.000787000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((r01)*(x2029)))+(((IkReal(-1.00000000000000))*(r01)*(x2021)*(x2024)))+(((x2026)*(x2028)))+(((r02)*(x2027)))+(((r02)*(x2025)))+(((IkReal(-1.00000000000000))*(x2028)*(x2030))));
evalcond[3]=((IkReal(-0.203418000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(py)*(x2021)*(x2024)))+(((IkReal(-1.00000000000000))*(x2022)*(x2030)))+(((x2022)*(x2026)))+(((py)*(x2029)))+(((pz)*(x2027)))+(((cj1)*(x2023)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(0.0588310000000000))+(((IkReal(-1.00000000000000))*(pz)*(x2030)))+(((IkReal(-1.00000000000000))*(cj1)*(x2021)*(x2022)))+(((IkReal(-1.00000000000000))*(x2022)*(x2027)))+(((sj1)*(x2023)))+(((IkReal(0.521670000000000))*(cj2)))+(((cj0)*(py)*(x2025)))+(((cj2)*(py)*(x2024)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2031=((IkReal(1.00000000000000))*(sj2));
IkReal x2032=((cj0)*(r01));
IkReal x2033=((r00)*(sj0));
IkReal x2034=((cj2)*(sj1));
if( IKabs(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r02)*(sj1)*(x2031)))+(((x2033)*(x2034)))+(((IkReal(-1.00000000000000))*(x2032)*(x2034)))+(((cj1)*(sj2)*(x2033)))+(((IkReal(-1.00000000000000))*(cj1)*(x2031)*(x2032)))+(((cj1)*(cj2)*(r02))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))))+IKsqr(((((IkReal(-1.00000000000000))*(r02)*(sj1)*(x2031)))+(((x2033)*(x2034)))+(((IkReal(-1.00000000000000))*(x2032)*(x2034)))+(((cj1)*(sj2)*(x2033)))+(((IkReal(-1.00000000000000))*(cj1)*(x2031)*(x2032)))+(((cj1)*(cj2)*(r02)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))), ((((IkReal(-1.00000000000000))*(r02)*(sj1)*(x2031)))+(((x2033)*(x2034)))+(((IkReal(-1.00000000000000))*(x2032)*(x2034)))+(((cj1)*(sj2)*(x2033)))+(((IkReal(-1.00000000000000))*(cj1)*(x2031)*(x2032)))+(((cj1)*(cj2)*(r02)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x2035=((cj2)*(sj1));
IkReal x2036=((cj0)*(r01));
IkReal x2037=((cj1)*(sj2));
IkReal x2038=((IkReal(1.00000000000000))*(r00)*(sj0));
evalcond[0]=((((r01)*(sj0)))+(IKsin(j5))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2035)*(x2038)))+(IKcos(j5))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((x2035)*(x2036)))+(((x2036)*(x2037)))+(((r02)*(sj1)*(sj2)))+(((IkReal(-1.00000000000000))*(x2037)*(x2038))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x2039=((pz)*(sj1));
IkReal x2040=((cj0)*(py));
IkReal x2041=((IkReal(1.00000000000000))*(sj2));
IkReal x2042=((cj1)*(cj2));
IkReal x2043=((px)*(sj0));
IkReal x2044=((cj2)*(sj1));
IkReal x2045=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(0.190892000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.393523000000000))+(((sj1)*(sj2)*(x2043)))+(((IkReal(-1.00000000000000))*(x2042)*(x2043)))+(((IkReal(0.00982000000000000))*(cj2)))+(((x2040)*(x2042)))+(((pz)*(x2045)))+(((IkReal(-1.00000000000000))*(sj1)*(x2040)*(x2041)))+(((cj2)*(x2039)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(0.0588310000000000))+(((x2040)*(x2045)))+(((x2040)*(x2044)))+(((sj2)*(x2039)))+(((IkReal(-1.00000000000000))*(cj1)*(x2041)*(x2043)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(pz)*(x2042)))+(((IkReal(0.00982000000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(x2043)*(x2044))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2046=((IkReal(1.00000000000000))*(sj2));
IkReal x2047=((r02)*(sj1));
IkReal x2048=((cj0)*(r01));
IkReal x2049=((IkReal(1.00000000000000))*(cj2));
IkReal x2050=((cj1)*(r02));
IkReal x2051=((cj1)*(r00)*(sj0));
IkReal x2052=((r00)*(sj0)*(sj1));
if( IKabs(((((cj1)*(cj2)*(x2048)))+(((sj2)*(x2050)))+(((sj2)*(x2052)))+(((IkReal(-1.00000000000000))*(x2049)*(x2051)))+(((IkReal(-1.00000000000000))*(sj1)*(x2046)*(x2048)))+(((cj2)*(x2047))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((sj2)*(x2051)))+(((IkReal(-1.00000000000000))*(sj1)*(x2048)*(x2049)))+(((cj2)*(x2050)))+(((cj2)*(x2052)))+(((IkReal(-1.00000000000000))*(cj1)*(x2046)*(x2048)))+(((IkReal(-1.00000000000000))*(x2046)*(x2047))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj1)*(cj2)*(x2048)))+(((sj2)*(x2050)))+(((sj2)*(x2052)))+(((IkReal(-1.00000000000000))*(x2049)*(x2051)))+(((IkReal(-1.00000000000000))*(sj1)*(x2046)*(x2048)))+(((cj2)*(x2047)))))+IKsqr(((((sj2)*(x2051)))+(((IkReal(-1.00000000000000))*(sj1)*(x2048)*(x2049)))+(((cj2)*(x2050)))+(((cj2)*(x2052)))+(((IkReal(-1.00000000000000))*(cj1)*(x2046)*(x2048)))+(((IkReal(-1.00000000000000))*(x2046)*(x2047)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((cj1)*(cj2)*(x2048)))+(((sj2)*(x2050)))+(((sj2)*(x2052)))+(((IkReal(-1.00000000000000))*(x2049)*(x2051)))+(((IkReal(-1.00000000000000))*(sj1)*(x2046)*(x2048)))+(((cj2)*(x2047)))), ((((sj2)*(x2051)))+(((IkReal(-1.00000000000000))*(sj1)*(x2048)*(x2049)))+(((cj2)*(x2050)))+(((cj2)*(x2052)))+(((IkReal(-1.00000000000000))*(cj1)*(x2046)*(x2048)))+(((IkReal(-1.00000000000000))*(x2046)*(x2047)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x2053=((r02)*(sj2));
IkReal x2054=((IkReal(1.00000000000000))*(sj2));
IkReal x2055=((r00)*(sj0));
IkReal x2056=((cj1)*(cj2));
IkReal x2057=((cj0)*(r01));
IkReal x2058=((sj1)*(x2057));
IkReal x2059=((IkReal(1.00000000000000))*(cj2)*(x2055));
evalcond[0]=((((IkReal(-1.00000000000000))*(r02)*(x2056)))+(((IkReal(-1.00000000000000))*(cj1)*(x2054)*(x2055)))+(((sj1)*(x2053)))+(IKcos(j5))+(((cj1)*(sj2)*(x2057)))+(((IkReal(-1.00000000000000))*(sj1)*(x2059)))+(((cj2)*(x2058))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2055)*(x2056)))+(((IkReal(-1.00000000000000))*(x2054)*(x2058)))+(((cj2)*(r02)*(sj1)))+(((cj1)*(x2053)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((x2056)*(x2057)))+(((sj1)*(sj2)*(x2055))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x2060=((pz)*(sj1));
IkReal x2061=((cj0)*(py));
IkReal x2062=((IkReal(1.00000000000000))*(sj2));
IkReal x2063=((cj1)*(cj2));
IkReal x2064=((px)*(sj0));
IkReal x2065=((cj2)*(sj1));
IkReal x2066=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(-0.190892000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.395097000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((sj1)*(sj2)*(x2064)))+(((IkReal(-1.00000000000000))*(sj1)*(x2061)*(x2062)))+(((IkReal(-1.00000000000000))*(x2063)*(x2064)))+(((pz)*(x2066)))+(((IkReal(-0.521670000000000))*(sj2)))+(((cj2)*(x2060)))+(((x2061)*(x2063))));
evalcond[4]=((IkReal(0.0588310000000000))+(((sj2)*(x2060)))+(((IkReal(-1.00000000000000))*(cj1)*(x2062)*(x2064)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x2064)*(x2065)))+(((IkReal(-1.00000000000000))*(pz)*(x2063)))+(((IkReal(0.00982000000000000))*(sj2)))+(((x2061)*(x2066)))+(((x2061)*(x2065))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2067=((IkReal(1.00000000000000))*(sj2));
IkReal x2068=((r02)*(sj1));
IkReal x2069=((cj0)*(r01));
IkReal x2070=((r00)*(sj0));
IkReal x2071=((cj1)*(r02));
IkReal x2072=((IkReal(1.00000000000000))*(cj2));
if( IKabs(((((IkReal(-1.00000000000000))*(cj1)*(x2069)*(x2072)))+(((cj1)*(cj2)*(x2070)))+(((sj1)*(sj2)*(x2069)))+(((IkReal(-1.00000000000000))*(x2067)*(x2071)))+(((IkReal(-1.00000000000000))*(x2068)*(x2072)))+(((IkReal(-1.00000000000000))*(sj1)*(x2067)*(x2070))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(cj1)*(x2067)*(x2069)))+(((cj1)*(sj2)*(x2070)))+(((cj2)*(x2071)))+(((IkReal(-1.00000000000000))*(sj1)*(x2069)*(x2072)))+(((IkReal(-1.00000000000000))*(x2067)*(x2068)))+(((cj2)*(sj1)*(x2070))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(cj1)*(x2069)*(x2072)))+(((cj1)*(cj2)*(x2070)))+(((sj1)*(sj2)*(x2069)))+(((IkReal(-1.00000000000000))*(x2067)*(x2071)))+(((IkReal(-1.00000000000000))*(x2068)*(x2072)))+(((IkReal(-1.00000000000000))*(sj1)*(x2067)*(x2070)))))+IKsqr(((((IkReal(-1.00000000000000))*(cj1)*(x2067)*(x2069)))+(((cj1)*(sj2)*(x2070)))+(((cj2)*(x2071)))+(((IkReal(-1.00000000000000))*(sj1)*(x2069)*(x2072)))+(((IkReal(-1.00000000000000))*(x2067)*(x2068)))+(((cj2)*(sj1)*(x2070)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(cj1)*(x2069)*(x2072)))+(((cj1)*(cj2)*(x2070)))+(((sj1)*(sj2)*(x2069)))+(((IkReal(-1.00000000000000))*(x2067)*(x2071)))+(((IkReal(-1.00000000000000))*(x2068)*(x2072)))+(((IkReal(-1.00000000000000))*(sj1)*(x2067)*(x2070)))), ((((IkReal(-1.00000000000000))*(cj1)*(x2067)*(x2069)))+(((cj1)*(sj2)*(x2070)))+(((cj2)*(x2071)))+(((IkReal(-1.00000000000000))*(sj1)*(x2069)*(x2072)))+(((IkReal(-1.00000000000000))*(x2067)*(x2068)))+(((cj2)*(sj1)*(x2070)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x2073=((r02)*(sj2));
IkReal x2074=((IkReal(1.00000000000000))*(sj2));
IkReal x2075=((r00)*(sj0));
IkReal x2076=((cj1)*(cj2));
IkReal x2077=((cj0)*(r01));
IkReal x2078=((sj1)*(x2077));
IkReal x2079=((IkReal(1.00000000000000))*(cj2)*(x2075));
evalcond[0]=((((IkReal(-1.00000000000000))*(r02)*(x2076)))+(((IkReal(-1.00000000000000))*(sj1)*(x2079)))+(IKcos(j5))+(((cj1)*(sj2)*(x2077)))+(((sj1)*(x2073)))+(((IkReal(-1.00000000000000))*(cj1)*(x2074)*(x2075)))+(((cj2)*(x2078))));
evalcond[1]=((((sj1)*(sj2)*(x2075)))+(((IkReal(-1.00000000000000))*(x2075)*(x2076)))+(IKsin(j5))+(((IkReal(-1.00000000000000))*(x2074)*(x2078)))+(((x2076)*(x2077)))+(((cj2)*(r02)*(sj1)))+(((cj1)*(x2073))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2080=((IkReal(1.00000000000000))*(sj2));
IkReal x2081=((r02)*(sj1));
IkReal x2082=((cj0)*(r01));
IkReal x2083=((IkReal(1.00000000000000))*(cj2));
IkReal x2084=((cj1)*(r02));
IkReal x2085=((cj1)*(r00)*(sj0));
IkReal x2086=((r00)*(sj0)*(sj1));
if( IKabs(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((cj1)*(cj2)*(x2082)))+(((IkReal(-1.00000000000000))*(sj1)*(x2080)*(x2082)))+(((IkReal(-1.00000000000000))*(x2083)*(x2085)))+(((sj2)*(x2086)))+(((sj2)*(x2084)))+(((cj2)*(x2081))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(cj1)*(x2080)*(x2082)))+(((IkReal(-1.00000000000000))*(sj1)*(x2082)*(x2083)))+(((IkReal(-1.00000000000000))*(x2080)*(x2081)))+(((sj2)*(x2085)))+(((cj2)*(x2084)))+(((cj2)*(x2086))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((cj1)*(cj2)*(x2082)))+(((IkReal(-1.00000000000000))*(sj1)*(x2080)*(x2082)))+(((IkReal(-1.00000000000000))*(x2083)*(x2085)))+(((sj2)*(x2086)))+(((sj2)*(x2084)))+(((cj2)*(x2081)))))))+IKsqr(((((IkReal(-1.00000000000000))*(cj1)*(x2080)*(x2082)))+(((IkReal(-1.00000000000000))*(sj1)*(x2082)*(x2083)))+(((IkReal(-1.00000000000000))*(x2080)*(x2081)))+(((sj2)*(x2085)))+(((cj2)*(x2084)))+(((cj2)*(x2086)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((cj1)*(cj2)*(x2082)))+(((IkReal(-1.00000000000000))*(sj1)*(x2080)*(x2082)))+(((IkReal(-1.00000000000000))*(x2083)*(x2085)))+(((sj2)*(x2086)))+(((sj2)*(x2084)))+(((cj2)*(x2081)))))), ((((IkReal(-1.00000000000000))*(cj1)*(x2080)*(x2082)))+(((IkReal(-1.00000000000000))*(sj1)*(x2082)*(x2083)))+(((IkReal(-1.00000000000000))*(x2080)*(x2081)))+(((sj2)*(x2085)))+(((cj2)*(x2084)))+(((cj2)*(x2086)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x2087=IKsin(j5);
IkReal x2088=((r02)*(sj2));
IkReal x2089=((IkReal(1.00000000000000))*(sj2));
IkReal x2090=((r00)*(sj0));
IkReal x2091=((IkReal(1.00000000000000))*(cj2));
IkReal x2092=((IkReal(1.00000000000000))*(x2087));
IkReal x2093=((cj0)*(r01)*(sj1));
IkReal x2094=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x2092)))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj1)*(x2090)*(x2091)))+(((IkReal(-1.00000000000000))*(cj1)*(x2089)*(x2090)))+(((sj1)*(x2088)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x2091)))+(IKcos(j5))+(((cj2)*(x2093)))+(((sj2)*(x2094))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj1)*(x2090)*(x2091)))+(((cj1)*(x2088)))+(((IkReal(-1.00000000000000))*(x2089)*(x2093)))+(((cj2)*(x2094)))+(((sj1)*(sj2)*(x2090)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(sj4)*(x2092))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2095=((IkReal(1.00000000000000))*(sj2));
IkReal x2096=((cj0)*(r01));
IkReal x2097=((r00)*(sj0));
IkReal x2098=((cj2)*(sj1));
if( IKabs(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(cj1)*(x2095)*(x2096)))+(((x2097)*(x2098)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x2095)))+(((IkReal(-1.00000000000000))*(x2096)*(x2098)))+(((cj1)*(sj2)*(x2097)))+(((cj1)*(cj2)*(r02))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))))+IKsqr(((((IkReal(-1.00000000000000))*(cj1)*(x2095)*(x2096)))+(((x2097)*(x2098)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x2095)))+(((IkReal(-1.00000000000000))*(x2096)*(x2098)))+(((cj1)*(sj2)*(x2097)))+(((cj1)*(cj2)*(r02)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))), ((((IkReal(-1.00000000000000))*(cj1)*(x2095)*(x2096)))+(((x2097)*(x2098)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x2095)))+(((IkReal(-1.00000000000000))*(x2096)*(x2098)))+(((cj1)*(sj2)*(x2097)))+(((cj1)*(cj2)*(r02)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x2099=IKsin(j5);
IkReal x2100=((r02)*(sj2));
IkReal x2101=((IkReal(1.00000000000000))*(sj2));
IkReal x2102=((r00)*(sj0));
IkReal x2103=((IkReal(1.00000000000000))*(cj2));
IkReal x2104=((IkReal(1.00000000000000))*(x2099));
IkReal x2105=((cj0)*(r01)*(sj1));
IkReal x2106=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x2104)))+(((cj0)*(r00))));
evalcond[1]=((IKcos(j5))+(((cj2)*(x2105)))+(((IkReal(-1.00000000000000))*(cj1)*(x2101)*(x2102)))+(((sj2)*(x2106)))+(((sj1)*(x2100)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x2103)))+(((IkReal(-1.00000000000000))*(sj1)*(x2102)*(x2103))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2101)*(x2105)))+(((cj2)*(x2106)))+(((IkReal(-1.00000000000000))*(cj1)*(x2102)*(x2103)))+(((cj2)*(r02)*(sj1)))+(((sj1)*(sj2)*(x2102)))+(((cj1)*(x2100)))+(((IkReal(-1.00000000000000))*(sj4)*(x2104))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x2107=((cj1)*(sj2));
IkReal x2108=((px)*(sj0));
IkReal x2109=((sj1)*(sj2));
IkReal x2110=((cj0)*(py));
IkReal x2111=((cj2)*(pz));
IkReal x2112=((IkReal(1.00000000000000))*(cj1));
IkReal x2113=((cj2)*(x2110));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(0.190892000000000))*(sj4)))+(((IkReal(0.000787000000000000))*(cj4)))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((IkReal(-0.127870000000000))+(((x2108)*(x2109)))+(((IkReal(0.190892000000000))*(cj4)))+(((IkReal(0.00982000000000000))*(cj2)))+(((sj1)*(x2111)))+(((IkReal(-1.00000000000000))*(x2109)*(x2110)))+(((pz)*(x2107)))+(((cj1)*(x2113)))+(((IkReal(-0.521670000000000))*(sj2)))+(((IkReal(-0.000787000000000000))*(sj4)))+(((IkReal(-1.00000000000000))*(cj2)*(x2108)*(x2112))));
evalcond[3]=((IkReal(-0.0438310000000000))+(((sj1)*(x2113)))+(((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x2108)))+(((pz)*(x2109)))+(((x2107)*(x2110)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x2107)*(x2108)))+(((IkReal(-1.00000000000000))*(x2111)*(x2112)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x2114=((IkReal(1.00000000000000))*(sj2));
IkReal x2115=((px)*(sj0));
IkReal x2116=((pz)*(sj2));
IkReal x2117=((cj0)*(sj1));
IkReal x2118=((cj1)*(sj2));
IkReal x2119=((sj1)*(sj2));
IkReal x2120=((cj2)*(sj1));
IkReal x2121=((r00)*(sj0));
IkReal x2122=((cj0)*(cj1)*(cj2));
IkReal x2123=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.000787000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r01)*(x2114)*(x2117)))+(((r02)*(x2120)))+(((IkReal(-1.00000000000000))*(x2121)*(x2123)))+(((r02)*(x2118)))+(((x2119)*(x2121)))+(((r01)*(x2122))));
evalcond[3]=((IkReal(0.0630220000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x2115)*(x2123)))+(((IkReal(-1.00000000000000))*(py)*(x2114)*(x2117)))+(((py)*(x2122)))+(((pz)*(x2120)))+(((x2115)*(x2119)))+(((cj1)*(x2116)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(-0.0438310000000000))+(((cj0)*(py)*(x2118)))+(((sj1)*(x2116)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(cj1)*(x2114)*(x2115)))+(((IkReal(-1.00000000000000))*(x2115)*(x2120)))+(((cj2)*(py)*(x2117)))+(((IkReal(-1.00000000000000))*(pz)*(x2123)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2124=((cj2)*(sj1));
IkReal x2125=((cj0)*(r01));
IkReal x2126=((cj1)*(sj2));
IkReal x2127=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((r01)*(sj0)))+(((cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x2125)*(x2126)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((x2124)*(x2125)))+(((IkReal(-1.00000000000000))*(x2124)*(x2127)))+(((r02)*(sj1)*(sj2)))+(((IkReal(-1.00000000000000))*(x2126)*(x2127))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r01)*(sj0)))+(((cj0)*(r00)))))+IKsqr(((((x2125)*(x2126)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((x2124)*(x2125)))+(((IkReal(-1.00000000000000))*(x2124)*(x2127)))+(((r02)*(sj1)*(sj2)))+(((IkReal(-1.00000000000000))*(x2126)*(x2127)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((r01)*(sj0)))+(((cj0)*(r00)))), ((((x2125)*(x2126)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((x2124)*(x2125)))+(((IkReal(-1.00000000000000))*(x2124)*(x2127)))+(((r02)*(sj1)*(sj2)))+(((IkReal(-1.00000000000000))*(x2126)*(x2127)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x2128=((cj2)*(sj1));
IkReal x2129=((cj0)*(r01));
IkReal x2130=((cj1)*(sj2));
IkReal x2131=((IkReal(1.00000000000000))*(r00)*(sj0));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((cj0)*(r00))));
evalcond[1]=((((x2128)*(x2129)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((IkReal(-1.00000000000000))*(x2128)*(x2131)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(x2130)*(x2131)))+(((x2129)*(x2130)))+(((r02)*(sj1)*(sj2))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x2132=((IkReal(1.00000000000000))*(sj2));
IkReal x2133=((px)*(sj0));
IkReal x2134=((pz)*(sj2));
IkReal x2135=((cj0)*(sj1));
IkReal x2136=((cj1)*(sj2));
IkReal x2137=((sj1)*(sj2));
IkReal x2138=((cj2)*(sj1));
IkReal x2139=((r00)*(sj0));
IkReal x2140=((cj0)*(cj1)*(cj2));
IkReal x2141=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.000787000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((r02)*(x2136)))+(((r02)*(x2138)))+(((r01)*(x2140)))+(((IkReal(-1.00000000000000))*(x2139)*(x2141)))+(((x2137)*(x2139)))+(((IkReal(-1.00000000000000))*(r01)*(x2132)*(x2135))));
evalcond[3]=((IkReal(-0.318762000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(py)*(x2132)*(x2135)))+(((IkReal(-1.00000000000000))*(x2133)*(x2141)))+(((pz)*(x2138)))+(((py)*(x2140)))+(((cj1)*(x2134)))+(((x2133)*(x2137)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(-0.0438310000000000))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(pz)*(x2141)))+(((IkReal(-1.00000000000000))*(x2133)*(x2138)))+(((IkReal(-1.00000000000000))*(cj1)*(x2132)*(x2133)))+(((cj2)*(py)*(x2135)))+(((sj1)*(x2134)))+(((cj0)*(py)*(x2136)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2142=((cj2)*(sj1));
IkReal x2143=((cj0)*(r01));
IkReal x2144=((cj1)*(sj2));
IkReal x2145=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x2144)*(x2145)))+(((IkReal(-1.00000000000000))*(x2142)*(x2145)))+(((x2143)*(x2144)))+(((x2142)*(x2143)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((r02)*(sj1)*(sj2))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))))+IKsqr(((((IkReal(-1.00000000000000))*(x2144)*(x2145)))+(((IkReal(-1.00000000000000))*(x2142)*(x2145)))+(((x2143)*(x2144)))+(((x2142)*(x2143)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((r02)*(sj1)*(sj2)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))), ((((IkReal(-1.00000000000000))*(x2144)*(x2145)))+(((IkReal(-1.00000000000000))*(x2142)*(x2145)))+(((x2143)*(x2144)))+(((x2142)*(x2143)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((r02)*(sj1)*(sj2)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x2146=((cj2)*(sj1));
IkReal x2147=((cj0)*(r01));
IkReal x2148=((cj1)*(sj2));
IkReal x2149=((IkReal(1.00000000000000))*(r00)*(sj0));
evalcond[0]=((((r01)*(sj0)))+(IKsin(j5))+(((cj0)*(r00))));
evalcond[1]=((((x2146)*(x2147)))+(((IkReal(-1.00000000000000))*(x2148)*(x2149)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((r02)*(sj1)*(sj2)))+(((IkReal(-1.00000000000000))*(x2146)*(x2149)))+(((x2147)*(x2148))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x2150=((pz)*(sj1));
IkReal x2151=((cj0)*(py));
IkReal x2152=((IkReal(1.00000000000000))*(sj2));
IkReal x2153=((cj1)*(cj2));
IkReal x2154=((px)*(sj0));
IkReal x2155=((cj2)*(sj1));
IkReal x2156=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(0.190892000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.128657000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((sj1)*(sj2)*(x2154)))+(((cj2)*(x2150)))+(((IkReal(-1.00000000000000))*(sj1)*(x2151)*(x2152)))+(((x2151)*(x2153)))+(((pz)*(x2156)))+(((IkReal(-1.00000000000000))*(x2153)*(x2154)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(-0.0438310000000000))+(((sj2)*(x2150)))+(((IkReal(-1.00000000000000))*(pz)*(x2153)))+(((IkReal(-1.00000000000000))*(x2154)*(x2155)))+(((IkReal(0.521670000000000))*(cj2)))+(((x2151)*(x2155)))+(((x2151)*(x2156)))+(((IkReal(0.00982000000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(cj1)*(x2152)*(x2154))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2157=((sj1)*(sj2));
IkReal x2158=((cj2)*(sj1));
IkReal x2159=((cj1)*(sj2));
IkReal x2160=((IkReal(1.00000000000000))*(r02));
IkReal x2161=((cj1)*(cj2));
IkReal x2162=((cj0)*(r01));
IkReal x2163=((sj1)*(x2162));
IkReal x2164=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((x2157)*(x2162)))+(((IkReal(-1.00000000000000))*(x2161)*(x2162)))+(((IkReal(-1.00000000000000))*(x2157)*(x2164)))+(((IkReal(-1.00000000000000))*(x2158)*(x2160)))+(((r00)*(sj0)*(x2161)))+(((IkReal(-1.00000000000000))*(x2159)*(x2160))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x2160)*(x2161)))+(((r02)*(x2157)))+(((IkReal(-1.00000000000000))*(x2158)*(x2164)))+(((IkReal(-1.00000000000000))*(x2159)*(x2164)))+(((x2158)*(x2162)))+(((x2159)*(x2162))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((x2157)*(x2162)))+(((IkReal(-1.00000000000000))*(x2161)*(x2162)))+(((IkReal(-1.00000000000000))*(x2157)*(x2164)))+(((IkReal(-1.00000000000000))*(x2158)*(x2160)))+(((r00)*(sj0)*(x2161)))+(((IkReal(-1.00000000000000))*(x2159)*(x2160)))))+IKsqr(((((IkReal(-1.00000000000000))*(x2160)*(x2161)))+(((r02)*(x2157)))+(((IkReal(-1.00000000000000))*(x2158)*(x2164)))+(((IkReal(-1.00000000000000))*(x2159)*(x2164)))+(((x2158)*(x2162)))+(((x2159)*(x2162)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((x2157)*(x2162)))+(((IkReal(-1.00000000000000))*(x2161)*(x2162)))+(((IkReal(-1.00000000000000))*(x2157)*(x2164)))+(((IkReal(-1.00000000000000))*(x2158)*(x2160)))+(((r00)*(sj0)*(x2161)))+(((IkReal(-1.00000000000000))*(x2159)*(x2160)))), ((((IkReal(-1.00000000000000))*(x2160)*(x2161)))+(((r02)*(x2157)))+(((IkReal(-1.00000000000000))*(x2158)*(x2164)))+(((IkReal(-1.00000000000000))*(x2159)*(x2164)))+(((x2158)*(x2162)))+(((x2159)*(x2162)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x2165=((r02)*(sj2));
IkReal x2166=((IkReal(1.00000000000000))*(sj2));
IkReal x2167=((r00)*(sj0));
IkReal x2168=((cj1)*(cj2));
IkReal x2169=((cj0)*(r01));
IkReal x2170=((sj1)*(x2169));
IkReal x2171=((IkReal(1.00000000000000))*(cj2)*(x2167));
evalcond[0]=((((cj2)*(x2170)))+(((sj1)*(x2165)))+(((IkReal(-1.00000000000000))*(sj1)*(x2171)))+(((IkReal(-1.00000000000000))*(cj1)*(x2166)*(x2167)))+(((IkReal(-1.00000000000000))*(r02)*(x2168)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((cj1)*(sj2)*(x2169))));
evalcond[1]=((((x2168)*(x2169)))+(((IkReal(-1.00000000000000))*(x2167)*(x2168)))+(((IkReal(-1.00000000000000))*(x2166)*(x2170)))+(IKsin(j5))+(((cj2)*(r02)*(sj1)))+(((cj1)*(x2165)))+(((sj1)*(sj2)*(x2167))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x2172=((pz)*(sj1));
IkReal x2173=((cj0)*(py));
IkReal x2174=((IkReal(1.00000000000000))*(sj2));
IkReal x2175=((cj1)*(cj2));
IkReal x2176=((px)*(sj0));
IkReal x2177=((cj2)*(sj1));
IkReal x2178=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(-0.190892000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.127083000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((cj2)*(x2172)))+(((IkReal(-1.00000000000000))*(x2175)*(x2176)))+(((x2173)*(x2175)))+(((IkReal(-1.00000000000000))*(sj1)*(x2173)*(x2174)))+(((sj1)*(sj2)*(x2176)))+(((IkReal(-0.521670000000000))*(sj2)))+(((pz)*(x2178))));
evalcond[4]=((IkReal(-0.0438310000000000))+(((IkReal(-1.00000000000000))*(cj1)*(x2174)*(x2176)))+(((IkReal(-1.00000000000000))*(pz)*(x2175)))+(((x2173)*(x2177)))+(((x2173)*(x2178)))+(((IkReal(-1.00000000000000))*(x2176)*(x2177)))+(((sj2)*(x2172)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2179=((cj2)*(sj1));
IkReal x2180=((cj0)*(r01));
IkReal x2181=((sj1)*(sj2));
IkReal x2182=((cj1)*(cj2));
IkReal x2183=((cj1)*(sj2));
IkReal x2184=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((IkReal(-1.00000000000000))*(x2180)*(x2181)))+(((r00)*(sj0)*(x2181)))+(((x2180)*(x2182)))+(((r02)*(x2179)))+(((r02)*(x2183)))+(((IkReal(-1.00000000000000))*(x2182)*(x2184))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x2179)*(x2180)))+(((x2180)*(x2183)))+(((r02)*(x2181)))+(((IkReal(-1.00000000000000))*(x2183)*(x2184)))+(((IkReal(-1.00000000000000))*(x2179)*(x2184)))+(((IkReal(-1.00000000000000))*(r02)*(x2182))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x2180)*(x2181)))+(((r00)*(sj0)*(x2181)))+(((x2180)*(x2182)))+(((r02)*(x2179)))+(((r02)*(x2183)))+(((IkReal(-1.00000000000000))*(x2182)*(x2184)))))+IKsqr(((((x2179)*(x2180)))+(((x2180)*(x2183)))+(((r02)*(x2181)))+(((IkReal(-1.00000000000000))*(x2183)*(x2184)))+(((IkReal(-1.00000000000000))*(x2179)*(x2184)))+(((IkReal(-1.00000000000000))*(r02)*(x2182)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x2180)*(x2181)))+(((r00)*(sj0)*(x2181)))+(((x2180)*(x2182)))+(((r02)*(x2179)))+(((r02)*(x2183)))+(((IkReal(-1.00000000000000))*(x2182)*(x2184)))), ((((x2179)*(x2180)))+(((x2180)*(x2183)))+(((r02)*(x2181)))+(((IkReal(-1.00000000000000))*(x2183)*(x2184)))+(((IkReal(-1.00000000000000))*(x2179)*(x2184)))+(((IkReal(-1.00000000000000))*(r02)*(x2182)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x2185=((r02)*(sj2));
IkReal x2186=((IkReal(1.00000000000000))*(sj2));
IkReal x2187=((r00)*(sj0));
IkReal x2188=((cj1)*(cj2));
IkReal x2189=((cj0)*(r01));
IkReal x2190=((sj1)*(x2189));
IkReal x2191=((IkReal(1.00000000000000))*(cj2)*(x2187));
evalcond[0]=((((cj2)*(x2190)))+(((IkReal(-1.00000000000000))*(cj1)*(x2186)*(x2187)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((sj1)*(x2185)))+(((IkReal(-1.00000000000000))*(sj1)*(x2191)))+(((cj1)*(sj2)*(x2189)))+(((IkReal(-1.00000000000000))*(r02)*(x2188))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x2187)*(x2188)))+(((cj1)*(x2185)))+(((IkReal(-1.00000000000000))*(x2186)*(x2190)))+(((cj2)*(r02)*(sj1)))+(((x2188)*(x2189)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((sj1)*(sj2)*(x2187))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2192=((sj1)*(sj2));
IkReal x2193=((cj2)*(sj1));
IkReal x2194=((cj1)*(sj2));
IkReal x2195=((IkReal(1.00000000000000))*(r02));
IkReal x2196=((cj1)*(cj2));
IkReal x2197=((cj0)*(r01));
IkReal x2198=((sj1)*(x2197));
IkReal x2199=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((x2192)*(x2197)))+(((IkReal(-1.00000000000000))*(x2196)*(x2197)))+(((IkReal(-1.00000000000000))*(x2193)*(x2195)))+(((IkReal(-1.00000000000000))*(x2192)*(x2199)))+(((r00)*(sj0)*(x2196)))+(((IkReal(-1.00000000000000))*(x2194)*(x2195))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x2195)*(x2196)))+(((x2193)*(x2197)))+(((x2194)*(x2197)))+(((IkReal(-1.00000000000000))*(x2193)*(x2199)))+(((IkReal(-1.00000000000000))*(x2194)*(x2199)))+(((r02)*(x2192))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((x2192)*(x2197)))+(((IkReal(-1.00000000000000))*(x2196)*(x2197)))+(((IkReal(-1.00000000000000))*(x2193)*(x2195)))+(((IkReal(-1.00000000000000))*(x2192)*(x2199)))+(((r00)*(sj0)*(x2196)))+(((IkReal(-1.00000000000000))*(x2194)*(x2195)))))))+IKsqr(((((IkReal(-1.00000000000000))*(x2195)*(x2196)))+(((x2193)*(x2197)))+(((x2194)*(x2197)))+(((IkReal(-1.00000000000000))*(x2193)*(x2199)))+(((IkReal(-1.00000000000000))*(x2194)*(x2199)))+(((r02)*(x2192)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((x2192)*(x2197)))+(((IkReal(-1.00000000000000))*(x2196)*(x2197)))+(((IkReal(-1.00000000000000))*(x2193)*(x2195)))+(((IkReal(-1.00000000000000))*(x2192)*(x2199)))+(((r00)*(sj0)*(x2196)))+(((IkReal(-1.00000000000000))*(x2194)*(x2195)))))), ((((IkReal(-1.00000000000000))*(x2195)*(x2196)))+(((x2193)*(x2197)))+(((x2194)*(x2197)))+(((IkReal(-1.00000000000000))*(x2193)*(x2199)))+(((IkReal(-1.00000000000000))*(x2194)*(x2199)))+(((r02)*(x2192)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x2200=IKsin(j5);
IkReal x2201=((r02)*(sj2));
IkReal x2202=((IkReal(1.00000000000000))*(sj2));
IkReal x2203=((r00)*(sj0));
IkReal x2204=((IkReal(1.00000000000000))*(cj2));
IkReal x2205=((cj0)*(r01)*(sj1));
IkReal x2206=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x2200)))+(((cj0)*(r00))));
evalcond[1]=((((sj2)*(x2206)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x2204)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((IkReal(-1.00000000000000))*(cj1)*(x2202)*(x2203)))+(((cj2)*(x2205)))+(((sj1)*(x2201)))+(((IkReal(-1.00000000000000))*(sj1)*(x2203)*(x2204))));
evalcond[2]=((((cj1)*(x2201)))+(((IkReal(-1.00000000000000))*(cj1)*(x2203)*(x2204)))+(((IkReal(-1.00000000000000))*(x2202)*(x2205)))+(((cj2)*(x2206)))+(((sj4)*(x2200)))+(((cj2)*(r02)*(sj1)))+(((sj1)*(sj2)*(x2203))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2207=((cj2)*(sj1));
IkReal x2208=((cj0)*(r01));
IkReal x2209=((cj1)*(sj2));
IkReal x2210=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x2207)*(x2210)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(x2209)*(x2210)))+(((x2207)*(x2208)))+(((r02)*(sj1)*(sj2)))+(((x2208)*(x2209))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))))+IKsqr(((((IkReal(-1.00000000000000))*(x2207)*(x2210)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(x2209)*(x2210)))+(((x2207)*(x2208)))+(((r02)*(sj1)*(sj2)))+(((x2208)*(x2209)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))), ((((IkReal(-1.00000000000000))*(x2207)*(x2210)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(x2209)*(x2210)))+(((x2207)*(x2208)))+(((r02)*(sj1)*(sj2)))+(((x2208)*(x2209)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x2211=IKsin(j5);
IkReal x2212=((r02)*(sj2));
IkReal x2213=((IkReal(1.00000000000000))*(sj2));
IkReal x2214=((r00)*(sj0));
IkReal x2215=((IkReal(1.00000000000000))*(cj2));
IkReal x2216=((cj0)*(r01)*(sj1));
IkReal x2217=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x2211)))+(((cj0)*(r00))));
evalcond[1]=((((sj2)*(x2217)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x2215)))+(((IkReal(-1.00000000000000))*(sj1)*(x2214)*(x2215)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((cj2)*(x2216)))+(((sj1)*(x2212)))+(((IkReal(-1.00000000000000))*(cj1)*(x2213)*(x2214))));
evalcond[2]=((((cj1)*(x2212)))+(((cj2)*(x2217)))+(((IkReal(-1.00000000000000))*(x2213)*(x2216)))+(((sj4)*(x2211)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(x2214)*(x2215)))+(((sj1)*(sj2)*(x2214))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x2218=((cj1)*(sj2));
IkReal x2219=((px)*(sj0));
IkReal x2220=((sj1)*(sj2));
IkReal x2221=((cj0)*(py));
IkReal x2222=((cj2)*(pz));
IkReal x2223=((IkReal(1.00000000000000))*(cj1));
IkReal x2224=((cj2)*(x2221));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.000787000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((IkReal(-0.261090000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x2220)*(x2221)))+(((sj1)*(x2222)))+(((IkReal(0.0513310000000000))*(sj3)))+(((x2219)*(x2220)))+(((IkReal(-0.324112000000000))*(cj3)))+(((pz)*(x2218)))+(((IkReal(-0.521670000000000))*(sj2)))+(((cj1)*(x2224)))+(((IkReal(-1.00000000000000))*(cj2)*(x2219)*(x2223))));
evalcond[3]=((IkReal(0.00750000000000000))+(((IkReal(-1.00000000000000))*(x2222)*(x2223)))+(((IkReal(-1.00000000000000))*(x2218)*(x2219)))+(((sj1)*(x2224)))+(((IkReal(0.521670000000000))*(cj2)))+(((x2218)*(x2221)))+(((IkReal(0.0513310000000000))*(cj3)))+(((IkReal(0.324112000000000))*(sj3)))+(((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x2219)))+(((IkReal(0.00982000000000000))*(sj2)))+(((pz)*(x2220))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2225=((cj0)*(r01));
IkReal x2226=((sj1)*(sj2));
IkReal x2227=((IkReal(1.00000000000000))*(cj1));
IkReal x2228=((r00)*(sj0));
if( IKabs(((((r01)*(sj0)))+(((cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r02)*(sj2)*(x2227)))+(((x2225)*(x2226)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x2226)*(x2228)))+(((cj1)*(cj2)*(x2228)))+(((IkReal(-1.00000000000000))*(cj2)*(x2225)*(x2227))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r01)*(sj0)))+(((cj0)*(r00)))))+IKsqr(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r02)*(sj2)*(x2227)))+(((x2225)*(x2226)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x2226)*(x2228)))+(((cj1)*(cj2)*(x2228)))+(((IkReal(-1.00000000000000))*(cj2)*(x2225)*(x2227)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((r01)*(sj0)))+(((cj0)*(r00)))), ((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r02)*(sj2)*(x2227)))+(((x2225)*(x2226)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x2226)*(x2228)))+(((cj1)*(cj2)*(x2228)))+(((IkReal(-1.00000000000000))*(cj2)*(x2225)*(x2227)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x2229=IKcos(j5);
IkReal x2230=((r02)*(sj2));
IkReal x2231=((IkReal(1.00000000000000))*(sj2));
IkReal x2232=((r00)*(sj0));
IkReal x2233=((IkReal(1.00000000000000))*(cj2));
IkReal x2234=((cj0)*(r01)*(sj1));
IkReal x2235=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj1)*(r02)*(x2233)))+(((IkReal(-1.00000000000000))*(sj1)*(x2232)*(x2233)))+(((sj1)*(x2230)))+(((sj2)*(x2235)))+(((IkReal(-1.00000000000000))*(cj1)*(x2231)*(x2232)))+(((cj3)*(x2229)))+(((cj2)*(x2234))));
evalcond[2]=((((sj1)*(sj2)*(x2232)))+(((sj3)*(x2229)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x2231)*(x2234)))+(((IkReal(-1.00000000000000))*(cj1)*(x2232)*(x2233)))+(((cj2)*(x2235)))+(((cj1)*(x2230))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2236=((IkReal(1.00000000000000))*(sj2));
IkReal x2237=((cj0)*(r01));
IkReal x2238=((cj2)*(sj1));
IkReal x2239=((r00)*(sj0));
if( IKabs(((((r01)*(sj0)))+(((cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((x2238)*(x2239)))+(((cj1)*(sj2)*(x2239)))+(((IkReal(-1.00000000000000))*(x2237)*(x2238)))+(((IkReal(-1.00000000000000))*(cj1)*(x2236)*(x2237)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x2236)))+(((cj1)*(cj2)*(r02))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r01)*(sj0)))+(((cj0)*(r00)))))+IKsqr(((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((x2238)*(x2239)))+(((cj1)*(sj2)*(x2239)))+(((IkReal(-1.00000000000000))*(x2237)*(x2238)))+(((IkReal(-1.00000000000000))*(cj1)*(x2236)*(x2237)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x2236)))+(((cj1)*(cj2)*(r02)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((r01)*(sj0)))+(((cj0)*(r00)))), ((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((x2238)*(x2239)))+(((cj1)*(sj2)*(x2239)))+(((IkReal(-1.00000000000000))*(x2237)*(x2238)))+(((IkReal(-1.00000000000000))*(cj1)*(x2236)*(x2237)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x2236)))+(((cj1)*(cj2)*(r02)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x2240=IKcos(j5);
IkReal x2241=((r02)*(sj2));
IkReal x2242=((IkReal(1.00000000000000))*(sj2));
IkReal x2243=((r00)*(sj0));
IkReal x2244=((IkReal(1.00000000000000))*(cj2));
IkReal x2245=((cj0)*(r01)*(sj1));
IkReal x2246=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((cj0)*(r00))));
evalcond[1]=((((sj2)*(x2246)))+(((cj2)*(x2245)))+(((IkReal(-1.00000000000000))*(sj1)*(x2243)*(x2244)))+(((cj3)*(x2240)))+(((IkReal(-1.00000000000000))*(cj1)*(x2242)*(x2243)))+(((sj1)*(x2241)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x2244))));
evalcond[2]=((((cj1)*(x2241)))+(((cj2)*(x2246)))+(((sj3)*(x2240)))+(((sj1)*(sj2)*(x2243)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x2242)*(x2245)))+(((IkReal(-1.00000000000000))*(cj1)*(x2243)*(x2244))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x2247=((cj1)*(sj2));
IkReal x2248=((px)*(sj0));
IkReal x2249=((sj1)*(sj2));
IkReal x2250=((cj0)*(py));
IkReal x2251=((cj2)*(pz));
IkReal x2252=((IkReal(1.00000000000000))*(cj1));
IkReal x2253=((cj2)*(x2250));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.000787000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((IkReal(-0.261090000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(0.0576720000000000))*(cj3)))+(((IkReal(-1.00000000000000))*(cj2)*(x2248)*(x2252)))+(((cj1)*(x2253)))+(((sj1)*(x2251)))+(((IkReal(0.0513310000000000))*(sj3)))+(((IkReal(-1.00000000000000))*(x2249)*(x2250)))+(((x2248)*(x2249)))+(((pz)*(x2247)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[3]=((IkReal(0.00750000000000000))+(((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x2248)))+(((IkReal(0.521670000000000))*(cj2)))+(((x2247)*(x2250)))+(((sj1)*(x2253)))+(((IkReal(-1.00000000000000))*(x2247)*(x2248)))+(((IkReal(-0.0576720000000000))*(sj3)))+(((IkReal(0.0513310000000000))*(cj3)))+(((IkReal(-1.00000000000000))*(x2251)*(x2252)))+(((pz)*(x2249)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2254=((sj1)*(sj2));
IkReal x2255=((cj0)*(r01));
IkReal x2256=((r00)*(sj0));
IkReal x2257=((IkReal(1.00000000000000))*(cj1));
if( IKabs(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj2)*(x2255)*(x2257)))+(((x2254)*(x2255)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x2257)))+(((cj1)*(cj2)*(x2256)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x2254)*(x2256))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))))+IKsqr(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj2)*(x2255)*(x2257)))+(((x2254)*(x2255)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x2257)))+(((cj1)*(cj2)*(x2256)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x2254)*(x2256)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))), ((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj2)*(x2255)*(x2257)))+(((x2254)*(x2255)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x2257)))+(((cj1)*(cj2)*(x2256)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x2254)*(x2256)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x2258=IKcos(j5);
IkReal x2259=((r02)*(sj2));
IkReal x2260=((IkReal(1.00000000000000))*(sj2));
IkReal x2261=((r00)*(sj0));
IkReal x2262=((IkReal(1.00000000000000))*(cj2));
IkReal x2263=((cj0)*(r01)*(sj1));
IkReal x2264=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(IKsin(j5))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj1)*(r02)*(x2262)))+(((cj3)*(x2258)))+(((IkReal(-1.00000000000000))*(sj1)*(x2261)*(x2262)))+(((sj1)*(x2259)))+(((IkReal(-1.00000000000000))*(cj1)*(x2260)*(x2261)))+(((cj2)*(x2263)))+(((sj2)*(x2264))));
evalcond[2]=((((sj1)*(sj2)*(x2261)))+(((IkReal(-1.00000000000000))*(cj1)*(x2261)*(x2262)))+(((sj3)*(x2258)))+(((IkReal(-1.00000000000000))*(x2260)*(x2263)))+(((cj1)*(x2259)))+(((cj2)*(r02)*(sj1)))+(((cj2)*(x2264))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2265=((IkReal(1.00000000000000))*(sj2));
IkReal x2266=((cj0)*(r01));
IkReal x2267=((cj2)*(sj1));
IkReal x2268=((r00)*(sj0));
if( IKabs(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((cj1)*(sj2)*(x2268)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x2265)))+(((IkReal(-1.00000000000000))*(cj1)*(x2265)*(x2266)))+(((IkReal(-1.00000000000000))*(x2266)*(x2267)))+(((x2267)*(x2268)))+(((cj1)*(cj2)*(r02))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))))+IKsqr(((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((cj1)*(sj2)*(x2268)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x2265)))+(((IkReal(-1.00000000000000))*(cj1)*(x2265)*(x2266)))+(((IkReal(-1.00000000000000))*(x2266)*(x2267)))+(((x2267)*(x2268)))+(((cj1)*(cj2)*(r02)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))), ((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((cj1)*(sj2)*(x2268)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x2265)))+(((IkReal(-1.00000000000000))*(cj1)*(x2265)*(x2266)))+(((IkReal(-1.00000000000000))*(x2266)*(x2267)))+(((x2267)*(x2268)))+(((cj1)*(cj2)*(r02)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x2269=IKcos(j5);
IkReal x2270=((r02)*(sj2));
IkReal x2271=((IkReal(1.00000000000000))*(sj2));
IkReal x2272=((r00)*(sj0));
IkReal x2273=((IkReal(1.00000000000000))*(cj2));
IkReal x2274=((cj0)*(r01)*(sj1));
IkReal x2275=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(IKsin(j5))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj1)*(x2272)*(x2273)))+(((IkReal(-1.00000000000000))*(cj1)*(x2271)*(x2272)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x2273)))+(((sj1)*(x2270)))+(((cj2)*(x2274)))+(((cj3)*(x2269)))+(((sj2)*(x2275))));
evalcond[2]=((((sj1)*(sj2)*(x2272)))+(((cj1)*(x2270)))+(((cj2)*(r02)*(sj1)))+(((cj2)*(x2275)))+(((sj3)*(x2269)))+(((IkReal(-1.00000000000000))*(cj1)*(x2272)*(x2273)))+(((IkReal(-1.00000000000000))*(x2271)*(x2274))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2276=((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30);
IkReal x2277=((cj0)*(r00));
IkReal x2278=((r00)*(sj0));
IkReal x2279=((r01)*(sj0));
IkReal x2280=((cj4)*(r02));
IkReal x2281=((cj1)*(cj4)*(sj2));
IkReal x2282=((IkReal(1.00000000000000))*(sj3)*(sj4));
IkReal x2283=((IkReal(1.00000000000000))*(cj0)*(r01));
IkReal x2284=((cj2)*(cj4)*(sj1));
if( IKabs(((x2276)*(((x2277)+(x2279))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x2276)*(((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x2277)*(x2282)))+(((cj1)*(cj2)*(x2280)))+(((x2278)*(x2281)))+(((x2278)*(x2284)))+(((IkReal(-1.00000000000000))*(x2281)*(x2283)))+(((IkReal(-1.00000000000000))*(x2279)*(x2282)))+(((IkReal(-1.00000000000000))*(sj1)*(sj2)*(x2280)))+(((IkReal(-1.00000000000000))*(x2283)*(x2284))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x2276)*(((x2277)+(x2279)))))+IKsqr(((x2276)*(((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x2277)*(x2282)))+(((cj1)*(cj2)*(x2280)))+(((x2278)*(x2281)))+(((x2278)*(x2284)))+(((IkReal(-1.00000000000000))*(x2281)*(x2283)))+(((IkReal(-1.00000000000000))*(x2279)*(x2282)))+(((IkReal(-1.00000000000000))*(sj1)*(sj2)*(x2280)))+(((IkReal(-1.00000000000000))*(x2283)*(x2284)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((x2276)*(((x2277)+(x2279)))), ((x2276)*(((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x2277)*(x2282)))+(((cj1)*(cj2)*(x2280)))+(((x2278)*(x2281)))+(((x2278)*(x2284)))+(((IkReal(-1.00000000000000))*(x2281)*(x2283)))+(((IkReal(-1.00000000000000))*(x2279)*(x2282)))+(((IkReal(-1.00000000000000))*(sj1)*(sj2)*(x2280)))+(((IkReal(-1.00000000000000))*(x2283)*(x2284)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x2285=IKsin(j5);
IkReal x2286=IKcos(j5);
IkReal x2287=((r02)*(sj2));
IkReal x2288=((IkReal(1.00000000000000))*(sj2));
IkReal x2289=((r00)*(sj0));
IkReal x2290=((IkReal(1.00000000000000))*(cj2));
IkReal x2291=((IkReal(1.00000000000000))*(x2285));
IkReal x2292=((cj0)*(r01)*(sj1));
IkReal x2293=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x2291)))+(((cj0)*(r00))));
evalcond[1]=((((cj2)*(x2292)))+(((cj3)*(x2286)))+(((IkReal(-1.00000000000000))*(sj1)*(x2289)*(x2290)))+(((sj1)*(x2287)))+(((sj2)*(x2293)))+(((IkReal(-1.00000000000000))*(cj1)*(x2288)*(x2289)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x2290)))+(((sj3)*(sj4)*(x2285))));
evalcond[2]=((((cj2)*(x2293)))+(((sj3)*(x2286)))+(((IkReal(-1.00000000000000))*(cj1)*(x2289)*(x2290)))+(((IkReal(-1.00000000000000))*(x2288)*(x2292)))+(((cj2)*(r02)*(sj1)))+(((cj1)*(x2287)))+(((IkReal(-1.00000000000000))*(cj3)*(sj4)*(x2291)))+(((sj1)*(sj2)*(x2289))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2294=((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30);
IkReal x2295=((cj0)*(r00));
IkReal x2296=((r01)*(sj0));
IkReal x2297=((cj3)*(sj4));
IkReal x2298=((cj0)*(r01));
IkReal x2299=((cj4)*(sj2));
IkReal x2300=((r00)*(sj0));
IkReal x2301=((IkReal(1.00000000000000))*(cj2)*(cj4));
if( IKabs(((x2294)*(((x2296)+(x2295))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x2294)*(((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(sj1)*(x2299)*(x2300)))+(((x2296)*(x2297)))+(((IkReal(-1.00000000000000))*(cj1)*(x2298)*(x2301)))+(((sj1)*(x2298)*(x2299)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x2299)))+(((x2295)*(x2297)))+(((cj1)*(cj2)*(cj4)*(x2300)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x2301))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x2294)*(((x2296)+(x2295)))))+IKsqr(((x2294)*(((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(sj1)*(x2299)*(x2300)))+(((x2296)*(x2297)))+(((IkReal(-1.00000000000000))*(cj1)*(x2298)*(x2301)))+(((sj1)*(x2298)*(x2299)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x2299)))+(((x2295)*(x2297)))+(((cj1)*(cj2)*(cj4)*(x2300)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x2301)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((x2294)*(((x2296)+(x2295)))), ((x2294)*(((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(sj1)*(x2299)*(x2300)))+(((x2296)*(x2297)))+(((IkReal(-1.00000000000000))*(cj1)*(x2298)*(x2301)))+(((sj1)*(x2298)*(x2299)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x2299)))+(((x2295)*(x2297)))+(((cj1)*(cj2)*(cj4)*(x2300)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x2301)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x2302=IKsin(j5);
IkReal x2303=IKcos(j5);
IkReal x2304=((r02)*(sj2));
IkReal x2305=((IkReal(1.00000000000000))*(sj2));
IkReal x2306=((r00)*(sj0));
IkReal x2307=((IkReal(1.00000000000000))*(cj2));
IkReal x2308=((IkReal(1.00000000000000))*(x2302));
IkReal x2309=((cj0)*(r01)*(sj1));
IkReal x2310=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x2308)))+(((cj0)*(r00))));
evalcond[1]=((((cj2)*(x2309)))+(((sj1)*(x2304)))+(((sj2)*(x2310)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x2307)))+(((IkReal(-1.00000000000000))*(sj1)*(x2306)*(x2307)))+(((sj3)*(sj4)*(x2302)))+(((cj3)*(x2303)))+(((IkReal(-1.00000000000000))*(cj1)*(x2305)*(x2306))));
evalcond[2]=((((cj2)*(x2310)))+(((IkReal(-1.00000000000000))*(cj1)*(x2306)*(x2307)))+(((sj1)*(sj2)*(x2306)))+(((sj3)*(x2303)))+(((IkReal(-1.00000000000000))*(cj3)*(sj4)*(x2308)))+(((cj1)*(x2304)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x2305)*(x2309))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2311=(cj3)*(cj3);
IkReal x2312=(sj3)*(sj3);
IkReal x2313=((cj1)*(sj3));
IkReal x2314=((cj0)*(r01));
IkReal x2315=((r02)*(sj2));
IkReal x2316=((cj2)*(sj1));
IkReal x2317=((cj1)*(cj3));
IkReal x2318=((cj2)*(r02));
IkReal x2319=((cj3)*(sj1));
IkReal x2320=((IkReal(1.00000000000000))*(sj3));
IkReal x2321=((r00)*(sj0));
IkReal x2322=((IkReal(1.00000000000000))*(sj1)*(sj2));
IkReal x2323=((IkReal(1.00000000000000))*(x2321));
if( IKabs(((((IKabs(((((sj4)*(x2312)))+(((sj4)*(x2311))))) != 0)?((IkReal)1/(((((sj4)*(x2312)))+(((sj4)*(x2311)))))):(IkReal)1.0e30))*(((((x2315)*(x2317)))+(((cj2)*(x2314)*(x2317)))+(((sj2)*(x2313)*(x2321)))+(((IkReal(-1.00000000000000))*(x2314)*(x2316)*(x2320)))+(((cj3)*(r02)*(x2316)))+(((IkReal(-1.00000000000000))*(sj2)*(x2314)*(x2319)))+(((IkReal(-1.00000000000000))*(cj2)*(x2317)*(x2323)))+(((sj2)*(x2319)*(x2321)))+(((sj3)*(x2316)*(x2321)))+(((IkReal(-1.00000000000000))*(sj2)*(x2313)*(x2314)))+(((IkReal(-1.00000000000000))*(sj1)*(x2315)*(x2320)))+(((x2313)*(x2318))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(((((IkReal(-1.00000000000000))*(x2311)))+(((IkReal(-1.00000000000000))*(x2312))))) != 0)?((IkReal)1/(((((IkReal(-1.00000000000000))*(x2311)))+(((IkReal(-1.00000000000000))*(x2312)))))):(IkReal)1.0e30))*(((((x2315)*(x2319)))+(((r02)*(sj3)*(x2316)))+(((IkReal(-1.00000000000000))*(sj1)*(sj2)*(x2314)*(x2320)))+(((IkReal(-1.00000000000000))*(x2317)*(x2318)))+(((IkReal(-1.00000000000000))*(cj3)*(x2316)*(x2323)))+(((cj3)*(x2314)*(x2316)))+(((cj2)*(x2313)*(x2314)))+(((IkReal(-1.00000000000000))*(sj2)*(x2317)*(x2323)))+(((sj2)*(x2314)*(x2317)))+(((sj1)*(sj2)*(sj3)*(x2321)))+(((x2313)*(x2315)))+(((IkReal(-1.00000000000000))*(cj2)*(x2313)*(x2323))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(((((sj4)*(x2312)))+(((sj4)*(x2311))))) != 0)?((IkReal)1/(((((sj4)*(x2312)))+(((sj4)*(x2311)))))):(IkReal)1.0e30))*(((((x2315)*(x2317)))+(((cj2)*(x2314)*(x2317)))+(((sj2)*(x2313)*(x2321)))+(((IkReal(-1.00000000000000))*(x2314)*(x2316)*(x2320)))+(((cj3)*(r02)*(x2316)))+(((IkReal(-1.00000000000000))*(sj2)*(x2314)*(x2319)))+(((IkReal(-1.00000000000000))*(cj2)*(x2317)*(x2323)))+(((sj2)*(x2319)*(x2321)))+(((sj3)*(x2316)*(x2321)))+(((IkReal(-1.00000000000000))*(sj2)*(x2313)*(x2314)))+(((IkReal(-1.00000000000000))*(sj1)*(x2315)*(x2320)))+(((x2313)*(x2318)))))))+IKsqr(((((IKabs(((((IkReal(-1.00000000000000))*(x2311)))+(((IkReal(-1.00000000000000))*(x2312))))) != 0)?((IkReal)1/(((((IkReal(-1.00000000000000))*(x2311)))+(((IkReal(-1.00000000000000))*(x2312)))))):(IkReal)1.0e30))*(((((x2315)*(x2319)))+(((r02)*(sj3)*(x2316)))+(((IkReal(-1.00000000000000))*(sj1)*(sj2)*(x2314)*(x2320)))+(((IkReal(-1.00000000000000))*(x2317)*(x2318)))+(((IkReal(-1.00000000000000))*(cj3)*(x2316)*(x2323)))+(((cj3)*(x2314)*(x2316)))+(((cj2)*(x2313)*(x2314)))+(((IkReal(-1.00000000000000))*(sj2)*(x2317)*(x2323)))+(((sj2)*(x2314)*(x2317)))+(((sj1)*(sj2)*(sj3)*(x2321)))+(((x2313)*(x2315)))+(((IkReal(-1.00000000000000))*(cj2)*(x2313)*(x2323)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(((((sj4)*(x2312)))+(((sj4)*(x2311))))) != 0)?((IkReal)1/(((((sj4)*(x2312)))+(((sj4)*(x2311)))))):(IkReal)1.0e30))*(((((x2315)*(x2317)))+(((cj2)*(x2314)*(x2317)))+(((sj2)*(x2313)*(x2321)))+(((IkReal(-1.00000000000000))*(x2314)*(x2316)*(x2320)))+(((cj3)*(r02)*(x2316)))+(((IkReal(-1.00000000000000))*(sj2)*(x2314)*(x2319)))+(((IkReal(-1.00000000000000))*(cj2)*(x2317)*(x2323)))+(((sj2)*(x2319)*(x2321)))+(((sj3)*(x2316)*(x2321)))+(((IkReal(-1.00000000000000))*(sj2)*(x2313)*(x2314)))+(((IkReal(-1.00000000000000))*(sj1)*(x2315)*(x2320)))+(((x2313)*(x2318)))))), ((((IKabs(((((IkReal(-1.00000000000000))*(x2311)))+(((IkReal(-1.00000000000000))*(x2312))))) != 0)?((IkReal)1/(((((IkReal(-1.00000000000000))*(x2311)))+(((IkReal(-1.00000000000000))*(x2312)))))):(IkReal)1.0e30))*(((((x2315)*(x2319)))+(((r02)*(sj3)*(x2316)))+(((IkReal(-1.00000000000000))*(sj1)*(sj2)*(x2314)*(x2320)))+(((IkReal(-1.00000000000000))*(x2317)*(x2318)))+(((IkReal(-1.00000000000000))*(cj3)*(x2316)*(x2323)))+(((cj3)*(x2314)*(x2316)))+(((cj2)*(x2313)*(x2314)))+(((IkReal(-1.00000000000000))*(sj2)*(x2317)*(x2323)))+(((sj2)*(x2314)*(x2317)))+(((sj1)*(sj2)*(sj3)*(x2321)))+(((x2313)*(x2315)))+(((IkReal(-1.00000000000000))*(cj2)*(x2313)*(x2323)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x2324=IKsin(j5);
IkReal x2325=IKcos(j5);
IkReal x2326=((r02)*(sj2));
IkReal x2327=((IkReal(1.00000000000000))*(sj2));
IkReal x2328=((r00)*(sj0));
IkReal x2329=((IkReal(1.00000000000000))*(cj2));
IkReal x2330=((IkReal(1.00000000000000))*(x2324));
IkReal x2331=((cj0)*(r01)*(sj1));
IkReal x2332=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x2330)))+(((cj0)*(r00))));
evalcond[1]=((((cj3)*(x2325)))+(((cj2)*(x2331)))+(((sj2)*(x2332)))+(((IkReal(-1.00000000000000))*(sj1)*(x2328)*(x2329)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x2329)))+(((IkReal(-1.00000000000000))*(cj1)*(x2327)*(x2328)))+(((sj3)*(sj4)*(x2324)))+(((sj1)*(x2326))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj1)*(x2328)*(x2329)))+(((sj3)*(x2325)))+(((cj2)*(x2332)))+(((IkReal(-1.00000000000000))*(cj3)*(sj4)*(x2330)))+(((cj1)*(x2326)))+(((sj1)*(sj2)*(x2328)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x2327)*(x2331))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
    }
}
return solutions.GetNumSolutions()>0;
}

static inline bool checkconsistency8(const IkReal* Breal)
{
    IkReal norm = 0.1;
    for(int i = 0; i < 7; ++i) {
        norm += IKabs(Breal[i]);
    }
    IkReal tol = 1e-5*norm; // have to increase the threshold since many computations are involved
    return IKabs(Breal[0]*Breal[1]-Breal[2]) < tol && IKabs(Breal[1]*Breal[1]-Breal[3]) < tol && IKabs(Breal[0]*Breal[3]-Breal[4]) < tol && IKabs(Breal[1]*Breal[3]-Breal[5]) < tol && IKabs(Breal[0]*Breal[5]-Breal[6]) < tol;
}
/// \brief Solve the det Ax^2+Bx+C = 0 problem using the Manocha and Canny method (1994)
///
/// matcoeffs is of length 54*3, for 3 matrices
static inline void solvedialyticpoly8qep(const IkReal* matcoeffs, IkReal* rawroots, int& numroots)
{
    const IkReal tol = 128.0*std::numeric_limits<IkReal>::epsilon();
    IkReal IKFAST_ALIGNED16(M[16*16]) = {0};
    IkReal IKFAST_ALIGNED16(A[8*8]);
    IkReal IKFAST_ALIGNED16(work[16*16*15]);
    int ipiv[8];
    int info, coeffindex;
    const int worksize=16*16*15;
    const int matrixdim = 8;
    const int matrixdim2 = 16;
    numroots = 0;
    // first setup M = [0 I; -C -B] and A
    coeffindex = 0;
    for(int j = 0; j < 4; ++j) {
        for(int k = 0; k < 6; ++k) {
            M[matrixdim+(j+4)+2*matrixdim*k] = M[matrixdim+j+2*matrixdim*(k+2)] = -matcoeffs[coeffindex++];
        }
    }
    for(int j = 0; j < 4; ++j) {
        for(int k = 0; k < 6; ++k) {
            M[matrixdim+(j+4)+2*matrixdim*k+matrixdim*2*matrixdim] = M[matrixdim+j+2*matrixdim*(k+2)+matrixdim*2*matrixdim] = -matcoeffs[coeffindex++];
        }
    }
    for(int j = 0; j < 4; ++j) {
        for(int k = 0; k < 6; ++k) {
            A[(j+4)+matrixdim*k] = A[j+matrixdim*(k+2)] = matcoeffs[coeffindex++];
        }
        for(int k = 0; k < 2; ++k) {
            A[j+matrixdim*k] = A[(j+4)+matrixdim*(k+6)] = 0;
        }
    }
    const IkReal lfpossibilities[4][4] = {{1,-1,1,1},{1,0,-2,1},{1,1,2,0},{1,-1,4,1}};
    int lfindex = -1;
    bool bsingular = true;
    do {
        dgetrf_(&matrixdim,&matrixdim,A,&matrixdim,&ipiv[0],&info);
        if( info == 0 ) {
            bsingular = false;
            for(int j = 0; j < matrixdim; ++j) {
                if( IKabs(A[j*matrixdim+j]) < 100*tol ) {
                    bsingular = true;
                    break;
                }
            }
            if( !bsingular ) {
                break;
            }
        }
        if( lfindex == 3 ) {
            break;
        }
        // transform by the linear functional
        lfindex++;
        const IkReal* lf = lfpossibilities[lfindex];
        // have to reinitialize A
        coeffindex = 0;
        for(int j = 0; j < 4; ++j) {
            for(int k = 0; k < 6; ++k) {
                IkReal a = matcoeffs[coeffindex+48], b = matcoeffs[coeffindex+24], c = matcoeffs[coeffindex];
                A[(j+4)+matrixdim*k] = A[j+matrixdim*(k+2)] = lf[0]*lf[0]*a+lf[0]*lf[2]*b+lf[2]*lf[2]*c;
                M[matrixdim+(j+4)+2*matrixdim*k] = M[matrixdim+j+2*matrixdim*(k+2)] = -(lf[1]*lf[1]*a + lf[1]*lf[3]*b + lf[3]*lf[3]*c);
                M[matrixdim+(j+4)+2*matrixdim*k+matrixdim*2*matrixdim] = M[matrixdim+j+2*matrixdim*(k+2)+matrixdim*2*matrixdim] = -(2*lf[0]*lf[1]*a + (lf[0]*lf[3]+lf[1]*lf[2])*b + 2*lf[2]*lf[3]*c);
                coeffindex++;
            }
            for(int k = 0; k < 2; ++k) {
                A[j+matrixdim*k] = A[(j+4)+matrixdim*(k+6)] = 0;
            }
        }
    } while(lfindex<4);

    if( bsingular ) {
        return;
    }
    dgetrs_("No transpose", &matrixdim, &matrixdim2, A, &matrixdim, &ipiv[0], &M[matrixdim], &matrixdim2, &info);
    if( info != 0 ) {
        return;
    }

    // set identity in upper corner
    for(int j = 0; j < matrixdim; ++j) {
        M[matrixdim*2*matrixdim+j+matrixdim*2*j] = 1;
    }
    IkReal IKFAST_ALIGNED16(wr[16]);
    IkReal IKFAST_ALIGNED16(wi[16]);
    IkReal IKFAST_ALIGNED16(vr[16*16]);
    int one=1;
    dgeev_("N", "V", &matrixdim2, M, &matrixdim2, wr, wi,NULL, &one, vr, &matrixdim2, work, &worksize, &info);
    if( info != 0 ) {
        return;
    }
    IkReal Breal[matrixdim-1];
    for(int i = 0; i < matrixdim2; ++i) {
        if( IKabs(wi[i]) < tol*100 ) {
            IkReal* ev = vr+matrixdim2*i;
            if( IKabs(wr[i]) > 1 ) {
                ev += matrixdim;
            }
            // consistency has to be checked!!
            if( IKabs(ev[0]) < tol ) {
                continue;
            }
            IkReal iconst = 1/ev[0];
            for(int j = 1; j < matrixdim; ++j) {
                Breal[j-1] = ev[j]*iconst;
            }
            if( checkconsistency8(Breal) ) {
                if( lfindex >= 0 ) {
                    const IkReal* lf = lfpossibilities[lfindex];
                    rawroots[numroots++] = (wr[i]*lf[0]+lf[1])/(wr[i]*lf[2]+lf[3]);
                }
                else {
                    rawroots[numroots++] = wr[i];
                }
                bool bsmall0=IKabs(ev[0]) > IKabs(ev[2]);
                bool bsmall1=IKabs(ev[0]) > IKabs(ev[1]);
                if( bsmall0 && bsmall1 ) {
                    rawroots[numroots++] = ev[2]/ev[0];
                    rawroots[numroots++] = ev[1]/ev[0];
                }
                else if( bsmall0 && !bsmall1 ) {
                    rawroots[numroots++] = ev[3]/ev[1];
                    rawroots[numroots++] = ev[1]/ev[0];
                }
                else if( !bsmall0 && bsmall1 ) {
                    rawroots[numroots++] = ev[6]/ev[4];
                    rawroots[numroots++] = ev[7]/ev[6];
                }
                else if( !bsmall0 && !bsmall1 ) {
                    rawroots[numroots++] = ev[7]/ev[5];
                    rawroots[numroots++] = ev[7]/ev[6];
                }
            }
        }
    }
}};


/// solves the inverse kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
IKSolver solver;
return solver.ComputeIk(eetrans,eerot,pfree,solutions);
}

IKFAST_API const char* GetKinematicsHash() { return "<robot:genericrobot - grips (42cd1e57ce525d117bf2884d2003e33b)>"; }

IKFAST_API const char* GetIkFastVersion() { return IKFAST_STRINGIZE(IKFAST_VERSION); }

#ifdef IKFAST_NAMESPACE
} // end namespace
#endif

#ifndef IKFAST_NO_MAIN
#include <stdio.h>
#include <stdlib.h>
#ifdef IKFAST_NAMESPACE
using namespace IKFAST_NAMESPACE;
#endif
int main(int argc, char** argv)
{
    if( argc != 12+GetNumFreeParameters()+1 ) {
        printf("\nUsage: ./ik r00 r01 r02 t0 r10 r11 r12 t1 r20 r21 r22 t2 free0 ...\n\n"
               "Returns the ik solutions given the transformation of the end effector specified by\n"
               "a 3x3 rotation R (rXX), and a 3x1 translation (tX).\n"
               "There are %d free parameters that have to be specified.\n\n",GetNumFreeParameters());
        return 1;
    }

    IkSolutionList<IkReal> solutions;
    std::vector<IkReal> vfree(GetNumFreeParameters());
    IkReal eerot[9],eetrans[3];
    eerot[0] = atof(argv[1]); eerot[1] = atof(argv[2]); eerot[2] = atof(argv[3]); eetrans[0] = atof(argv[4]);
    eerot[3] = atof(argv[5]); eerot[4] = atof(argv[6]); eerot[5] = atof(argv[7]); eetrans[1] = atof(argv[8]);
    eerot[6] = atof(argv[9]); eerot[7] = atof(argv[10]); eerot[8] = atof(argv[11]); eetrans[2] = atof(argv[12]);
    for(std::size_t i = 0; i < vfree.size(); ++i)
        vfree[i] = atof(argv[13+i]);
    bool bSuccess = ComputeIk(eetrans, eerot, vfree.size() > 0 ? &vfree[0] : NULL, solutions);

    if( !bSuccess ) {
        fprintf(stderr,"Failed to get ik solution\n");
        return -1;
    }

    printf("Found %d ik solutions:\n", (int)solutions.GetNumSolutions());
    std::vector<IkReal> solvalues(GetNumJoints());
    for(std::size_t i = 0; i < solutions.GetNumSolutions(); ++i) {
        const IkSolutionBase<IkReal>& sol = solutions.GetSolution(i);
        printf("sol%d (free=%d): ", (int)i, (int)sol.GetFree().size());
        std::vector<IkReal> vsolfree(sol.GetFree().size());
        sol.GetSolution(&solvalues[0],vsolfree.size()>0?&vsolfree[0]:NULL);
        for( std::size_t j = 0; j < solvalues.size(); ++j)
            printf("%.15f, ", solvalues[j]);
        printf("\n");
    }
    return 0;
}

#endif
