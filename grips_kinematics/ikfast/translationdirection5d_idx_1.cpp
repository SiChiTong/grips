/// autogenerated analytical inverse kinematics code from ikfast program part of OpenRAVE
/// \author Rosen Diankov
///
/// Licensed under the Apache License, Version 2.0 (the "License");
/// you may not use this file except in compliance with the License.
/// You may obtain a copy of the License at
///     http://www.apache.org/licenses/LICENSE-2.0
/// 
/// Unless required by applicable law or agreed to in writing, software
/// distributed under the License is distributed on an "AS IS" BASIS,
/// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
/// See the License for the specific language governing permissions and
/// limitations under the License.
///
/// ikfast version 61 generated on 2013-08-08 17:28:12.210537
/// To compile with gcc:
///     gcc -lstdc++ ik.cpp
/// To compile without any main function as a shared object (might need -llapack):
///     gcc -fPIC -lstdc++ -DIKFAST_NO_MAIN -DIKFAST_CLIBRARY -shared -Wl,-soname,libik.so -o libik.so ik.cpp
#define IKFAST_HAS_LIBRARY
#include "ikfast.h" // found inside share/openrave-X.Y/python/ikfast.h
using namespace ikfast;

// check if the included ikfast version matches what this file was compiled with
#define IKFAST_COMPILE_ASSERT(x) extern int __dummy[(int)x]
IKFAST_COMPILE_ASSERT(IKFAST_VERSION==61);

#include <cmath>
#include <vector>
#include <limits>
#include <algorithm>
#include <complex>

#define IKFAST_STRINGIZE2(s) #s
#define IKFAST_STRINGIZE(s) IKFAST_STRINGIZE2(s)

#ifndef IKFAST_ASSERT
#include <stdexcept>
#include <sstream>
#include <iostream>

#ifdef _MSC_VER
#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __FUNCDNAME__
#endif
#endif

#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __func__
#endif

#define IKFAST_ASSERT(b) { if( !(b) ) { std::stringstream ss; ss << "ikfast exception: " << __FILE__ << ":" << __LINE__ << ": " <<__PRETTY_FUNCTION__ << ": Assertion '" << #b << "' failed"; throw std::runtime_error(ss.str()); } }

#endif

#if defined(_MSC_VER)
#define IKFAST_ALIGNED16(x) __declspec(align(16)) x
#else
#define IKFAST_ALIGNED16(x) x __attribute((aligned(16)))
#endif

#define IK2PI  ((IkReal)6.28318530717959)
#define IKPI  ((IkReal)3.14159265358979)
#define IKPI_2  ((IkReal)1.57079632679490)

#ifdef _MSC_VER
#ifndef isnan
#define isnan _isnan
#endif
#endif // _MSC_VER

// lapack routines
extern "C" {
  void dgetrf_ (const int* m, const int* n, double* a, const int* lda, int* ipiv, int* info);
  void zgetrf_ (const int* m, const int* n, std::complex<double>* a, const int* lda, int* ipiv, int* info);
  void dgetri_(const int* n, const double* a, const int* lda, int* ipiv, double* work, const int* lwork, int* info);
  void dgesv_ (const int* n, const int* nrhs, double* a, const int* lda, int* ipiv, double* b, const int* ldb, int* info);
  void dgetrs_(const char *trans, const int *n, const int *nrhs, double *a, const int *lda, int *ipiv, double *b, const int *ldb, int *info);
  void dgeev_(const char *jobvl, const char *jobvr, const int *n, double *a, const int *lda, double *wr, double *wi,double *vl, const int *ldvl, double *vr, const int *ldvr, double *work, const int *lwork, int *info);
}

using namespace std; // necessary to get std math routines

#ifdef IKFAST_NAMESPACE
namespace IKFAST_NAMESPACE {
#endif

inline float IKabs(float f) { return fabsf(f); }
inline double IKabs(double f) { return fabs(f); }

inline float IKsqr(float f) { return f*f; }
inline double IKsqr(double f) { return f*f; }

inline float IKlog(float f) { return logf(f); }
inline double IKlog(double f) { return log(f); }

// allows asin and acos to exceed 1
#ifndef IKFAST_SINCOS_THRESH
#define IKFAST_SINCOS_THRESH ((IkReal)0.000001)
#endif

// used to check input to atan2 for degenerate cases
#ifndef IKFAST_ATAN2_MAGTHRESH
#define IKFAST_ATAN2_MAGTHRESH ((IkReal)2e-6)
#endif

// minimum distance of separate solutions
#ifndef IKFAST_SOLUTION_THRESH
#define IKFAST_SOLUTION_THRESH ((IkReal)1e-6)
#endif

inline float IKasin(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(-IKPI_2);
else if( f >= 1 ) return float(IKPI_2);
return asinf(f);
}
inline double IKasin(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return -IKPI_2;
else if( f >= 1 ) return IKPI_2;
return asin(f);
}

// return positive value in [0,y)
inline float IKfmod(float x, float y)
{
    while(x < 0) {
        x += y;
    }
    return fmodf(x,y);
}

// return positive value in [0,y)
inline double IKfmod(double x, double y)
{
    while(x < 0) {
        x += y;
    }
    return fmod(x,y);
}

inline float IKacos(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(IKPI);
else if( f >= 1 ) return float(0);
return acosf(f);
}
inline double IKacos(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return IKPI;
else if( f >= 1 ) return 0;
return acos(f);
}
inline float IKsin(float f) { return sinf(f); }
inline double IKsin(double f) { return sin(f); }
inline float IKcos(float f) { return cosf(f); }
inline double IKcos(double f) { return cos(f); }
inline float IKtan(float f) { return tanf(f); }
inline double IKtan(double f) { return tan(f); }
inline float IKsqrt(float f) { if( f <= 0.0f ) return 0.0f; return sqrtf(f); }
inline double IKsqrt(double f) { if( f <= 0.0 ) return 0.0; return sqrt(f); }
inline float IKatan2(float fy, float fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return float(IKPI_2);
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2f(fy,fx);
}
inline double IKatan2(double fy, double fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return IKPI_2;
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2(fy,fx);
}

inline float IKsign(float f) {
    if( f > 0 ) {
        return float(1);
    }
    else if( f < 0 ) {
        return float(-1);
    }
    return 0;
}

inline double IKsign(double f) {
    if( f > 0 ) {
        return 1.0;
    }
    else if( f < 0 ) {
        return -1.0;
    }
    return 0;
}

/// solves the forward kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API void ComputeFk(const IkReal* j, IkReal* eetrans, IkReal* eerot) {
IkReal x0,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,x31,x32,x33,x34,x35,x36,x37,x38,x39,x40,x41,x42,x43,x44,x45,x46,x47,x48,x49;
x0=IKsin(j[0]);
x1=IKcos(j[1]);
x2=IKsin(j[1]);
x3=IKsin(j[2]);
x4=IKcos(j[2]);
x5=IKcos(j[3]);
x6=IKsin(j[3]);
x7=IKcos(j[4]);
x8=IKcos(j[0]);
x9=IKsin(j[4]);
x10=IKcos(j[5]);
x11=IKsin(j[5]);
x12=((IkReal(0.133220000000000))*(x1));
x13=((IkReal(0.00750000000000000))*(x3));
x14=((IkReal(0.190892000000000))*(x6));
x15=((IkReal(0.0513310000000000))*(x3));
x16=((IkReal(0.190892000000000))*(x5));
x17=((IkReal(0.190892000000000))*(x9));
x18=((IkReal(0.133220000000000))*(x8));
x19=((IkReal(0.0513310000000000))*(x0));
x20=((IkReal(1.00000000000000))*(x0));
x21=((IkReal(0.133220000000000))*(x0));
x22=((IkReal(1.00000000000000))*(x3));
x23=((IkReal(0.261090000000000))*(x0));
x24=((IkReal(1.00000000000000))*(x5));
x25=((IkReal(1.00000000000000))*(x8));
x26=((IkReal(1.00000000000000))*(x6));
x27=((x2)*(x4));
x28=((x4)*(x8));
x29=((x1)*(x8));
x30=((x0)*(x7));
x31=((x1)*(x4));
x32=((x0)*(x1));
x33=((x2)*(x3));
x34=((x2)*(x8));
x35=((x1)*(x3));
x36=((x7)*(x8));
x37=((x0)*(x2));
x38=((IkReal(-0.000787000000000000))*(x6));
x39=((IkReal(-0.000787000000000000))*(x5));
x40=((IkReal(1.00000000000000))*(x31));
x41=((x35)+(x27));
x42=((((IkReal(-1.00000000000000))*(x2)*(x22)))+(x40));
x43=((x41)*(x5));
x44=((((IkReal(-1.00000000000000))*(x20)*(x31)))+(((x0)*(x33))));
x45=((((x1)*(x28)))+(((IkReal(-1.00000000000000))*(x22)*(x34))));
x46=((x20)*(((x35)+(x27))));
x47=((((IkReal(-1.00000000000000))*(x25)*(x27)))+(((IkReal(-1.00000000000000))*(x22)*(x29))));
x48=((x45)*(x5));
x49=((x46)*(x6));
IkReal x50=((x0)*(x12));
eetrans[0]=((((x5)*(((((x19)*(x27)))+(((x15)*(x32)))))))+(((x9)*(((((x38)*(x46)))+(((x39)*(x44)))))))+(((x23)*(x33)))+(((IkReal(0.00750000000000000))*(x0)*(x27)))+(((x5)*(((((IkReal(-1.00000000000000))*(x4)*(x50)))+(((x21)*(x33)))))))+(((IkReal(-1.00000000000000))*(x17)*(x8)))+(((IkReal(-0.000787000000000000))*(x36)))+(((x6)*(((((x21)*(x27)))+(((x3)*(x50)))))))+(((x13)*(x32)))+(((x6)*(((((x19)*(x31)))+(((IkReal(-1.00000000000000))*(x15)*(x37)))))))+(((IkReal(-1.00000000000000))*(x23)*(x31)))+(((IkReal(0.521670000000000))*(x37)))+(((IkReal(0.00982000000000000))*(x32)))+(((x7)*(((((x16)*(x44)))+(((x14)*(x46))))))));
IkReal x51=((IkReal(1.00000000000000))*(x18));
IkReal x52=((x1)*(x28));
IkReal x53=((IkReal(1.00000000000000))*(x29));
IkReal x54=((x27)*(x8));
eetrans[1]=((((x7)*(((((x16)*(x45)))+(((x14)*(x47)))))))+(((IkReal(-1.00000000000000))*(x13)*(x53)))+(((IkReal(-0.521670000000000))*(x34)))+(((IkReal(-0.261090000000000))*(x33)*(x8)))+(((x6)*(((((x15)*(x34)))+(((IkReal(-0.0513310000000000))*(x52)))))))+(((IkReal(-1.00000000000000))*(x0)*(x17)))+(((x5)*(((((IkReal(-1.00000000000000))*(x15)*(x53)))+(((IkReal(-0.0513310000000000))*(x54)))))))+(((IkReal(-0.00750000000000000))*(x54)))+(((IkReal(-0.000787000000000000))*(x30)))+(((x6)*(((((IkReal(-1.00000000000000))*(x27)*(x51)))+(((IkReal(-1.00000000000000))*(x12)*(x3)*(x8)))))))+(((x9)*(((((x38)*(x47)))+(((x39)*(x45)))))))+(((IkReal(-0.00982000000000000))*(x29)))+(((x5)*(((((IkReal(-1.00000000000000))*(x33)*(x51)))+(((x12)*(x28)))))))+(((IkReal(0.261090000000000))*(x52))));
IkReal x55=((IkReal(1.00000000000000))*(x2));
eetrans[2]=((IkReal(0.353360000000000))+(((x9)*(((((x38)*(x42)))+(((x39)*(x41)))))))+(((IkReal(-1.00000000000000))*(x13)*(x55)))+(((x6)*(((((IkReal(-0.133220000000000))*(x33)))+(((x12)*(x4)))))))+(((x6)*(((((IkReal(-1.00000000000000))*(x1)*(x15)))+(((IkReal(-0.0513310000000000))*(x27)))))))+(((IkReal(0.261090000000000))*(x27)))+(((IkReal(0.00750000000000000))*(x31)))+(((x7)*(((((x16)*(x41)))+(((x14)*(x42)))))))+(((x5)*(((((IkReal(0.0513310000000000))*(x31)))+(((IkReal(-1.00000000000000))*(x15)*(x55)))))))+(((IkReal(0.521670000000000))*(x1)))+(((x5)*(((((IkReal(0.133220000000000))*(x27)))+(((x12)*(x3)))))))+(((IkReal(0.261090000000000))*(x35)))+(((IkReal(-0.00982000000000000))*(x2))));
eerot[0]=((((x10)*(((((IkReal(1.00000000000000))*(x46)*(x5)))+(((IkReal(-1.00000000000000))*(x44)*(x6)))))))+(((x11)*(((x36)+(((x9)*(((x49)+(((x44)*(x5))))))))))));
eerot[1]=((((x11)*(((x30)+(((x9)*(((((x47)*(x6)))+(x48)))))))))+(((x10)*(((((IkReal(-1.00000000000000))*(x24)*(((((x29)*(x3)))+(((x27)*(x8)))))))+(((IkReal(-1.00000000000000))*(x26)*(x45))))))));
eerot[2]=((((x11)*(x9)*(((((x42)*(x6)))+(x43)))))+(((IkReal(-1.00000000000000))*(x10)*(((((x26)*(x41)))+(((x24)*(((((IkReal(-1.00000000000000))*(x40)))+(x33))))))))));
}

IKFAST_API int GetNumFreeParameters() { return 1; }
IKFAST_API int* GetFreeParameters() { static int freeparams[] = {1}; return freeparams; }
IKFAST_API int GetNumJoints() { return 6; }

IKFAST_API int GetIkRealSize() { return sizeof(IkReal); }

IKFAST_API int GetIkType() { return 0x56000007; }

class IKSolver {
public:
IkReal j0,cj0,sj0,htj0,j2,cj2,sj2,htj2,j3,cj3,sj3,htj3,j4,cj4,sj4,htj4,j5,cj5,sj5,htj5,j1,cj1,sj1,htj1,new_r00,r00,rxp0_0,new_r01,r01,rxp0_1,new_r02,r02,rxp0_2,new_px,px,npx,new_py,py,npy,new_pz,pz,npz,pp;
unsigned char _ij0[2], _nj0,_ij2[2], _nj2,_ij3[2], _nj3,_ij4[2], _nj4,_ij5[2], _nj5,_ij1[2], _nj1;

bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
j0=numeric_limits<IkReal>::quiet_NaN(); _ij0[0] = -1; _ij0[1] = -1; _nj0 = -1; j2=numeric_limits<IkReal>::quiet_NaN(); _ij2[0] = -1; _ij2[1] = -1; _nj2 = -1; j3=numeric_limits<IkReal>::quiet_NaN(); _ij3[0] = -1; _ij3[1] = -1; _nj3 = -1; j4=numeric_limits<IkReal>::quiet_NaN(); _ij4[0] = -1; _ij4[1] = -1; _nj4 = -1; j5=numeric_limits<IkReal>::quiet_NaN(); _ij5[0] = -1; _ij5[1] = -1; _nj5 = -1;  _ij1[0] = -1; _ij1[1] = -1; _nj1 = 0; 
for(int dummyiter = 0; dummyiter < 1; ++dummyiter) {
    solutions.Clear();
px = eetrans[0]; py = eetrans[1]; pz = eetrans[2];

j1=pfree[0]; cj1=cos(pfree[0]); sj1=sin(pfree[0]);
r00 = eerot[0];
r01 = eerot[1];
r02 = eerot[2];
px = eetrans[0]; py = eetrans[1]; pz = eetrans[2];
new_r00=r00;
new_px=px;
new_r01=r01;
new_py=py;
new_r02=r02;
new_pz=((IkReal(-0.353360000000000))+(pz));
r00 = new_r00; r01 = new_r01; r02 = new_r02; px = new_px; py = new_py; pz = new_pz;

pp=(((px)*(px))+((py)*(py))+((pz)*(pz)));
IkReal op[72], zeror[48];
int numroots;
IkReal x56=((IkReal(1.00000000000000))*(pp));
IkReal x57=(pz)*(pz);
IkReal x58=(py)*(py);
IkReal x59=((IkReal(0.000441593409047839))*(r00));
IkReal x60=(px)*(px);
IkReal x61=((IkReal(0.000883186818095677))*(r01));
IkReal x62=((IkReal(0.00172665236694182))*(r00));
IkReal x63=((IkReal(4.99646346714372e-5))*(r00));
IkReal x64=((IkReal(0.00225564791707646))*(r00));
IkReal x65=((IkReal(0.00126281884548697))*(r00));
IkReal x66=((IkReal(5.82772600415942e-5))*(r00));
IkReal x67=((IkReal(0.000162735301862100))*(r00));
IkReal x68=((IkReal(0.00127871021143001))*(r00));
IkReal x69=((IkReal(0.00223902266633615))*(r00));
IkReal x70=((IkReal(0.000171047927232257))*(r00));
IkReal x71=((IkReal(0.00169806350807084))*(r00));
IkReal x72=((pz)*(sj1));
IkReal x73=((IkReal(0.000970182029629319))*(r00));
IkReal x74=((cj1)*(py));
IkReal x75=((cj1)*(r01));
IkReal x76=((px)*(sj1));
IkReal x77=((cj1)*(r02));
IkReal x78=((r02)*(sj1));
IkReal x79=((r00)*(sj1));
IkReal x80=((IkReal(2.00000000000000))*(pp));
IkReal x81=((IkReal(2.00000000000000))*(r02));
IkReal x82=((IkReal(2.00000000000000))*(py));
IkReal x83=((cj1)*(r00));
IkReal x84=((r01)*(sj1));
IkReal x85=((IkReal(4.00000000000000))*(r00));
IkReal x86=((px)*(r00));
IkReal x87=((px)*(r02));
IkReal x88=((pz)*(r00));
IkReal x89=((IkReal(0.000722817027429122))*(r00));
IkReal x90=((py)*(r01));
IkReal x91=((py)*(r02));
IkReal x92=((pz)*(r01));
IkReal x93=((IkReal(0.000423249764264610))*(r00));
IkReal x94=((py)*(sj1));
IkReal x95=((px)*(pz));
IkReal x96=((IkReal(0.00223378842486851))*(r00));
IkReal x97=((pz)*(r02));
IkReal x98=((cj1)*(px));
IkReal x99=((IkReal(0.00207184680342812))*(r00));
IkReal x100=((cj1)*(pz));
IkReal x101=((IkReal(0.000846499528529221))*(py));
IkReal x102=((IkReal(0.000846499528529221))*(r01));
IkReal x103=((px)*(r01));
IkReal x104=((IkReal(4.00000000000000))*(pp));
IkReal x105=((IkReal(0.266440000000000))*(x94));
IkReal x106=((IkReal(0.266440000000000))*(x100));
IkReal x107=((IkReal(1.05834000000000))*(x100));
IkReal x108=((IkReal(0.0300000000000000))*(x74));
IkReal x109=((IkReal(0.0300000000000000))*(x72));
IkReal x110=((IkReal(1.02834000000000))*(x100));
IkReal x111=((IkReal(1.02834000000000))*(x94));
IkReal x112=((IkReal(0.00412275003666995))*(pp)*(r00));
IkReal x113=((IkReal(1.05834000000000))*(x86));
IkReal x114=((IkReal(1.05834000000000))*(x97));
IkReal x115=((IkReal(1.05834000000000))*(x90));
IkReal x116=((pp)*(x77));
IkReal x117=((IkReal(0.502540000000000))*(x90));
IkReal x118=((IkReal(0.502540000000000))*(x97));
IkReal x119=((IkReal(0.502540000000000))*(x86));
IkReal x120=((IkReal(0.0392800000000000))*(x90));
IkReal x121=((IkReal(2.08668000000000))*(x92));
IkReal x122=((IkReal(0.0392800000000000))*(x86));
IkReal x123=((IkReal(0.0392800000000000))*(x97));
IkReal x124=((IkReal(2.08668000000000))*(x91));
IkReal x125=((IkReal(0.0392800000000000))*(x92));
IkReal x126=((IkReal(0.0392800000000000))*(x91));
IkReal x127=((IkReal(2.08668000000000))*(x97));
IkReal x128=((IkReal(2.08668000000000))*(x90));
IkReal x129=((IkReal(2.08668000000000))*(x86));
IkReal x130=((pp)*(x84));
IkReal x131=((IkReal(1.02834000000000))*(x90));
IkReal x132=((IkReal(1.02834000000000))*(x97));
IkReal x133=((IkReal(1.02834000000000))*(x86));
IkReal x134=((pp)*(x78));
IkReal x135=((pp)*(x75));
IkReal x136=((IkReal(0.541820000000000))*(x86));
IkReal x137=((IkReal(0.541820000000000))*(x97));
IkReal x138=((IkReal(0.541820000000000))*(x90));
IkReal x139=((IkReal(0.532880000000000))*(x76));
IkReal x140=((IkReal(2.11668000000000))*(x76));
IkReal x141=((IkReal(1.06576000000000))*(x98));
IkReal x142=((IkReal(0.0600000000000000))*(x98));
IkReal x143=((IkReal(2.05668000000000))*(x76));
IkReal x144=((IkReal(0.00824550007333990))*(pp)*(r01));
IkReal x145=((IkReal(4.17336000000000))*(x87));
IkReal x146=((IkReal(4.17336000000000))*(x88));
IkReal x147=((IkReal(0.0785600000000000))*(x87));
IkReal x148=((IkReal(0.0785600000000000))*(x88));
IkReal x149=((IkReal(0.768980000000000))*(x72));
IkReal x150=((IkReal(1.05834000000000))*(x94));
IkReal x151=((IkReal(0.768980000000000))*(x74));
IkReal x152=((IkReal(1.57724000000000))*(x100));
IkReal x153=((IkReal(1.57724000000000))*(x94));
IkReal x154=((IkReal(0.532880000000000))*(x74));
IkReal x155=((IkReal(0.532880000000000))*(x72));
IkReal x156=((IkReal(0.808260000000000))*(x74));
IkReal x157=((IkReal(0.808260000000000))*(x72));
IkReal x158=((IkReal(0.236100000000000))*(x72));
IkReal x159=((IkReal(0.236100000000000))*(x74));
IkReal x160=((IkReal(0.511480000000000))*(x100));
IkReal x161=((IkReal(0.511480000000000))*(x94));
IkReal x162=((IkReal(0.275380000000000))*(x74));
IkReal x163=((IkReal(0.275380000000000))*(x72));
IkReal x164=((IkReal(1.16100200000000))*(x91));
IkReal x165=((IkReal(0.291724972540000))*(x77));
IkReal x166=((IkReal(0.291724972540000))*(x84));
IkReal x167=((IkReal(0.255151991468000))*(x75));
IkReal x168=((IkReal(0.255151991468000))*(x78));
IkReal x169=((IkReal(1.16100200000000))*(x92));
IkReal x170=((IkReal(0.236100000000000))*(x92));
IkReal x171=((IkReal(0.299890589872000))*(x77));
IkReal x172=((IkReal(0.124937037000000))*(x78));
IkReal x173=((IkReal(0.299890589872000))*(x84));
IkReal x174=((IkReal(0.236100000000000))*(x91));
IkReal x175=((IkReal(0.124937037000000))*(x75));
IkReal x176=((IkReal(0.710885729344000))*(x77));
IkReal x177=((IkReal(0.710885729344000))*(x84));
IkReal x178=((IkReal(0.0819319407600000))*(x75));
IkReal x179=((IkReal(0.0819319407600000))*(x78));
IkReal x180=((IkReal(0.0243272976000000))*(x84));
IkReal x181=((IkReal(0.0243272976000000))*(x77));
IkReal x182=((IkReal(0.509064279856000))*(x78));
IkReal x183=((IkReal(0.509064279856000))*(x75));
IkReal x184=((IkReal(0.122134905188000))*(x78));
IkReal x185=((IkReal(0.250775426980000))*(x84));
IkReal x186=((IkReal(0.925678000000000))*(x92));
IkReal x187=((IkReal(0.250775426980000))*(x77));
IkReal x188=((IkReal(0.122134905188000))*(x75));
IkReal x189=((IkReal(0.925678000000000))*(x91));
IkReal x190=((IkReal(0.275380000000000))*(x92));
IkReal x191=((IkReal(0.141592134600000))*(x78));
IkReal x192=((IkReal(0.141592134600000))*(x75));
IkReal x193=((IkReal(0.275380000000000))*(x91));
IkReal x194=((IkReal(0.279217756272000))*(x84));
IkReal x195=((IkReal(0.279217756272000))*(x77));
IkReal x196=((IkReal(0.406921146600000))*(x75));
IkReal x197=((IkReal(0.768980000000000))*(x91));
IkReal x198=((IkReal(0.768980000000000))*(x92));
IkReal x199=((IkReal(0.406921146600000))*(x78));
IkReal x200=((IkReal(0.165993832272000))*(x84));
IkReal x201=((IkReal(0.165993832272000))*(x77));
IkReal x202=((IkReal(0.146500690388000))*(x75));
IkReal x203=((IkReal(0.240133211060000))*(x84));
IkReal x204=((IkReal(0.240133211060000))*(x77));
IkReal x205=((IkReal(0.955678000000000))*(x91));
IkReal x206=((IkReal(0.955678000000000))*(x92));
IkReal x207=((IkReal(0.146500690388000))*(x78));
IkReal x208=((IkReal(0.787323558256000))*(x75));
IkReal x209=((IkReal(0.0323204976000000))*(x77));
IkReal x210=((IkReal(0.787323558256000))*(x78));
IkReal x211=((IkReal(0.0323204976000000))*(x84));
IkReal x212=((IkReal(0.713965589344000))*(x84));
IkReal x213=((IkReal(0.0252841455600000))*(x78));
IkReal x214=((IkReal(0.713965589344000))*(x77));
IkReal x215=((IkReal(0.0252841455600000))*(x75));
IkReal x216=((IkReal(0.808260000000000))*(x91));
IkReal x217=((IkReal(0.415583044200000))*(x75));
IkReal x218=((IkReal(0.134855235472000))*(x84));
IkReal x219=((IkReal(0.134855235472000))*(x77));
IkReal x220=((IkReal(0.808260000000000))*(x92));
IkReal x221=((IkReal(0.415583044200000))*(x78));
IkReal x222=((IkReal(0.227706346268000))*(x78));
IkReal x223=((IkReal(0.306399751820000))*(x84));
IkReal x224=((IkReal(0.306399751820000))*(x77));
IkReal x225=((IkReal(1.13100200000000))*(x92));
IkReal x226=((IkReal(0.227706346268000))*(x75));
IkReal x227=((IkReal(1.13100200000000))*(x91));
IkReal x228=((IkReal(4.00000000000000))*(x60));
IkReal x229=((IkReal(4.00000000000000))*(x57));
IkReal x230=((IkReal(2.00000000000000))*(x57));
IkReal x231=((IkReal(4.00000000000000))*(x58));
IkReal x232=((IkReal(8.00000000000000))*(x60));
IkReal x233=((IkReal(2.00000000000000))*(x58));
IkReal x234=((IkReal(0.00824550007333990))*(r00)*(x60));
IkReal x235=((IkReal(0.00824550007333990))*(px)*(x90));
IkReal x236=((IkReal(0.00824550007333990))*(pz)*(x87));
IkReal x237=((IkReal(0.000423249764264610))*(r02)*(x76));
IkReal x238=((IkReal(0.000423249764264610))*(px)*(x75));
IkReal x239=((x72)*(x93));
IkReal x240=((x74)*(x93));
IkReal x241=((x56)*(x84));
IkReal x242=((x72)*(x99));
IkReal x243=((x74)*(x99));
IkReal x244=((IkReal(0.00207184680342812))*(px)*(x75));
IkReal x245=((x56)*(x75));
IkReal x246=((IkReal(0.00207184680342812))*(r02)*(x76));
IkReal x247=((x56)*(x78));
IkReal x248=((x101)*(x79));
IkReal x249=((IkReal(0.000846499528529221))*(px)*(x77));
IkReal x250=((x102)*(x76));
IkReal x251=((x78)*(x80));
IkReal x252=((x75)*(x80));
IkReal x253=((IkReal(0.000846499528529221))*(pz)*(x83));
IkReal x254=((x80)*(x84));
IkReal x255=((IkReal(0.00430563522829663))*(pz)*(x83));
IkReal x256=((IkReal(0.00430563522829663))*(r01)*(x76));
IkReal x257=((IkReal(0.00430563522829663))*(px)*(x77));
IkReal x258=((IkReal(0.00430563522829663))*(py)*(x79));
IkReal x259=((x77)*(x80));
IkReal x260=((x56)*(x77));
IkReal x261=((IkReal(0.00223378842486851))*(px)*(x75));
IkReal x262=((IkReal(0.00223378842486851))*(r02)*(x76));
IkReal x263=((x72)*(x96));
IkReal x264=((x74)*(x96));
IkReal x265=((IkReal(-0.532880000000000))*(x76));
IkReal x266=((IkReal(0.0164910001466798))*(pz)*(x91));
IkReal x267=((IkReal(0.0164910001466798))*(r01)*(x58));
IkReal x268=((x80)*(x83));
IkReal x269=((IkReal(0.0164910001466798))*(py)*(x86));
IkReal x270=((x101)*(x78));
IkReal x271=((x79)*(x80));
IkReal x272=((x102)*(x72));
IkReal x273=((IkReal(0.00414369360685623))*(r01)*(x72));
IkReal x274=((IkReal(0.00414369360685623))*(py)*(x78));
IkReal x275=((IkReal(0.00169299905705844))*(r02)*(x74));
IkReal x276=((x104)*(x83));
IkReal x277=((IkReal(0.00169299905705844))*(pz)*(x75));
IkReal x278=((IkReal(0.00861127045659326))*(pz)*(x75));
IkReal x279=((x104)*(x79));
IkReal x280=((IkReal(0.00861127045659326))*(r02)*(x74));
IkReal x281=((IkReal(0.00446757684973702))*(py)*(x78));
IkReal x282=((IkReal(0.00446757684973702))*(r01)*(x72));
IkReal x283=((IkReal(0.00478652103807388))*(pz)*(x83));
IkReal x284=((IkReal(0.00478652103807388))*(py)*(x79));
IkReal x285=((IkReal(0.00478652103807388))*(r01)*(x76));
IkReal x286=((IkReal(0.00478652103807388))*(px)*(x77));
IkReal x287=((x73)*(x74));
IkReal x288=((IkReal(0.000970182029629319))*(r02)*(x76));
IkReal x289=((x72)*(x73));
IkReal x290=((IkReal(0.000970182029629319))*(px)*(x75));
IkReal x291=((IkReal(0.00381633900844457))*(pz)*(x83));
IkReal x292=((IkReal(0.00381633900844457))*(py)*(x79));
IkReal x293=((IkReal(0.00381633900844457))*(px)*(x77));
IkReal x294=((IkReal(0.00381633900844457))*(r01)*(x76));
IkReal x295=((IkReal(0.00394002150954466))*(r01)*(x76));
IkReal x296=((IkReal(0.00394002150954466))*(px)*(x77));
IkReal x297=((IkReal(0.00394002150954466))*(pz)*(x83));
IkReal x298=((IkReal(0.00394002150954466))*(py)*(x79));
IkReal x299=((IkReal(0.000722817027429122))*(r02)*(x76));
IkReal x300=((x74)*(x89));
IkReal x301=((x72)*(x89));
IkReal x302=((IkReal(0.000722817027429122))*(px)*(x75));
IkReal x303=((IkReal(0.00466283853697379))*(px)*(x77));
IkReal x304=((IkReal(0.00466283853697379))*(r01)*(x76));
IkReal x305=((IkReal(0.00466283853697379))*(pz)*(x83));
IkReal x306=((IkReal(0.00466283853697379))*(py)*(x79));
IkReal x307=((IkReal(-0.388616599206000))+(x110));
IkReal x308=((IkReal(-0.267118371600000))+(x160));
IkReal x309=((IkReal(-0.823093390800000))+(x152));
IkReal x310=((IkReal(-0.244254078406000))+(x110));
IkReal x311=((x150)+(x56));
IkReal x312=((pz)*(x74)*(x81));
IkReal x313=((x230)*(x78));
IkReal x314=((IkReal(2.00000000000000))*(x74)*(x86));
IkReal x315=((r01)*(x72)*(x82));
IkReal x316=((x233)*(x75));
IkReal x317=((IkReal(2.00000000000000))*(x72)*(x86));
IkReal x318=((py)*(x72)*(x81));
IkReal x319=((r00)*(x76)*(x82));
IkReal x320=((x233)*(x84));
IkReal x321=((IkReal(2.00000000000000))*(x74)*(x92));
IkReal x322=((IkReal(2.00000000000000))*(x83)*(x95));
IkReal x323=((x230)*(x77));
IkReal x324=((x231)*(x75));
IkReal x325=((IkReal(4.00000000000000))*(x74)*(x97));
IkReal x326=((px)*(x74)*(x85));
IkReal x327=((x229)*(x78));
IkReal x328=((IkReal(4.00000000000000))*(x72)*(x90));
IkReal x329=((px)*(x72)*(x85));
IkReal x330=((x229)*(x77));
IkReal x331=((IkReal(4.00000000000000))*(x74)*(x92));
IkReal x332=((IkReal(4.00000000000000))*(x83)*(x95));
IkReal x333=((x231)*(x84));
IkReal x334=((py)*(x76)*(x85));
IkReal x335=((IkReal(4.00000000000000))*(x72)*(x91));
IkReal x336=((x228)*(x83));
IkReal x337=((IkReal(4.00000000000000))*(x103)*(x74));
IkReal x338=((IkReal(4.00000000000000))*(x77)*(x95));
IkReal x339=((x228)*(x79));
IkReal x340=((IkReal(4.00000000000000))*(x76)*(x90));
IkReal x341=((IkReal(4.00000000000000))*(x72)*(x87));
IkReal x342=((IkReal(8.00000000000000))*(x77)*(x95));
IkReal x343=((IkReal(8.00000000000000))*(x103)*(x74));
IkReal x344=((x232)*(x83));
IkReal x345=((x232)*(x79));
IkReal x346=((IkReal(8.00000000000000))*(x76)*(x90));
IkReal x347=((IkReal(8.00000000000000))*(x72)*(x87));
IkReal x348=((x163)+(x56));
IkReal x349=((x157)+(x56));
IkReal x350=((x190)+(x66));
IkReal x351=((x220)+(x70));
IkReal x352=((IkReal(-0.00523288160000000))+(((IkReal(-1.00000000000000))*(x154)))+(((IkReal(-1.00000000000000))*(x155))));
IkReal x353=((IkReal(-0.00523288160000000))+(((IkReal(-1.00000000000000))*(x155)))+(x154));
IkReal x354=((x105)+(x106));
IkReal x355=((x156)+(x111));
IkReal x356=((x199)+(x201));
IkReal x357=((x161)+(x108));
IkReal x358=((x171)+(x172));
IkReal x359=((x162)+(x111));
IkReal x360=((x135)+(x134));
IkReal x361=((x197)+(x196));
IkReal x362=((x153)+(x108));
IkReal x363=((x175)+(x174));
IkReal x364=((x204)+(x295));
IkReal x365=((x112)+(x263));
IkReal x366=((IkReal(-0.254881444806000))+(x158)+(x107));
IkReal x367=((x148)+(x279));
IkReal x368=((IkReal(-0.388778202406000))+(x149)+(x107));
IkReal x369=((x207)+(x298));
IkReal x370=((x206)+(x297));
IkReal x371=((x168)+(x285));
IkReal x372=((x144)+(x282));
IkReal x373=((x165)+(x284));
IkReal x374=((x130)+(x239));
IkReal x375=((x116)+(x238));
IkReal x376=((x144)+(x274));
IkReal x377=((x302)+(x258));
IkReal x378=((x270)+(x271));
IkReal x379=((x198)+(x200)+(x67));
IkReal x380=((x170)+(x173)+(x63));
IkReal x381=((x238)+(x260));
IkReal x382=((x239)+(x241));
IkReal x383=((x294)+(x261));
IkReal x384=((x137)+(x136)+(x138));
IkReal x385=((x131)+(x133)+(x132));
IkReal x386=((x193)+(x192)+(x194));
IkReal x387=((x113)+(x115)+(x114));
IkReal x388=((x169)+(x286)+(x62));
IkReal x389=((x216)+(x217)+(x218));
IkReal x390=((x305)+(x227)+(x226));
IkReal x391=((x257)+(x289)+(x64));
IkReal x392=((x184)+(x187)+(x292));
IkReal x393=((x185)+(x186)+(x291));
IkReal x394=((x301)+(x215)+(x255));
IkReal x395=((x112)+(x243)+(x246));
IkReal x396=((x179)+(x256)+(x290));
IkReal x397=((x176)+(x258)+(x287));
IkReal x398=((x112)+(x246)+(x244));
IkReal x399=((x303)+(x223)+(x225)+(x71));
IkReal x400=((x267)+(x266)+(x269));
IkReal x401=((x188)+(x189)+(x293)+(x65));
IkReal x402=((x166)+(x167)+(x164)+(x283));
IkReal x403=((x212)+(x257)+(x299)+(x69));
IkReal x404=((x145)+(x276)+(x275)+(x61));
IkReal x405=((x304)+(x222)+(x224)+(x261));
IkReal x406=((x210)+(x250)+(x251)+(x209));
IkReal x407=((x124)+(x252)+(x253)+(x208));
IkReal x408=((x300)+(x213)+(x214)+(x256));
IkReal x409=((x178)+(x177)+(x255)+(x288));
IkReal x410=((x181)+(x182)+(x250)+(x251));
IkReal x411=((x124)+(x183)+(x252)+(x253));
IkReal x412=((x315)+(x317)+(x313));
IkReal x413=((x205)+(x203)+(x202)+(x296)+(x68));
IkReal x414=((x338)+(x337)+(x336));
IkReal x415=((x314)+(x316)+(x312));
IkReal x416=((x268)+(x400));
IkReal x417=((x236)+(x234)+(x235)+(x262));
IkReal x418=((x117)+(x119)+(x118)+(x247)+(x245));
IkReal x419=((x134)+(x415));
IkReal x420=((x147)+(x346)+(x347)+(x345));
IkReal x421=((x339)+(x340)+(x341)+(x272));
IkReal x422=((x320)+(x319)+(x318)+(x237));
IkReal x423=((x321)+(x322)+(x323)+(x240));
IkReal x424=((x127)+(x125)+(x128)+(x129)+(x259)+(x254));
IkReal x425=((x264)+(x417));
IkReal x426=((x236)+(x234)+(x235)+(x242)+(x244));
IkReal x427=((x236)+(x234)+(x235)+(x243)+(x242));
IkReal x428=((x146)+(x342)+(x343)+(x344)+(x277));
IkReal x429=((x125)+(x332)+(x331)+(x330)+(x254));
IkReal x430=((x121)+(x324)+(x325)+(x326)+(x249)+(x59));
IkReal x431=((x375)+(x422));
IkReal x432=((x122)+(x123)+(x120)+(x327)+(x328)+(x329)+(x248));
IkReal x433=((x117)+(x119)+(x118)+(x247)+(x415));
IkReal x434=((x126)+(x127)+(x128)+(x129)+(x333)+(x335)+(x334)+(x259));
IkReal x435=((x126)+(x333)+(x332)+(x331)+(x330)+(x335)+(x334));
IkReal x436=((x423)+(x422));
op[0]=((x151)+(x368)+(((IkReal(-1.00000000000000))*(x311))));
op[1]=((IkReal(-0.127315423160000))+(((IkReal(-1.00000000000000))*(x105)))+(x106));
op[2]=((((IkReal(-1.00000000000000))*(x362)))+(((IkReal(-1.00000000000000))*(x109)))+(x309));
op[3]=x352;
op[4]=((((IkReal(-1.00000000000000))*(x355)))+(x307)+(((IkReal(-1.00000000000000))*(x349))));
op[5]=((IkReal(0.150672086440000))+(((IkReal(-1.00000000000000))*(x106)))+(x105));
op[6]=((IkReal(-0.154668686440000))+(((IkReal(-1.00000000000000))*(x105)))+(x106));
op[7]=((x159)+(x366)+(((IkReal(-1.00000000000000))*(x311))));
op[8]=x352;
op[9]=((((IkReal(-1.00000000000000))*(x357)))+(((IkReal(-1.00000000000000))*(x109)))+(x308));
op[10]=((IkReal(0.123318823160000))+(((IkReal(-1.00000000000000))*(x106)))+(x105));
op[11]=((((IkReal(-1.00000000000000))*(x359)))+(x310)+(((IkReal(-1.00000000000000))*(x348))));
op[12]=((((IkReal(-1.00000000000000))*(x427)))+(((IkReal(-1.00000000000000))*(x371)))+(x388)+(x373)+(x398)+(x412)+(x415)+(((IkReal(-1.00000000000000))*(x418)))+(((IkReal(-1.00000000000000))*(x402))));
op[13]=((((IkReal(-1.00000000000000))*(x422)))+(x358)+(x374)+(x363)+(x423)+(((IkReal(-1.00000000000000))*(x387)))+(((IkReal(-1.00000000000000))*(x381)))+(((IkReal(-1.00000000000000))*(x380))));
op[14]=((((IkReal(-1.00000000000000))*(x434)))+(((IkReal(-1.00000000000000))*(x396)))+(x397)+(x391)+(x429)+(((IkReal(-1.00000000000000))*(x409))));
op[15]=((((IkReal(-1.00000000000000))*(x432)))+(((IkReal(-1.00000000000000))*(x430)))+(((IkReal(-1.00000000000000))*(x180)))+(x410)+(x411));
op[16]=((((IkReal(-1.00000000000000))*(x393)))+(x360)+(x365)+(x392)+(x264)+(x401)+(((IkReal(-1.00000000000000))*(x383)))+(((IkReal(-1.00000000000000))*(x384)))+(((IkReal(-1.00000000000000))*(x412)))+(((IkReal(-1.00000000000000))*(x415)))+(((IkReal(-1.00000000000000))*(x417))));
op[17]=((((IkReal(-1.00000000000000))*(x423)))+(((IkReal(-1.00000000000000))*(x350)))+(((IkReal(-1.00000000000000))*(x195)))+(x191)+(x386)+(x385)+(x431)+(((IkReal(-1.00000000000000))*(x382))));
op[18]=((((IkReal(-1.00000000000000))*(x361)))+(((IkReal(-1.00000000000000))*(x423)))+(((IkReal(-1.00000000000000))*(x356)))+(x387)+(x379)+(x431)+(((IkReal(-1.00000000000000))*(x382))));
op[19]=((((IkReal(-1.00000000000000))*(x398)))+(((IkReal(-1.00000000000000))*(x369)))+(x370)+(x364)+(x412)+(x415)+(x427)+(((IkReal(-1.00000000000000))*(x418)))+(((IkReal(-1.00000000000000))*(x413))));
op[20]=((x211)+(x430)+(x432)+(((IkReal(-1.00000000000000))*(x407)))+(((IkReal(-1.00000000000000))*(x406))));
op[21]=((((IkReal(-1.00000000000000))*(x434)))+(((IkReal(-1.00000000000000))*(x377)))+(x394)+(x408)+(x429)+(((IkReal(-1.00000000000000))*(x403))));
op[22]=((((IkReal(-1.00000000000000))*(x422)))+(x351)+(x374)+(x219)+(x423)+(((IkReal(-1.00000000000000))*(x385)))+(((IkReal(-1.00000000000000))*(x381)))+(((IkReal(-1.00000000000000))*(x389)))+(((IkReal(-1.00000000000000))*(x221))));
op[23]=((((IkReal(-1.00000000000000))*(x399)))+(((IkReal(-1.00000000000000))*(x365)))+(x360)+(x390)+(x405)+(x417)+(((IkReal(-1.00000000000000))*(x384)))+(((IkReal(-1.00000000000000))*(x264)))+(((IkReal(-1.00000000000000))*(x412)))+(((IkReal(-1.00000000000000))*(x415)))+(((IkReal(-1.00000000000000))*(x306))));
op[24]=((x140)+(((IkReal(-1.53796000000000))*(x98))));
op[25]=x139;
op[26]=((((IkReal(3.15448000000000))*(x76)))+(x142));
op[27]=x141;
op[28]=((x143)+(((IkReal(1.61652000000000))*(x98))));
op[29]=x265;
op[30]=x139;
op[31]=((((IkReal(-0.472200000000000))*(x98)))+(x140));
op[32]=x141;
op[33]=((((IkReal(1.02296000000000))*(x76)))+(x142));
op[34]=x265;
op[35]=((x143)+(((IkReal(0.550760000000000))*(x98))));
op[36]=((((IkReal(0.583449945080000))*(x79)))+(((IkReal(-2.32200400000000))*(x88)))+(((IkReal(0.00345330473388364))*(r01)))+(x376)+(x268)+(((IkReal(2.32200400000000))*(x87)))+(((IkReal(-1.00000000000000))*(x273)))+(((IkReal(-0.00957304207614777))*(pz)*(x75)))+(((IkReal(0.00957304207614777))*(r02)*(x74)))+(((IkReal(-1.00000000000000))*(x414)))+(((IkReal(-1.00000000000000))*(x400)))+(((IkReal(0.510303982936000))*(x83))));
op[37]=((((IkReal(-9.99292693428745e-5))*(r01)))+(((IkReal(-0.249874074000000))*(x83)))+(((IkReal(-0.472200000000000))*(x87)))+(((IkReal(-1.00000000000000))*(x378)))+(x421)+(((IkReal(0.599781179744000))*(x79)))+(((IkReal(0.472200000000000))*(x88))));
op[38]=((((IkReal(0.00194036405925864))*(r01)*(x72)))+(((IkReal(-1.00000000000000))*(x367)))+(x280)+(x420)+(((IkReal(1.42177145868800))*(x79)))+(((IkReal(-0.00194036405925864))*(py)*(x78)))+(((IkReal(-1.00000000000000))*(x278)))+(((IkReal(0.00451129583415292))*(r01)))+(((IkReal(0.163863881520000))*(x83))));
op[39]=((((IkReal(0.0486545952000000))*(x79)))+(x428)+(((IkReal(-1.01812855971200))*(x83)))+(((IkReal(-1.00000000000000))*(x404))));
op[40]=((((IkReal(0.501550853960000))*(x79)))+(((IkReal(0.00252563769097393))*(r01)))+(((IkReal(-1.85135600000000))*(x87)))+(x372)+(((IkReal(1.85135600000000))*(x88)))+(x414)+(((IkReal(-0.00763267801688913))*(pz)*(x75)))+(((IkReal(-1.00000000000000))*(x281)))+(((IkReal(-0.244269810376000))*(x83)))+(((IkReal(-1.00000000000000))*(x416)))+(((IkReal(0.00763267801688913))*(r02)*(x74))));
op[41]=((((IkReal(-0.000116554520083188))*(r01)))+(((IkReal(-1.00000000000000))*(x421)))+(x378)+(((IkReal(-0.283184269200000))*(x83)))+(((IkReal(-0.558435512544000))*(x79)))+(((IkReal(0.550760000000000))*(x88)))+(((IkReal(-0.550760000000000))*(x87))));
op[42]=((((IkReal(-0.331987664544000))*(x79)))+(((IkReal(1.53796000000000))*(x87)))+(((IkReal(0.000325470603724200))*(r01)))+(((IkReal(-1.00000000000000))*(x421)))+(((IkReal(0.813842293200000))*(x83)))+(x378)+(((IkReal(-1.53796000000000))*(x88))));
op[43]=((((IkReal(0.00788004301908933))*(pz)*(x75)))+(((IkReal(-0.00255742042286003))*(r01)))+(((IkReal(0.293001380776000))*(x83)))+(((IkReal(-1.00000000000000))*(x376)))+(((IkReal(1.91135600000000))*(x87)))+(x273)+(x416)+(((IkReal(-0.00788004301908933))*(r02)*(x74)))+(((IkReal(-1.91135600000000))*(x88)))+(((IkReal(0.480266422120000))*(x79)))+(((IkReal(-1.00000000000000))*(x414))));
op[44]=((((IkReal(1.57464711651200))*(x83)))+(((IkReal(-1.00000000000000))*(x428)))+(x404)+(((IkReal(-0.0646409952000000))*(x79))));
op[45]=((((IkReal(-1.00000000000000))*(x367)))+(((IkReal(-0.00447804533267230))*(r01)))+(((IkReal(0.00144563405485824))*(r01)*(x72)))+(x278)+(((IkReal(1.42793117868800))*(x79)))+(x420)+(((IkReal(-0.00144563405485824))*(py)*(x78)))+(((IkReal(-1.00000000000000))*(x280)))+(((IkReal(-0.0505682911200000))*(x83))));
op[46]=((((IkReal(0.000342095854464514))*(r01)))+(((IkReal(-1.00000000000000))*(x378)))+(x421)+(((IkReal(-1.61652000000000))*(x88)))+(((IkReal(0.269710470944000))*(x79)))+(((IkReal(1.61652000000000))*(x87)))+(((IkReal(0.831166088400000))*(x83))));
op[47]=((((IkReal(-2.26200400000000))*(x87)))+(((IkReal(0.612799503640000))*(x79)))+(((IkReal(-1.00000000000000))*(x372)))+(((IkReal(-0.00339612701614167))*(r01)))+(x281)+(((IkReal(-0.00932567707394757))*(r02)*(x74)))+(x400)+(x414)+(((IkReal(0.00932567707394757))*(pz)*(x75)))+(((IkReal(-1.00000000000000))*(x268)))+(((IkReal(2.26200400000000))*(x88)))+(((IkReal(-0.455412692536000))*(x83))));
op[48]=((((IkReal(-1.00000000000000))*(x151)))+(x150)+(x368)+(((IkReal(-1.00000000000000))*(x56))));
op[49]=((IkReal(-0.127315423160000))+(x354));
op[50]=((((IkReal(-1.00000000000000))*(x109)))+(x309)+(x362));
op[51]=x353;
op[52]=((x307)+(x355)+(((IkReal(-1.00000000000000))*(x349))));
op[53]=((IkReal(0.150672086440000))+(((IkReal(-1.00000000000000))*(x354))));
op[54]=((IkReal(-0.154668686440000))+(x354));
op[55]=((((IkReal(-1.00000000000000))*(x159)))+(x150)+(x366)+(((IkReal(-1.00000000000000))*(x56))));
op[56]=x353;
op[57]=((((IkReal(-1.00000000000000))*(x109)))+(x308)+(x357));
op[58]=((IkReal(0.123318823160000))+(((IkReal(-1.00000000000000))*(x354))));
op[59]=((x359)+(x310)+(((IkReal(-1.00000000000000))*(x348))));
op[60]=((((IkReal(-1.00000000000000))*(x433)))+(((IkReal(-1.00000000000000))*(x395)))+(((IkReal(-1.00000000000000))*(x371)))+(x135)+(x373)+(x402)+(x412)+(x426)+(((IkReal(-1.00000000000000))*(x388))));
op[61]=((((IkReal(-1.00000000000000))*(x363)))+(x358)+(x380)+(x436)+(((IkReal(-1.00000000000000))*(x382)))+(((IkReal(-1.00000000000000))*(x387)))+(((IkReal(-1.00000000000000))*(x381))));
op[62]=((((IkReal(-1.00000000000000))*(x391)))+(((IkReal(-1.00000000000000))*(x396)))+(((IkReal(-1.00000000000000))*(x424)))+(x397)+(x409)+(x435));
op[63]=((((IkReal(-1.00000000000000))*(x432)))+(x180)+(x410)+(x430)+(((IkReal(-1.00000000000000))*(x411))));
op[64]=((((IkReal(-1.00000000000000))*(x365)))+(x393)+(x392)+(x419)+(x425)+(((IkReal(-1.00000000000000))*(x383)))+(((IkReal(-1.00000000000000))*(x384)))+(((IkReal(-1.00000000000000))*(x245)))+(((IkReal(-1.00000000000000))*(x412)))+(((IkReal(-1.00000000000000))*(x401))));
op[65]=((((IkReal(-1.00000000000000))*(x436)))+(((IkReal(-1.00000000000000))*(x195)))+(x191)+(x350)+(x385)+(x375)+(x374)+(((IkReal(-1.00000000000000))*(x386))));
op[66]=((((IkReal(-1.00000000000000))*(x436)))+(((IkReal(-1.00000000000000))*(x356)))+(((IkReal(-1.00000000000000))*(x379)))+(x387)+(x375)+(x374)+(x361));
op[67]=((((IkReal(-1.00000000000000))*(x433)))+(((IkReal(-1.00000000000000))*(x369)))+(((IkReal(-1.00000000000000))*(x426)))+(((IkReal(-1.00000000000000))*(x370)))+(x135)+(x364)+(x395)+(x412)+(x413));
op[68]=((((IkReal(-1.00000000000000))*(x430)))+(x407)+(x432)+(((IkReal(-1.00000000000000))*(x211)))+(((IkReal(-1.00000000000000))*(x406))));
op[69]=((((IkReal(-1.00000000000000))*(x394)))+(((IkReal(-1.00000000000000))*(x424)))+(((IkReal(-1.00000000000000))*(x377)))+(x403)+(x408)+(x435));
op[70]=((((IkReal(-1.00000000000000))*(x351)))+(x389)+(x219)+(x436)+(((IkReal(-1.00000000000000))*(x382)))+(((IkReal(-1.00000000000000))*(x385)))+(((IkReal(-1.00000000000000))*(x381)))+(((IkReal(-1.00000000000000))*(x221))));
op[71]=((((IkReal(-1.00000000000000))*(x390)))+(((IkReal(-1.00000000000000))*(x425)))+(x365)+(x399)+(x405)+(x419)+(((IkReal(-1.00000000000000))*(x384)))+(((IkReal(-1.00000000000000))*(x245)))+(((IkReal(-1.00000000000000))*(x412)))+(((IkReal(-1.00000000000000))*(x306))));
solvedialyticpoly8qep(op,zeror,numroots);
IkReal j0array[16], cj0array[16], sj0array[16], j2array[16], cj2array[16], sj2array[16], j3array[16], cj3array[16], sj3array[16];
int numsolutions = 0;
for(int ij0 = 0; ij0 < numroots; ij0 += 3)
{
IkReal htj0 = zeror[ij0+0], htj2 = zeror[ij0+1], htj3 = zeror[ij0+2];
j0array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj0)));
j2array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj2)));
j3array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj3)));
IkReal x437=(htj0)*(htj0);
IkReal x438=(htj2)*(htj2);
IkReal x439=(htj3)*(htj3);
cj0array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x437))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x437)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x437))))));
cj2array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x438))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x438)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x438))))));
cj3array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x439))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x439)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x439))))));
sj0array[numsolutions]=((IkReal(2.00000000000000))*(htj0)*(((IKabs(((IkReal(1.00000000000000))+((htj0)*(htj0)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj0)*(htj0))))):(IkReal)1.0e30)));
sj2array[numsolutions]=((IkReal(2.00000000000000))*(htj2)*(((IKabs(((IkReal(1.00000000000000))+((htj2)*(htj2)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj2)*(htj2))))):(IkReal)1.0e30)));
sj3array[numsolutions]=((IkReal(2.00000000000000))*(htj3)*(((IKabs(((IkReal(1.00000000000000))+((htj3)*(htj3)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj3)*(htj3))))):(IkReal)1.0e30)));
if( j0array[numsolutions] > IKPI )
{
    j0array[numsolutions]-=IK2PI;
}
else if( j0array[numsolutions] < -IKPI )
{
    j0array[numsolutions]+=IK2PI;
}
if( j2array[numsolutions] > IKPI )
{
    j2array[numsolutions]-=IK2PI;
}
else if( j2array[numsolutions] < -IKPI )
{
    j2array[numsolutions]+=IK2PI;
}
if( j3array[numsolutions] > IKPI )
{
    j3array[numsolutions]-=IK2PI;
}
else if( j3array[numsolutions] < -IKPI )
{
    j3array[numsolutions]+=IK2PI;
}
numsolutions++;
}
bool j0valid[16]={true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true};
_nj0 = 16;
_nj2 = 1;
_nj3 = 1;
for(int ij0 = 0; ij0 < numsolutions; ++ij0)
    {
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
_ij2[0] = 0; _ij2[1] = -1;
_ij3[0] = 0; _ij3[1] = -1;
for(int iij0 = ij0+1; iij0 < numsolutions; ++iij0)
{
if( !j0valid[iij0] ) { continue; }
if( IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(cj2array[ij0]-cj2array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij0]-sj2array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(cj3array[ij0]-cj3array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij0]-sj3array[iij0]) < IKFAST_SOLUTION_THRESH &&  1 )
{
    j0valid[iij0]=false; _ij0[1] = iij0; _ij2[1] = 0; _ij3[1] = 0;  break; 
}
}
    j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];

    j2 = j2array[ij0]; cj2 = cj2array[ij0]; sj2 = sj2array[ij0];

    j3 = j3array[ij0]; cj3 = cj3array[ij0]; sj3 = sj3array[ij0];

{
IkReal dummyeval[1];
IkReal gconst0;
gconst0=IKsign(cj3);
dummyeval[0]=cj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst1;
gconst1=IKsign(sj3);
dummyeval[0]=sj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[2];
IkReal x440=((cj1)*(sj2));
IkReal x441=((cj2)*(sj1));
IkReal x442=((cj0)*(py));
IkReal x443=((IkReal(1.00000000000000))*(px)*(sj0));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0588310000000000))+(((pz)*(sj1)*(sj2)))+(((x440)*(x442)))+(((IkReal(0.521670000000000))*(cj2)))+(((x441)*(x442)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(pz)))+(((IkReal(-1.00000000000000))*(x440)*(x443)))+(((IkReal(0.00982000000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(x441)*(x443))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x444=((IkReal(0.0215969237223081))*(cj1));
IkReal x445=((pz)*(sj2));
IkReal x446=((cj0)*(px));
IkReal x447=((IkReal(5.23847517560207))*(sj0));
IkReal x448=((cj1)*(cj2));
IkReal x449=((cj0)*(py));
IkReal x450=((IkReal(0.0215969237223081))*(sj1));
IkReal x451=((px)*(sj0));
IkReal x452=((cj2)*(pz));
IkReal x453=((IkReal(5.23847517560207))*(sj1));
if( IKabs(((IkReal(0.00851588299294329))+(((IkReal(-1.00000000000000))*(x444)*(x445)))+(((IkReal(-1.00000000000000))*(cj2)*(x444)*(x449)))+(((IkReal(-5.23847517560207))*(x446)))+(((IkReal(0.0112664671982164))*(sj2)))+(((IkReal(-0.000212081790953065))*(cj2)))+(((IkReal(-1.00000000000000))*(sj2)*(x450)*(x451)))+(((cj2)*(x444)*(x451)))+(((IkReal(-1.00000000000000))*(x450)*(x452)))+(((IkReal(-1.00000000000000))*(py)*(x447)))+(((sj2)*(x449)*(x450))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-2.06558314649165))+(((px)*(sj1)*(sj2)*(x447)))+(((x452)*(x453)))+(((IkReal(-2.73275534485633))*(sj2)))+(((IkReal(-1.00000000000000))*(px)*(x447)*(x448)))+(((IkReal(0.0514418262244123))*(cj2)))+(((IkReal(5.23847517560207))*(x448)*(x449)))+(((IkReal(-0.0215969237223081))*(x446)))+(((IkReal(5.23847517560207))*(cj1)*(x445)))+(((IkReal(-0.0215969237223081))*(py)*(sj0)))+(((IkReal(-1.00000000000000))*(sj2)*(x449)*(x453))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.00851588299294329))+(((IkReal(-1.00000000000000))*(x444)*(x445)))+(((IkReal(-1.00000000000000))*(cj2)*(x444)*(x449)))+(((IkReal(-5.23847517560207))*(x446)))+(((IkReal(0.0112664671982164))*(sj2)))+(((IkReal(-0.000212081790953065))*(cj2)))+(((IkReal(-1.00000000000000))*(sj2)*(x450)*(x451)))+(((cj2)*(x444)*(x451)))+(((IkReal(-1.00000000000000))*(x450)*(x452)))+(((IkReal(-1.00000000000000))*(py)*(x447)))+(((sj2)*(x449)*(x450)))))+IKsqr(((IkReal(-2.06558314649165))+(((px)*(sj1)*(sj2)*(x447)))+(((x452)*(x453)))+(((IkReal(-2.73275534485633))*(sj2)))+(((IkReal(-1.00000000000000))*(px)*(x447)*(x448)))+(((IkReal(0.0514418262244123))*(cj2)))+(((IkReal(5.23847517560207))*(x448)*(x449)))+(((IkReal(-0.0215969237223081))*(x446)))+(((IkReal(5.23847517560207))*(cj1)*(x445)))+(((IkReal(-0.0215969237223081))*(py)*(sj0)))+(((IkReal(-1.00000000000000))*(sj2)*(x449)*(x453)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((IkReal(0.00851588299294329))+(((IkReal(-1.00000000000000))*(x444)*(x445)))+(((IkReal(-1.00000000000000))*(cj2)*(x444)*(x449)))+(((IkReal(-5.23847517560207))*(x446)))+(((IkReal(0.0112664671982164))*(sj2)))+(((IkReal(-0.000212081790953065))*(cj2)))+(((IkReal(-1.00000000000000))*(sj2)*(x450)*(x451)))+(((cj2)*(x444)*(x451)))+(((IkReal(-1.00000000000000))*(x450)*(x452)))+(((IkReal(-1.00000000000000))*(py)*(x447)))+(((sj2)*(x449)*(x450)))), ((IkReal(-2.06558314649165))+(((px)*(sj1)*(sj2)*(x447)))+(((x452)*(x453)))+(((IkReal(-2.73275534485633))*(sj2)))+(((IkReal(-1.00000000000000))*(px)*(x447)*(x448)))+(((IkReal(0.0514418262244123))*(cj2)))+(((IkReal(5.23847517560207))*(x448)*(x449)))+(((IkReal(-0.0215969237223081))*(x446)))+(((IkReal(5.23847517560207))*(cj1)*(x445)))+(((IkReal(-0.0215969237223081))*(py)*(sj0)))+(((IkReal(-1.00000000000000))*(sj2)*(x449)*(x453)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[2];
IkReal x454=IKsin(j4);
IkReal x455=IKcos(j4);
IkReal x456=((cj1)*(cj2));
IkReal x457=((px)*(sj0));
IkReal x458=((cj0)*(py));
IkReal x459=((sj1)*(sj2));
evalcond[0]=((((IkReal(0.000787000000000000))*(x455)))+(((IkReal(0.190892000000000))*(x454)))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[1]=((IkReal(-0.394310000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-0.190892000000000))*(x455)))+(((IkReal(-1.00000000000000))*(x456)*(x457)))+(((cj2)*(pz)*(sj1)))+(((cj1)*(pz)*(sj2)))+(((IkReal(0.000787000000000000))*(x454)))+(((IkReal(-1.00000000000000))*(x458)*(x459)))+(((IkReal(-0.521670000000000))*(sj2)))+(((x456)*(x458)))+(((x457)*(x459))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
dummyeval[0]=cj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x460=((IkReal(1.00000000000000))*(sj2));
IkReal x461=((px)*(sj0));
IkReal x462=((pz)*(sj2));
IkReal x463=((cj0)*(sj1));
IkReal x464=((cj1)*(sj2));
IkReal x465=((sj1)*(sj2));
IkReal x466=((cj2)*(sj1));
IkReal x467=((r00)*(sj0));
IkReal x468=((cj0)*(cj1)*(cj2));
IkReal x469=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.000787000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r01)*(x460)*(x463)))+(((x465)*(x467)))+(((r02)*(x466)))+(((r02)*(x464)))+(((r01)*(x468)))+(((IkReal(-1.00000000000000))*(x467)*(x469))));
evalcond[3]=((IkReal(-0.585202000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((x461)*(x465)))+(((cj1)*(x462)))+(((IkReal(-1.00000000000000))*(x461)*(x469)))+(((py)*(x468)))+(((pz)*(x466)))+(((IkReal(-0.521670000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(py)*(x460)*(x463))));
evalcond[4]=((IkReal(0.0588310000000000))+(((IkReal(-1.00000000000000))*(x461)*(x466)))+(((cj2)*(py)*(x463)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(pz)*(x469)))+(((sj1)*(x462)))+(((cj0)*(py)*(x464)))+(((IkReal(0.00982000000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(cj1)*(x460)*(x461))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x470=((IkReal(1.00000000000000))*(sj2));
IkReal x471=((cj0)*(r01));
IkReal x472=((r00)*(sj0));
IkReal x473=((cj2)*(sj1));
if( IKabs(((((r01)*(sj0)))+(((cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj1)*(sj2)*(x472)))+(((x472)*(x473)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x470)))+(((IkReal(-1.00000000000000))*(x471)*(x473)))+(((IkReal(-1.00000000000000))*(cj1)*(x470)*(x471)))+(((cj1)*(cj2)*(r02))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r01)*(sj0)))+(((cj0)*(r00)))))+IKsqr(((((cj1)*(sj2)*(x472)))+(((x472)*(x473)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x470)))+(((IkReal(-1.00000000000000))*(x471)*(x473)))+(((IkReal(-1.00000000000000))*(cj1)*(x470)*(x471)))+(((cj1)*(cj2)*(r02)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((r01)*(sj0)))+(((cj0)*(r00)))), ((((cj1)*(sj2)*(x472)))+(((x472)*(x473)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x470)))+(((IkReal(-1.00000000000000))*(x471)*(x473)))+(((IkReal(-1.00000000000000))*(cj1)*(x470)*(x471)))+(((cj1)*(cj2)*(r02)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x474=((cj2)*(sj1));
IkReal x475=((cj0)*(r01));
IkReal x476=((cj1)*(sj2));
IkReal x477=((IkReal(1.00000000000000))*(r00)*(sj0));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x476)*(x477)))+(IKcos(j5))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((x474)*(x475)))+(((x475)*(x476)))+(((r02)*(sj1)*(sj2)))+(((IkReal(-1.00000000000000))*(x474)*(x477))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x478=((IkReal(1.00000000000000))*(sj2));
IkReal x479=((px)*(sj0));
IkReal x480=((pz)*(sj2));
IkReal x481=((cj0)*(sj1));
IkReal x482=((cj1)*(sj2));
IkReal x483=((sj1)*(sj2));
IkReal x484=((cj2)*(sj1));
IkReal x485=((r00)*(sj0));
IkReal x486=((cj0)*(cj1)*(cj2));
IkReal x487=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.000787000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r01)*(x478)*(x481)))+(((r02)*(x482)))+(((r02)*(x484)))+(((x483)*(x485)))+(((r01)*(x486)))+(((IkReal(-1.00000000000000))*(x485)*(x487))));
evalcond[3]=((IkReal(-0.203418000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((py)*(x486)))+(((pz)*(x484)))+(((IkReal(-1.00000000000000))*(x479)*(x487)))+(((IkReal(-1.00000000000000))*(py)*(x478)*(x481)))+(((cj1)*(x480)))+(((x479)*(x483)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(0.0588310000000000))+(((IkReal(-1.00000000000000))*(pz)*(x487)))+(((IkReal(-1.00000000000000))*(cj1)*(x478)*(x479)))+(((cj2)*(py)*(x481)))+(((sj1)*(x480)))+(((cj0)*(py)*(x482)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x479)*(x484)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x488=((IkReal(1.00000000000000))*(sj2));
IkReal x489=((cj0)*(r01));
IkReal x490=((r00)*(sj0));
IkReal x491=((cj2)*(sj1));
if( IKabs(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r02)*(sj1)*(x488)))+(((IkReal(-1.00000000000000))*(x489)*(x491)))+(((IkReal(-1.00000000000000))*(cj1)*(x488)*(x489)))+(((x490)*(x491)))+(((cj1)*(sj2)*(x490)))+(((cj1)*(cj2)*(r02))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))))+IKsqr(((((IkReal(-1.00000000000000))*(r02)*(sj1)*(x488)))+(((IkReal(-1.00000000000000))*(x489)*(x491)))+(((IkReal(-1.00000000000000))*(cj1)*(x488)*(x489)))+(((x490)*(x491)))+(((cj1)*(sj2)*(x490)))+(((cj1)*(cj2)*(r02)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))), ((((IkReal(-1.00000000000000))*(r02)*(sj1)*(x488)))+(((IkReal(-1.00000000000000))*(x489)*(x491)))+(((IkReal(-1.00000000000000))*(cj1)*(x488)*(x489)))+(((x490)*(x491)))+(((cj1)*(sj2)*(x490)))+(((cj1)*(cj2)*(r02)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x492=((cj2)*(sj1));
IkReal x493=((cj0)*(r01));
IkReal x494=((cj1)*(sj2));
IkReal x495=((IkReal(1.00000000000000))*(r00)*(sj0));
evalcond[0]=((((r01)*(sj0)))+(IKsin(j5))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x494)*(x495)))+(((x493)*(x494)))+(IKcos(j5))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((r02)*(sj1)*(sj2)))+(((x492)*(x493)))+(((IkReal(-1.00000000000000))*(x492)*(x495))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x496=((pz)*(sj1));
IkReal x497=((cj0)*(py));
IkReal x498=((IkReal(1.00000000000000))*(sj2));
IkReal x499=((cj1)*(cj2));
IkReal x500=((px)*(sj0));
IkReal x501=((cj2)*(sj1));
IkReal x502=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(0.190892000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.393523000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(sj1)*(x497)*(x498)))+(((x497)*(x499)))+(((sj1)*(sj2)*(x500)))+(((IkReal(-0.521670000000000))*(sj2)))+(((pz)*(x502)))+(((IkReal(-1.00000000000000))*(x499)*(x500)))+(((cj2)*(x496))));
evalcond[4]=((IkReal(0.0588310000000000))+(((IkReal(-1.00000000000000))*(cj1)*(x498)*(x500)))+(((x497)*(x502)))+(((x497)*(x501)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(pz)*(x499)))+(((IkReal(-1.00000000000000))*(x500)*(x501)))+(((sj2)*(x496)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x503=((IkReal(1.00000000000000))*(sj2));
IkReal x504=((r02)*(sj1));
IkReal x505=((cj0)*(r01));
IkReal x506=((IkReal(1.00000000000000))*(cj2));
IkReal x507=((cj1)*(r02));
IkReal x508=((cj1)*(r00)*(sj0));
IkReal x509=((r00)*(sj0)*(sj1));
if( IKabs(((((IkReal(-1.00000000000000))*(x506)*(x508)))+(((sj2)*(x509)))+(((sj2)*(x507)))+(((cj2)*(x504)))+(((IkReal(-1.00000000000000))*(sj1)*(x503)*(x505)))+(((cj1)*(cj2)*(x505))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((sj2)*(x508)))+(((IkReal(-1.00000000000000))*(sj1)*(x505)*(x506)))+(((cj2)*(x509)))+(((cj2)*(x507)))+(((IkReal(-1.00000000000000))*(x503)*(x504)))+(((IkReal(-1.00000000000000))*(cj1)*(x503)*(x505))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x506)*(x508)))+(((sj2)*(x509)))+(((sj2)*(x507)))+(((cj2)*(x504)))+(((IkReal(-1.00000000000000))*(sj1)*(x503)*(x505)))+(((cj1)*(cj2)*(x505)))))+IKsqr(((((sj2)*(x508)))+(((IkReal(-1.00000000000000))*(sj1)*(x505)*(x506)))+(((cj2)*(x509)))+(((cj2)*(x507)))+(((IkReal(-1.00000000000000))*(x503)*(x504)))+(((IkReal(-1.00000000000000))*(cj1)*(x503)*(x505)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x506)*(x508)))+(((sj2)*(x509)))+(((sj2)*(x507)))+(((cj2)*(x504)))+(((IkReal(-1.00000000000000))*(sj1)*(x503)*(x505)))+(((cj1)*(cj2)*(x505)))), ((((sj2)*(x508)))+(((IkReal(-1.00000000000000))*(sj1)*(x505)*(x506)))+(((cj2)*(x509)))+(((cj2)*(x507)))+(((IkReal(-1.00000000000000))*(x503)*(x504)))+(((IkReal(-1.00000000000000))*(cj1)*(x503)*(x505)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x510=((r02)*(sj2));
IkReal x511=((IkReal(1.00000000000000))*(sj2));
IkReal x512=((r00)*(sj0));
IkReal x513=((cj1)*(cj2));
IkReal x514=((cj0)*(r01));
IkReal x515=((sj1)*(x514));
IkReal x516=((IkReal(1.00000000000000))*(cj2)*(x512));
evalcond[0]=((((cj1)*(sj2)*(x514)))+(((IkReal(-1.00000000000000))*(r02)*(x513)))+(((IkReal(-1.00000000000000))*(sj1)*(x516)))+(IKcos(j5))+(((IkReal(-1.00000000000000))*(cj1)*(x511)*(x512)))+(((cj2)*(x515)))+(((sj1)*(x510))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x511)*(x515)))+(((x513)*(x514)))+(((cj2)*(r02)*(sj1)))+(((cj1)*(x510)))+(((IkReal(-1.00000000000000))*(x512)*(x513)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((sj1)*(sj2)*(x512))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x517=((pz)*(sj1));
IkReal x518=((cj0)*(py));
IkReal x519=((IkReal(1.00000000000000))*(sj2));
IkReal x520=((cj1)*(cj2));
IkReal x521=((px)*(sj0));
IkReal x522=((cj2)*(sj1));
IkReal x523=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(-0.190892000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.395097000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((pz)*(x523)))+(((IkReal(-1.00000000000000))*(sj1)*(x518)*(x519)))+(((x518)*(x520)))+(((cj2)*(x517)))+(((IkReal(-1.00000000000000))*(x520)*(x521)))+(((IkReal(-0.521670000000000))*(sj2)))+(((sj1)*(sj2)*(x521))));
evalcond[4]=((IkReal(0.0588310000000000))+(((IkReal(-1.00000000000000))*(pz)*(x520)))+(((IkReal(0.521670000000000))*(cj2)))+(((x518)*(x523)))+(((x518)*(x522)))+(((IkReal(-1.00000000000000))*(cj1)*(x519)*(x521)))+(((sj2)*(x517)))+(((IkReal(-1.00000000000000))*(x521)*(x522)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x524=((IkReal(1.00000000000000))*(sj2));
IkReal x525=((r02)*(sj1));
IkReal x526=((cj0)*(r01));
IkReal x527=((r00)*(sj0));
IkReal x528=((cj1)*(r02));
IkReal x529=((IkReal(1.00000000000000))*(cj2));
if( IKabs(((((IkReal(-1.00000000000000))*(x524)*(x528)))+(((IkReal(-1.00000000000000))*(x525)*(x529)))+(((cj1)*(cj2)*(x527)))+(((IkReal(-1.00000000000000))*(cj1)*(x526)*(x529)))+(((IkReal(-1.00000000000000))*(sj1)*(x524)*(x527)))+(((sj1)*(sj2)*(x526))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x524)*(x525)))+(((cj1)*(sj2)*(x527)))+(((IkReal(-1.00000000000000))*(cj1)*(x524)*(x526)))+(((IkReal(-1.00000000000000))*(sj1)*(x526)*(x529)))+(((cj2)*(x528)))+(((cj2)*(sj1)*(x527))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x524)*(x528)))+(((IkReal(-1.00000000000000))*(x525)*(x529)))+(((cj1)*(cj2)*(x527)))+(((IkReal(-1.00000000000000))*(cj1)*(x526)*(x529)))+(((IkReal(-1.00000000000000))*(sj1)*(x524)*(x527)))+(((sj1)*(sj2)*(x526)))))+IKsqr(((((IkReal(-1.00000000000000))*(x524)*(x525)))+(((cj1)*(sj2)*(x527)))+(((IkReal(-1.00000000000000))*(cj1)*(x524)*(x526)))+(((IkReal(-1.00000000000000))*(sj1)*(x526)*(x529)))+(((cj2)*(x528)))+(((cj2)*(sj1)*(x527)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x524)*(x528)))+(((IkReal(-1.00000000000000))*(x525)*(x529)))+(((cj1)*(cj2)*(x527)))+(((IkReal(-1.00000000000000))*(cj1)*(x526)*(x529)))+(((IkReal(-1.00000000000000))*(sj1)*(x524)*(x527)))+(((sj1)*(sj2)*(x526)))), ((((IkReal(-1.00000000000000))*(x524)*(x525)))+(((cj1)*(sj2)*(x527)))+(((IkReal(-1.00000000000000))*(cj1)*(x524)*(x526)))+(((IkReal(-1.00000000000000))*(sj1)*(x526)*(x529)))+(((cj2)*(x528)))+(((cj2)*(sj1)*(x527)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x530=((r02)*(sj2));
IkReal x531=((IkReal(1.00000000000000))*(sj2));
IkReal x532=((r00)*(sj0));
IkReal x533=((cj1)*(cj2));
IkReal x534=((cj0)*(r01));
IkReal x535=((sj1)*(x534));
IkReal x536=((IkReal(1.00000000000000))*(cj2)*(x532));
evalcond[0]=((((IkReal(-1.00000000000000))*(r02)*(x533)))+(((cj1)*(sj2)*(x534)))+(((IkReal(-1.00000000000000))*(sj1)*(x536)))+(((sj1)*(x530)))+(((IkReal(-1.00000000000000))*(cj1)*(x531)*(x532)))+(IKcos(j5))+(((cj2)*(x535))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x532)*(x533)))+(((IkReal(-1.00000000000000))*(x531)*(x535)))+(IKsin(j5))+(((cj1)*(x530)))+(((cj2)*(r02)*(sj1)))+(((x533)*(x534)))+(((sj1)*(sj2)*(x532))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x537=((IkReal(1.00000000000000))*(sj2));
IkReal x538=((r02)*(sj1));
IkReal x539=((cj0)*(r01));
IkReal x540=((IkReal(1.00000000000000))*(cj2));
IkReal x541=((cj1)*(r02));
IkReal x542=((cj1)*(r00)*(sj0));
IkReal x543=((r00)*(sj0)*(sj1));
if( IKabs(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(sj1)*(x537)*(x539)))+(((sj2)*(x543)))+(((sj2)*(x541)))+(((IkReal(-1.00000000000000))*(x540)*(x542)))+(((cj1)*(cj2)*(x539)))+(((cj2)*(x538))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x537)*(x538)))+(((IkReal(-1.00000000000000))*(sj1)*(x539)*(x540)))+(((sj2)*(x542)))+(((IkReal(-1.00000000000000))*(cj1)*(x537)*(x539)))+(((cj2)*(x543)))+(((cj2)*(x541))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(sj1)*(x537)*(x539)))+(((sj2)*(x543)))+(((sj2)*(x541)))+(((IkReal(-1.00000000000000))*(x540)*(x542)))+(((cj1)*(cj2)*(x539)))+(((cj2)*(x538)))))))+IKsqr(((((IkReal(-1.00000000000000))*(x537)*(x538)))+(((IkReal(-1.00000000000000))*(sj1)*(x539)*(x540)))+(((sj2)*(x542)))+(((IkReal(-1.00000000000000))*(cj1)*(x537)*(x539)))+(((cj2)*(x543)))+(((cj2)*(x541)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(sj1)*(x537)*(x539)))+(((sj2)*(x543)))+(((sj2)*(x541)))+(((IkReal(-1.00000000000000))*(x540)*(x542)))+(((cj1)*(cj2)*(x539)))+(((cj2)*(x538)))))), ((((IkReal(-1.00000000000000))*(x537)*(x538)))+(((IkReal(-1.00000000000000))*(sj1)*(x539)*(x540)))+(((sj2)*(x542)))+(((IkReal(-1.00000000000000))*(cj1)*(x537)*(x539)))+(((cj2)*(x543)))+(((cj2)*(x541)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x544=IKsin(j5);
IkReal x545=((r02)*(sj2));
IkReal x546=((IkReal(1.00000000000000))*(sj2));
IkReal x547=((r00)*(sj0));
IkReal x548=((IkReal(1.00000000000000))*(cj2));
IkReal x549=((IkReal(1.00000000000000))*(x544));
IkReal x550=((cj0)*(r01)*(sj1));
IkReal x551=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x549)))+(((cj0)*(r00))));
evalcond[1]=((((sj1)*(x545)))+(((IkReal(-1.00000000000000))*(cj1)*(x546)*(x547)))+(((sj2)*(x551)))+(((IkReal(-1.00000000000000))*(sj1)*(x547)*(x548)))+(IKcos(j5))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x548)))+(((cj2)*(x550))));
evalcond[2]=((((sj1)*(sj2)*(x547)))+(((IkReal(-1.00000000000000))*(cj1)*(x547)*(x548)))+(((IkReal(-1.00000000000000))*(sj4)*(x549)))+(((cj1)*(x545)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x546)*(x550)))+(((cj2)*(x551))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x552=((IkReal(1.00000000000000))*(sj2));
IkReal x553=((cj0)*(r01));
IkReal x554=((r00)*(sj0));
IkReal x555=((cj2)*(sj1));
if( IKabs(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x554)*(x555)))+(((IkReal(-1.00000000000000))*(x553)*(x555)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x552)))+(((IkReal(-1.00000000000000))*(cj1)*(x552)*(x553)))+(((cj1)*(cj2)*(r02)))+(((cj1)*(sj2)*(x554))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))))+IKsqr(((((x554)*(x555)))+(((IkReal(-1.00000000000000))*(x553)*(x555)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x552)))+(((IkReal(-1.00000000000000))*(cj1)*(x552)*(x553)))+(((cj1)*(cj2)*(r02)))+(((cj1)*(sj2)*(x554)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))), ((((x554)*(x555)))+(((IkReal(-1.00000000000000))*(x553)*(x555)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x552)))+(((IkReal(-1.00000000000000))*(cj1)*(x552)*(x553)))+(((cj1)*(cj2)*(r02)))+(((cj1)*(sj2)*(x554)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x556=IKsin(j5);
IkReal x557=((r02)*(sj2));
IkReal x558=((IkReal(1.00000000000000))*(sj2));
IkReal x559=((r00)*(sj0));
IkReal x560=((IkReal(1.00000000000000))*(cj2));
IkReal x561=((IkReal(1.00000000000000))*(x556));
IkReal x562=((cj0)*(r01)*(sj1));
IkReal x563=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x561)))+(((cj0)*(r00))));
evalcond[1]=((((sj1)*(x557)))+(((IkReal(-1.00000000000000))*(sj1)*(x559)*(x560)))+(((cj2)*(x562)))+(((IkReal(-1.00000000000000))*(cj1)*(x558)*(x559)))+(IKcos(j5))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x560)))+(((sj2)*(x563))));
evalcond[2]=((((sj1)*(sj2)*(x559)))+(((IkReal(-1.00000000000000))*(sj4)*(x561)))+(((IkReal(-1.00000000000000))*(cj1)*(x559)*(x560)))+(((IkReal(-1.00000000000000))*(x558)*(x562)))+(((cj2)*(x563)))+(((cj1)*(x557)))+(((cj2)*(r02)*(sj1))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x564=((cj1)*(sj2));
IkReal x565=((cj2)*(sj1));
IkReal x566=((cj0)*(py));
IkReal x567=((IkReal(1.00000000000000))*(px)*(sj0));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0438310000000000))+(((IkReal(-1.00000000000000))*(x564)*(x567)))+(((x565)*(x566)))+(((x564)*(x566)))+(((pz)*(sj1)*(sj2)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(pz)))+(((IkReal(0.00982000000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(x565)*(x567))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x568=((IkReal(0.0215969237223081))*(cj1));
IkReal x569=((pz)*(sj2));
IkReal x570=((cj0)*(px));
IkReal x571=((IkReal(5.23847517560207))*(sj0));
IkReal x572=((IkReal(0.0215969237223081))*(sj1));
IkReal x573=((px)*(sj0));
IkReal x574=((cj2)*(pz));
IkReal x575=((IkReal(5.23847517560207))*(sj1));
IkReal x576=((IkReal(5.23847517560207))*(cj1));
IkReal x577=((cj0)*(cj2)*(py));
IkReal x578=((cj0)*(py)*(sj2));
if( IKabs(((IkReal(-0.00276159863637153))+(((IkReal(-5.23847517560207))*(x570)))+(((sj2)*(x572)*(x573)))+(((IkReal(-1.00000000000000))*(py)*(x571)))+(((IkReal(0.000212081790953065))*(cj2)))+(((IkReal(-1.00000000000000))*(cj2)*(x568)*(x573)))+(((x568)*(x577)))+(((IkReal(-0.0112664671982164))*(sj2)))+(((x572)*(x574)))+(((IkReal(-1.00000000000000))*(x572)*(x578)))+(((x568)*(x569))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(0.669843820704237))+(((IkReal(-0.0514418262244123))*(cj2)))+(((IkReal(-1.00000000000000))*(x569)*(x576)))+(((x575)*(x578)))+(((IkReal(-1.00000000000000))*(px)*(sj1)*(sj2)*(x571)))+(((IkReal(-1.00000000000000))*(x576)*(x577)))+(((IkReal(-1.00000000000000))*(x574)*(x575)))+(((IkReal(2.73275534485633))*(sj2)))+(((IkReal(-0.0215969237223081))*(py)*(sj0)))+(((IkReal(-0.0215969237223081))*(x570)))+(((cj1)*(cj2)*(px)*(x571))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(-0.00276159863637153))+(((IkReal(-5.23847517560207))*(x570)))+(((sj2)*(x572)*(x573)))+(((IkReal(-1.00000000000000))*(py)*(x571)))+(((IkReal(0.000212081790953065))*(cj2)))+(((IkReal(-1.00000000000000))*(cj2)*(x568)*(x573)))+(((x568)*(x577)))+(((IkReal(-0.0112664671982164))*(sj2)))+(((x572)*(x574)))+(((IkReal(-1.00000000000000))*(x572)*(x578)))+(((x568)*(x569)))))+IKsqr(((IkReal(0.669843820704237))+(((IkReal(-0.0514418262244123))*(cj2)))+(((IkReal(-1.00000000000000))*(x569)*(x576)))+(((x575)*(x578)))+(((IkReal(-1.00000000000000))*(px)*(sj1)*(sj2)*(x571)))+(((IkReal(-1.00000000000000))*(x576)*(x577)))+(((IkReal(-1.00000000000000))*(x574)*(x575)))+(((IkReal(2.73275534485633))*(sj2)))+(((IkReal(-0.0215969237223081))*(py)*(sj0)))+(((IkReal(-0.0215969237223081))*(x570)))+(((cj1)*(cj2)*(px)*(x571)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((IkReal(-0.00276159863637153))+(((IkReal(-5.23847517560207))*(x570)))+(((sj2)*(x572)*(x573)))+(((IkReal(-1.00000000000000))*(py)*(x571)))+(((IkReal(0.000212081790953065))*(cj2)))+(((IkReal(-1.00000000000000))*(cj2)*(x568)*(x573)))+(((x568)*(x577)))+(((IkReal(-0.0112664671982164))*(sj2)))+(((x572)*(x574)))+(((IkReal(-1.00000000000000))*(x572)*(x578)))+(((x568)*(x569)))), ((IkReal(0.669843820704237))+(((IkReal(-0.0514418262244123))*(cj2)))+(((IkReal(-1.00000000000000))*(x569)*(x576)))+(((x575)*(x578)))+(((IkReal(-1.00000000000000))*(px)*(sj1)*(sj2)*(x571)))+(((IkReal(-1.00000000000000))*(x576)*(x577)))+(((IkReal(-1.00000000000000))*(x574)*(x575)))+(((IkReal(2.73275534485633))*(sj2)))+(((IkReal(-0.0215969237223081))*(py)*(sj0)))+(((IkReal(-0.0215969237223081))*(x570)))+(((cj1)*(cj2)*(px)*(x571)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[2];
IkReal x579=IKcos(j4);
IkReal x580=IKsin(j4);
IkReal x581=((cj1)*(cj2));
IkReal x582=((px)*(sj0));
IkReal x583=((cj0)*(py));
IkReal x584=((sj1)*(sj2));
evalcond[0]=((((IkReal(0.190892000000000))*(x580)))+(((IkReal(0.000787000000000000))*(x579)))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[1]=((IkReal(-0.127870000000000))+(((IkReal(0.190892000000000))*(x579)))+(((IkReal(-1.00000000000000))*(x581)*(x582)))+(((IkReal(0.00982000000000000))*(cj2)))+(((x581)*(x583)))+(((IkReal(-0.000787000000000000))*(x580)))+(((x582)*(x584)))+(((cj2)*(pz)*(sj1)))+(((cj1)*(pz)*(sj2)))+(((IkReal(-1.00000000000000))*(x583)*(x584)))+(((IkReal(-0.521670000000000))*(sj2))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
dummyeval[0]=cj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x585=((IkReal(1.00000000000000))*(sj2));
IkReal x586=((px)*(sj0));
IkReal x587=((pz)*(sj2));
IkReal x588=((cj0)*(sj1));
IkReal x589=((cj1)*(sj2));
IkReal x590=((sj1)*(sj2));
IkReal x591=((cj2)*(sj1));
IkReal x592=((r00)*(sj0));
IkReal x593=((cj0)*(cj1)*(cj2));
IkReal x594=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.000787000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((r02)*(x589)))+(((r01)*(x593)))+(((IkReal(-1.00000000000000))*(x592)*(x594)))+(((r02)*(x591)))+(((x590)*(x592)))+(((IkReal(-1.00000000000000))*(r01)*(x585)*(x588))));
evalcond[3]=((IkReal(0.0630220000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x586)*(x594)))+(((py)*(x593)))+(((pz)*(x591)))+(((IkReal(-1.00000000000000))*(py)*(x585)*(x588)))+(((IkReal(-0.521670000000000))*(sj2)))+(((x586)*(x590)))+(((cj1)*(x587))));
evalcond[4]=((IkReal(-0.0438310000000000))+(((cj2)*(py)*(x588)))+(((sj1)*(x587)))+(((IkReal(-1.00000000000000))*(x586)*(x591)))+(((IkReal(-1.00000000000000))*(pz)*(x594)))+(((cj0)*(py)*(x589)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(0.00982000000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(cj1)*(x585)*(x586))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x595=((cj2)*(sj1));
IkReal x596=((cj0)*(r01));
IkReal x597=((cj1)*(sj2));
IkReal x598=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((r01)*(sj0)))+(((cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x597)*(x598)))+(((x595)*(x596)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(x595)*(x598)))+(((x596)*(x597)))+(((r02)*(sj1)*(sj2))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r01)*(sj0)))+(((cj0)*(r00)))))+IKsqr(((((IkReal(-1.00000000000000))*(x597)*(x598)))+(((x595)*(x596)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(x595)*(x598)))+(((x596)*(x597)))+(((r02)*(sj1)*(sj2)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((r01)*(sj0)))+(((cj0)*(r00)))), ((((IkReal(-1.00000000000000))*(x597)*(x598)))+(((x595)*(x596)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(x595)*(x598)))+(((x596)*(x597)))+(((r02)*(sj1)*(sj2)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x599=((cj2)*(sj1));
IkReal x600=((cj0)*(r01));
IkReal x601=((cj1)*(sj2));
IkReal x602=((IkReal(1.00000000000000))*(r00)*(sj0));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((cj0)*(r00))));
evalcond[1]=((((x600)*(x601)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((IkReal(-1.00000000000000))*(x599)*(x602)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((x599)*(x600)))+(((r02)*(sj1)*(sj2)))+(((IkReal(-1.00000000000000))*(x601)*(x602))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x603=((IkReal(1.00000000000000))*(sj2));
IkReal x604=((px)*(sj0));
IkReal x605=((pz)*(sj2));
IkReal x606=((cj0)*(sj1));
IkReal x607=((cj1)*(sj2));
IkReal x608=((sj1)*(sj2));
IkReal x609=((cj2)*(sj1));
IkReal x610=((r00)*(sj0));
IkReal x611=((cj0)*(cj1)*(cj2));
IkReal x612=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.000787000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((r01)*(x611)))+(((IkReal(-1.00000000000000))*(x610)*(x612)))+(((x608)*(x610)))+(((IkReal(-1.00000000000000))*(r01)*(x603)*(x606)))+(((r02)*(x607)))+(((r02)*(x609))));
evalcond[3]=((IkReal(-0.318762000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((x604)*(x608)))+(((IkReal(-1.00000000000000))*(py)*(x603)*(x606)))+(((IkReal(-1.00000000000000))*(x604)*(x612)))+(((cj1)*(x605)))+(((py)*(x611)))+(((pz)*(x609)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(-0.0438310000000000))+(((sj1)*(x605)))+(((IkReal(-1.00000000000000))*(x604)*(x609)))+(((cj2)*(py)*(x606)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(cj1)*(x603)*(x604)))+(((IkReal(-1.00000000000000))*(pz)*(x612)))+(((IkReal(0.00982000000000000))*(sj2)))+(((cj0)*(py)*(x607))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x613=((cj2)*(sj1));
IkReal x614=((cj0)*(r01));
IkReal x615=((cj1)*(sj2));
IkReal x616=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x613)*(x614)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((x614)*(x615)))+(((IkReal(-1.00000000000000))*(x613)*(x616)))+(((IkReal(-1.00000000000000))*(x615)*(x616)))+(((r02)*(sj1)*(sj2))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))))+IKsqr(((((x613)*(x614)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((x614)*(x615)))+(((IkReal(-1.00000000000000))*(x613)*(x616)))+(((IkReal(-1.00000000000000))*(x615)*(x616)))+(((r02)*(sj1)*(sj2)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))), ((((x613)*(x614)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((x614)*(x615)))+(((IkReal(-1.00000000000000))*(x613)*(x616)))+(((IkReal(-1.00000000000000))*(x615)*(x616)))+(((r02)*(sj1)*(sj2)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x617=((cj2)*(sj1));
IkReal x618=((cj0)*(r01));
IkReal x619=((cj1)*(sj2));
IkReal x620=((IkReal(1.00000000000000))*(r00)*(sj0));
evalcond[0]=((((r01)*(sj0)))+(IKsin(j5))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(IKcos(j5))))+(((IkReal(-1.00000000000000))*(x617)*(x620)))+(((x617)*(x618)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(x619)*(x620)))+(((r02)*(sj1)*(sj2)))+(((x618)*(x619))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x621=((pz)*(sj1));
IkReal x622=((cj0)*(py));
IkReal x623=((IkReal(1.00000000000000))*(sj2));
IkReal x624=((cj1)*(cj2));
IkReal x625=((px)*(sj0));
IkReal x626=((cj2)*(sj1));
IkReal x627=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(0.190892000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.128657000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((pz)*(x627)))+(((IkReal(-1.00000000000000))*(sj1)*(x622)*(x623)))+(((IkReal(-0.521670000000000))*(sj2)))+(((sj1)*(sj2)*(x625)))+(((x622)*(x624)))+(((cj2)*(x621)))+(((IkReal(-1.00000000000000))*(x624)*(x625))));
evalcond[4]=((IkReal(-0.0438310000000000))+(((IkReal(-1.00000000000000))*(cj1)*(x623)*(x625)))+(((IkReal(-1.00000000000000))*(pz)*(x624)))+(((sj2)*(x621)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(0.00982000000000000))*(sj2)))+(((x622)*(x627)))+(((x622)*(x626)))+(((IkReal(-1.00000000000000))*(x625)*(x626))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x628=((sj1)*(sj2));
IkReal x629=((cj2)*(sj1));
IkReal x630=((cj1)*(sj2));
IkReal x631=((IkReal(1.00000000000000))*(r02));
IkReal x632=((cj1)*(cj2));
IkReal x633=((cj0)*(r01));
IkReal x634=((sj1)*(x633));
IkReal x635=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((IkReal(-1.00000000000000))*(x629)*(x631)))+(((IkReal(-1.00000000000000))*(x630)*(x631)))+(((x628)*(x633)))+(((IkReal(-1.00000000000000))*(x628)*(x635)))+(((r00)*(sj0)*(x632)))+(((IkReal(-1.00000000000000))*(x632)*(x633))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x629)*(x635)))+(((r02)*(x628)))+(((IkReal(-1.00000000000000))*(x631)*(x632)))+(((IkReal(-1.00000000000000))*(x630)*(x635)))+(((x629)*(x633)))+(((x630)*(x633))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x629)*(x631)))+(((IkReal(-1.00000000000000))*(x630)*(x631)))+(((x628)*(x633)))+(((IkReal(-1.00000000000000))*(x628)*(x635)))+(((r00)*(sj0)*(x632)))+(((IkReal(-1.00000000000000))*(x632)*(x633)))))+IKsqr(((((IkReal(-1.00000000000000))*(x629)*(x635)))+(((r02)*(x628)))+(((IkReal(-1.00000000000000))*(x631)*(x632)))+(((IkReal(-1.00000000000000))*(x630)*(x635)))+(((x629)*(x633)))+(((x630)*(x633)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x629)*(x631)))+(((IkReal(-1.00000000000000))*(x630)*(x631)))+(((x628)*(x633)))+(((IkReal(-1.00000000000000))*(x628)*(x635)))+(((r00)*(sj0)*(x632)))+(((IkReal(-1.00000000000000))*(x632)*(x633)))), ((((IkReal(-1.00000000000000))*(x629)*(x635)))+(((r02)*(x628)))+(((IkReal(-1.00000000000000))*(x631)*(x632)))+(((IkReal(-1.00000000000000))*(x630)*(x635)))+(((x629)*(x633)))+(((x630)*(x633)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x636=((r02)*(sj2));
IkReal x637=((IkReal(1.00000000000000))*(sj2));
IkReal x638=((r00)*(sj0));
IkReal x639=((cj1)*(cj2));
IkReal x640=((cj0)*(r01));
IkReal x641=((sj1)*(x640));
IkReal x642=((IkReal(1.00000000000000))*(cj2)*(x638));
evalcond[0]=((((cj1)*(sj2)*(x640)))+(((IkReal(-1.00000000000000))*(cj1)*(x637)*(x638)))+(((IkReal(-1.00000000000000))*(sj1)*(x642)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((cj2)*(x641)))+(((sj1)*(x636)))+(((IkReal(-1.00000000000000))*(r02)*(x639))));
evalcond[1]=((((x639)*(x640)))+(IKsin(j5))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x637)*(x641)))+(((sj1)*(sj2)*(x638)))+(((IkReal(-1.00000000000000))*(x638)*(x639)))+(((cj1)*(x636))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x643=((pz)*(sj1));
IkReal x644=((cj0)*(py));
IkReal x645=((IkReal(1.00000000000000))*(sj2));
IkReal x646=((cj1)*(cj2));
IkReal x647=((px)*(sj0));
IkReal x648=((cj2)*(sj1));
IkReal x649=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(-0.190892000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.127083000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((x644)*(x646)))+(((pz)*(x649)))+(((cj2)*(x643)))+(((IkReal(-1.00000000000000))*(sj1)*(x644)*(x645)))+(((sj1)*(sj2)*(x647)))+(((IkReal(-0.521670000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(x646)*(x647))));
evalcond[4]=((IkReal(-0.0438310000000000))+(((IkReal(-1.00000000000000))*(pz)*(x646)))+(((IkReal(-1.00000000000000))*(cj1)*(x645)*(x647)))+(((x644)*(x649)))+(((x644)*(x648)))+(((IkReal(0.521670000000000))*(cj2)))+(((sj2)*(x643)))+(((IkReal(-1.00000000000000))*(x647)*(x648)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x650=((cj2)*(sj1));
IkReal x651=((cj0)*(r01));
IkReal x652=((sj1)*(sj2));
IkReal x653=((cj1)*(cj2));
IkReal x654=((cj1)*(sj2));
IkReal x655=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((r02)*(x650)))+(((r02)*(x654)))+(((x651)*(x653)))+(((r00)*(sj0)*(x652)))+(((IkReal(-1.00000000000000))*(x651)*(x652)))+(((IkReal(-1.00000000000000))*(x653)*(x655))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r02)*(x653)))+(((r02)*(x652)))+(((x651)*(x654)))+(((IkReal(-1.00000000000000))*(x650)*(x655)))+(((x650)*(x651)))+(((IkReal(-1.00000000000000))*(x654)*(x655))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r02)*(x650)))+(((r02)*(x654)))+(((x651)*(x653)))+(((r00)*(sj0)*(x652)))+(((IkReal(-1.00000000000000))*(x651)*(x652)))+(((IkReal(-1.00000000000000))*(x653)*(x655)))))+IKsqr(((((IkReal(-1.00000000000000))*(r02)*(x653)))+(((r02)*(x652)))+(((x651)*(x654)))+(((IkReal(-1.00000000000000))*(x650)*(x655)))+(((x650)*(x651)))+(((IkReal(-1.00000000000000))*(x654)*(x655)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((r02)*(x650)))+(((r02)*(x654)))+(((x651)*(x653)))+(((r00)*(sj0)*(x652)))+(((IkReal(-1.00000000000000))*(x651)*(x652)))+(((IkReal(-1.00000000000000))*(x653)*(x655)))), ((((IkReal(-1.00000000000000))*(r02)*(x653)))+(((r02)*(x652)))+(((x651)*(x654)))+(((IkReal(-1.00000000000000))*(x650)*(x655)))+(((x650)*(x651)))+(((IkReal(-1.00000000000000))*(x654)*(x655)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x656=((r02)*(sj2));
IkReal x657=((IkReal(1.00000000000000))*(sj2));
IkReal x658=((r00)*(sj0));
IkReal x659=((cj1)*(cj2));
IkReal x660=((cj0)*(r01));
IkReal x661=((sj1)*(x660));
IkReal x662=((IkReal(1.00000000000000))*(cj2)*(x658));
evalcond[0]=((((cj2)*(x661)))+(((IkReal(-1.00000000000000))*(sj1)*(x662)))+(((IkReal(-1.00000000000000))*(r02)*(x659)))+(((sj1)*(x656)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((cj1)*(sj2)*(x660)))+(((IkReal(-1.00000000000000))*(cj1)*(x657)*(x658))));
evalcond[1]=((((cj1)*(x656)))+(((IkReal(-1.00000000000000))*(x657)*(x661)))+(((cj2)*(r02)*(sj1)))+(((sj1)*(sj2)*(x658)))+(((x659)*(x660)))+(((IkReal(-1.00000000000000))*(x658)*(x659)))+(((IkReal(-1.00000000000000))*(IKsin(j5)))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x663=((sj1)*(sj2));
IkReal x664=((cj2)*(sj1));
IkReal x665=((cj1)*(sj2));
IkReal x666=((IkReal(1.00000000000000))*(r02));
IkReal x667=((cj1)*(cj2));
IkReal x668=((cj0)*(r01));
IkReal x669=((sj1)*(x668));
IkReal x670=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x665)*(x666)))+(((r00)*(sj0)*(x667)))+(((IkReal(-1.00000000000000))*(x663)*(x670)))+(((x663)*(x668)))+(((IkReal(-1.00000000000000))*(x667)*(x668)))+(((IkReal(-1.00000000000000))*(x664)*(x666))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x665)*(x668)))+(((x664)*(x668)))+(((IkReal(-1.00000000000000))*(x664)*(x670)))+(((IkReal(-1.00000000000000))*(x665)*(x670)))+(((r02)*(x663)))+(((IkReal(-1.00000000000000))*(x666)*(x667))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x665)*(x666)))+(((r00)*(sj0)*(x667)))+(((IkReal(-1.00000000000000))*(x663)*(x670)))+(((x663)*(x668)))+(((IkReal(-1.00000000000000))*(x667)*(x668)))+(((IkReal(-1.00000000000000))*(x664)*(x666)))))))+IKsqr(((((x665)*(x668)))+(((x664)*(x668)))+(((IkReal(-1.00000000000000))*(x664)*(x670)))+(((IkReal(-1.00000000000000))*(x665)*(x670)))+(((r02)*(x663)))+(((IkReal(-1.00000000000000))*(x666)*(x667)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x665)*(x666)))+(((r00)*(sj0)*(x667)))+(((IkReal(-1.00000000000000))*(x663)*(x670)))+(((x663)*(x668)))+(((IkReal(-1.00000000000000))*(x667)*(x668)))+(((IkReal(-1.00000000000000))*(x664)*(x666)))))), ((((x665)*(x668)))+(((x664)*(x668)))+(((IkReal(-1.00000000000000))*(x664)*(x670)))+(((IkReal(-1.00000000000000))*(x665)*(x670)))+(((r02)*(x663)))+(((IkReal(-1.00000000000000))*(x666)*(x667)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x671=IKsin(j5);
IkReal x672=((r02)*(sj2));
IkReal x673=((IkReal(1.00000000000000))*(sj2));
IkReal x674=((r00)*(sj0));
IkReal x675=((IkReal(1.00000000000000))*(cj2));
IkReal x676=((cj0)*(r01)*(sj1));
IkReal x677=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x671)))+(((cj0)*(r00))));
evalcond[1]=((((cj2)*(x676)))+(((IkReal(-1.00000000000000))*(cj1)*(x673)*(x674)))+(((sj2)*(x677)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x675)))+(((sj1)*(x672)))+(((IkReal(-1.00000000000000))*(sj1)*(x674)*(x675))));
evalcond[2]=((((cj2)*(x677)))+(((sj1)*(sj2)*(x674)))+(((IkReal(-1.00000000000000))*(cj1)*(x674)*(x675)))+(((cj2)*(r02)*(sj1)))+(((sj4)*(x671)))+(((IkReal(-1.00000000000000))*(x673)*(x676)))+(((cj1)*(x672))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x678=((cj2)*(sj1));
IkReal x679=((cj0)*(r01));
IkReal x680=((cj1)*(sj2));
IkReal x681=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x680)*(x681)))+(((IkReal(-1.00000000000000))*(x678)*(x681)))+(((x679)*(x680)))+(((x678)*(x679)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((r02)*(sj1)*(sj2))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))))+IKsqr(((((IkReal(-1.00000000000000))*(x680)*(x681)))+(((IkReal(-1.00000000000000))*(x678)*(x681)))+(((x679)*(x680)))+(((x678)*(x679)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((r02)*(sj1)*(sj2)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))), ((((IkReal(-1.00000000000000))*(x680)*(x681)))+(((IkReal(-1.00000000000000))*(x678)*(x681)))+(((x679)*(x680)))+(((x678)*(x679)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((r02)*(sj1)*(sj2)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x682=IKsin(j5);
IkReal x683=((r02)*(sj2));
IkReal x684=((IkReal(1.00000000000000))*(sj2));
IkReal x685=((r00)*(sj0));
IkReal x686=((IkReal(1.00000000000000))*(cj2));
IkReal x687=((cj0)*(r01)*(sj1));
IkReal x688=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x682)))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj1)*(r02)*(x686)))+(((sj2)*(x688)))+(((IkReal(-1.00000000000000))*(sj1)*(x685)*(x686)))+(((IkReal(-1.00000000000000))*(cj1)*(x684)*(x685)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((sj1)*(x683)))+(((cj2)*(x687))));
evalcond[2]=((((cj1)*(x683)))+(((IkReal(-1.00000000000000))*(cj1)*(x685)*(x686)))+(((IkReal(-1.00000000000000))*(x684)*(x687)))+(((cj2)*(r02)*(sj1)))+(((sj1)*(sj2)*(x685)))+(((cj2)*(x688)))+(((sj4)*(x682))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x689=((cj1)*(cj2));
IkReal x690=((cj0)*(py));
IkReal x691=((px)*(sj0));
IkReal x692=((sj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.209759000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((x689)*(x690)))+(((x691)*(x692)))+(((IkReal(-1.00000000000000))*(x690)*(x692)))+(((cj2)*(pz)*(sj1)))+(((cj1)*(pz)*(sj2)))+(((IkReal(-1.00000000000000))*(x689)*(x691)))+(((IkReal(-0.521670000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x693=((IkReal(0.0215969237223081))*(cj0));
IkReal x694=((py)*(sj0));
IkReal x695=((IkReal(5.23847517560207))*(cj0));
IkReal x696=((IkReal(0.0215969237223081))*(sj2));
IkReal x697=((pz)*(sj1));
IkReal x698=((IkReal(5.23847517560207))*(sj2));
IkReal x699=((cj1)*(cj2)*(pz));
IkReal x700=((cj1)*(py)*(sj2));
IkReal x701=((cj1)*(px)*(sj0));
IkReal x702=((cj2)*(py)*(sj1));
IkReal x703=((cj2)*(px)*(sj0)*(sj1));
if( IKabs(((IkReal(0.00303911910620319))+(((IkReal(0.000212081790953065))*(sj2)))+(((x696)*(x697)))+(((IkReal(-0.0215969237223081))*(x703)))+(((IkReal(-1.00000000000000))*(px)*(x695)))+(((IkReal(-1.00000000000000))*(x696)*(x701)))+(((IkReal(-5.23847517560207))*(x694)))+(((IkReal(-0.0215969237223081))*(x699)))+(((x693)*(x702)))+(((x693)*(x700)))+(((IkReal(0.0112664671982164))*(cj2))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.737158226710723))+(((IkReal(-0.0514418262244123))*(sj2)))+(((IkReal(-2.73275534485633))*(cj2)))+(((IkReal(-1.00000000000000))*(x697)*(x698)))+(((IkReal(-1.00000000000000))*(x695)*(x700)))+(((IkReal(-1.00000000000000))*(x695)*(x702)))+(((IkReal(5.23847517560207))*(x703)))+(((IkReal(5.23847517560207))*(x699)))+(((IkReal(-1.00000000000000))*(px)*(x693)))+(((x698)*(x701)))+(((IkReal(-0.0215969237223081))*(x694))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.00303911910620319))+(((IkReal(0.000212081790953065))*(sj2)))+(((x696)*(x697)))+(((IkReal(-0.0215969237223081))*(x703)))+(((IkReal(-1.00000000000000))*(px)*(x695)))+(((IkReal(-1.00000000000000))*(x696)*(x701)))+(((IkReal(-5.23847517560207))*(x694)))+(((IkReal(-0.0215969237223081))*(x699)))+(((x693)*(x702)))+(((x693)*(x700)))+(((IkReal(0.0112664671982164))*(cj2)))))+IKsqr(((IkReal(-0.737158226710723))+(((IkReal(-0.0514418262244123))*(sj2)))+(((IkReal(-2.73275534485633))*(cj2)))+(((IkReal(-1.00000000000000))*(x697)*(x698)))+(((IkReal(-1.00000000000000))*(x695)*(x700)))+(((IkReal(-1.00000000000000))*(x695)*(x702)))+(((IkReal(5.23847517560207))*(x703)))+(((IkReal(5.23847517560207))*(x699)))+(((IkReal(-1.00000000000000))*(px)*(x693)))+(((x698)*(x701)))+(((IkReal(-0.0215969237223081))*(x694)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((IkReal(0.00303911910620319))+(((IkReal(0.000212081790953065))*(sj2)))+(((x696)*(x697)))+(((IkReal(-0.0215969237223081))*(x703)))+(((IkReal(-1.00000000000000))*(px)*(x695)))+(((IkReal(-1.00000000000000))*(x696)*(x701)))+(((IkReal(-5.23847517560207))*(x694)))+(((IkReal(-0.0215969237223081))*(x699)))+(((x693)*(x702)))+(((x693)*(x700)))+(((IkReal(0.0112664671982164))*(cj2)))), ((IkReal(-0.737158226710723))+(((IkReal(-0.0514418262244123))*(sj2)))+(((IkReal(-2.73275534485633))*(cj2)))+(((IkReal(-1.00000000000000))*(x697)*(x698)))+(((IkReal(-1.00000000000000))*(x695)*(x700)))+(((IkReal(-1.00000000000000))*(x695)*(x702)))+(((IkReal(5.23847517560207))*(x703)))+(((IkReal(5.23847517560207))*(x699)))+(((IkReal(-1.00000000000000))*(px)*(x693)))+(((x698)*(x701)))+(((IkReal(-0.0215969237223081))*(x694)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[2];
IkReal x704=IKcos(j4);
IkReal x705=IKsin(j4);
IkReal x706=((cj2)*(sj1));
IkReal x707=((cj0)*(py));
IkReal x708=((cj1)*(sj2));
IkReal x709=((IkReal(1.00000000000000))*(px)*(sj0));
evalcond[0]=((((IkReal(0.000787000000000000))*(x704)))+(((IkReal(0.190892000000000))*(x705)))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[1]=((IkReal(0.140720000000000))+(((IkReal(-1.00000000000000))*(x706)*(x709)))+(((x706)*(x707)))+(((x707)*(x708)))+(((pz)*(sj1)*(sj2)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(0.190892000000000))*(x704)))+(((IkReal(-1.00000000000000))*(x708)*(x709)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(pz)))+(((IkReal(-0.000787000000000000))*(x705)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
dummyeval[0]=cj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x710=((IkReal(1.00000000000000))*(sj0));
IkReal x711=((cj1)*(sj2));
IkReal x712=((sj1)*(sj2));
IkReal x713=((cj2)*(sj1));
IkReal x714=((cj0)*(r01));
IkReal x715=((cj0)*(py));
IkReal x716=((cj2)*(x715));
IkReal x717=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.000787000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r02)*(x717)))+(((x711)*(x714)))+(((IkReal(-1.00000000000000))*(r00)*(x710)*(x713)))+(((IkReal(-1.00000000000000))*(r00)*(x710)*(x711)))+(((r02)*(x712)))+(((x713)*(x714))));
evalcond[3]=((IkReal(-0.209759000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((px)*(sj0)*(x712)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(px)*(x710)))+(((IkReal(-1.00000000000000))*(x712)*(x715)))+(((IkReal(-0.521670000000000))*(sj2)))+(((pz)*(x713)))+(((pz)*(x711)))+(((cj1)*(x716))));
evalcond[4]=((IkReal(0.331612000000000))+(((IkReal(-1.00000000000000))*(pz)*(x717)))+(((x711)*(x715)))+(((IkReal(-1.00000000000000))*(px)*(x710)*(x711)))+(((IkReal(-1.00000000000000))*(px)*(x710)*(x713)))+(((IkReal(0.521670000000000))*(cj2)))+(((pz)*(x712)))+(((IkReal(0.00982000000000000))*(sj2)))+(((x713)*(x715))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x718=((cj0)*(r01));
IkReal x719=((sj1)*(sj2));
IkReal x720=((IkReal(1.00000000000000))*(cj1));
IkReal x721=((r00)*(sj0));
if( IKabs(((((r01)*(sj0)))+(((cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj1)*(cj2)*(x721)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x720)))+(((IkReal(-1.00000000000000))*(cj2)*(x718)*(x720)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((x718)*(x719)))+(((IkReal(-1.00000000000000))*(x719)*(x721))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r01)*(sj0)))+(((cj0)*(r00)))))+IKsqr(((((cj1)*(cj2)*(x721)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x720)))+(((IkReal(-1.00000000000000))*(cj2)*(x718)*(x720)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((x718)*(x719)))+(((IkReal(-1.00000000000000))*(x719)*(x721)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((r01)*(sj0)))+(((cj0)*(r00)))), ((((cj1)*(cj2)*(x721)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x720)))+(((IkReal(-1.00000000000000))*(cj2)*(x718)*(x720)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((x718)*(x719)))+(((IkReal(-1.00000000000000))*(x719)*(x721)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x722=((sj1)*(sj2));
IkReal x723=((cj0)*(r01));
IkReal x724=((r00)*(sj0));
IkReal x725=((cj1)*(cj2));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x724)*(x725)))+(((x723)*(x725)))+(((x722)*(x724)))+(((IkReal(-1.00000000000000))*(x722)*(x723)))+(IKcos(j5))+(((cj2)*(r02)*(sj1)))+(((cj1)*(r02)*(sj2))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x726=((IkReal(1.00000000000000))*(sj0));
IkReal x727=((cj1)*(sj2));
IkReal x728=((sj1)*(sj2));
IkReal x729=((cj2)*(sj1));
IkReal x730=((cj0)*(r01));
IkReal x731=((cj0)*(py));
IkReal x732=((cj2)*(x731));
IkReal x733=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.000787000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((x727)*(x730)))+(((IkReal(-1.00000000000000))*(r02)*(x733)))+(((x729)*(x730)))+(((r02)*(x728)))+(((IkReal(-1.00000000000000))*(r00)*(x726)*(x727)))+(((IkReal(-1.00000000000000))*(r00)*(x726)*(x729))));
evalcond[3]=((IkReal(-0.209759000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((px)*(sj0)*(x728)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(px)*(x726)))+(((IkReal(-1.00000000000000))*(x728)*(x731)))+(((pz)*(x729)))+(((pz)*(x727)))+(((IkReal(-0.521670000000000))*(sj2)))+(((cj1)*(x732))));
evalcond[4]=((IkReal(-0.0501720000000000))+(((x727)*(x731)))+(((x729)*(x731)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(px)*(x726)*(x727)))+(((IkReal(-1.00000000000000))*(px)*(x726)*(x729)))+(((pz)*(x728)))+(((IkReal(-1.00000000000000))*(pz)*(x733)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x734=((sj1)*(sj2));
IkReal x735=((cj0)*(r01));
IkReal x736=((r00)*(sj0));
IkReal x737=((IkReal(1.00000000000000))*(cj1));
if( IKabs(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x734)*(x736)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x737)))+(((IkReal(-1.00000000000000))*(cj2)*(x735)*(x737)))+(((x734)*(x735)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((cj1)*(cj2)*(x736))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))))+IKsqr(((((IkReal(-1.00000000000000))*(x734)*(x736)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x737)))+(((IkReal(-1.00000000000000))*(cj2)*(x735)*(x737)))+(((x734)*(x735)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((cj1)*(cj2)*(x736)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))), ((((IkReal(-1.00000000000000))*(x734)*(x736)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x737)))+(((IkReal(-1.00000000000000))*(cj2)*(x735)*(x737)))+(((x734)*(x735)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((cj1)*(cj2)*(x736)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x738=((sj1)*(sj2));
IkReal x739=((cj0)*(r01));
IkReal x740=((r00)*(sj0));
IkReal x741=((cj1)*(cj2));
evalcond[0]=((((r01)*(sj0)))+(IKsin(j5))+(((cj0)*(r00))));
evalcond[1]=((((x738)*(x740)))+(((x739)*(x741)))+(IKcos(j5))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x738)*(x739)))+(((IkReal(-1.00000000000000))*(x740)*(x741)))+(((cj1)*(r02)*(sj2))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x742=((pz)*(sj1));
IkReal x743=((cj0)*(py));
IkReal x744=((IkReal(1.00000000000000))*(sj2));
IkReal x745=((cj1)*(cj2));
IkReal x746=((px)*(sj0));
IkReal x747=((cj2)*(sj1));
IkReal x748=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(0.190892000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.209759000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x745)*(x746)))+(((cj2)*(x742)))+(((sj1)*(sj2)*(x746)))+(((IkReal(-1.00000000000000))*(sj1)*(x743)*(x744)))+(((x743)*(x745)))+(((IkReal(-0.521670000000000))*(sj2)))+(((pz)*(x748))));
evalcond[4]=((IkReal(0.139933000000000))+(((IkReal(-1.00000000000000))*(pz)*(x745)))+(((IkReal(-1.00000000000000))*(cj1)*(x744)*(x746)))+(((IkReal(0.521670000000000))*(cj2)))+(((x743)*(x747)))+(((x743)*(x748)))+(((sj2)*(x742)))+(((IkReal(-1.00000000000000))*(x746)*(x747)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x749=((IkReal(1.00000000000000))*(sj2));
IkReal x750=((r02)*(sj1));
IkReal x751=((cj0)*(r01));
IkReal x752=((r00)*(sj0));
IkReal x753=((cj1)*(r02));
IkReal x754=((IkReal(1.00000000000000))*(cj2));
if( IKabs(((((cj1)*(sj2)*(x752)))+(((IkReal(-1.00000000000000))*(cj1)*(x749)*(x751)))+(((cj2)*(x753)))+(((IkReal(-1.00000000000000))*(sj1)*(x751)*(x754)))+(((cj2)*(sj1)*(x752)))+(((IkReal(-1.00000000000000))*(x749)*(x750))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(cj1)*(x751)*(x754)))+(((IkReal(-1.00000000000000))*(x750)*(x754)))+(((sj1)*(sj2)*(x751)))+(((cj1)*(cj2)*(x752)))+(((IkReal(-1.00000000000000))*(x749)*(x753)))+(((IkReal(-1.00000000000000))*(sj1)*(x749)*(x752))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj1)*(sj2)*(x752)))+(((IkReal(-1.00000000000000))*(cj1)*(x749)*(x751)))+(((cj2)*(x753)))+(((IkReal(-1.00000000000000))*(sj1)*(x751)*(x754)))+(((cj2)*(sj1)*(x752)))+(((IkReal(-1.00000000000000))*(x749)*(x750)))))+IKsqr(((((IkReal(-1.00000000000000))*(cj1)*(x751)*(x754)))+(((IkReal(-1.00000000000000))*(x750)*(x754)))+(((sj1)*(sj2)*(x751)))+(((cj1)*(cj2)*(x752)))+(((IkReal(-1.00000000000000))*(x749)*(x753)))+(((IkReal(-1.00000000000000))*(sj1)*(x749)*(x752)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((cj1)*(sj2)*(x752)))+(((IkReal(-1.00000000000000))*(cj1)*(x749)*(x751)))+(((cj2)*(x753)))+(((IkReal(-1.00000000000000))*(sj1)*(x751)*(x754)))+(((cj2)*(sj1)*(x752)))+(((IkReal(-1.00000000000000))*(x749)*(x750)))), ((((IkReal(-1.00000000000000))*(cj1)*(x751)*(x754)))+(((IkReal(-1.00000000000000))*(x750)*(x754)))+(((sj1)*(sj2)*(x751)))+(((cj1)*(cj2)*(x752)))+(((IkReal(-1.00000000000000))*(x749)*(x753)))+(((IkReal(-1.00000000000000))*(sj1)*(x749)*(x752)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x755=((r02)*(sj2));
IkReal x756=((IkReal(1.00000000000000))*(sj2));
IkReal x757=((r00)*(sj0));
IkReal x758=((cj1)*(cj2));
IkReal x759=((cj0)*(r01));
IkReal x760=((sj1)*(x759));
IkReal x761=((IkReal(1.00000000000000))*(cj2)*(x757));
evalcond[0]=((((IkReal(-1.00000000000000))*(sj1)*(x761)))+(((cj1)*(sj2)*(x759)))+(((cj2)*(x760)))+(((IkReal(-1.00000000000000))*(r02)*(x758)))+(IKsin(j5))+(((sj1)*(x755)))+(((IkReal(-1.00000000000000))*(cj1)*(x756)*(x757))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x756)*(x760)))+(((cj1)*(x755)))+(((x758)*(x759)))+(((sj1)*(sj2)*(x757)))+(IKcos(j5))+(((IkReal(-1.00000000000000))*(x757)*(x758)))+(((cj2)*(r02)*(sj1))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x762=((pz)*(sj1));
IkReal x763=((cj0)*(py));
IkReal x764=((IkReal(1.00000000000000))*(sj2));
IkReal x765=((cj1)*(cj2));
IkReal x766=((px)*(sj0));
IkReal x767=((cj2)*(sj1));
IkReal x768=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(-0.190892000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.209759000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((cj2)*(x762)))+(((sj1)*(sj2)*(x766)))+(((x763)*(x765)))+(((IkReal(-1.00000000000000))*(x765)*(x766)))+(((pz)*(x768)))+(((IkReal(-0.521670000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(sj1)*(x763)*(x764))));
evalcond[4]=((IkReal(0.141507000000000))+(((sj2)*(x762)))+(((x763)*(x768)))+(((x763)*(x767)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(pz)*(x765)))+(((IkReal(-1.00000000000000))*(x766)*(x767)))+(((IkReal(-1.00000000000000))*(cj1)*(x764)*(x766)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x769=((cj2)*(sj1));
IkReal x770=((IkReal(1.00000000000000))*(r02));
IkReal x771=((cj0)*(r01));
IkReal x772=((sj1)*(sj2));
IkReal x773=((cj1)*(cj2));
IkReal x774=((cj1)*(sj2));
IkReal x775=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((x771)*(x774)))+(((IkReal(-1.00000000000000))*(x774)*(x775)))+(((x769)*(x771)))+(((IkReal(-1.00000000000000))*(x769)*(x775)))+(((IkReal(-1.00000000000000))*(x770)*(x773)))+(((r02)*(x772))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x771)*(x773)))+(((x771)*(x772)))+(((r00)*(sj0)*(x773)))+(((IkReal(-1.00000000000000))*(x769)*(x770)))+(((IkReal(-1.00000000000000))*(x772)*(x775)))+(((IkReal(-1.00000000000000))*(x770)*(x774))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((x771)*(x774)))+(((IkReal(-1.00000000000000))*(x774)*(x775)))+(((x769)*(x771)))+(((IkReal(-1.00000000000000))*(x769)*(x775)))+(((IkReal(-1.00000000000000))*(x770)*(x773)))+(((r02)*(x772)))))+IKsqr(((((IkReal(-1.00000000000000))*(x771)*(x773)))+(((x771)*(x772)))+(((r00)*(sj0)*(x773)))+(((IkReal(-1.00000000000000))*(x769)*(x770)))+(((IkReal(-1.00000000000000))*(x772)*(x775)))+(((IkReal(-1.00000000000000))*(x770)*(x774)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((x771)*(x774)))+(((IkReal(-1.00000000000000))*(x774)*(x775)))+(((x769)*(x771)))+(((IkReal(-1.00000000000000))*(x769)*(x775)))+(((IkReal(-1.00000000000000))*(x770)*(x773)))+(((r02)*(x772)))), ((((IkReal(-1.00000000000000))*(x771)*(x773)))+(((x771)*(x772)))+(((r00)*(sj0)*(x773)))+(((IkReal(-1.00000000000000))*(x769)*(x770)))+(((IkReal(-1.00000000000000))*(x772)*(x775)))+(((IkReal(-1.00000000000000))*(x770)*(x774)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x776=((r02)*(sj2));
IkReal x777=((IkReal(1.00000000000000))*(sj2));
IkReal x778=((r00)*(sj0));
IkReal x779=((cj1)*(cj2));
IkReal x780=((cj0)*(r01));
IkReal x781=((sj1)*(x780));
IkReal x782=((IkReal(1.00000000000000))*(cj2)*(x778));
evalcond[0]=((((IkReal(-1.00000000000000))*(r02)*(x779)))+(((sj1)*(x776)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((IkReal(-1.00000000000000))*(sj1)*(x782)))+(((cj2)*(x781)))+(((cj1)*(sj2)*(x780)))+(((IkReal(-1.00000000000000))*(cj1)*(x777)*(x778))));
evalcond[1]=((((cj1)*(x776)))+(((sj1)*(sj2)*(x778)))+(((IkReal(-1.00000000000000))*(x777)*(x781)))+(((x779)*(x780)))+(((IkReal(-1.00000000000000))*(x778)*(x779)))+(IKcos(j5))+(((cj2)*(r02)*(sj1))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x783=((IkReal(1.00000000000000))*(sj2));
IkReal x784=((r02)*(sj1));
IkReal x785=((cj0)*(r01));
IkReal x786=((cj1)*(r02));
IkReal x787=((r00)*(sj0));
IkReal x788=((IkReal(1.00000000000000))*(cj2));
if( IKabs(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((cj2)*(sj1)*(x787)))+(((IkReal(-1.00000000000000))*(sj1)*(x785)*(x788)))+(((IkReal(-1.00000000000000))*(cj1)*(x783)*(x785)))+(((cj2)*(x786)))+(((cj1)*(sj2)*(x787)))+(((IkReal(-1.00000000000000))*(x783)*(x784))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((sj1)*(sj2)*(x785)))+(((IkReal(-1.00000000000000))*(cj1)*(x785)*(x788)))+(((IkReal(-1.00000000000000))*(sj1)*(x783)*(x787)))+(((IkReal(-1.00000000000000))*(x784)*(x788)))+(((cj1)*(cj2)*(x787)))+(((IkReal(-1.00000000000000))*(x783)*(x786))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((cj2)*(sj1)*(x787)))+(((IkReal(-1.00000000000000))*(sj1)*(x785)*(x788)))+(((IkReal(-1.00000000000000))*(cj1)*(x783)*(x785)))+(((cj2)*(x786)))+(((cj1)*(sj2)*(x787)))+(((IkReal(-1.00000000000000))*(x783)*(x784)))))))+IKsqr(((((sj1)*(sj2)*(x785)))+(((IkReal(-1.00000000000000))*(cj1)*(x785)*(x788)))+(((IkReal(-1.00000000000000))*(sj1)*(x783)*(x787)))+(((IkReal(-1.00000000000000))*(x784)*(x788)))+(((cj1)*(cj2)*(x787)))+(((IkReal(-1.00000000000000))*(x783)*(x786)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((cj2)*(sj1)*(x787)))+(((IkReal(-1.00000000000000))*(sj1)*(x785)*(x788)))+(((IkReal(-1.00000000000000))*(cj1)*(x783)*(x785)))+(((cj2)*(x786)))+(((cj1)*(sj2)*(x787)))+(((IkReal(-1.00000000000000))*(x783)*(x784)))))), ((((sj1)*(sj2)*(x785)))+(((IkReal(-1.00000000000000))*(cj1)*(x785)*(x788)))+(((IkReal(-1.00000000000000))*(sj1)*(x783)*(x787)))+(((IkReal(-1.00000000000000))*(x784)*(x788)))+(((cj1)*(cj2)*(x787)))+(((IkReal(-1.00000000000000))*(x783)*(x786)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x789=IKsin(j5);
IkReal x790=((r02)*(sj2));
IkReal x791=((IkReal(1.00000000000000))*(sj2));
IkReal x792=((r00)*(sj0));
IkReal x793=((IkReal(1.00000000000000))*(cj2));
IkReal x794=((cj0)*(r01)*(sj1));
IkReal x795=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x789)))+(((cj0)*(r00))));
evalcond[1]=((((sj1)*(x790)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x793)))+(((sj4)*(x789)))+(((IkReal(-1.00000000000000))*(cj1)*(x791)*(x792)))+(((IkReal(-1.00000000000000))*(sj1)*(x792)*(x793)))+(((cj2)*(x794)))+(((sj2)*(x795))));
evalcond[2]=((((sj1)*(sj2)*(x792)))+(((cj1)*(x790)))+(((IkReal(-1.00000000000000))*(x791)*(x794)))+(IKcos(j5))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(x792)*(x793)))+(((cj2)*(x795))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x796=((cj0)*(r01));
IkReal x797=((sj1)*(sj2));
IkReal x798=((IkReal(1.00000000000000))*(cj1));
IkReal x799=((r00)*(sj0));
if( IKabs(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x796)*(x797)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x798)))+(((IkReal(-1.00000000000000))*(x797)*(x799)))+(((cj1)*(cj2)*(x799)))+(((IkReal(-1.00000000000000))*(cj2)*(x796)*(x798))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))))+IKsqr(((((x796)*(x797)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x798)))+(((IkReal(-1.00000000000000))*(x797)*(x799)))+(((cj1)*(cj2)*(x799)))+(((IkReal(-1.00000000000000))*(cj2)*(x796)*(x798)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))), ((((x796)*(x797)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x798)))+(((IkReal(-1.00000000000000))*(x797)*(x799)))+(((cj1)*(cj2)*(x799)))+(((IkReal(-1.00000000000000))*(cj2)*(x796)*(x798)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x800=IKsin(j5);
IkReal x801=((r02)*(sj2));
IkReal x802=((IkReal(1.00000000000000))*(sj2));
IkReal x803=((r00)*(sj0));
IkReal x804=((IkReal(1.00000000000000))*(cj2));
IkReal x805=((cj0)*(r01)*(sj1));
IkReal x806=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x800)))+(((cj0)*(r00))));
evalcond[1]=((((sj2)*(x806)))+(((IkReal(-1.00000000000000))*(cj1)*(x802)*(x803)))+(((cj2)*(x805)))+(((IkReal(-1.00000000000000))*(sj1)*(x803)*(x804)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x804)))+(((sj4)*(x800)))+(((sj1)*(x801))));
evalcond[2]=((((cj1)*(x801)))+(((cj2)*(x806)))+(IKcos(j5))+(((cj2)*(r02)*(sj1)))+(((sj1)*(sj2)*(x803)))+(((IkReal(-1.00000000000000))*(cj1)*(x803)*(x804)))+(((IkReal(-1.00000000000000))*(x802)*(x805))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x807=((cj1)*(cj2));
IkReal x808=((cj0)*(py));
IkReal x809=((px)*(sj0));
IkReal x810=((sj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.312421000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((x809)*(x810)))+(((IkReal(-1.00000000000000))*(x808)*(x810)))+(((cj2)*(pz)*(sj1)))+(((cj1)*(pz)*(sj2)))+(((IkReal(-1.00000000000000))*(x807)*(x809)))+(((IkReal(-0.521670000000000))*(sj2)))+(((x807)*(x808))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  )
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x811=((IkReal(0.0215969237223081))*(cj0));
IkReal x812=((py)*(sj0));
IkReal x813=((IkReal(5.23847517560207))*(cj0));
IkReal x814=((IkReal(0.0215969237223081))*(cj1));
IkReal x815=((cj2)*(pz));
IkReal x816=((IkReal(5.23847517560207))*(cj1));
IkReal x817=((pz)*(sj1)*(sj2));
IkReal x818=((cj1)*(py)*(sj2));
IkReal x819=((px)*(sj0)*(sj2));
IkReal x820=((cj2)*(py)*(sj1));
IkReal x821=((cj2)*(px)*(sj0)*(sj1));
if( IKabs(((IkReal(0.00271516525036857))+(((IkReal(-0.000212081790953065))*(sj2)))+(((IkReal(-5.23847517560207))*(x812)))+(((IkReal(-0.0112664671982164))*(cj2)))+(((IkReal(-0.0215969237223081))*(x817)))+(((IkReal(-1.00000000000000))*(x811)*(x818)))+(((IkReal(-1.00000000000000))*(x811)*(x820)))+(((x814)*(x815)))+(((x814)*(x819)))+(((IkReal(-1.00000000000000))*(px)*(x813)))+(((IkReal(0.0215969237223081))*(x821))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.658581099076692))+(((IkReal(-1.00000000000000))*(x816)*(x819)))+(((IkReal(-0.0215969237223081))*(x812)))+(((x813)*(x818)))+(((IkReal(-1.00000000000000))*(x815)*(x816)))+(((IkReal(-5.23847517560207))*(x821)))+(((IkReal(5.23847517560207))*(x817)))+(((x813)*(x820)))+(((IkReal(0.0514418262244123))*(sj2)))+(((IkReal(2.73275534485633))*(cj2)))+(((IkReal(-1.00000000000000))*(px)*(x811))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(0.00271516525036857))+(((IkReal(-0.000212081790953065))*(sj2)))+(((IkReal(-5.23847517560207))*(x812)))+(((IkReal(-0.0112664671982164))*(cj2)))+(((IkReal(-0.0215969237223081))*(x817)))+(((IkReal(-1.00000000000000))*(x811)*(x818)))+(((IkReal(-1.00000000000000))*(x811)*(x820)))+(((x814)*(x815)))+(((x814)*(x819)))+(((IkReal(-1.00000000000000))*(px)*(x813)))+(((IkReal(0.0215969237223081))*(x821)))))+IKsqr(((IkReal(-0.658581099076692))+(((IkReal(-1.00000000000000))*(x816)*(x819)))+(((IkReal(-0.0215969237223081))*(x812)))+(((x813)*(x818)))+(((IkReal(-1.00000000000000))*(x815)*(x816)))+(((IkReal(-5.23847517560207))*(x821)))+(((IkReal(5.23847517560207))*(x817)))+(((x813)*(x820)))+(((IkReal(0.0514418262244123))*(sj2)))+(((IkReal(2.73275534485633))*(cj2)))+(((IkReal(-1.00000000000000))*(px)*(x811)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((IkReal(0.00271516525036857))+(((IkReal(-0.000212081790953065))*(sj2)))+(((IkReal(-5.23847517560207))*(x812)))+(((IkReal(-0.0112664671982164))*(cj2)))+(((IkReal(-0.0215969237223081))*(x817)))+(((IkReal(-1.00000000000000))*(x811)*(x818)))+(((IkReal(-1.00000000000000))*(x811)*(x820)))+(((x814)*(x815)))+(((x814)*(x819)))+(((IkReal(-1.00000000000000))*(px)*(x813)))+(((IkReal(0.0215969237223081))*(x821)))), ((IkReal(-0.658581099076692))+(((IkReal(-1.00000000000000))*(x816)*(x819)))+(((IkReal(-0.0215969237223081))*(x812)))+(((x813)*(x818)))+(((IkReal(-1.00000000000000))*(x815)*(x816)))+(((IkReal(-5.23847517560207))*(x821)))+(((IkReal(5.23847517560207))*(x817)))+(((x813)*(x820)))+(((IkReal(0.0514418262244123))*(sj2)))+(((IkReal(2.73275534485633))*(cj2)))+(((IkReal(-1.00000000000000))*(px)*(x811)))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[2];
IkReal x822=IKsin(j4);
IkReal x823=IKcos(j4);
IkReal x824=((cj0)*(py));
IkReal x825=((cj2)*(sj1));
IkReal x826=((cj1)*(sj2));
IkReal x827=((IkReal(1.00000000000000))*(px)*(sj0));
evalcond[0]=((((IkReal(0.000787000000000000))*(x823)))+(((IkReal(0.190892000000000))*(x822)))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[1]=((IkReal(-0.125720000000000))+(((x824)*(x826)))+(((x824)*(x825)))+(((pz)*(sj1)*(sj2)))+(((IkReal(0.000787000000000000))*(x822)))+(((IkReal(-1.00000000000000))*(x826)*(x827)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(pz)))+(((IkReal(-0.190892000000000))*(x823)))+(((IkReal(-1.00000000000000))*(x825)*(x827)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
dummyeval[0]=cj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x828=((IkReal(1.00000000000000))*(sj0));
IkReal x829=((cj1)*(sj2));
IkReal x830=((sj1)*(sj2));
IkReal x831=((cj2)*(sj1));
IkReal x832=((cj0)*(r01));
IkReal x833=((cj0)*(py));
IkReal x834=((cj2)*(x833));
IkReal x835=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.000787000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((x831)*(x832)))+(((IkReal(-1.00000000000000))*(r00)*(x828)*(x829)))+(((IkReal(-1.00000000000000))*(r02)*(x835)))+(((IkReal(-1.00000000000000))*(r00)*(x828)*(x831)))+(((r02)*(x830)))+(((x829)*(x832))));
evalcond[3]=((IkReal(-0.312421000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((pz)*(x829)))+(((pz)*(x831)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(px)*(x828)))+(((IkReal(-1.00000000000000))*(x830)*(x833)))+(((IkReal(-0.521670000000000))*(sj2)))+(((px)*(sj0)*(x830)))+(((cj1)*(x834))));
evalcond[4]=((IkReal(-0.316612000000000))+(((x831)*(x833)))+(((IkReal(-1.00000000000000))*(pz)*(x835)))+(((IkReal(-1.00000000000000))*(px)*(x828)*(x831)))+(((pz)*(x830)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(px)*(x828)*(x829)))+(((x829)*(x833)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x836=((sj1)*(sj2));
IkReal x837=((cj0)*(r01));
IkReal x838=((r00)*(sj0));
IkReal x839=((cj1)*(cj2));
if( IKabs(((((r01)*(sj0)))+(((cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x836)*(x838)))+(((x837)*(x839)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x836)*(x837)))+(((IkReal(-1.00000000000000))*(x838)*(x839)))+(((cj1)*(r02)*(sj2))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r01)*(sj0)))+(((cj0)*(r00)))))+IKsqr(((((x836)*(x838)))+(((x837)*(x839)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x836)*(x837)))+(((IkReal(-1.00000000000000))*(x838)*(x839)))+(((cj1)*(r02)*(sj2)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((r01)*(sj0)))+(((cj0)*(r00)))), ((((x836)*(x838)))+(((x837)*(x839)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x836)*(x837)))+(((IkReal(-1.00000000000000))*(x838)*(x839)))+(((cj1)*(r02)*(sj2)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x840=((sj1)*(sj2));
IkReal x841=((cj0)*(r01));
IkReal x842=((r00)*(sj0));
IkReal x843=((cj1)*(cj2));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x842)*(x843)))+(((x840)*(x842)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((IkReal(-1.00000000000000))*(x840)*(x841)))+(((cj2)*(r02)*(sj1)))+(((x841)*(x843)))+(((cj1)*(r02)*(sj2))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x844=((IkReal(1.00000000000000))*(sj0));
IkReal x845=((cj1)*(sj2));
IkReal x846=((sj1)*(sj2));
IkReal x847=((cj2)*(sj1));
IkReal x848=((cj0)*(r01));
IkReal x849=((cj0)*(py));
IkReal x850=((cj2)*(x849));
IkReal x851=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.000787000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((r02)*(x846)))+(((IkReal(-1.00000000000000))*(r02)*(x851)))+(((x845)*(x848)))+(((x847)*(x848)))+(((IkReal(-1.00000000000000))*(r00)*(x844)*(x847)))+(((IkReal(-1.00000000000000))*(r00)*(x844)*(x845))));
evalcond[3]=((IkReal(-0.312421000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(px)*(x844)))+(((IkReal(-1.00000000000000))*(x846)*(x849)))+(((cj1)*(x850)))+(((pz)*(x847)))+(((pz)*(x845)))+(((IkReal(-0.521670000000000))*(sj2)))+(((px)*(sj0)*(x846))));
evalcond[4]=((IkReal(0.0651720000000000))+(((IkReal(-1.00000000000000))*(px)*(x844)*(x845)))+(((IkReal(-1.00000000000000))*(px)*(x844)*(x847)))+(((IkReal(0.521670000000000))*(cj2)))+(((pz)*(x846)))+(((x845)*(x849)))+(((IkReal(-1.00000000000000))*(pz)*(x851)))+(((x847)*(x849)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x852=((r00)*(sj0));
IkReal x853=((cj1)*(cj2));
IkReal x854=((sj1)*(sj2));
IkReal x855=((cj0)*(r01));
if( IKabs(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x852)*(x853)))+(((IkReal(-1.00000000000000))*(x854)*(x855)))+(((cj2)*(r02)*(sj1)))+(((x852)*(x854)))+(((x853)*(x855)))+(((cj1)*(r02)*(sj2))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))))+IKsqr(((((IkReal(-1.00000000000000))*(x852)*(x853)))+(((IkReal(-1.00000000000000))*(x854)*(x855)))+(((cj2)*(r02)*(sj1)))+(((x852)*(x854)))+(((x853)*(x855)))+(((cj1)*(r02)*(sj2)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))), ((((IkReal(-1.00000000000000))*(x852)*(x853)))+(((IkReal(-1.00000000000000))*(x854)*(x855)))+(((cj2)*(r02)*(sj1)))+(((x852)*(x854)))+(((x853)*(x855)))+(((cj1)*(r02)*(sj2)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x856=((sj1)*(sj2));
IkReal x857=((cj0)*(r01));
IkReal x858=((r00)*(sj0));
IkReal x859=((cj1)*(cj2));
evalcond[0]=((((r01)*(sj0)))+(IKsin(j5))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(IKcos(j5))))+(((IkReal(-1.00000000000000))*(x856)*(x857)))+(((x856)*(x858)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x858)*(x859)))+(((x857)*(x859)))+(((cj1)*(r02)*(sj2))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x860=((pz)*(sj1));
IkReal x861=((cj0)*(py));
IkReal x862=((IkReal(1.00000000000000))*(sj2));
IkReal x863=((cj1)*(cj2));
IkReal x864=((px)*(sj0));
IkReal x865=((cj2)*(sj1));
IkReal x866=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(0.190892000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.312421000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((cj2)*(x860)))+(((IkReal(-1.00000000000000))*(sj1)*(x861)*(x862)))+(((sj1)*(sj2)*(x864)))+(((x861)*(x863)))+(((pz)*(x866)))+(((IkReal(-1.00000000000000))*(x863)*(x864)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(-0.124933000000000))+(((sj2)*(x860)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(pz)*(x863)))+(((IkReal(-1.00000000000000))*(cj1)*(x862)*(x864)))+(((x861)*(x866)))+(((x861)*(x865)))+(((IkReal(-1.00000000000000))*(x864)*(x865)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x867=((r02)*(sj2));
IkReal x868=((IkReal(1.00000000000000))*(sj2));
IkReal x869=((r00)*(sj0));
IkReal x870=((cj1)*(cj2));
IkReal x871=((cj0)*(r01));
IkReal x872=((sj1)*(x871));
IkReal x873=((IkReal(1.00000000000000))*(cj2)*(x869));
if( IKabs(((((cj1)*(sj2)*(x871)))+(((cj2)*(x872)))+(((IkReal(-1.00000000000000))*(sj1)*(x873)))+(((sj1)*(x867)))+(((IkReal(-1.00000000000000))*(r02)*(x870)))+(((IkReal(-1.00000000000000))*(cj1)*(x868)*(x869))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x870)*(x871)))+(((IkReal(-1.00000000000000))*(x868)*(x872)))+(((IkReal(-1.00000000000000))*(x869)*(x870)))+(((sj1)*(sj2)*(x869)))+(((cj1)*(x867)))+(((cj2)*(r02)*(sj1))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj1)*(sj2)*(x871)))+(((cj2)*(x872)))+(((IkReal(-1.00000000000000))*(sj1)*(x873)))+(((sj1)*(x867)))+(((IkReal(-1.00000000000000))*(r02)*(x870)))+(((IkReal(-1.00000000000000))*(cj1)*(x868)*(x869)))))+IKsqr(((((x870)*(x871)))+(((IkReal(-1.00000000000000))*(x868)*(x872)))+(((IkReal(-1.00000000000000))*(x869)*(x870)))+(((sj1)*(sj2)*(x869)))+(((cj1)*(x867)))+(((cj2)*(r02)*(sj1)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((cj1)*(sj2)*(x871)))+(((cj2)*(x872)))+(((IkReal(-1.00000000000000))*(sj1)*(x873)))+(((sj1)*(x867)))+(((IkReal(-1.00000000000000))*(r02)*(x870)))+(((IkReal(-1.00000000000000))*(cj1)*(x868)*(x869)))), ((((x870)*(x871)))+(((IkReal(-1.00000000000000))*(x868)*(x872)))+(((IkReal(-1.00000000000000))*(x869)*(x870)))+(((sj1)*(sj2)*(x869)))+(((cj1)*(x867)))+(((cj2)*(r02)*(sj1)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x874=((r02)*(sj2));
IkReal x875=((IkReal(1.00000000000000))*(sj2));
IkReal x876=((r00)*(sj0));
IkReal x877=((cj1)*(cj2));
IkReal x878=((cj0)*(r01));
IkReal x879=((sj1)*(x878));
IkReal x880=((IkReal(1.00000000000000))*(cj2)*(x876));
evalcond[0]=((((cj1)*(sj2)*(x878)))+(((cj2)*(x879)))+(((IkReal(-1.00000000000000))*(cj1)*(x875)*(x876)))+(((sj1)*(x874)))+(((IkReal(-1.00000000000000))*(r02)*(x877)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((IkReal(-1.00000000000000))*(sj1)*(x880))));
evalcond[1]=((((IkReal(-1.00000000000000))*(IKcos(j5))))+(((sj1)*(sj2)*(x876)))+(((cj1)*(x874)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x875)*(x879)))+(((IkReal(-1.00000000000000))*(x876)*(x877)))+(((x877)*(x878))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x881=((pz)*(sj1));
IkReal x882=((cj0)*(py));
IkReal x883=((IkReal(1.00000000000000))*(sj2));
IkReal x884=((cj1)*(cj2));
IkReal x885=((px)*(sj0));
IkReal x886=((cj2)*(sj1));
IkReal x887=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(-0.190892000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.312421000000000))+(((IkReal(-1.00000000000000))*(x884)*(x885)))+(((IkReal(0.00982000000000000))*(cj2)))+(((cj2)*(x881)))+(((pz)*(x887)))+(((x882)*(x884)))+(((sj1)*(sj2)*(x885)))+(((IkReal(-1.00000000000000))*(sj1)*(x882)*(x883)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(-0.126507000000000))+(((x882)*(x887)))+(((x882)*(x886)))+(((IkReal(-1.00000000000000))*(x885)*(x886)))+(((IkReal(0.521670000000000))*(cj2)))+(((sj2)*(x881)))+(((IkReal(-1.00000000000000))*(cj1)*(x883)*(x885)))+(((IkReal(-1.00000000000000))*(pz)*(x884)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x888=((IkReal(1.00000000000000))*(sj2));
IkReal x889=((r02)*(sj1));
IkReal x890=((cj0)*(r01));
IkReal x891=((IkReal(1.00000000000000))*(cj2));
IkReal x892=((cj1)*(r02));
IkReal x893=((cj1)*(r00)*(sj0));
IkReal x894=((r00)*(sj0)*(sj1));
if( IKabs(((((cj2)*(x892)))+(((cj2)*(x894)))+(((IkReal(-1.00000000000000))*(cj1)*(x888)*(x890)))+(((sj2)*(x893)))+(((IkReal(-1.00000000000000))*(x888)*(x889)))+(((IkReal(-1.00000000000000))*(sj1)*(x890)*(x891))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj2)*(x889)))+(((sj2)*(x894)))+(((sj2)*(x892)))+(((cj1)*(cj2)*(x890)))+(((IkReal(-1.00000000000000))*(x891)*(x893)))+(((IkReal(-1.00000000000000))*(sj1)*(x888)*(x890))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj2)*(x892)))+(((cj2)*(x894)))+(((IkReal(-1.00000000000000))*(cj1)*(x888)*(x890)))+(((sj2)*(x893)))+(((IkReal(-1.00000000000000))*(x888)*(x889)))+(((IkReal(-1.00000000000000))*(sj1)*(x890)*(x891)))))+IKsqr(((((cj2)*(x889)))+(((sj2)*(x894)))+(((sj2)*(x892)))+(((cj1)*(cj2)*(x890)))+(((IkReal(-1.00000000000000))*(x891)*(x893)))+(((IkReal(-1.00000000000000))*(sj1)*(x888)*(x890)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((cj2)*(x892)))+(((cj2)*(x894)))+(((IkReal(-1.00000000000000))*(cj1)*(x888)*(x890)))+(((sj2)*(x893)))+(((IkReal(-1.00000000000000))*(x888)*(x889)))+(((IkReal(-1.00000000000000))*(sj1)*(x890)*(x891)))), ((((cj2)*(x889)))+(((sj2)*(x894)))+(((sj2)*(x892)))+(((cj1)*(cj2)*(x890)))+(((IkReal(-1.00000000000000))*(x891)*(x893)))+(((IkReal(-1.00000000000000))*(sj1)*(x888)*(x890)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x895=((r02)*(sj2));
IkReal x896=((IkReal(1.00000000000000))*(sj2));
IkReal x897=((r00)*(sj0));
IkReal x898=((cj1)*(cj2));
IkReal x899=((cj0)*(r01));
IkReal x900=((sj1)*(x899));
IkReal x901=((IkReal(1.00000000000000))*(cj2)*(x897));
evalcond[0]=((((IkReal(-1.00000000000000))*(r02)*(x898)))+(((cj1)*(sj2)*(x899)))+(((sj1)*(x895)))+(((cj2)*(x900)))+(((IkReal(-1.00000000000000))*(sj1)*(x901)))+(IKsin(j5))+(((IkReal(-1.00000000000000))*(cj1)*(x896)*(x897))));
evalcond[1]=((((x898)*(x899)))+(((IkReal(-1.00000000000000))*(x896)*(x900)))+(((sj1)*(sj2)*(x897)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x897)*(x898)))+(((cj1)*(x895))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x902=((r02)*(sj2));
IkReal x903=((IkReal(1.00000000000000))*(sj2));
IkReal x904=((r00)*(sj0));
IkReal x905=((cj1)*(cj2));
IkReal x906=((cj0)*(r01));
IkReal x907=((sj1)*(x906));
IkReal x908=((IkReal(1.00000000000000))*(cj2)*(x904));
if( IKabs(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((cj1)*(sj2)*(x906)))+(((IkReal(-1.00000000000000))*(r02)*(x905)))+(((cj2)*(x907)))+(((IkReal(-1.00000000000000))*(sj1)*(x908)))+(((IkReal(-1.00000000000000))*(cj1)*(x903)*(x904)))+(((sj1)*(x902))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj1)*(x902)))+(((IkReal(-1.00000000000000))*(x903)*(x907)))+(((x905)*(x906)))+(((sj1)*(sj2)*(x904)))+(((IkReal(-1.00000000000000))*(x904)*(x905)))+(((cj2)*(r02)*(sj1))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((cj1)*(sj2)*(x906)))+(((IkReal(-1.00000000000000))*(r02)*(x905)))+(((cj2)*(x907)))+(((IkReal(-1.00000000000000))*(sj1)*(x908)))+(((IkReal(-1.00000000000000))*(cj1)*(x903)*(x904)))+(((sj1)*(x902)))))))+IKsqr(((((cj1)*(x902)))+(((IkReal(-1.00000000000000))*(x903)*(x907)))+(((x905)*(x906)))+(((sj1)*(sj2)*(x904)))+(((IkReal(-1.00000000000000))*(x904)*(x905)))+(((cj2)*(r02)*(sj1)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((cj1)*(sj2)*(x906)))+(((IkReal(-1.00000000000000))*(r02)*(x905)))+(((cj2)*(x907)))+(((IkReal(-1.00000000000000))*(sj1)*(x908)))+(((IkReal(-1.00000000000000))*(cj1)*(x903)*(x904)))+(((sj1)*(x902)))))), ((((cj1)*(x902)))+(((IkReal(-1.00000000000000))*(x903)*(x907)))+(((x905)*(x906)))+(((sj1)*(sj2)*(x904)))+(((IkReal(-1.00000000000000))*(x904)*(x905)))+(((cj2)*(r02)*(sj1)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x909=IKsin(j5);
IkReal x910=((r02)*(sj2));
IkReal x911=((IkReal(1.00000000000000))*(sj2));
IkReal x912=((r00)*(sj0));
IkReal x913=((IkReal(1.00000000000000))*(cj2));
IkReal x914=((IkReal(1.00000000000000))*(x909));
IkReal x915=((cj0)*(r01)*(sj1));
IkReal x916=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x914)))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj1)*(x912)*(x913)))+(((sj2)*(x916)))+(((cj2)*(x915)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x913)))+(((IkReal(-1.00000000000000))*(sj4)*(x914)))+(((IkReal(-1.00000000000000))*(cj1)*(x911)*(x912)))+(((sj1)*(x910))));
evalcond[2]=((((IkReal(-1.00000000000000))*(IKcos(j5))))+(((cj2)*(x916)))+(((sj1)*(sj2)*(x912)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x911)*(x915)))+(((cj1)*(x910)))+(((IkReal(-1.00000000000000))*(cj1)*(x912)*(x913))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x917=((sj1)*(sj2));
IkReal x918=((cj0)*(r01));
IkReal x919=((r00)*(sj0));
IkReal x920=((cj1)*(cj2));
if( IKabs(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x918)*(x920)))+(((x917)*(x919)))+(((IkReal(-1.00000000000000))*(x917)*(x918)))+(((IkReal(-1.00000000000000))*(x919)*(x920)))+(((cj2)*(r02)*(sj1)))+(((cj1)*(r02)*(sj2))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))))+IKsqr(((((x918)*(x920)))+(((x917)*(x919)))+(((IkReal(-1.00000000000000))*(x917)*(x918)))+(((IkReal(-1.00000000000000))*(x919)*(x920)))+(((cj2)*(r02)*(sj1)))+(((cj1)*(r02)*(sj2)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))), ((((x918)*(x920)))+(((x917)*(x919)))+(((IkReal(-1.00000000000000))*(x917)*(x918)))+(((IkReal(-1.00000000000000))*(x919)*(x920)))+(((cj2)*(r02)*(sj1)))+(((cj1)*(r02)*(sj2)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x921=IKsin(j5);
IkReal x922=((r02)*(sj2));
IkReal x923=((IkReal(1.00000000000000))*(sj2));
IkReal x924=((r00)*(sj0));
IkReal x925=((IkReal(1.00000000000000))*(cj2));
IkReal x926=((IkReal(1.00000000000000))*(x921));
IkReal x927=((cj0)*(r01)*(sj1));
IkReal x928=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x926)))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj1)*(x923)*(x924)))+(((IkReal(-1.00000000000000))*(sj1)*(x924)*(x925)))+(((IkReal(-1.00000000000000))*(sj4)*(x926)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x925)))+(((sj1)*(x922)))+(((cj2)*(x927)))+(((sj2)*(x928))));
evalcond[2]=((((IkReal(-1.00000000000000))*(IKcos(j5))))+(((cj2)*(x928)))+(((sj1)*(sj2)*(x924)))+(((cj2)*(r02)*(sj1)))+(((cj1)*(x922)))+(((IkReal(-1.00000000000000))*(cj1)*(x924)*(x925)))+(((IkReal(-1.00000000000000))*(x923)*(x927))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x929=((IkReal(787000000.000000))*(sj2));
IkReal x930=((pz)*(sj1));
IkReal x931=((IkReal(190892000000.000))*(sj3));
IkReal x932=((py)*(sj0));
IkReal x933=((cj0)*(px));
IkReal x934=((IkReal(190892000000.000))*(cj2));
IkReal x935=((cj1)*(pz));
IkReal x936=((IkReal(787000000.000000))*(sj3));
IkReal x937=((IkReal(190892000000.000))*(sj2));
IkReal x938=((IkReal(787000000.000000))*(cj2));
IkReal x939=((cj1)*(px)*(sj0));
IkReal x940=((cj0)*(cj1)*(py));
IkReal x941=((px)*(sj0)*(sj1));
IkReal x942=((cj0)*(py)*(sj1));
if( IKabs(((gconst1)*(((IkReal(5902500.00000000))+(((IkReal(-1.00000000000000))*(x935)*(x938)))+(((IkReal(104844140.000000))*(sj3)))+(((IkReal(-1.00000000000000))*(x931)*(x932)))+(((IkReal(-1.00000000000000))*(x931)*(x933)))+(((x938)*(x942)))+(((IkReal(-1.00000000000000))*(x938)*(x941)))+(((IkReal(-1.00000000000000))*(x929)*(x939)))+(((IkReal(410554290.000000))*(cj2)))+(((x929)*(x940)))+(((IkReal(7728340.00000000))*(sj2)))+(((x929)*(x930)))+(((IkReal(40397497.0000000))*(cj3))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst1)*(((IkReal(-1431690000.00000))+(((IkReal(-1.00000000000000))*(x930)*(x937)))+(((x937)*(x939)))+(((IkReal(-99582629640.0000))*(cj2)))+(((IkReal(-25430632240.0000))*(sj3)))+(((x934)*(x941)))+(((IkReal(-9798677252.00000))*(cj3)))+(((IkReal(-1.00000000000000))*(x932)*(x936)))+(((IkReal(-1.00000000000000))*(x933)*(x936)))+(((IkReal(-1874559440.00000))*(sj2)))+(((x934)*(x935)))+(((IkReal(-1.00000000000000))*(x937)*(x940)))+(((IkReal(-1.00000000000000))*(x934)*(x942))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst1)*(((IkReal(5902500.00000000))+(((IkReal(-1.00000000000000))*(x935)*(x938)))+(((IkReal(104844140.000000))*(sj3)))+(((IkReal(-1.00000000000000))*(x931)*(x932)))+(((IkReal(-1.00000000000000))*(x931)*(x933)))+(((x938)*(x942)))+(((IkReal(-1.00000000000000))*(x938)*(x941)))+(((IkReal(-1.00000000000000))*(x929)*(x939)))+(((IkReal(410554290.000000))*(cj2)))+(((x929)*(x940)))+(((IkReal(7728340.00000000))*(sj2)))+(((x929)*(x930)))+(((IkReal(40397497.0000000))*(cj3)))))), ((gconst1)*(((IkReal(-1431690000.00000))+(((IkReal(-1.00000000000000))*(x930)*(x937)))+(((x937)*(x939)))+(((IkReal(-99582629640.0000))*(cj2)))+(((IkReal(-25430632240.0000))*(sj3)))+(((x934)*(x941)))+(((IkReal(-9798677252.00000))*(cj3)))+(((IkReal(-1.00000000000000))*(x932)*(x936)))+(((IkReal(-1.00000000000000))*(x933)*(x936)))+(((IkReal(-1874559440.00000))*(sj2)))+(((x934)*(x935)))+(((IkReal(-1.00000000000000))*(x937)*(x940)))+(((IkReal(-1.00000000000000))*(x934)*(x942)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[3];
IkReal x943=IKsin(j4);
IkReal x944=IKcos(j4);
IkReal x945=((cj1)*(sj2));
IkReal x946=((px)*(sj0));
IkReal x947=((sj1)*(sj2));
IkReal x948=((cj0)*(py));
IkReal x949=((cj2)*(pz));
IkReal x950=((IkReal(1.00000000000000))*(cj1));
IkReal x951=((cj2)*(x948));
IkReal x952=((IkReal(0.000787000000000000))*(x943));
IkReal x953=((IkReal(0.190892000000000))*(x944));
evalcond[0]=((((IkReal(0.000787000000000000))*(x944)))+(((IkReal(0.190892000000000))*(x943)))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[1]=((IkReal(-0.261090000000000))+(((IkReal(-1.00000000000000))*(cj2)*(x946)*(x950)))+(((IkReal(0.00982000000000000))*(cj2)))+(((x946)*(x947)))+(((IkReal(-1.00000000000000))*(x947)*(x948)))+(((IkReal(-1.00000000000000))*(cj3)*(x953)))+(((sj1)*(x949)))+(((cj1)*(x951)))+(((IkReal(-0.133220000000000))*(cj3)))+(((IkReal(0.0513310000000000))*(sj3)))+(((cj3)*(x952)))+(((IkReal(-0.521670000000000))*(sj2)))+(((pz)*(x945))));
evalcond[2]=((IkReal(0.00750000000000000))+(((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x946)))+(((x945)*(x948)))+(((IkReal(-1.00000000000000))*(x945)*(x946)))+(((IkReal(0.133220000000000))*(sj3)))+(((IkReal(0.521670000000000))*(cj2)))+(((sj1)*(x951)))+(((IkReal(-1.00000000000000))*(sj3)*(x952)))+(((IkReal(-1.00000000000000))*(x949)*(x950)))+(((sj3)*(x953)))+(((IkReal(0.0513310000000000))*(cj3)))+(((IkReal(0.00982000000000000))*(sj2)))+(((pz)*(x947))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[2];
IkReal x954=(cj3)*(cj3);
IkReal x955=(sj3)*(sj3);
dummyeval[0]=((((sj4)*(x954)))+(((sj4)*(x955))));
dummyeval[1]=((((IkReal(-1.00000000000000))*(x955)))+(((IkReal(-1.00000000000000))*(x954))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=cj4;
dummyeval[1]=sj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=cj4;
dummyeval[1]=cj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x956=((cj1)*(sj2));
IkReal x957=((px)*(sj0));
IkReal x958=((sj1)*(sj2));
IkReal x959=((cj0)*(py));
IkReal x960=((cj2)*(pz));
IkReal x961=((IkReal(1.00000000000000))*(cj1));
IkReal x962=((cj2)*(x959));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(0.190892000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.261090000000000))+(((IkReal(-1.00000000000000))*(x958)*(x959)))+(((IkReal(0.00982000000000000))*(cj2)))+(((cj1)*(x962)))+(((sj1)*(x960)))+(((pz)*(x956)))+(((IkReal(-1.00000000000000))*(cj2)*(x957)*(x961)))+(((IkReal(-0.132433000000000))*(cj3)))+(((x957)*(x958)))+(((IkReal(0.0513310000000000))*(sj3)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(0.00750000000000000))+(((IkReal(-1.00000000000000))*(x960)*(x961)))+(((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x957)))+(((IkReal(-1.00000000000000))*(x956)*(x957)))+(((IkReal(0.521670000000000))*(cj2)))+(((sj1)*(x962)))+(((x956)*(x959)))+(((pz)*(x958)))+(((IkReal(0.0513310000000000))*(cj3)))+(((IkReal(0.132433000000000))*(sj3)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst2;
gconst2=IKsign((((sj3)*(sj3))+((cj3)*(cj3))));
dummyeval[0]=(((sj3)*(sj3))+((cj3)*(cj3)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x963=((IkReal(1.00000000000000))*(cj3));
IkReal x964=((cj1)*(cj2));
IkReal x965=((r00)*(sj0));
IkReal x966=((r02)*(sj3));
IkReal x967=((cj3)*(r02));
IkReal x968=((cj2)*(sj1));
IkReal x969=((IkReal(1.00000000000000))*(sj3));
IkReal x970=((cj0)*(r01));
IkReal x971=((cj1)*(sj2));
IkReal x972=((sj1)*(sj2));
IkReal x973=((sj1)*(x970));
if( IKabs(((gconst2)*(((((IkReal(-1.00000000000000))*(x969)*(x970)*(x971)))+(((cj3)*(x965)*(x972)))+(((IkReal(-1.00000000000000))*(x966)*(x972)))+(((IkReal(-1.00000000000000))*(x963)*(x970)*(x972)))+(((cj3)*(x964)*(x970)))+(((x967)*(x968)))+(((x964)*(x966)))+(((IkReal(-1.00000000000000))*(x963)*(x964)*(x965)))+(((sj3)*(x965)*(x968)))+(((sj3)*(x965)*(x971)))+(((x967)*(x971)))+(((IkReal(-1.00000000000000))*(x968)*(x969)*(x970))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst2)*(((((cj3)*(x965)*(x971)))+(((sj3)*(x970)*(x972)))+(((IkReal(-1.00000000000000))*(x966)*(x971)))+(((cj3)*(x965)*(x968)))+(((IkReal(-1.00000000000000))*(x963)*(x970)*(x971)))+(((IkReal(-1.00000000000000))*(x964)*(x969)*(x970)))+(((x964)*(x967)))+(((sj3)*(x964)*(x965)))+(((IkReal(-1.00000000000000))*(r02)*(x963)*(x972)))+(((IkReal(-1.00000000000000))*(x965)*(x969)*(x972)))+(((IkReal(-1.00000000000000))*(x963)*(x968)*(x970)))+(((IkReal(-1.00000000000000))*(x966)*(x968))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst2)*(((((IkReal(-1.00000000000000))*(x969)*(x970)*(x971)))+(((cj3)*(x965)*(x972)))+(((IkReal(-1.00000000000000))*(x966)*(x972)))+(((IkReal(-1.00000000000000))*(x963)*(x970)*(x972)))+(((cj3)*(x964)*(x970)))+(((x967)*(x968)))+(((x964)*(x966)))+(((IkReal(-1.00000000000000))*(x963)*(x964)*(x965)))+(((sj3)*(x965)*(x968)))+(((sj3)*(x965)*(x971)))+(((x967)*(x971)))+(((IkReal(-1.00000000000000))*(x968)*(x969)*(x970)))))), ((gconst2)*(((((cj3)*(x965)*(x971)))+(((sj3)*(x970)*(x972)))+(((IkReal(-1.00000000000000))*(x966)*(x971)))+(((cj3)*(x965)*(x968)))+(((IkReal(-1.00000000000000))*(x963)*(x970)*(x971)))+(((IkReal(-1.00000000000000))*(x964)*(x969)*(x970)))+(((x964)*(x967)))+(((sj3)*(x964)*(x965)))+(((IkReal(-1.00000000000000))*(r02)*(x963)*(x972)))+(((IkReal(-1.00000000000000))*(x965)*(x969)*(x972)))+(((IkReal(-1.00000000000000))*(x963)*(x968)*(x970)))+(((IkReal(-1.00000000000000))*(x966)*(x968)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x974=IKcos(j5);
IkReal x975=IKsin(j5);
IkReal x976=((r02)*(sj2));
IkReal x977=((IkReal(1.00000000000000))*(sj2));
IkReal x978=((r00)*(sj0));
IkReal x979=((cj1)*(cj2));
IkReal x980=((cj0)*(r01));
IkReal x981=((sj1)*(x980));
IkReal x982=((IkReal(1.00000000000000))*(cj2)*(x978));
evalcond[0]=((((IkReal(-1.00000000000000))*(r02)*(x979)))+(((sj1)*(x976)))+(((cj1)*(sj2)*(x980)))+(((cj2)*(x981)))+(((cj3)*(x974)))+(((IkReal(-1.00000000000000))*(sj1)*(x982)))+(((sj3)*(x975)))+(((IkReal(-1.00000000000000))*(cj1)*(x977)*(x978))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj3)*(x975)))+(((sj1)*(sj2)*(x978)))+(((cj1)*(x976)))+(((x979)*(x980)))+(((IkReal(-1.00000000000000))*(x978)*(x979)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x977)*(x981)))+(((sj3)*(x974))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x983=((cj1)*(sj2));
IkReal x984=((px)*(sj0));
IkReal x985=((sj1)*(sj2));
IkReal x986=((cj0)*(py));
IkReal x987=((cj2)*(pz));
IkReal x988=((IkReal(1.00000000000000))*(cj1));
IkReal x989=((cj2)*(x986));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(-0.190892000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.261090000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((cj1)*(x989)))+(((IkReal(-1.00000000000000))*(cj2)*(x984)*(x988)))+(((IkReal(-0.134007000000000))*(cj3)))+(((sj1)*(x987)))+(((pz)*(x983)))+(((IkReal(0.0513310000000000))*(sj3)))+(((x984)*(x985)))+(((IkReal(-0.521670000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(x985)*(x986))));
evalcond[4]=((IkReal(0.00750000000000000))+(((x983)*(x986)))+(((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x984)))+(((IkReal(0.134007000000000))*(sj3)))+(((sj1)*(x989)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x983)*(x984)))+(((pz)*(x985)))+(((IkReal(-1.00000000000000))*(x987)*(x988)))+(((IkReal(0.0513310000000000))*(cj3)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst3;
gconst3=IKsign((((sj3)*(sj3))+((cj3)*(cj3))));
dummyeval[0]=(((sj3)*(sj3))+((cj3)*(cj3)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x990=((r00)*(sj0));
IkReal x991=((sj1)*(sj2));
IkReal x992=((r02)*(sj3));
IkReal x993=((cj0)*(r01));
IkReal x994=((cj3)*(r02));
IkReal x995=((IkReal(1.00000000000000))*(cj2));
IkReal x996=((cj1)*(sj3));
IkReal x997=((sj1)*(sj3));
IkReal x998=((cj3)*(sj1));
IkReal x999=((cj1)*(cj2)*(cj3));
IkReal x1000=((IkReal(1.00000000000000))*(cj1)*(sj2));
if( IKabs(((gconst3)*(((((sj2)*(x993)*(x996)))+(((x991)*(x992)))+(((cj2)*(x993)*(x997)))+(((IkReal(-1.00000000000000))*(cj1)*(x992)*(x995)))+(((IkReal(-1.00000000000000))*(cj3)*(x990)*(x991)))+(((x990)*(x999)))+(((IkReal(-1.00000000000000))*(x1000)*(x994)))+(((IkReal(-1.00000000000000))*(cj1)*(cj3)*(x993)*(x995)))+(((IkReal(-1.00000000000000))*(sj1)*(x994)*(x995)))+(((IkReal(-1.00000000000000))*(x990)*(x995)*(x997)))+(((cj3)*(x991)*(x993)))+(((IkReal(-1.00000000000000))*(sj2)*(x990)*(x996))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst3)*(((((cj1)*(cj2)*(x994)))+(((sj3)*(x991)*(x993)))+(((cj2)*(x990)*(x998)))+(((cj2)*(x990)*(x996)))+(((IkReal(-1.00000000000000))*(x991)*(x994)))+(((IkReal(-1.00000000000000))*(x993)*(x995)*(x998)))+(((IkReal(-1.00000000000000))*(x993)*(x995)*(x996)))+(((IkReal(-1.00000000000000))*(sj3)*(x990)*(x991)))+(((IkReal(-1.00000000000000))*(x1000)*(x992)))+(((IkReal(-1.00000000000000))*(sj1)*(x992)*(x995)))+(((cj1)*(cj3)*(sj2)*(x990)))+(((IkReal(-1.00000000000000))*(cj3)*(x1000)*(x993))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst3)*(((((sj2)*(x993)*(x996)))+(((x991)*(x992)))+(((cj2)*(x993)*(x997)))+(((IkReal(-1.00000000000000))*(cj1)*(x992)*(x995)))+(((IkReal(-1.00000000000000))*(cj3)*(x990)*(x991)))+(((x990)*(x999)))+(((IkReal(-1.00000000000000))*(x1000)*(x994)))+(((IkReal(-1.00000000000000))*(cj1)*(cj3)*(x993)*(x995)))+(((IkReal(-1.00000000000000))*(sj1)*(x994)*(x995)))+(((IkReal(-1.00000000000000))*(x990)*(x995)*(x997)))+(((cj3)*(x991)*(x993)))+(((IkReal(-1.00000000000000))*(sj2)*(x990)*(x996)))))), ((gconst3)*(((((cj1)*(cj2)*(x994)))+(((sj3)*(x991)*(x993)))+(((cj2)*(x990)*(x998)))+(((cj2)*(x990)*(x996)))+(((IkReal(-1.00000000000000))*(x991)*(x994)))+(((IkReal(-1.00000000000000))*(x993)*(x995)*(x998)))+(((IkReal(-1.00000000000000))*(x993)*(x995)*(x996)))+(((IkReal(-1.00000000000000))*(sj3)*(x990)*(x991)))+(((IkReal(-1.00000000000000))*(x1000)*(x992)))+(((IkReal(-1.00000000000000))*(sj1)*(x992)*(x995)))+(((cj1)*(cj3)*(sj2)*(x990)))+(((IkReal(-1.00000000000000))*(cj3)*(x1000)*(x993)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1001=IKsin(j5);
IkReal x1002=IKcos(j5);
IkReal x1003=((r02)*(sj2));
IkReal x1004=((IkReal(1.00000000000000))*(sj2));
IkReal x1005=((r00)*(sj0));
IkReal x1006=((IkReal(1.00000000000000))*(cj2));
IkReal x1007=((cj0)*(r01)*(sj1));
IkReal x1008=((cj0)*(cj1)*(r01));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1006)))+(((cj3)*(x1002)))+(((IkReal(-1.00000000000000))*(sj3)*(x1001)))+(((cj2)*(x1007)))+(((sj1)*(x1003)))+(((IkReal(-1.00000000000000))*(sj1)*(x1005)*(x1006)))+(((IkReal(-1.00000000000000))*(cj1)*(x1004)*(x1005)))+(((sj2)*(x1008))));
evalcond[1]=((((cj3)*(x1001)))+(((cj2)*(x1008)))+(((sj1)*(sj2)*(x1005)))+(((sj3)*(x1002)))+(((IkReal(-1.00000000000000))*(x1004)*(x1007)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(x1005)*(x1006)))+(((cj1)*(x1003))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1009=((cj1)*(sj2));
IkReal x1010=((px)*(sj0));
IkReal x1011=((sj1)*(sj2));
IkReal x1012=((cj0)*(py));
IkReal x1013=((cj2)*(pz));
IkReal x1014=((IkReal(1.00000000000000))*(cj1));
IkReal x1015=((cj2)*(x1012));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(0.190892000000000))*(sj4)))+(((IkReal(0.000787000000000000))*(cj4)))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((IkReal(-0.209759000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(cj2)*(x1010)*(x1014)))+(((sj1)*(x1013)))+(((IkReal(-1.00000000000000))*(x1011)*(x1012)))+(((pz)*(x1009)))+(((cj1)*(x1015)))+(((IkReal(-0.521670000000000))*(sj2)))+(((x1010)*(x1011))));
evalcond[3]=((IkReal(0.140720000000000))+(((IkReal(0.190892000000000))*(cj4)))+(((x1009)*(x1012)))+(((sj1)*(x1015)))+(((IkReal(-1.00000000000000))*(x1009)*(x1010)))+(((IkReal(0.521670000000000))*(cj2)))+(((pz)*(x1011)))+(((IkReal(-1.00000000000000))*(x1013)*(x1014)))+(((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x1010)))+(((IkReal(-0.000787000000000000))*(sj4)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x1016=((IkReal(1.00000000000000))*(sj0));
IkReal x1017=((cj1)*(sj2));
IkReal x1018=((sj1)*(sj2));
IkReal x1019=((cj2)*(sj1));
IkReal x1020=((cj0)*(r01));
IkReal x1021=((cj0)*(py));
IkReal x1022=((cj2)*(x1021));
IkReal x1023=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.000787000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((x1017)*(x1020)))+(((r02)*(x1018)))+(((IkReal(-1.00000000000000))*(r00)*(x1016)*(x1019)))+(((IkReal(-1.00000000000000))*(r00)*(x1016)*(x1017)))+(((x1019)*(x1020)))+(((IkReal(-1.00000000000000))*(r02)*(x1023))));
evalcond[3]=((IkReal(-0.209759000000000))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(px)*(x1016)))+(((IkReal(0.00982000000000000))*(cj2)))+(((px)*(sj0)*(x1018)))+(((IkReal(-1.00000000000000))*(x1018)*(x1021)))+(((pz)*(x1017)))+(((pz)*(x1019)))+(((IkReal(-0.521670000000000))*(sj2)))+(((cj1)*(x1022))));
evalcond[4]=((IkReal(0.331612000000000))+(((x1017)*(x1021)))+(((IkReal(-1.00000000000000))*(pz)*(x1023)))+(((IkReal(0.521670000000000))*(cj2)))+(((x1019)*(x1021)))+(((IkReal(-1.00000000000000))*(px)*(x1016)*(x1019)))+(((IkReal(-1.00000000000000))*(px)*(x1016)*(x1017)))+(((pz)*(x1018)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1024=((cj0)*(r01));
IkReal x1025=((sj1)*(sj2));
IkReal x1026=((IkReal(1.00000000000000))*(cj1));
IkReal x1027=((r00)*(sj0));
if( IKabs(((((r01)*(sj0)))+(((cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj1)*(cj2)*(x1027)))+(((IkReal(-1.00000000000000))*(cj2)*(x1024)*(x1026)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1026)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((x1024)*(x1025)))+(((IkReal(-1.00000000000000))*(x1025)*(x1027))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r01)*(sj0)))+(((cj0)*(r00)))))+IKsqr(((((cj1)*(cj2)*(x1027)))+(((IkReal(-1.00000000000000))*(cj2)*(x1024)*(x1026)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1026)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((x1024)*(x1025)))+(((IkReal(-1.00000000000000))*(x1025)*(x1027)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((r01)*(sj0)))+(((cj0)*(r00)))), ((((cj1)*(cj2)*(x1027)))+(((IkReal(-1.00000000000000))*(cj2)*(x1024)*(x1026)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1026)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((x1024)*(x1025)))+(((IkReal(-1.00000000000000))*(x1025)*(x1027)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1028=((sj1)*(sj2));
IkReal x1029=((cj0)*(r01));
IkReal x1030=((r00)*(sj0));
IkReal x1031=((cj1)*(cj2));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((cj0)*(r00))));
evalcond[1]=((((x1028)*(x1030)))+(IKcos(j5))+(((x1029)*(x1031)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1030)*(x1031)))+(((IkReal(-1.00000000000000))*(x1028)*(x1029)))+(((cj1)*(r02)*(sj2))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1032=((IkReal(1.00000000000000))*(sj0));
IkReal x1033=((cj1)*(sj2));
IkReal x1034=((sj1)*(sj2));
IkReal x1035=((cj2)*(sj1));
IkReal x1036=((cj0)*(r01));
IkReal x1037=((cj0)*(py));
IkReal x1038=((cj2)*(x1037));
IkReal x1039=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.000787000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((r02)*(x1034)))+(((IkReal(-1.00000000000000))*(r02)*(x1039)))+(((IkReal(-1.00000000000000))*(r00)*(x1032)*(x1033)))+(((IkReal(-1.00000000000000))*(r00)*(x1032)*(x1035)))+(((x1035)*(x1036)))+(((x1033)*(x1036))));
evalcond[3]=((IkReal(-0.209759000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((px)*(sj0)*(x1034)))+(((IkReal(-1.00000000000000))*(x1034)*(x1037)))+(((pz)*(x1033)))+(((pz)*(x1035)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(px)*(x1032)))+(((cj1)*(x1038)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(-0.0501720000000000))+(((IkReal(-1.00000000000000))*(pz)*(x1039)))+(((IkReal(0.521670000000000))*(cj2)))+(((pz)*(x1034)))+(((IkReal(-1.00000000000000))*(px)*(x1032)*(x1035)))+(((IkReal(-1.00000000000000))*(px)*(x1032)*(x1033)))+(((x1035)*(x1037)))+(((x1033)*(x1037)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1040=((sj1)*(sj2));
IkReal x1041=((cj0)*(r01));
IkReal x1042=((r00)*(sj0));
IkReal x1043=((IkReal(1.00000000000000))*(cj1));
if( IKabs(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1043)))+(((IkReal(-1.00000000000000))*(x1040)*(x1042)))+(((x1040)*(x1041)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj2)*(x1041)*(x1043)))+(((cj1)*(cj2)*(x1042))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))))+IKsqr(((((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1043)))+(((IkReal(-1.00000000000000))*(x1040)*(x1042)))+(((x1040)*(x1041)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj2)*(x1041)*(x1043)))+(((cj1)*(cj2)*(x1042)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))), ((((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1043)))+(((IkReal(-1.00000000000000))*(x1040)*(x1042)))+(((x1040)*(x1041)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj2)*(x1041)*(x1043)))+(((cj1)*(cj2)*(x1042)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1044=((sj1)*(sj2));
IkReal x1045=((cj0)*(r01));
IkReal x1046=((r00)*(sj0));
IkReal x1047=((cj1)*(cj2));
evalcond[0]=((((r01)*(sj0)))+(IKsin(j5))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1046)*(x1047)))+(IKcos(j5))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1044)*(x1045)))+(((x1045)*(x1047)))+(((x1044)*(x1046)))+(((cj1)*(r02)*(sj2))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1048=((pz)*(sj1));
IkReal x1049=((cj0)*(py));
IkReal x1050=((IkReal(1.00000000000000))*(sj2));
IkReal x1051=((cj1)*(cj2));
IkReal x1052=((px)*(sj0));
IkReal x1053=((cj2)*(sj1));
IkReal x1054=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(0.190892000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.209759000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((pz)*(x1054)))+(((IkReal(-1.00000000000000))*(sj1)*(x1049)*(x1050)))+(((cj2)*(x1048)))+(((x1049)*(x1051)))+(((sj1)*(sj2)*(x1052)))+(((IkReal(-1.00000000000000))*(x1051)*(x1052)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(0.139933000000000))+(((IkReal(-1.00000000000000))*(pz)*(x1051)))+(((IkReal(-1.00000000000000))*(cj1)*(x1050)*(x1052)))+(((sj2)*(x1048)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x1052)*(x1053)))+(((x1049)*(x1054)))+(((x1049)*(x1053)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1055=((IkReal(1.00000000000000))*(sj2));
IkReal x1056=((r02)*(sj1));
IkReal x1057=((cj0)*(r01));
IkReal x1058=((r00)*(sj0));
IkReal x1059=((cj1)*(r02));
IkReal x1060=((IkReal(1.00000000000000))*(cj2));
if( IKabs(((((IkReal(-1.00000000000000))*(sj1)*(x1057)*(x1060)))+(((IkReal(-1.00000000000000))*(cj1)*(x1055)*(x1057)))+(((IkReal(-1.00000000000000))*(x1055)*(x1056)))+(((cj2)*(x1059)))+(((cj1)*(sj2)*(x1058)))+(((cj2)*(sj1)*(x1058))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(cj1)*(x1057)*(x1060)))+(((IkReal(-1.00000000000000))*(x1055)*(x1059)))+(((IkReal(-1.00000000000000))*(x1056)*(x1060)))+(((sj1)*(sj2)*(x1057)))+(((cj1)*(cj2)*(x1058)))+(((IkReal(-1.00000000000000))*(sj1)*(x1055)*(x1058))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(sj1)*(x1057)*(x1060)))+(((IkReal(-1.00000000000000))*(cj1)*(x1055)*(x1057)))+(((IkReal(-1.00000000000000))*(x1055)*(x1056)))+(((cj2)*(x1059)))+(((cj1)*(sj2)*(x1058)))+(((cj2)*(sj1)*(x1058)))))+IKsqr(((((IkReal(-1.00000000000000))*(cj1)*(x1057)*(x1060)))+(((IkReal(-1.00000000000000))*(x1055)*(x1059)))+(((IkReal(-1.00000000000000))*(x1056)*(x1060)))+(((sj1)*(sj2)*(x1057)))+(((cj1)*(cj2)*(x1058)))+(((IkReal(-1.00000000000000))*(sj1)*(x1055)*(x1058)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(sj1)*(x1057)*(x1060)))+(((IkReal(-1.00000000000000))*(cj1)*(x1055)*(x1057)))+(((IkReal(-1.00000000000000))*(x1055)*(x1056)))+(((cj2)*(x1059)))+(((cj1)*(sj2)*(x1058)))+(((cj2)*(sj1)*(x1058)))), ((((IkReal(-1.00000000000000))*(cj1)*(x1057)*(x1060)))+(((IkReal(-1.00000000000000))*(x1055)*(x1059)))+(((IkReal(-1.00000000000000))*(x1056)*(x1060)))+(((sj1)*(sj2)*(x1057)))+(((cj1)*(cj2)*(x1058)))+(((IkReal(-1.00000000000000))*(sj1)*(x1055)*(x1058)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1061=((r02)*(sj2));
IkReal x1062=((IkReal(1.00000000000000))*(sj2));
IkReal x1063=((r00)*(sj0));
IkReal x1064=((cj1)*(cj2));
IkReal x1065=((cj0)*(r01));
IkReal x1066=((sj1)*(x1065));
IkReal x1067=((IkReal(1.00000000000000))*(cj2)*(x1063));
evalcond[0]=((((IkReal(-1.00000000000000))*(r02)*(x1064)))+(((cj2)*(x1066)))+(((IkReal(-1.00000000000000))*(sj1)*(x1067)))+(IKsin(j5))+(((sj1)*(x1061)))+(((cj1)*(sj2)*(x1065)))+(((IkReal(-1.00000000000000))*(cj1)*(x1062)*(x1063))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1062)*(x1066)))+(((sj1)*(sj2)*(x1063)))+(IKcos(j5))+(((cj1)*(x1061)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1063)*(x1064)))+(((x1064)*(x1065))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1068=((pz)*(sj1));
IkReal x1069=((cj0)*(py));
IkReal x1070=((IkReal(1.00000000000000))*(sj2));
IkReal x1071=((cj1)*(cj2));
IkReal x1072=((px)*(sj0));
IkReal x1073=((cj2)*(sj1));
IkReal x1074=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(-0.190892000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.209759000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((x1069)*(x1071)))+(((IkReal(-1.00000000000000))*(x1071)*(x1072)))+(((pz)*(x1074)))+(((cj2)*(x1068)))+(((IkReal(-1.00000000000000))*(sj1)*(x1069)*(x1070)))+(((sj1)*(sj2)*(x1072)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(0.141507000000000))+(((x1069)*(x1074)))+(((x1069)*(x1073)))+(((IkReal(-1.00000000000000))*(pz)*(x1071)))+(((sj2)*(x1068)))+(((IkReal(-1.00000000000000))*(cj1)*(x1070)*(x1072)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x1072)*(x1073)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1075=((cj2)*(sj1));
IkReal x1076=((IkReal(1.00000000000000))*(r02));
IkReal x1077=((cj0)*(r01));
IkReal x1078=((sj1)*(sj2));
IkReal x1079=((cj1)*(cj2));
IkReal x1080=((cj1)*(sj2));
IkReal x1081=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((IkReal(-1.00000000000000))*(x1076)*(x1079)))+(((x1075)*(x1077)))+(((IkReal(-1.00000000000000))*(x1080)*(x1081)))+(((x1077)*(x1080)))+(((IkReal(-1.00000000000000))*(x1075)*(x1081)))+(((r02)*(x1078))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x1075)*(x1076)))+(((x1077)*(x1078)))+(((IkReal(-1.00000000000000))*(x1078)*(x1081)))+(((r00)*(sj0)*(x1079)))+(((IkReal(-1.00000000000000))*(x1076)*(x1080)))+(((IkReal(-1.00000000000000))*(x1077)*(x1079))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x1076)*(x1079)))+(((x1075)*(x1077)))+(((IkReal(-1.00000000000000))*(x1080)*(x1081)))+(((x1077)*(x1080)))+(((IkReal(-1.00000000000000))*(x1075)*(x1081)))+(((r02)*(x1078)))))+IKsqr(((((IkReal(-1.00000000000000))*(x1075)*(x1076)))+(((x1077)*(x1078)))+(((IkReal(-1.00000000000000))*(x1078)*(x1081)))+(((r00)*(sj0)*(x1079)))+(((IkReal(-1.00000000000000))*(x1076)*(x1080)))+(((IkReal(-1.00000000000000))*(x1077)*(x1079)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x1076)*(x1079)))+(((x1075)*(x1077)))+(((IkReal(-1.00000000000000))*(x1080)*(x1081)))+(((x1077)*(x1080)))+(((IkReal(-1.00000000000000))*(x1075)*(x1081)))+(((r02)*(x1078)))), ((((IkReal(-1.00000000000000))*(x1075)*(x1076)))+(((x1077)*(x1078)))+(((IkReal(-1.00000000000000))*(x1078)*(x1081)))+(((r00)*(sj0)*(x1079)))+(((IkReal(-1.00000000000000))*(x1076)*(x1080)))+(((IkReal(-1.00000000000000))*(x1077)*(x1079)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1082=((r02)*(sj2));
IkReal x1083=((IkReal(1.00000000000000))*(sj2));
IkReal x1084=((r00)*(sj0));
IkReal x1085=((cj1)*(cj2));
IkReal x1086=((cj0)*(r01));
IkReal x1087=((sj1)*(x1086));
IkReal x1088=((IkReal(1.00000000000000))*(cj2)*(x1084));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj1)*(x1083)*(x1084)))+(((IkReal(-1.00000000000000))*(sj1)*(x1088)))+(((IkReal(-1.00000000000000))*(r02)*(x1085)))+(((cj1)*(sj2)*(x1086)))+(((sj1)*(x1082)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((cj2)*(x1087))));
evalcond[1]=((((sj1)*(sj2)*(x1084)))+(((cj1)*(x1082)))+(IKcos(j5))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1084)*(x1085)))+(((IkReal(-1.00000000000000))*(x1083)*(x1087)))+(((x1085)*(x1086))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1089=((IkReal(1.00000000000000))*(sj2));
IkReal x1090=((r02)*(sj1));
IkReal x1091=((cj0)*(r01));
IkReal x1092=((cj1)*(r02));
IkReal x1093=((r00)*(sj0));
IkReal x1094=((IkReal(1.00000000000000))*(cj2));
if( IKabs(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x1089)*(x1090)))+(((cj1)*(sj2)*(x1093)))+(((cj2)*(sj1)*(x1093)))+(((IkReal(-1.00000000000000))*(cj1)*(x1089)*(x1091)))+(((cj2)*(x1092)))+(((IkReal(-1.00000000000000))*(sj1)*(x1091)*(x1094))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x1090)*(x1094)))+(((sj1)*(sj2)*(x1091)))+(((IkReal(-1.00000000000000))*(cj1)*(x1091)*(x1094)))+(((IkReal(-1.00000000000000))*(x1089)*(x1092)))+(((IkReal(-1.00000000000000))*(sj1)*(x1089)*(x1093)))+(((cj1)*(cj2)*(x1093))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x1089)*(x1090)))+(((cj1)*(sj2)*(x1093)))+(((cj2)*(sj1)*(x1093)))+(((IkReal(-1.00000000000000))*(cj1)*(x1089)*(x1091)))+(((cj2)*(x1092)))+(((IkReal(-1.00000000000000))*(sj1)*(x1091)*(x1094)))))))+IKsqr(((((IkReal(-1.00000000000000))*(x1090)*(x1094)))+(((sj1)*(sj2)*(x1091)))+(((IkReal(-1.00000000000000))*(cj1)*(x1091)*(x1094)))+(((IkReal(-1.00000000000000))*(x1089)*(x1092)))+(((IkReal(-1.00000000000000))*(sj1)*(x1089)*(x1093)))+(((cj1)*(cj2)*(x1093)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x1089)*(x1090)))+(((cj1)*(sj2)*(x1093)))+(((cj2)*(sj1)*(x1093)))+(((IkReal(-1.00000000000000))*(cj1)*(x1089)*(x1091)))+(((cj2)*(x1092)))+(((IkReal(-1.00000000000000))*(sj1)*(x1091)*(x1094)))))), ((((IkReal(-1.00000000000000))*(x1090)*(x1094)))+(((sj1)*(sj2)*(x1091)))+(((IkReal(-1.00000000000000))*(cj1)*(x1091)*(x1094)))+(((IkReal(-1.00000000000000))*(x1089)*(x1092)))+(((IkReal(-1.00000000000000))*(sj1)*(x1089)*(x1093)))+(((cj1)*(cj2)*(x1093)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1095=IKsin(j5);
IkReal x1096=((r02)*(sj2));
IkReal x1097=((IkReal(1.00000000000000))*(sj2));
IkReal x1098=((r00)*(sj0));
IkReal x1099=((IkReal(1.00000000000000))*(cj2));
IkReal x1100=((cj0)*(r01)*(sj1));
IkReal x1101=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x1095)))+(((cj0)*(r00))));
evalcond[1]=((((sj2)*(x1101)))+(((sj1)*(x1096)))+(((IkReal(-1.00000000000000))*(sj1)*(x1098)*(x1099)))+(((sj4)*(x1095)))+(((IkReal(-1.00000000000000))*(cj1)*(x1097)*(x1098)))+(((cj2)*(x1100)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1099))));
evalcond[2]=((((cj1)*(x1096)))+(((sj1)*(sj2)*(x1098)))+(IKcos(j5))+(((cj2)*(r02)*(sj1)))+(((cj2)*(x1101)))+(((IkReal(-1.00000000000000))*(cj1)*(x1098)*(x1099)))+(((IkReal(-1.00000000000000))*(x1097)*(x1100))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1102=((cj0)*(r01));
IkReal x1103=((sj1)*(sj2));
IkReal x1104=((IkReal(1.00000000000000))*(cj1));
IkReal x1105=((r00)*(sj0));
if( IKabs(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj1)*(cj2)*(x1105)))+(((IkReal(-1.00000000000000))*(cj2)*(x1102)*(x1104)))+(((x1102)*(x1103)))+(((IkReal(-1.00000000000000))*(x1103)*(x1105)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1104))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))))+IKsqr(((((cj1)*(cj2)*(x1105)))+(((IkReal(-1.00000000000000))*(cj2)*(x1102)*(x1104)))+(((x1102)*(x1103)))+(((IkReal(-1.00000000000000))*(x1103)*(x1105)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1104)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))), ((((cj1)*(cj2)*(x1105)))+(((IkReal(-1.00000000000000))*(cj2)*(x1102)*(x1104)))+(((x1102)*(x1103)))+(((IkReal(-1.00000000000000))*(x1103)*(x1105)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1104)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1106=IKsin(j5);
IkReal x1107=((r02)*(sj2));
IkReal x1108=((IkReal(1.00000000000000))*(sj2));
IkReal x1109=((r00)*(sj0));
IkReal x1110=((IkReal(1.00000000000000))*(cj2));
IkReal x1111=((cj0)*(r01)*(sj1));
IkReal x1112=((cj0)*(cj1)*(r01));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj4)*(x1106)))+(((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[1]=((((sj2)*(x1112)))+(((IkReal(-1.00000000000000))*(sj1)*(x1109)*(x1110)))+(((sj4)*(x1106)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1110)))+(((sj1)*(x1107)))+(((cj2)*(x1111)))+(((IkReal(-1.00000000000000))*(cj1)*(x1108)*(x1109))));
evalcond[2]=((((sj1)*(sj2)*(x1109)))+(((IkReal(-1.00000000000000))*(cj1)*(x1109)*(x1110)))+(((cj1)*(x1107)))+(IKcos(j5))+(((IkReal(-1.00000000000000))*(x1108)*(x1111)))+(((cj2)*(r02)*(sj1)))+(((cj2)*(x1112))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1113=((cj1)*(sj2));
IkReal x1114=((px)*(sj0));
IkReal x1115=((sj1)*(sj2));
IkReal x1116=((cj0)*(py));
IkReal x1117=((cj2)*(pz));
IkReal x1118=((IkReal(1.00000000000000))*(cj1));
IkReal x1119=((cj2)*(x1116));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(0.190892000000000))*(sj4)))+(((IkReal(0.000787000000000000))*(cj4)))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((IkReal(-0.312421000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((x1114)*(x1115)))+(((IkReal(-1.00000000000000))*(cj2)*(x1114)*(x1118)))+(((cj1)*(x1119)))+(((IkReal(-1.00000000000000))*(x1115)*(x1116)))+(((pz)*(x1113)))+(((sj1)*(x1117)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[3]=((IkReal(-0.125720000000000))+(((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x1114)))+(((x1113)*(x1116)))+(((IkReal(-1.00000000000000))*(x1113)*(x1114)))+(((IkReal(0.000787000000000000))*(sj4)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-0.190892000000000))*(cj4)))+(((pz)*(x1115)))+(((sj1)*(x1119)))+(((IkReal(0.00982000000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(x1117)*(x1118))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x1120=((IkReal(1.00000000000000))*(sj0));
IkReal x1121=((cj1)*(sj2));
IkReal x1122=((sj1)*(sj2));
IkReal x1123=((cj2)*(sj1));
IkReal x1124=((cj0)*(r01));
IkReal x1125=((cj0)*(py));
IkReal x1126=((cj2)*(x1125));
IkReal x1127=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.000787000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r00)*(x1120)*(x1123)))+(((IkReal(-1.00000000000000))*(r00)*(x1120)*(x1121)))+(((x1121)*(x1124)))+(((IkReal(-1.00000000000000))*(r02)*(x1127)))+(((x1123)*(x1124)))+(((r02)*(x1122))));
evalcond[3]=((IkReal(-0.312421000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((pz)*(x1123)))+(((pz)*(x1121)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(px)*(x1120)))+(((IkReal(-1.00000000000000))*(x1122)*(x1125)))+(((cj1)*(x1126)))+(((px)*(sj0)*(x1122)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(-0.316612000000000))+(((IkReal(-1.00000000000000))*(px)*(x1120)*(x1123)))+(((IkReal(-1.00000000000000))*(px)*(x1120)*(x1121)))+(((x1121)*(x1125)))+(((pz)*(x1122)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(pz)*(x1127)))+(((x1123)*(x1125)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1128=((sj1)*(sj2));
IkReal x1129=((cj0)*(r01));
IkReal x1130=((r00)*(sj0));
IkReal x1131=((cj1)*(cj2));
if( IKabs(((((r01)*(sj0)))+(((cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x1128)*(x1129)))+(((x1129)*(x1131)))+(((IkReal(-1.00000000000000))*(x1130)*(x1131)))+(((cj2)*(r02)*(sj1)))+(((x1128)*(x1130)))+(((cj1)*(r02)*(sj2))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r01)*(sj0)))+(((cj0)*(r00)))))+IKsqr(((((IkReal(-1.00000000000000))*(x1128)*(x1129)))+(((x1129)*(x1131)))+(((IkReal(-1.00000000000000))*(x1130)*(x1131)))+(((cj2)*(r02)*(sj1)))+(((x1128)*(x1130)))+(((cj1)*(r02)*(sj2)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((r01)*(sj0)))+(((cj0)*(r00)))), ((((IkReal(-1.00000000000000))*(x1128)*(x1129)))+(((x1129)*(x1131)))+(((IkReal(-1.00000000000000))*(x1130)*(x1131)))+(((cj2)*(r02)*(sj1)))+(((x1128)*(x1130)))+(((cj1)*(r02)*(sj2)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1132=((sj1)*(sj2));
IkReal x1133=((cj0)*(r01));
IkReal x1134=((r00)*(sj0));
IkReal x1135=((cj1)*(cj2));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1132)*(x1133)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((IkReal(-1.00000000000000))*(x1134)*(x1135)))+(((cj2)*(r02)*(sj1)))+(((x1133)*(x1135)))+(((cj1)*(r02)*(sj2)))+(((x1132)*(x1134))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1136=((IkReal(1.00000000000000))*(sj0));
IkReal x1137=((cj1)*(sj2));
IkReal x1138=((sj1)*(sj2));
IkReal x1139=((cj2)*(sj1));
IkReal x1140=((cj0)*(r01));
IkReal x1141=((cj0)*(py));
IkReal x1142=((cj2)*(x1141));
IkReal x1143=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.000787000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((x1137)*(x1140)))+(((IkReal(-1.00000000000000))*(r02)*(x1143)))+(((x1139)*(x1140)))+(((r02)*(x1138)))+(((IkReal(-1.00000000000000))*(r00)*(x1136)*(x1137)))+(((IkReal(-1.00000000000000))*(r00)*(x1136)*(x1139))));
evalcond[3]=((IkReal(-0.312421000000000))+(((IkReal(-1.00000000000000))*(x1138)*(x1141)))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(px)*(x1136)))+(((pz)*(x1137)))+(((pz)*(x1139)))+(((cj1)*(x1142)))+(((px)*(sj0)*(x1138)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(0.0651720000000000))+(((x1137)*(x1141)))+(((pz)*(x1138)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(px)*(x1136)*(x1139)))+(((IkReal(-1.00000000000000))*(px)*(x1136)*(x1137)))+(((x1139)*(x1141)))+(((IkReal(-1.00000000000000))*(pz)*(x1143)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1144=((r00)*(sj0));
IkReal x1145=((cj1)*(cj2));
IkReal x1146=((sj1)*(sj2));
IkReal x1147=((cj0)*(r01));
if( IKabs(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x1145)*(x1147)))+(((IkReal(-1.00000000000000))*(x1144)*(x1145)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1146)*(x1147)))+(((x1144)*(x1146)))+(((cj1)*(r02)*(sj2))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))))+IKsqr(((((x1145)*(x1147)))+(((IkReal(-1.00000000000000))*(x1144)*(x1145)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1146)*(x1147)))+(((x1144)*(x1146)))+(((cj1)*(r02)*(sj2)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))), ((((x1145)*(x1147)))+(((IkReal(-1.00000000000000))*(x1144)*(x1145)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1146)*(x1147)))+(((x1144)*(x1146)))+(((cj1)*(r02)*(sj2)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1148=((sj1)*(sj2));
IkReal x1149=((cj0)*(r01));
IkReal x1150=((r00)*(sj0));
IkReal x1151=((cj1)*(cj2));
evalcond[0]=((((r01)*(sj0)))+(IKsin(j5))+(((cj0)*(r00))));
evalcond[1]=((((x1149)*(x1151)))+(((IkReal(-1.00000000000000))*(x1148)*(x1149)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((cj2)*(r02)*(sj1)))+(((x1148)*(x1150)))+(((IkReal(-1.00000000000000))*(x1150)*(x1151)))+(((cj1)*(r02)*(sj2))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1152=((pz)*(sj1));
IkReal x1153=((cj0)*(py));
IkReal x1154=((IkReal(1.00000000000000))*(sj2));
IkReal x1155=((cj1)*(cj2));
IkReal x1156=((px)*(sj0));
IkReal x1157=((cj2)*(sj1));
IkReal x1158=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(0.190892000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.312421000000000))+(((pz)*(x1158)))+(((IkReal(0.00982000000000000))*(cj2)))+(((cj2)*(x1152)))+(((sj1)*(sj2)*(x1156)))+(((x1153)*(x1155)))+(((IkReal(-1.00000000000000))*(x1155)*(x1156)))+(((IkReal(-1.00000000000000))*(sj1)*(x1153)*(x1154)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(-0.124933000000000))+(((IkReal(-1.00000000000000))*(x1156)*(x1157)))+(((sj2)*(x1152)))+(((IkReal(-1.00000000000000))*(cj1)*(x1154)*(x1156)))+(((IkReal(-1.00000000000000))*(pz)*(x1155)))+(((x1153)*(x1158)))+(((x1153)*(x1157)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1159=((r02)*(sj2));
IkReal x1160=((IkReal(1.00000000000000))*(sj2));
IkReal x1161=((r00)*(sj0));
IkReal x1162=((cj1)*(cj2));
IkReal x1163=((cj0)*(r01));
IkReal x1164=((sj1)*(x1163));
IkReal x1165=((IkReal(1.00000000000000))*(cj2)*(x1161));
if( IKabs(((((cj1)*(sj2)*(x1163)))+(((IkReal(-1.00000000000000))*(sj1)*(x1165)))+(((IkReal(-1.00000000000000))*(r02)*(x1162)))+(((IkReal(-1.00000000000000))*(cj1)*(x1160)*(x1161)))+(((sj1)*(x1159)))+(((cj2)*(x1164))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x1162)*(x1163)))+(((cj2)*(r02)*(sj1)))+(((cj1)*(x1159)))+(((IkReal(-1.00000000000000))*(x1161)*(x1162)))+(((IkReal(-1.00000000000000))*(x1160)*(x1164)))+(((sj1)*(sj2)*(x1161))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj1)*(sj2)*(x1163)))+(((IkReal(-1.00000000000000))*(sj1)*(x1165)))+(((IkReal(-1.00000000000000))*(r02)*(x1162)))+(((IkReal(-1.00000000000000))*(cj1)*(x1160)*(x1161)))+(((sj1)*(x1159)))+(((cj2)*(x1164)))))+IKsqr(((((x1162)*(x1163)))+(((cj2)*(r02)*(sj1)))+(((cj1)*(x1159)))+(((IkReal(-1.00000000000000))*(x1161)*(x1162)))+(((IkReal(-1.00000000000000))*(x1160)*(x1164)))+(((sj1)*(sj2)*(x1161)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((cj1)*(sj2)*(x1163)))+(((IkReal(-1.00000000000000))*(sj1)*(x1165)))+(((IkReal(-1.00000000000000))*(r02)*(x1162)))+(((IkReal(-1.00000000000000))*(cj1)*(x1160)*(x1161)))+(((sj1)*(x1159)))+(((cj2)*(x1164)))), ((((x1162)*(x1163)))+(((cj2)*(r02)*(sj1)))+(((cj1)*(x1159)))+(((IkReal(-1.00000000000000))*(x1161)*(x1162)))+(((IkReal(-1.00000000000000))*(x1160)*(x1164)))+(((sj1)*(sj2)*(x1161)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1166=((r02)*(sj2));
IkReal x1167=((IkReal(1.00000000000000))*(sj2));
IkReal x1168=((r00)*(sj0));
IkReal x1169=((cj1)*(cj2));
IkReal x1170=((cj0)*(r01));
IkReal x1171=((sj1)*(x1170));
IkReal x1172=((IkReal(1.00000000000000))*(cj2)*(x1168));
evalcond[0]=((((cj1)*(sj2)*(x1170)))+(((sj1)*(x1166)))+(((IkReal(-1.00000000000000))*(sj1)*(x1172)))+(((IkReal(-1.00000000000000))*(r02)*(x1169)))+(((IkReal(-1.00000000000000))*(cj1)*(x1167)*(x1168)))+(((cj2)*(x1171)))+(((IkReal(-1.00000000000000))*(IKsin(j5)))));
evalcond[1]=((((cj1)*(x1166)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((IkReal(-1.00000000000000))*(x1168)*(x1169)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1167)*(x1171)))+(((sj1)*(sj2)*(x1168)))+(((x1169)*(x1170))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1173=((pz)*(sj1));
IkReal x1174=((cj0)*(py));
IkReal x1175=((IkReal(1.00000000000000))*(sj2));
IkReal x1176=((cj1)*(cj2));
IkReal x1177=((px)*(sj0));
IkReal x1178=((cj2)*(sj1));
IkReal x1179=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(-0.190892000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.312421000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((x1174)*(x1176)))+(((IkReal(-1.00000000000000))*(x1176)*(x1177)))+(((pz)*(x1179)))+(((cj2)*(x1173)))+(((IkReal(-0.521670000000000))*(sj2)))+(((sj1)*(sj2)*(x1177)))+(((IkReal(-1.00000000000000))*(sj1)*(x1174)*(x1175))));
evalcond[4]=((IkReal(-0.126507000000000))+(((x1174)*(x1178)))+(((x1174)*(x1179)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x1177)*(x1178)))+(((IkReal(-1.00000000000000))*(pz)*(x1176)))+(((IkReal(-1.00000000000000))*(cj1)*(x1175)*(x1177)))+(((IkReal(0.00982000000000000))*(sj2)))+(((sj2)*(x1173))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1180=((IkReal(1.00000000000000))*(sj2));
IkReal x1181=((r02)*(sj1));
IkReal x1182=((cj0)*(r01));
IkReal x1183=((IkReal(1.00000000000000))*(cj2));
IkReal x1184=((cj1)*(r02));
IkReal x1185=((cj1)*(r00)*(sj0));
IkReal x1186=((r00)*(sj0)*(sj1));
if( IKabs(((((IkReal(-1.00000000000000))*(cj1)*(x1180)*(x1182)))+(((IkReal(-1.00000000000000))*(x1180)*(x1181)))+(((sj2)*(x1185)))+(((IkReal(-1.00000000000000))*(sj1)*(x1182)*(x1183)))+(((cj2)*(x1186)))+(((cj2)*(x1184))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((sj2)*(x1186)))+(((sj2)*(x1184)))+(((IkReal(-1.00000000000000))*(sj1)*(x1180)*(x1182)))+(((IkReal(-1.00000000000000))*(x1183)*(x1185)))+(((cj1)*(cj2)*(x1182)))+(((cj2)*(x1181))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(cj1)*(x1180)*(x1182)))+(((IkReal(-1.00000000000000))*(x1180)*(x1181)))+(((sj2)*(x1185)))+(((IkReal(-1.00000000000000))*(sj1)*(x1182)*(x1183)))+(((cj2)*(x1186)))+(((cj2)*(x1184)))))+IKsqr(((((sj2)*(x1186)))+(((sj2)*(x1184)))+(((IkReal(-1.00000000000000))*(sj1)*(x1180)*(x1182)))+(((IkReal(-1.00000000000000))*(x1183)*(x1185)))+(((cj1)*(cj2)*(x1182)))+(((cj2)*(x1181)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(cj1)*(x1180)*(x1182)))+(((IkReal(-1.00000000000000))*(x1180)*(x1181)))+(((sj2)*(x1185)))+(((IkReal(-1.00000000000000))*(sj1)*(x1182)*(x1183)))+(((cj2)*(x1186)))+(((cj2)*(x1184)))), ((((sj2)*(x1186)))+(((sj2)*(x1184)))+(((IkReal(-1.00000000000000))*(sj1)*(x1180)*(x1182)))+(((IkReal(-1.00000000000000))*(x1183)*(x1185)))+(((cj1)*(cj2)*(x1182)))+(((cj2)*(x1181)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1187=((r02)*(sj2));
IkReal x1188=((IkReal(1.00000000000000))*(sj2));
IkReal x1189=((r00)*(sj0));
IkReal x1190=((cj1)*(cj2));
IkReal x1191=((cj0)*(r01));
IkReal x1192=((sj1)*(x1191));
IkReal x1193=((IkReal(1.00000000000000))*(cj2)*(x1189));
evalcond[0]=((((sj1)*(x1187)))+(IKsin(j5))+(((IkReal(-1.00000000000000))*(cj1)*(x1188)*(x1189)))+(((cj2)*(x1192)))+(((cj1)*(sj2)*(x1191)))+(((IkReal(-1.00000000000000))*(r02)*(x1190)))+(((IkReal(-1.00000000000000))*(sj1)*(x1193))));
evalcond[1]=((((sj1)*(sj2)*(x1189)))+(((IkReal(-1.00000000000000))*(x1188)*(x1192)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((cj2)*(r02)*(sj1)))+(((cj1)*(x1187)))+(((IkReal(-1.00000000000000))*(x1189)*(x1190)))+(((x1190)*(x1191))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1194=((r02)*(sj2));
IkReal x1195=((IkReal(1.00000000000000))*(sj2));
IkReal x1196=((r00)*(sj0));
IkReal x1197=((cj1)*(cj2));
IkReal x1198=((cj0)*(r01));
IkReal x1199=((sj1)*(x1198));
IkReal x1200=((IkReal(1.00000000000000))*(cj2)*(x1196));
if( IKabs(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(sj1)*(x1200)))+(((IkReal(-1.00000000000000))*(cj1)*(x1195)*(x1196)))+(((sj1)*(x1194)))+(((cj2)*(x1199)))+(((cj1)*(sj2)*(x1198)))+(((IkReal(-1.00000000000000))*(r02)*(x1197))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((sj1)*(sj2)*(x1196)))+(((x1197)*(x1198)))+(((IkReal(-1.00000000000000))*(x1195)*(x1199)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1196)*(x1197)))+(((cj1)*(x1194))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(sj1)*(x1200)))+(((IkReal(-1.00000000000000))*(cj1)*(x1195)*(x1196)))+(((sj1)*(x1194)))+(((cj2)*(x1199)))+(((cj1)*(sj2)*(x1198)))+(((IkReal(-1.00000000000000))*(r02)*(x1197)))))))+IKsqr(((((sj1)*(sj2)*(x1196)))+(((x1197)*(x1198)))+(((IkReal(-1.00000000000000))*(x1195)*(x1199)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1196)*(x1197)))+(((cj1)*(x1194)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(sj1)*(x1200)))+(((IkReal(-1.00000000000000))*(cj1)*(x1195)*(x1196)))+(((sj1)*(x1194)))+(((cj2)*(x1199)))+(((cj1)*(sj2)*(x1198)))+(((IkReal(-1.00000000000000))*(r02)*(x1197)))))), ((((sj1)*(sj2)*(x1196)))+(((x1197)*(x1198)))+(((IkReal(-1.00000000000000))*(x1195)*(x1199)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1196)*(x1197)))+(((cj1)*(x1194)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1201=IKsin(j5);
IkReal x1202=((r02)*(sj2));
IkReal x1203=((IkReal(1.00000000000000))*(sj2));
IkReal x1204=((r00)*(sj0));
IkReal x1205=((IkReal(1.00000000000000))*(cj2));
IkReal x1206=((IkReal(1.00000000000000))*(x1201));
IkReal x1207=((cj0)*(r01)*(sj1));
IkReal x1208=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x1206)))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj1)*(x1203)*(x1204)))+(((IkReal(-1.00000000000000))*(sj4)*(x1206)))+(((IkReal(-1.00000000000000))*(sj1)*(x1204)*(x1205)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1205)))+(((sj1)*(x1202)))+(((cj2)*(x1207)))+(((sj2)*(x1208))));
evalcond[2]=((((IkReal(-1.00000000000000))*(IKcos(j5))))+(((cj1)*(x1202)))+(((IkReal(-1.00000000000000))*(cj1)*(x1204)*(x1205)))+(((cj2)*(x1208)))+(((IkReal(-1.00000000000000))*(x1203)*(x1207)))+(((cj2)*(r02)*(sj1)))+(((sj1)*(sj2)*(x1204))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1209=((sj1)*(sj2));
IkReal x1210=((cj0)*(r01));
IkReal x1211=((r00)*(sj0));
IkReal x1212=((cj1)*(cj2));
if( IKabs(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x1210)*(x1212)))+(((IkReal(-1.00000000000000))*(x1211)*(x1212)))+(((cj2)*(r02)*(sj1)))+(((x1209)*(x1211)))+(((IkReal(-1.00000000000000))*(x1209)*(x1210)))+(((cj1)*(r02)*(sj2))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))))+IKsqr(((((x1210)*(x1212)))+(((IkReal(-1.00000000000000))*(x1211)*(x1212)))+(((cj2)*(r02)*(sj1)))+(((x1209)*(x1211)))+(((IkReal(-1.00000000000000))*(x1209)*(x1210)))+(((cj1)*(r02)*(sj2)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))), ((((x1210)*(x1212)))+(((IkReal(-1.00000000000000))*(x1211)*(x1212)))+(((cj2)*(r02)*(sj1)))+(((x1209)*(x1211)))+(((IkReal(-1.00000000000000))*(x1209)*(x1210)))+(((cj1)*(r02)*(sj2)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1213=IKsin(j5);
IkReal x1214=((r02)*(sj2));
IkReal x1215=((IkReal(1.00000000000000))*(sj2));
IkReal x1216=((r00)*(sj0));
IkReal x1217=((IkReal(1.00000000000000))*(cj2));
IkReal x1218=((IkReal(1.00000000000000))*(x1213));
IkReal x1219=((cj0)*(r01)*(sj1));
IkReal x1220=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x1218)))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1217)))+(((sj2)*(x1220)))+(((IkReal(-1.00000000000000))*(sj1)*(x1216)*(x1217)))+(((IkReal(-1.00000000000000))*(sj4)*(x1218)))+(((IkReal(-1.00000000000000))*(cj1)*(x1215)*(x1216)))+(((sj1)*(x1214)))+(((cj2)*(x1219))));
evalcond[2]=((((cj2)*(x1220)))+(((IkReal(-1.00000000000000))*(x1215)*(x1219)))+(((sj1)*(sj2)*(x1216)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(x1216)*(x1217)))+(((cj1)*(x1214))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1221=((cj1)*(sj2));
IkReal x1222=((px)*(sj0));
IkReal x1223=((sj1)*(sj2));
IkReal x1224=((cj0)*(py));
IkReal x1225=((cj2)*(pz));
IkReal x1226=((IkReal(1.00000000000000))*(cj1));
IkReal x1227=((cj2)*(x1224));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(0.190892000000000))*(sj4)))+(((IkReal(0.000787000000000000))*(cj4)))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((IkReal(-0.394310000000000))+(((IkReal(-1.00000000000000))*(x1223)*(x1224)))+(((IkReal(0.00982000000000000))*(cj2)))+(((sj1)*(x1225)))+(((pz)*(x1221)))+(((IkReal(0.000787000000000000))*(sj4)))+(((IkReal(-1.00000000000000))*(cj2)*(x1222)*(x1226)))+(((IkReal(-0.190892000000000))*(cj4)))+(((x1222)*(x1223)))+(((IkReal(-0.521670000000000))*(sj2)))+(((cj1)*(x1227))));
evalcond[3]=((IkReal(0.0588310000000000))+(((sj1)*(x1227)))+(((IkReal(-1.00000000000000))*(x1225)*(x1226)))+(((IkReal(-1.00000000000000))*(x1221)*(x1222)))+(((pz)*(x1223)))+(((IkReal(0.521670000000000))*(cj2)))+(((x1221)*(x1224)))+(((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x1222)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x1228=((IkReal(1.00000000000000))*(sj2));
IkReal x1229=((px)*(sj0));
IkReal x1230=((pz)*(sj2));
IkReal x1231=((cj0)*(sj1));
IkReal x1232=((cj1)*(sj2));
IkReal x1233=((sj1)*(sj2));
IkReal x1234=((cj2)*(sj1));
IkReal x1235=((r00)*(sj0));
IkReal x1236=((cj0)*(cj1)*(cj2));
IkReal x1237=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.000787000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((r01)*(x1236)))+(((IkReal(-1.00000000000000))*(r01)*(x1228)*(x1231)))+(((IkReal(-1.00000000000000))*(x1235)*(x1237)))+(((r02)*(x1234)))+(((r02)*(x1232)))+(((x1233)*(x1235))));
evalcond[3]=((IkReal(-0.585202000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((pz)*(x1234)))+(((py)*(x1236)))+(((IkReal(-1.00000000000000))*(py)*(x1228)*(x1231)))+(((IkReal(-1.00000000000000))*(x1229)*(x1237)))+(((IkReal(-0.521670000000000))*(sj2)))+(((cj1)*(x1230)))+(((x1229)*(x1233))));
evalcond[4]=((IkReal(0.0588310000000000))+(((sj1)*(x1230)))+(((IkReal(-1.00000000000000))*(cj1)*(x1228)*(x1229)))+(((cj2)*(py)*(x1231)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(pz)*(x1237)))+(((cj0)*(py)*(x1232)))+(((IkReal(0.00982000000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(x1229)*(x1234))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1238=((IkReal(1.00000000000000))*(sj2));
IkReal x1239=((cj0)*(r01));
IkReal x1240=((r00)*(sj0));
IkReal x1241=((cj2)*(sj1));
if( IKabs(((((r01)*(sj0)))+(((cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x1240)*(x1241)))+(((IkReal(-1.00000000000000))*(x1239)*(x1241)))+(((cj1)*(sj2)*(x1240)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1238)))+(((cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(cj1)*(x1238)*(x1239))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r01)*(sj0)))+(((cj0)*(r00)))))+IKsqr(((((x1240)*(x1241)))+(((IkReal(-1.00000000000000))*(x1239)*(x1241)))+(((cj1)*(sj2)*(x1240)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1238)))+(((cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(cj1)*(x1238)*(x1239)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((r01)*(sj0)))+(((cj0)*(r00)))), ((((x1240)*(x1241)))+(((IkReal(-1.00000000000000))*(x1239)*(x1241)))+(((cj1)*(sj2)*(x1240)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1238)))+(((cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(cj1)*(x1238)*(x1239)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1242=((cj2)*(sj1));
IkReal x1243=((cj0)*(r01));
IkReal x1244=((cj1)*(sj2));
IkReal x1245=((IkReal(1.00000000000000))*(r00)*(sj0));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1244)*(x1245)))+(((IkReal(-1.00000000000000))*(x1242)*(x1245)))+(IKcos(j5))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((x1242)*(x1243)))+(((x1243)*(x1244)))+(((r02)*(sj1)*(sj2))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1246=((IkReal(1.00000000000000))*(sj2));
IkReal x1247=((px)*(sj0));
IkReal x1248=((pz)*(sj2));
IkReal x1249=((cj0)*(sj1));
IkReal x1250=((cj1)*(sj2));
IkReal x1251=((sj1)*(sj2));
IkReal x1252=((cj2)*(sj1));
IkReal x1253=((r00)*(sj0));
IkReal x1254=((cj0)*(cj1)*(cj2));
IkReal x1255=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.000787000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1253)*(x1255)))+(((r02)*(x1252)))+(((r02)*(x1250)))+(((IkReal(-1.00000000000000))*(r01)*(x1246)*(x1249)))+(((x1251)*(x1253)))+(((r01)*(x1254))));
evalcond[3]=((IkReal(-0.203418000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((x1247)*(x1251)))+(((cj1)*(x1248)))+(((IkReal(-1.00000000000000))*(x1247)*(x1255)))+(((IkReal(-0.521670000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(py)*(x1246)*(x1249)))+(((pz)*(x1252)))+(((py)*(x1254))));
evalcond[4]=((IkReal(0.0588310000000000))+(((cj0)*(py)*(x1250)))+(((IkReal(-1.00000000000000))*(x1247)*(x1252)))+(((cj2)*(py)*(x1249)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(cj1)*(x1246)*(x1247)))+(((sj1)*(x1248)))+(((IkReal(-1.00000000000000))*(pz)*(x1255)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1256=((IkReal(1.00000000000000))*(sj2));
IkReal x1257=((cj0)*(r01));
IkReal x1258=((r00)*(sj0));
IkReal x1259=((cj2)*(sj1));
if( IKabs(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj1)*(sj2)*(x1258)))+(((x1258)*(x1259)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1256)))+(((IkReal(-1.00000000000000))*(x1257)*(x1259)))+(((IkReal(-1.00000000000000))*(cj1)*(x1256)*(x1257)))+(((cj1)*(cj2)*(r02))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))))+IKsqr(((((cj1)*(sj2)*(x1258)))+(((x1258)*(x1259)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1256)))+(((IkReal(-1.00000000000000))*(x1257)*(x1259)))+(((IkReal(-1.00000000000000))*(cj1)*(x1256)*(x1257)))+(((cj1)*(cj2)*(r02)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))), ((((cj1)*(sj2)*(x1258)))+(((x1258)*(x1259)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1256)))+(((IkReal(-1.00000000000000))*(x1257)*(x1259)))+(((IkReal(-1.00000000000000))*(cj1)*(x1256)*(x1257)))+(((cj1)*(cj2)*(r02)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1260=((cj2)*(sj1));
IkReal x1261=((cj0)*(r01));
IkReal x1262=((cj1)*(sj2));
IkReal x1263=((IkReal(1.00000000000000))*(r00)*(sj0));
evalcond[0]=((((r01)*(sj0)))+(IKsin(j5))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1260)*(x1263)))+(((x1261)*(x1262)))+(((IkReal(-1.00000000000000))*(x1262)*(x1263)))+(IKcos(j5))+(((x1260)*(x1261)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((r02)*(sj1)*(sj2))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1264=((pz)*(sj1));
IkReal x1265=((cj0)*(py));
IkReal x1266=((IkReal(1.00000000000000))*(sj2));
IkReal x1267=((cj1)*(cj2));
IkReal x1268=((px)*(sj0));
IkReal x1269=((cj2)*(sj1));
IkReal x1270=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(0.190892000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.393523000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((pz)*(x1270)))+(((IkReal(-1.00000000000000))*(sj1)*(x1265)*(x1266)))+(((cj2)*(x1264)))+(((sj1)*(sj2)*(x1268)))+(((IkReal(-1.00000000000000))*(x1267)*(x1268)))+(((IkReal(-0.521670000000000))*(sj2)))+(((x1265)*(x1267))));
evalcond[4]=((IkReal(0.0588310000000000))+(((x1265)*(x1270)))+(((IkReal(-1.00000000000000))*(pz)*(x1267)))+(((IkReal(-1.00000000000000))*(x1268)*(x1269)))+(((IkReal(-1.00000000000000))*(cj1)*(x1266)*(x1268)))+(((IkReal(0.521670000000000))*(cj2)))+(((x1265)*(x1269)))+(((sj2)*(x1264)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1271=((IkReal(1.00000000000000))*(sj2));
IkReal x1272=((r02)*(sj1));
IkReal x1273=((cj0)*(r01));
IkReal x1274=((IkReal(1.00000000000000))*(cj2));
IkReal x1275=((cj1)*(r02));
IkReal x1276=((cj1)*(r00)*(sj0));
IkReal x1277=((r00)*(sj0)*(sj1));
if( IKabs(((((cj1)*(cj2)*(x1273)))+(((sj2)*(x1275)))+(((sj2)*(x1277)))+(((cj2)*(x1272)))+(((IkReal(-1.00000000000000))*(x1274)*(x1276)))+(((IkReal(-1.00000000000000))*(sj1)*(x1271)*(x1273))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((sj2)*(x1276)))+(((IkReal(-1.00000000000000))*(x1271)*(x1272)))+(((IkReal(-1.00000000000000))*(sj1)*(x1273)*(x1274)))+(((cj2)*(x1275)))+(((cj2)*(x1277)))+(((IkReal(-1.00000000000000))*(cj1)*(x1271)*(x1273))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((cj1)*(cj2)*(x1273)))+(((sj2)*(x1275)))+(((sj2)*(x1277)))+(((cj2)*(x1272)))+(((IkReal(-1.00000000000000))*(x1274)*(x1276)))+(((IkReal(-1.00000000000000))*(sj1)*(x1271)*(x1273)))))+IKsqr(((((sj2)*(x1276)))+(((IkReal(-1.00000000000000))*(x1271)*(x1272)))+(((IkReal(-1.00000000000000))*(sj1)*(x1273)*(x1274)))+(((cj2)*(x1275)))+(((cj2)*(x1277)))+(((IkReal(-1.00000000000000))*(cj1)*(x1271)*(x1273)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((cj1)*(cj2)*(x1273)))+(((sj2)*(x1275)))+(((sj2)*(x1277)))+(((cj2)*(x1272)))+(((IkReal(-1.00000000000000))*(x1274)*(x1276)))+(((IkReal(-1.00000000000000))*(sj1)*(x1271)*(x1273)))), ((((sj2)*(x1276)))+(((IkReal(-1.00000000000000))*(x1271)*(x1272)))+(((IkReal(-1.00000000000000))*(sj1)*(x1273)*(x1274)))+(((cj2)*(x1275)))+(((cj2)*(x1277)))+(((IkReal(-1.00000000000000))*(cj1)*(x1271)*(x1273)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1278=((r02)*(sj2));
IkReal x1279=((IkReal(1.00000000000000))*(sj2));
IkReal x1280=((r00)*(sj0));
IkReal x1281=((cj1)*(cj2));
IkReal x1282=((cj0)*(r01));
IkReal x1283=((sj1)*(x1282));
IkReal x1284=((IkReal(1.00000000000000))*(cj2)*(x1280));
evalcond[0]=((((sj1)*(x1278)))+(IKcos(j5))+(((IkReal(-1.00000000000000))*(r02)*(x1281)))+(((cj2)*(x1283)))+(((IkReal(-1.00000000000000))*(sj1)*(x1284)))+(((IkReal(-1.00000000000000))*(cj1)*(x1279)*(x1280)))+(((cj1)*(sj2)*(x1282))));
evalcond[1]=((((sj1)*(sj2)*(x1280)))+(((IkReal(-1.00000000000000))*(x1280)*(x1281)))+(((cj1)*(x1278)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1279)*(x1283)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((x1281)*(x1282))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1285=((pz)*(sj1));
IkReal x1286=((cj0)*(py));
IkReal x1287=((IkReal(1.00000000000000))*(sj2));
IkReal x1288=((cj1)*(cj2));
IkReal x1289=((px)*(sj0));
IkReal x1290=((cj2)*(sj1));
IkReal x1291=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(-0.190892000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.395097000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((sj1)*(sj2)*(x1289)))+(((IkReal(-1.00000000000000))*(x1288)*(x1289)))+(((IkReal(-1.00000000000000))*(sj1)*(x1286)*(x1287)))+(((pz)*(x1291)))+(((x1286)*(x1288)))+(((cj2)*(x1285)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(0.0588310000000000))+(((x1286)*(x1291)))+(((x1286)*(x1290)))+(((IkReal(-1.00000000000000))*(pz)*(x1288)))+(((IkReal(-1.00000000000000))*(cj1)*(x1287)*(x1289)))+(((IkReal(-1.00000000000000))*(x1289)*(x1290)))+(((IkReal(0.521670000000000))*(cj2)))+(((sj2)*(x1285)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1292=((IkReal(1.00000000000000))*(sj2));
IkReal x1293=((r02)*(sj1));
IkReal x1294=((cj0)*(r01));
IkReal x1295=((r00)*(sj0));
IkReal x1296=((cj1)*(r02));
IkReal x1297=((IkReal(1.00000000000000))*(cj2));
if( IKabs(((((IkReal(-1.00000000000000))*(sj1)*(x1292)*(x1295)))+(((cj1)*(cj2)*(x1295)))+(((IkReal(-1.00000000000000))*(cj1)*(x1294)*(x1297)))+(((IkReal(-1.00000000000000))*(x1293)*(x1297)))+(((sj1)*(sj2)*(x1294)))+(((IkReal(-1.00000000000000))*(x1292)*(x1296))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj2)*(x1296)))+(((IkReal(-1.00000000000000))*(sj1)*(x1294)*(x1297)))+(((cj1)*(sj2)*(x1295)))+(((cj2)*(sj1)*(x1295)))+(((IkReal(-1.00000000000000))*(x1292)*(x1293)))+(((IkReal(-1.00000000000000))*(cj1)*(x1292)*(x1294))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(sj1)*(x1292)*(x1295)))+(((cj1)*(cj2)*(x1295)))+(((IkReal(-1.00000000000000))*(cj1)*(x1294)*(x1297)))+(((IkReal(-1.00000000000000))*(x1293)*(x1297)))+(((sj1)*(sj2)*(x1294)))+(((IkReal(-1.00000000000000))*(x1292)*(x1296)))))+IKsqr(((((cj2)*(x1296)))+(((IkReal(-1.00000000000000))*(sj1)*(x1294)*(x1297)))+(((cj1)*(sj2)*(x1295)))+(((cj2)*(sj1)*(x1295)))+(((IkReal(-1.00000000000000))*(x1292)*(x1293)))+(((IkReal(-1.00000000000000))*(cj1)*(x1292)*(x1294)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(sj1)*(x1292)*(x1295)))+(((cj1)*(cj2)*(x1295)))+(((IkReal(-1.00000000000000))*(cj1)*(x1294)*(x1297)))+(((IkReal(-1.00000000000000))*(x1293)*(x1297)))+(((sj1)*(sj2)*(x1294)))+(((IkReal(-1.00000000000000))*(x1292)*(x1296)))), ((((cj2)*(x1296)))+(((IkReal(-1.00000000000000))*(sj1)*(x1294)*(x1297)))+(((cj1)*(sj2)*(x1295)))+(((cj2)*(sj1)*(x1295)))+(((IkReal(-1.00000000000000))*(x1292)*(x1293)))+(((IkReal(-1.00000000000000))*(cj1)*(x1292)*(x1294)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1298=((r02)*(sj2));
IkReal x1299=((IkReal(1.00000000000000))*(sj2));
IkReal x1300=((r00)*(sj0));
IkReal x1301=((cj1)*(cj2));
IkReal x1302=((cj0)*(r01));
IkReal x1303=((sj1)*(x1302));
IkReal x1304=((IkReal(1.00000000000000))*(cj2)*(x1300));
evalcond[0]=((((IkReal(-1.00000000000000))*(r02)*(x1301)))+(((cj1)*(sj2)*(x1302)))+(((sj1)*(x1298)))+(IKcos(j5))+(((IkReal(-1.00000000000000))*(sj1)*(x1304)))+(((cj2)*(x1303)))+(((IkReal(-1.00000000000000))*(cj1)*(x1299)*(x1300))));
evalcond[1]=((((sj1)*(sj2)*(x1300)))+(((IkReal(-1.00000000000000))*(x1299)*(x1303)))+(IKsin(j5))+(((cj1)*(x1298)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1300)*(x1301)))+(((x1301)*(x1302))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1305=((IkReal(1.00000000000000))*(sj2));
IkReal x1306=((r02)*(sj1));
IkReal x1307=((cj0)*(r01));
IkReal x1308=((IkReal(1.00000000000000))*(cj2));
IkReal x1309=((cj1)*(r02));
IkReal x1310=((cj1)*(r00)*(sj0));
IkReal x1311=((r00)*(sj0)*(sj1));
if( IKabs(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((cj1)*(cj2)*(x1307)))+(((sj2)*(x1311)))+(((sj2)*(x1309)))+(((IkReal(-1.00000000000000))*(x1308)*(x1310)))+(((IkReal(-1.00000000000000))*(sj1)*(x1305)*(x1307)))+(((cj2)*(x1306))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((sj2)*(x1310)))+(((IkReal(-1.00000000000000))*(sj1)*(x1307)*(x1308)))+(((IkReal(-1.00000000000000))*(cj1)*(x1305)*(x1307)))+(((cj2)*(x1311)))+(((cj2)*(x1309)))+(((IkReal(-1.00000000000000))*(x1305)*(x1306))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((cj1)*(cj2)*(x1307)))+(((sj2)*(x1311)))+(((sj2)*(x1309)))+(((IkReal(-1.00000000000000))*(x1308)*(x1310)))+(((IkReal(-1.00000000000000))*(sj1)*(x1305)*(x1307)))+(((cj2)*(x1306)))))))+IKsqr(((((sj2)*(x1310)))+(((IkReal(-1.00000000000000))*(sj1)*(x1307)*(x1308)))+(((IkReal(-1.00000000000000))*(cj1)*(x1305)*(x1307)))+(((cj2)*(x1311)))+(((cj2)*(x1309)))+(((IkReal(-1.00000000000000))*(x1305)*(x1306)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((cj1)*(cj2)*(x1307)))+(((sj2)*(x1311)))+(((sj2)*(x1309)))+(((IkReal(-1.00000000000000))*(x1308)*(x1310)))+(((IkReal(-1.00000000000000))*(sj1)*(x1305)*(x1307)))+(((cj2)*(x1306)))))), ((((sj2)*(x1310)))+(((IkReal(-1.00000000000000))*(sj1)*(x1307)*(x1308)))+(((IkReal(-1.00000000000000))*(cj1)*(x1305)*(x1307)))+(((cj2)*(x1311)))+(((cj2)*(x1309)))+(((IkReal(-1.00000000000000))*(x1305)*(x1306)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1312=IKsin(j5);
IkReal x1313=((r02)*(sj2));
IkReal x1314=((IkReal(1.00000000000000))*(sj2));
IkReal x1315=((r00)*(sj0));
IkReal x1316=((IkReal(1.00000000000000))*(cj2));
IkReal x1317=((IkReal(1.00000000000000))*(x1312));
IkReal x1318=((cj0)*(r01)*(sj1));
IkReal x1319=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x1317)))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1316)))+(((sj2)*(x1319)))+(((IkReal(-1.00000000000000))*(sj1)*(x1315)*(x1316)))+(IKcos(j5))+(((cj2)*(x1318)))+(((sj1)*(x1313)))+(((IkReal(-1.00000000000000))*(cj1)*(x1314)*(x1315))));
evalcond[2]=((((sj1)*(sj2)*(x1315)))+(((IkReal(-1.00000000000000))*(x1314)*(x1318)))+(((IkReal(-1.00000000000000))*(sj4)*(x1317)))+(((cj2)*(x1319)))+(((cj1)*(x1313)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(x1315)*(x1316))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1320=((IkReal(1.00000000000000))*(sj2));
IkReal x1321=((cj0)*(r01));
IkReal x1322=((r00)*(sj0));
IkReal x1323=((cj2)*(sj1));
if( IKabs(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x1321)*(x1323)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1320)))+(((cj1)*(sj2)*(x1322)))+(((x1322)*(x1323)))+(((IkReal(-1.00000000000000))*(cj1)*(x1320)*(x1321)))+(((cj1)*(cj2)*(r02))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))))+IKsqr(((((IkReal(-1.00000000000000))*(x1321)*(x1323)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1320)))+(((cj1)*(sj2)*(x1322)))+(((x1322)*(x1323)))+(((IkReal(-1.00000000000000))*(cj1)*(x1320)*(x1321)))+(((cj1)*(cj2)*(r02)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))), ((((IkReal(-1.00000000000000))*(x1321)*(x1323)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1320)))+(((cj1)*(sj2)*(x1322)))+(((x1322)*(x1323)))+(((IkReal(-1.00000000000000))*(cj1)*(x1320)*(x1321)))+(((cj1)*(cj2)*(r02)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1324=IKsin(j5);
IkReal x1325=((r02)*(sj2));
IkReal x1326=((IkReal(1.00000000000000))*(sj2));
IkReal x1327=((r00)*(sj0));
IkReal x1328=((IkReal(1.00000000000000))*(cj2));
IkReal x1329=((IkReal(1.00000000000000))*(x1324));
IkReal x1330=((cj0)*(r01)*(sj1));
IkReal x1331=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x1329)))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1328)))+(((IkReal(-1.00000000000000))*(cj1)*(x1326)*(x1327)))+(((IkReal(-1.00000000000000))*(sj1)*(x1327)*(x1328)))+(IKcos(j5))+(((sj2)*(x1331)))+(((cj2)*(x1330)))+(((sj1)*(x1325))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1326)*(x1330)))+(((IkReal(-1.00000000000000))*(cj1)*(x1327)*(x1328)))+(((IkReal(-1.00000000000000))*(sj4)*(x1329)))+(((cj2)*(r02)*(sj1)))+(((cj1)*(x1325)))+(((cj2)*(x1331)))+(((sj1)*(sj2)*(x1327))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1332=((cj1)*(sj2));
IkReal x1333=((px)*(sj0));
IkReal x1334=((sj1)*(sj2));
IkReal x1335=((cj0)*(py));
IkReal x1336=((cj2)*(pz));
IkReal x1337=((IkReal(1.00000000000000))*(cj1));
IkReal x1338=((cj2)*(x1335));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(0.190892000000000))*(sj4)))+(((IkReal(0.000787000000000000))*(cj4)))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((IkReal(-0.127870000000000))+(((IkReal(0.190892000000000))*(cj4)))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(cj2)*(x1333)*(x1337)))+(((pz)*(x1332)))+(((cj1)*(x1338)))+(((sj1)*(x1336)))+(((IkReal(-0.521670000000000))*(sj2)))+(((x1333)*(x1334)))+(((IkReal(-0.000787000000000000))*(sj4)))+(((IkReal(-1.00000000000000))*(x1334)*(x1335))));
evalcond[3]=((IkReal(-0.0438310000000000))+(((IkReal(-1.00000000000000))*(x1332)*(x1333)))+(((pz)*(x1334)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x1333)))+(((IkReal(-1.00000000000000))*(x1336)*(x1337)))+(((sj1)*(x1338)))+(((IkReal(0.00982000000000000))*(sj2)))+(((x1332)*(x1335))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x1339=((IkReal(1.00000000000000))*(sj2));
IkReal x1340=((px)*(sj0));
IkReal x1341=((pz)*(sj2));
IkReal x1342=((cj0)*(sj1));
IkReal x1343=((cj1)*(sj2));
IkReal x1344=((sj1)*(sj2));
IkReal x1345=((cj2)*(sj1));
IkReal x1346=((r00)*(sj0));
IkReal x1347=((cj0)*(cj1)*(cj2));
IkReal x1348=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.000787000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1346)*(x1348)))+(((x1344)*(x1346)))+(((r02)*(x1343)))+(((r02)*(x1345)))+(((r01)*(x1347)))+(((IkReal(-1.00000000000000))*(r01)*(x1339)*(x1342))));
evalcond[3]=((IkReal(0.0630220000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x1340)*(x1348)))+(((cj1)*(x1341)))+(((IkReal(-1.00000000000000))*(py)*(x1339)*(x1342)))+(((x1340)*(x1344)))+(((IkReal(-0.521670000000000))*(sj2)))+(((pz)*(x1345)))+(((py)*(x1347))));
evalcond[4]=((IkReal(-0.0438310000000000))+(((sj1)*(x1341)))+(((IkReal(-1.00000000000000))*(pz)*(x1348)))+(((IkReal(-1.00000000000000))*(cj1)*(x1339)*(x1340)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x1340)*(x1345)))+(((cj2)*(py)*(x1342)))+(((cj0)*(py)*(x1343)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1349=((cj2)*(sj1));
IkReal x1350=((cj0)*(r01));
IkReal x1351=((cj1)*(sj2));
IkReal x1352=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((r01)*(sj0)))+(((cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x1349)*(x1350)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((x1350)*(x1351)))+(((IkReal(-1.00000000000000))*(x1349)*(x1352)))+(((r02)*(sj1)*(sj2)))+(((IkReal(-1.00000000000000))*(x1351)*(x1352))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r01)*(sj0)))+(((cj0)*(r00)))))+IKsqr(((((x1349)*(x1350)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((x1350)*(x1351)))+(((IkReal(-1.00000000000000))*(x1349)*(x1352)))+(((r02)*(sj1)*(sj2)))+(((IkReal(-1.00000000000000))*(x1351)*(x1352)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((r01)*(sj0)))+(((cj0)*(r00)))), ((((x1349)*(x1350)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((x1350)*(x1351)))+(((IkReal(-1.00000000000000))*(x1349)*(x1352)))+(((r02)*(sj1)*(sj2)))+(((IkReal(-1.00000000000000))*(x1351)*(x1352)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1353=((cj2)*(sj1));
IkReal x1354=((cj0)*(r01));
IkReal x1355=((cj1)*(sj2));
IkReal x1356=((IkReal(1.00000000000000))*(r00)*(sj0));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((cj0)*(r00))));
evalcond[1]=((((x1354)*(x1355)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((IkReal(-1.00000000000000))*(x1355)*(x1356)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((r02)*(sj1)*(sj2)))+(((x1353)*(x1354)))+(((IkReal(-1.00000000000000))*(x1353)*(x1356))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1357=((IkReal(1.00000000000000))*(sj2));
IkReal x1358=((px)*(sj0));
IkReal x1359=((pz)*(sj2));
IkReal x1360=((cj0)*(sj1));
IkReal x1361=((cj1)*(sj2));
IkReal x1362=((sj1)*(sj2));
IkReal x1363=((cj2)*(sj1));
IkReal x1364=((r00)*(sj0));
IkReal x1365=((cj0)*(cj1)*(cj2));
IkReal x1366=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.000787000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1364)*(x1366)))+(((r02)*(x1363)))+(((r02)*(x1361)))+(((IkReal(-1.00000000000000))*(r01)*(x1357)*(x1360)))+(((r01)*(x1365)))+(((x1362)*(x1364))));
evalcond[3]=((IkReal(-0.318762000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((cj1)*(x1359)))+(((x1358)*(x1362)))+(((IkReal(-1.00000000000000))*(py)*(x1357)*(x1360)))+(((py)*(x1365)))+(((pz)*(x1363)))+(((IkReal(-0.521670000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(x1358)*(x1366))));
evalcond[4]=((IkReal(-0.0438310000000000))+(((IkReal(-1.00000000000000))*(pz)*(x1366)))+(((sj1)*(x1359)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x1358)*(x1363)))+(((cj2)*(py)*(x1360)))+(((IkReal(-1.00000000000000))*(cj1)*(x1357)*(x1358)))+(((cj0)*(py)*(x1361)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1367=((cj2)*(sj1));
IkReal x1368=((cj0)*(r01));
IkReal x1369=((cj1)*(sj2));
IkReal x1370=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x1367)*(x1368)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(x1367)*(x1370)))+(((x1368)*(x1369)))+(((r02)*(sj1)*(sj2)))+(((IkReal(-1.00000000000000))*(x1369)*(x1370))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))))+IKsqr(((((x1367)*(x1368)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(x1367)*(x1370)))+(((x1368)*(x1369)))+(((r02)*(sj1)*(sj2)))+(((IkReal(-1.00000000000000))*(x1369)*(x1370)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))), ((((x1367)*(x1368)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(x1367)*(x1370)))+(((x1368)*(x1369)))+(((r02)*(sj1)*(sj2)))+(((IkReal(-1.00000000000000))*(x1369)*(x1370)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1371=((cj2)*(sj1));
IkReal x1372=((cj0)*(r01));
IkReal x1373=((cj1)*(sj2));
IkReal x1374=((IkReal(1.00000000000000))*(r00)*(sj0));
evalcond[0]=((((r01)*(sj0)))+(IKsin(j5))+(((cj0)*(r00))));
evalcond[1]=((((x1372)*(x1373)))+(((IkReal(-1.00000000000000))*(x1371)*(x1374)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((x1371)*(x1372)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(x1373)*(x1374)))+(((r02)*(sj1)*(sj2))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1375=((pz)*(sj1));
IkReal x1376=((cj0)*(py));
IkReal x1377=((IkReal(1.00000000000000))*(sj2));
IkReal x1378=((cj1)*(cj2));
IkReal x1379=((px)*(sj0));
IkReal x1380=((cj2)*(sj1));
IkReal x1381=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(0.190892000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.128657000000000))+(((x1376)*(x1378)))+(((IkReal(0.00982000000000000))*(cj2)))+(((sj1)*(sj2)*(x1379)))+(((IkReal(-1.00000000000000))*(sj1)*(x1376)*(x1377)))+(((pz)*(x1381)))+(((IkReal(-1.00000000000000))*(x1378)*(x1379)))+(((cj2)*(x1375)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(-0.0438310000000000))+(((IkReal(-1.00000000000000))*(cj1)*(x1377)*(x1379)))+(((sj2)*(x1375)))+(((IkReal(-1.00000000000000))*(pz)*(x1378)))+(((IkReal(-1.00000000000000))*(x1379)*(x1380)))+(((IkReal(0.521670000000000))*(cj2)))+(((x1376)*(x1380)))+(((x1376)*(x1381)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1382=((sj1)*(sj2));
IkReal x1383=((cj2)*(sj1));
IkReal x1384=((cj1)*(sj2));
IkReal x1385=((IkReal(1.00000000000000))*(r02));
IkReal x1386=((cj1)*(cj2));
IkReal x1387=((cj0)*(r01));
IkReal x1388=((sj1)*(x1387));
IkReal x1389=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((IkReal(-1.00000000000000))*(x1383)*(x1385)))+(((IkReal(-1.00000000000000))*(x1384)*(x1385)))+(((IkReal(-1.00000000000000))*(x1382)*(x1389)))+(((IkReal(-1.00000000000000))*(x1386)*(x1387)))+(((r00)*(sj0)*(x1386)))+(((x1382)*(x1387))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x1383)*(x1389)))+(((IkReal(-1.00000000000000))*(x1384)*(x1389)))+(((x1384)*(x1387)))+(((IkReal(-1.00000000000000))*(x1385)*(x1386)))+(((r02)*(x1382)))+(((x1383)*(x1387))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x1383)*(x1385)))+(((IkReal(-1.00000000000000))*(x1384)*(x1385)))+(((IkReal(-1.00000000000000))*(x1382)*(x1389)))+(((IkReal(-1.00000000000000))*(x1386)*(x1387)))+(((r00)*(sj0)*(x1386)))+(((x1382)*(x1387)))))+IKsqr(((((IkReal(-1.00000000000000))*(x1383)*(x1389)))+(((IkReal(-1.00000000000000))*(x1384)*(x1389)))+(((x1384)*(x1387)))+(((IkReal(-1.00000000000000))*(x1385)*(x1386)))+(((r02)*(x1382)))+(((x1383)*(x1387)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x1383)*(x1385)))+(((IkReal(-1.00000000000000))*(x1384)*(x1385)))+(((IkReal(-1.00000000000000))*(x1382)*(x1389)))+(((IkReal(-1.00000000000000))*(x1386)*(x1387)))+(((r00)*(sj0)*(x1386)))+(((x1382)*(x1387)))), ((((IkReal(-1.00000000000000))*(x1383)*(x1389)))+(((IkReal(-1.00000000000000))*(x1384)*(x1389)))+(((x1384)*(x1387)))+(((IkReal(-1.00000000000000))*(x1385)*(x1386)))+(((r02)*(x1382)))+(((x1383)*(x1387)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1390=((r02)*(sj2));
IkReal x1391=((IkReal(1.00000000000000))*(sj2));
IkReal x1392=((r00)*(sj0));
IkReal x1393=((cj1)*(cj2));
IkReal x1394=((cj0)*(r01));
IkReal x1395=((sj1)*(x1394));
IkReal x1396=((IkReal(1.00000000000000))*(cj2)*(x1392));
evalcond[0]=((((cj2)*(x1395)))+(((IkReal(-1.00000000000000))*(r02)*(x1393)))+(((IkReal(-1.00000000000000))*(cj1)*(x1391)*(x1392)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((cj1)*(sj2)*(x1394)))+(((sj1)*(x1390)))+(((IkReal(-1.00000000000000))*(sj1)*(x1396))));
evalcond[1]=((((x1393)*(x1394)))+(((IkReal(-1.00000000000000))*(x1391)*(x1395)))+(((sj1)*(sj2)*(x1392)))+(IKsin(j5))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1392)*(x1393)))+(((cj1)*(x1390))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1397=((pz)*(sj1));
IkReal x1398=((cj0)*(py));
IkReal x1399=((IkReal(1.00000000000000))*(sj2));
IkReal x1400=((cj1)*(cj2));
IkReal x1401=((px)*(sj0));
IkReal x1402=((cj2)*(sj1));
IkReal x1403=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(-0.190892000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.127083000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((cj2)*(x1397)))+(((IkReal(-1.00000000000000))*(sj1)*(x1398)*(x1399)))+(((pz)*(x1403)))+(((IkReal(-1.00000000000000))*(x1400)*(x1401)))+(((x1398)*(x1400)))+(((sj1)*(sj2)*(x1401)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(-0.0438310000000000))+(((IkReal(-1.00000000000000))*(pz)*(x1400)))+(((IkReal(0.521670000000000))*(cj2)))+(((sj2)*(x1397)))+(((IkReal(-1.00000000000000))*(cj1)*(x1399)*(x1401)))+(((IkReal(-1.00000000000000))*(x1401)*(x1402)))+(((x1398)*(x1403)))+(((x1398)*(x1402)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1404=((cj2)*(sj1));
IkReal x1405=((cj0)*(r01));
IkReal x1406=((sj1)*(sj2));
IkReal x1407=((cj1)*(cj2));
IkReal x1408=((cj1)*(sj2));
IkReal x1409=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((IkReal(-1.00000000000000))*(x1405)*(x1406)))+(((r00)*(sj0)*(x1406)))+(((r02)*(x1408)))+(((r02)*(x1404)))+(((x1405)*(x1407)))+(((IkReal(-1.00000000000000))*(x1407)*(x1409))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r02)*(x1407)))+(((r02)*(x1406)))+(((x1405)*(x1408)))+(((IkReal(-1.00000000000000))*(x1404)*(x1409)))+(((x1404)*(x1405)))+(((IkReal(-1.00000000000000))*(x1408)*(x1409))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x1405)*(x1406)))+(((r00)*(sj0)*(x1406)))+(((r02)*(x1408)))+(((r02)*(x1404)))+(((x1405)*(x1407)))+(((IkReal(-1.00000000000000))*(x1407)*(x1409)))))+IKsqr(((((IkReal(-1.00000000000000))*(r02)*(x1407)))+(((r02)*(x1406)))+(((x1405)*(x1408)))+(((IkReal(-1.00000000000000))*(x1404)*(x1409)))+(((x1404)*(x1405)))+(((IkReal(-1.00000000000000))*(x1408)*(x1409)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x1405)*(x1406)))+(((r00)*(sj0)*(x1406)))+(((r02)*(x1408)))+(((r02)*(x1404)))+(((x1405)*(x1407)))+(((IkReal(-1.00000000000000))*(x1407)*(x1409)))), ((((IkReal(-1.00000000000000))*(r02)*(x1407)))+(((r02)*(x1406)))+(((x1405)*(x1408)))+(((IkReal(-1.00000000000000))*(x1404)*(x1409)))+(((x1404)*(x1405)))+(((IkReal(-1.00000000000000))*(x1408)*(x1409)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1410=((r02)*(sj2));
IkReal x1411=((IkReal(1.00000000000000))*(sj2));
IkReal x1412=((r00)*(sj0));
IkReal x1413=((cj1)*(cj2));
IkReal x1414=((cj0)*(r01));
IkReal x1415=((sj1)*(x1414));
IkReal x1416=((IkReal(1.00000000000000))*(cj2)*(x1412));
evalcond[0]=((((cj2)*(x1415)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((cj1)*(sj2)*(x1414)))+(((IkReal(-1.00000000000000))*(cj1)*(x1411)*(x1412)))+(((IkReal(-1.00000000000000))*(r02)*(x1413)))+(((IkReal(-1.00000000000000))*(sj1)*(x1416)))+(((sj1)*(x1410))));
evalcond[1]=((((x1413)*(x1414)))+(((IkReal(-1.00000000000000))*(x1411)*(x1415)))+(((cj2)*(r02)*(sj1)))+(((cj1)*(x1410)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((sj1)*(sj2)*(x1412)))+(((IkReal(-1.00000000000000))*(x1412)*(x1413))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1417=((sj1)*(sj2));
IkReal x1418=((cj2)*(sj1));
IkReal x1419=((cj1)*(sj2));
IkReal x1420=((IkReal(1.00000000000000))*(r02));
IkReal x1421=((cj1)*(cj2));
IkReal x1422=((cj0)*(r01));
IkReal x1423=((sj1)*(x1422));
IkReal x1424=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x1417)*(x1424)))+(((r00)*(sj0)*(x1421)))+(((IkReal(-1.00000000000000))*(x1418)*(x1420)))+(((IkReal(-1.00000000000000))*(x1421)*(x1422)))+(((IkReal(-1.00000000000000))*(x1419)*(x1420)))+(((x1417)*(x1422))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x1420)*(x1421)))+(((IkReal(-1.00000000000000))*(x1418)*(x1424)))+(((IkReal(-1.00000000000000))*(x1419)*(x1424)))+(((x1419)*(x1422)))+(((x1418)*(x1422)))+(((r02)*(x1417))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x1417)*(x1424)))+(((r00)*(sj0)*(x1421)))+(((IkReal(-1.00000000000000))*(x1418)*(x1420)))+(((IkReal(-1.00000000000000))*(x1421)*(x1422)))+(((IkReal(-1.00000000000000))*(x1419)*(x1420)))+(((x1417)*(x1422)))))))+IKsqr(((((IkReal(-1.00000000000000))*(x1420)*(x1421)))+(((IkReal(-1.00000000000000))*(x1418)*(x1424)))+(((IkReal(-1.00000000000000))*(x1419)*(x1424)))+(((x1419)*(x1422)))+(((x1418)*(x1422)))+(((r02)*(x1417)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x1417)*(x1424)))+(((r00)*(sj0)*(x1421)))+(((IkReal(-1.00000000000000))*(x1418)*(x1420)))+(((IkReal(-1.00000000000000))*(x1421)*(x1422)))+(((IkReal(-1.00000000000000))*(x1419)*(x1420)))+(((x1417)*(x1422)))))), ((((IkReal(-1.00000000000000))*(x1420)*(x1421)))+(((IkReal(-1.00000000000000))*(x1418)*(x1424)))+(((IkReal(-1.00000000000000))*(x1419)*(x1424)))+(((x1419)*(x1422)))+(((x1418)*(x1422)))+(((r02)*(x1417)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1425=IKsin(j5);
IkReal x1426=((r02)*(sj2));
IkReal x1427=((IkReal(1.00000000000000))*(sj2));
IkReal x1428=((r00)*(sj0));
IkReal x1429=((IkReal(1.00000000000000))*(cj2));
IkReal x1430=((cj0)*(r01)*(sj1));
IkReal x1431=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x1425)))+(((cj0)*(r00))));
evalcond[1]=((((sj1)*(x1426)))+(((IkReal(-1.00000000000000))*(sj1)*(x1428)*(x1429)))+(((IkReal(-1.00000000000000))*(cj1)*(x1427)*(x1428)))+(((sj2)*(x1431)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1429)))+(((cj2)*(x1430))));
evalcond[2]=((((sj1)*(sj2)*(x1428)))+(((cj1)*(x1426)))+(((sj4)*(x1425)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1427)*(x1430)))+(((cj2)*(x1431)))+(((IkReal(-1.00000000000000))*(cj1)*(x1428)*(x1429))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1432=((cj2)*(sj1));
IkReal x1433=((cj0)*(r01));
IkReal x1434=((cj1)*(sj2));
IkReal x1435=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x1432)*(x1433)))+(((IkReal(-1.00000000000000))*(x1434)*(x1435)))+(((x1433)*(x1434)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(x1432)*(x1435)))+(((r02)*(sj1)*(sj2))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))))+IKsqr(((((x1432)*(x1433)))+(((IkReal(-1.00000000000000))*(x1434)*(x1435)))+(((x1433)*(x1434)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(x1432)*(x1435)))+(((r02)*(sj1)*(sj2)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))), ((((x1432)*(x1433)))+(((IkReal(-1.00000000000000))*(x1434)*(x1435)))+(((x1433)*(x1434)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(x1432)*(x1435)))+(((r02)*(sj1)*(sj2)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1436=IKsin(j5);
IkReal x1437=((r02)*(sj2));
IkReal x1438=((IkReal(1.00000000000000))*(sj2));
IkReal x1439=((r00)*(sj0));
IkReal x1440=((IkReal(1.00000000000000))*(cj2));
IkReal x1441=((cj0)*(r01)*(sj1));
IkReal x1442=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x1436)))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1440)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((sj1)*(x1437)))+(((cj2)*(x1441)))+(((sj2)*(x1442)))+(((IkReal(-1.00000000000000))*(sj1)*(x1439)*(x1440)))+(((IkReal(-1.00000000000000))*(cj1)*(x1438)*(x1439))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1438)*(x1441)))+(((IkReal(-1.00000000000000))*(cj1)*(x1439)*(x1440)))+(((cj2)*(r02)*(sj1)))+(((cj2)*(x1442)))+(((sj1)*(sj2)*(x1439)))+(((sj4)*(x1436)))+(((cj1)*(x1437))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1443=((cj1)*(sj2));
IkReal x1444=((px)*(sj0));
IkReal x1445=((sj1)*(sj2));
IkReal x1446=((cj0)*(py));
IkReal x1447=((cj2)*(pz));
IkReal x1448=((IkReal(1.00000000000000))*(cj1));
IkReal x1449=((cj2)*(x1446));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.000787000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((IkReal(-0.261090000000000))+(((x1444)*(x1445)))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(cj2)*(x1444)*(x1448)))+(((cj1)*(x1449)))+(((sj1)*(x1447)))+(((IkReal(-1.00000000000000))*(x1445)*(x1446)))+(((IkReal(0.0513310000000000))*(sj3)))+(((pz)*(x1443)))+(((IkReal(-0.324112000000000))*(cj3)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[3]=((IkReal(0.00750000000000000))+(((IkReal(-1.00000000000000))*(x1443)*(x1444)))+(((x1443)*(x1446)))+(((sj1)*(x1449)))+(((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x1444)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x1447)*(x1448)))+(((pz)*(x1445)))+(((IkReal(0.0513310000000000))*(cj3)))+(((IkReal(0.324112000000000))*(sj3)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1450=((cj0)*(r01));
IkReal x1451=((sj1)*(sj2));
IkReal x1452=((IkReal(1.00000000000000))*(cj1));
IkReal x1453=((r00)*(sj0));
if( IKabs(((((r01)*(sj0)))+(((cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((x1450)*(x1451)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1452)))+(((cj1)*(cj2)*(x1453)))+(((IkReal(-1.00000000000000))*(x1451)*(x1453)))+(((IkReal(-1.00000000000000))*(cj2)*(x1450)*(x1452))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r01)*(sj0)))+(((cj0)*(r00)))))+IKsqr(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((x1450)*(x1451)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1452)))+(((cj1)*(cj2)*(x1453)))+(((IkReal(-1.00000000000000))*(x1451)*(x1453)))+(((IkReal(-1.00000000000000))*(cj2)*(x1450)*(x1452)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((r01)*(sj0)))+(((cj0)*(r00)))), ((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((x1450)*(x1451)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1452)))+(((cj1)*(cj2)*(x1453)))+(((IkReal(-1.00000000000000))*(x1451)*(x1453)))+(((IkReal(-1.00000000000000))*(cj2)*(x1450)*(x1452)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1454=IKcos(j5);
IkReal x1455=((r02)*(sj2));
IkReal x1456=((IkReal(1.00000000000000))*(sj2));
IkReal x1457=((r00)*(sj0));
IkReal x1458=((IkReal(1.00000000000000))*(cj2));
IkReal x1459=((cj0)*(r01)*(sj1));
IkReal x1460=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1458)))+(((sj2)*(x1460)))+(((cj2)*(x1459)))+(((IkReal(-1.00000000000000))*(sj1)*(x1457)*(x1458)))+(((sj1)*(x1455)))+(((cj3)*(x1454)))+(((IkReal(-1.00000000000000))*(cj1)*(x1456)*(x1457))));
evalcond[2]=((((cj2)*(x1460)))+(((cj1)*(x1455)))+(((sj3)*(x1454)))+(((sj1)*(sj2)*(x1457)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1456)*(x1459)))+(((IkReal(-1.00000000000000))*(cj1)*(x1457)*(x1458))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1461=((IkReal(1.00000000000000))*(sj2));
IkReal x1462=((cj0)*(r01));
IkReal x1463=((cj2)*(sj1));
IkReal x1464=((r00)*(sj0));
if( IKabs(((((r01)*(sj0)))+(((cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((x1463)*(x1464)))+(((cj1)*(sj2)*(x1464)))+(((IkReal(-1.00000000000000))*(cj1)*(x1461)*(x1462)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1461)))+(((IkReal(-1.00000000000000))*(x1462)*(x1463)))+(((cj1)*(cj2)*(r02))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r01)*(sj0)))+(((cj0)*(r00)))))+IKsqr(((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((x1463)*(x1464)))+(((cj1)*(sj2)*(x1464)))+(((IkReal(-1.00000000000000))*(cj1)*(x1461)*(x1462)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1461)))+(((IkReal(-1.00000000000000))*(x1462)*(x1463)))+(((cj1)*(cj2)*(r02)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((r01)*(sj0)))+(((cj0)*(r00)))), ((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((x1463)*(x1464)))+(((cj1)*(sj2)*(x1464)))+(((IkReal(-1.00000000000000))*(cj1)*(x1461)*(x1462)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1461)))+(((IkReal(-1.00000000000000))*(x1462)*(x1463)))+(((cj1)*(cj2)*(r02)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1465=IKcos(j5);
IkReal x1466=((r02)*(sj2));
IkReal x1467=((IkReal(1.00000000000000))*(sj2));
IkReal x1468=((r00)*(sj0));
IkReal x1469=((IkReal(1.00000000000000))*(cj2));
IkReal x1470=((cj0)*(r01)*(sj1));
IkReal x1471=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj1)*(x1468)*(x1469)))+(((cj3)*(x1465)))+(((IkReal(-1.00000000000000))*(cj1)*(x1467)*(x1468)))+(((cj2)*(x1470)))+(((sj2)*(x1471)))+(((sj1)*(x1466)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1469))));
evalcond[2]=((((sj3)*(x1465)))+(((IkReal(-1.00000000000000))*(cj1)*(x1468)*(x1469)))+(((cj2)*(x1471)))+(((IkReal(-1.00000000000000))*(x1467)*(x1470)))+(((cj1)*(x1466)))+(((cj2)*(r02)*(sj1)))+(((sj1)*(sj2)*(x1468))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1472=((cj1)*(sj2));
IkReal x1473=((px)*(sj0));
IkReal x1474=((sj1)*(sj2));
IkReal x1475=((cj0)*(py));
IkReal x1476=((cj2)*(pz));
IkReal x1477=((IkReal(1.00000000000000))*(cj1));
IkReal x1478=((cj2)*(x1475));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.000787000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((IkReal(-0.261090000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(0.0576720000000000))*(cj3)))+(((cj1)*(x1478)))+(((sj1)*(x1476)))+(((IkReal(-1.00000000000000))*(x1474)*(x1475)))+(((IkReal(-1.00000000000000))*(cj2)*(x1473)*(x1477)))+(((x1473)*(x1474)))+(((IkReal(0.0513310000000000))*(sj3)))+(((pz)*(x1472)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[3]=((IkReal(0.00750000000000000))+(((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x1473)))+(((IkReal(-1.00000000000000))*(x1476)*(x1477)))+(((sj1)*(x1478)))+(((x1472)*(x1475)))+(((IkReal(0.521670000000000))*(cj2)))+(((pz)*(x1474)))+(((IkReal(-0.0576720000000000))*(sj3)))+(((IkReal(0.0513310000000000))*(cj3)))+(((IkReal(0.00982000000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(x1472)*(x1473))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1479=((sj1)*(sj2));
IkReal x1480=((cj0)*(r01));
IkReal x1481=((r00)*(sj0));
IkReal x1482=((IkReal(1.00000000000000))*(cj1));
if( IKabs(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x1479)*(x1481)))+(((IkReal(-1.00000000000000))*(cj2)*(x1480)*(x1482)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1482)))+(((cj1)*(cj2)*(x1481)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((x1479)*(x1480))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))))+IKsqr(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x1479)*(x1481)))+(((IkReal(-1.00000000000000))*(cj2)*(x1480)*(x1482)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1482)))+(((cj1)*(cj2)*(x1481)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((x1479)*(x1480)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))), ((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x1479)*(x1481)))+(((IkReal(-1.00000000000000))*(cj2)*(x1480)*(x1482)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1482)))+(((cj1)*(cj2)*(x1481)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((x1479)*(x1480)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1483=IKcos(j5);
IkReal x1484=((r02)*(sj2));
IkReal x1485=((IkReal(1.00000000000000))*(sj2));
IkReal x1486=((r00)*(sj0));
IkReal x1487=((IkReal(1.00000000000000))*(cj2));
IkReal x1488=((cj0)*(r01)*(sj1));
IkReal x1489=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(IKsin(j5))+(((cj0)*(r00))));
evalcond[1]=((((sj2)*(x1489)))+(((cj2)*(x1488)))+(((cj3)*(x1483)))+(((sj1)*(x1484)))+(((IkReal(-1.00000000000000))*(sj1)*(x1486)*(x1487)))+(((IkReal(-1.00000000000000))*(cj1)*(x1485)*(x1486)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1487))));
evalcond[2]=((((cj2)*(x1489)))+(((sj3)*(x1483)))+(((IkReal(-1.00000000000000))*(x1485)*(x1488)))+(((cj1)*(x1484)))+(((sj1)*(sj2)*(x1486)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(x1486)*(x1487))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1490=((IkReal(1.00000000000000))*(sj2));
IkReal x1491=((cj0)*(r01));
IkReal x1492=((cj2)*(sj1));
IkReal x1493=((r00)*(sj0));
if( IKabs(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x1491)*(x1492)))+(((IkReal(-1.00000000000000))*(cj1)*(x1490)*(x1491)))+(((x1492)*(x1493)))+(((cj1)*(sj2)*(x1493)))+(((cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1490))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))))+IKsqr(((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x1491)*(x1492)))+(((IkReal(-1.00000000000000))*(cj1)*(x1490)*(x1491)))+(((x1492)*(x1493)))+(((cj1)*(sj2)*(x1493)))+(((cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1490)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))), ((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x1491)*(x1492)))+(((IkReal(-1.00000000000000))*(cj1)*(x1490)*(x1491)))+(((x1492)*(x1493)))+(((cj1)*(sj2)*(x1493)))+(((cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1490)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1494=IKcos(j5);
IkReal x1495=((r02)*(sj2));
IkReal x1496=((IkReal(1.00000000000000))*(sj2));
IkReal x1497=((r00)*(sj0));
IkReal x1498=((IkReal(1.00000000000000))*(cj2));
IkReal x1499=((cj0)*(r01)*(sj1));
IkReal x1500=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(IKsin(j5))+(((cj0)*(r00))));
evalcond[1]=((((cj3)*(x1494)))+(((IkReal(-1.00000000000000))*(cj1)*(x1496)*(x1497)))+(((cj2)*(x1499)))+(((sj1)*(x1495)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1498)))+(((IkReal(-1.00000000000000))*(sj1)*(x1497)*(x1498)))+(((sj2)*(x1500))));
evalcond[2]=((((sj3)*(x1494)))+(((cj1)*(x1495)))+(((IkReal(-1.00000000000000))*(cj1)*(x1497)*(x1498)))+(((cj2)*(x1500)))+(((IkReal(-1.00000000000000))*(x1496)*(x1499)))+(((cj2)*(r02)*(sj1)))+(((sj1)*(sj2)*(x1497))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1501=((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30);
IkReal x1502=((cj0)*(r00));
IkReal x1503=((r00)*(sj0));
IkReal x1504=((r01)*(sj0));
IkReal x1505=((cj4)*(r02));
IkReal x1506=((cj1)*(cj4)*(sj2));
IkReal x1507=((IkReal(1.00000000000000))*(sj3)*(sj4));
IkReal x1508=((IkReal(1.00000000000000))*(cj0)*(r01));
IkReal x1509=((cj2)*(cj4)*(sj1));
if( IKabs(((x1501)*(((x1502)+(x1504))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x1501)*(((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x1504)*(x1507)))+(((IkReal(-1.00000000000000))*(x1506)*(x1508)))+(((IkReal(-1.00000000000000))*(sj1)*(sj2)*(x1505)))+(((x1503)*(x1509)))+(((x1503)*(x1506)))+(((IkReal(-1.00000000000000))*(x1502)*(x1507)))+(((IkReal(-1.00000000000000))*(x1508)*(x1509)))+(((cj1)*(cj2)*(x1505))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x1501)*(((x1502)+(x1504)))))+IKsqr(((x1501)*(((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x1504)*(x1507)))+(((IkReal(-1.00000000000000))*(x1506)*(x1508)))+(((IkReal(-1.00000000000000))*(sj1)*(sj2)*(x1505)))+(((x1503)*(x1509)))+(((x1503)*(x1506)))+(((IkReal(-1.00000000000000))*(x1502)*(x1507)))+(((IkReal(-1.00000000000000))*(x1508)*(x1509)))+(((cj1)*(cj2)*(x1505)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((x1501)*(((x1502)+(x1504)))), ((x1501)*(((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x1504)*(x1507)))+(((IkReal(-1.00000000000000))*(x1506)*(x1508)))+(((IkReal(-1.00000000000000))*(sj1)*(sj2)*(x1505)))+(((x1503)*(x1509)))+(((x1503)*(x1506)))+(((IkReal(-1.00000000000000))*(x1502)*(x1507)))+(((IkReal(-1.00000000000000))*(x1508)*(x1509)))+(((cj1)*(cj2)*(x1505)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1510=IKsin(j5);
IkReal x1511=IKcos(j5);
IkReal x1512=((r02)*(sj2));
IkReal x1513=((IkReal(1.00000000000000))*(sj2));
IkReal x1514=((r00)*(sj0));
IkReal x1515=((IkReal(1.00000000000000))*(cj2));
IkReal x1516=((IkReal(1.00000000000000))*(x1510));
IkReal x1517=((cj0)*(r01)*(sj1));
IkReal x1518=((cj0)*(cj1)*(r01));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj4)*(x1516)))+(((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj1)*(x1514)*(x1515)))+(((sj2)*(x1518)))+(((sj3)*(sj4)*(x1510)))+(((cj2)*(x1517)))+(((cj3)*(x1511)))+(((IkReal(-1.00000000000000))*(cj1)*(x1513)*(x1514)))+(((sj1)*(x1512)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1515))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj3)*(sj4)*(x1516)))+(((sj3)*(x1511)))+(((cj2)*(x1518)))+(((IkReal(-1.00000000000000))*(x1513)*(x1517)))+(((IkReal(-1.00000000000000))*(cj1)*(x1514)*(x1515)))+(((cj1)*(x1512)))+(((cj2)*(r02)*(sj1)))+(((sj1)*(sj2)*(x1514))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1519=((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30);
IkReal x1520=((cj0)*(r00));
IkReal x1521=((r01)*(sj0));
IkReal x1522=((cj3)*(sj4));
IkReal x1523=((cj0)*(r01));
IkReal x1524=((cj4)*(sj2));
IkReal x1525=((r00)*(sj0));
IkReal x1526=((IkReal(1.00000000000000))*(cj2)*(cj4));
if( IKabs(((x1519)*(((x1520)+(x1521))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x1519)*(((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1526)))+(((cj1)*(cj2)*(cj4)*(x1525)))+(((x1520)*(x1522)))+(((x1521)*(x1522)))+(((IkReal(-1.00000000000000))*(sj1)*(x1524)*(x1525)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1524)))+(((sj1)*(x1523)*(x1524)))+(((IkReal(-1.00000000000000))*(cj1)*(x1523)*(x1526))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x1519)*(((x1520)+(x1521)))))+IKsqr(((x1519)*(((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1526)))+(((cj1)*(cj2)*(cj4)*(x1525)))+(((x1520)*(x1522)))+(((x1521)*(x1522)))+(((IkReal(-1.00000000000000))*(sj1)*(x1524)*(x1525)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1524)))+(((sj1)*(x1523)*(x1524)))+(((IkReal(-1.00000000000000))*(cj1)*(x1523)*(x1526)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((x1519)*(((x1520)+(x1521)))), ((x1519)*(((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1526)))+(((cj1)*(cj2)*(cj4)*(x1525)))+(((x1520)*(x1522)))+(((x1521)*(x1522)))+(((IkReal(-1.00000000000000))*(sj1)*(x1524)*(x1525)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1524)))+(((sj1)*(x1523)*(x1524)))+(((IkReal(-1.00000000000000))*(cj1)*(x1523)*(x1526)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1527=IKsin(j5);
IkReal x1528=IKcos(j5);
IkReal x1529=((r02)*(sj2));
IkReal x1530=((IkReal(1.00000000000000))*(sj2));
IkReal x1531=((r00)*(sj0));
IkReal x1532=((IkReal(1.00000000000000))*(cj2));
IkReal x1533=((IkReal(1.00000000000000))*(x1527));
IkReal x1534=((cj0)*(r01)*(sj1));
IkReal x1535=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x1533)))+(((cj0)*(r00))));
evalcond[1]=((((sj2)*(x1535)))+(((sj1)*(x1529)))+(((cj3)*(x1528)))+(((cj2)*(x1534)))+(((sj3)*(sj4)*(x1527)))+(((IkReal(-1.00000000000000))*(sj1)*(x1531)*(x1532)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1532)))+(((IkReal(-1.00000000000000))*(cj1)*(x1530)*(x1531))));
evalcond[2]=((((sj1)*(sj2)*(x1531)))+(((IkReal(-1.00000000000000))*(cj3)*(sj4)*(x1533)))+(((sj3)*(x1528)))+(((IkReal(-1.00000000000000))*(x1530)*(x1534)))+(((IkReal(-1.00000000000000))*(cj1)*(x1531)*(x1532)))+(((cj1)*(x1529)))+(((cj2)*(x1535)))+(((cj2)*(r02)*(sj1))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1536=(cj3)*(cj3);
IkReal x1537=(sj3)*(sj3);
IkReal x1538=((cj1)*(sj3));
IkReal x1539=((cj0)*(r01));
IkReal x1540=((r02)*(sj2));
IkReal x1541=((cj2)*(sj1));
IkReal x1542=((cj1)*(cj3));
IkReal x1543=((cj2)*(r02));
IkReal x1544=((cj3)*(sj1));
IkReal x1545=((IkReal(1.00000000000000))*(sj3));
IkReal x1546=((r00)*(sj0));
IkReal x1547=((IkReal(1.00000000000000))*(sj1)*(sj2));
IkReal x1548=((IkReal(1.00000000000000))*(x1546));
if( IKabs(((((IKabs(((((sj4)*(x1536)))+(((sj4)*(x1537))))) != 0)?((IkReal)1/(((((sj4)*(x1536)))+(((sj4)*(x1537)))))):(IkReal)1.0e30))*(((((sj3)*(x1541)*(x1546)))+(((x1538)*(x1543)))+(((IkReal(-1.00000000000000))*(x1539)*(x1541)*(x1545)))+(((IkReal(-1.00000000000000))*(sj2)*(x1538)*(x1539)))+(((IkReal(-1.00000000000000))*(sj2)*(x1539)*(x1544)))+(((cj2)*(x1539)*(x1542)))+(((sj2)*(x1544)*(x1546)))+(((sj2)*(x1538)*(x1546)))+(((x1540)*(x1542)))+(((IkReal(-1.00000000000000))*(sj1)*(x1540)*(x1545)))+(((IkReal(-1.00000000000000))*(cj2)*(x1542)*(x1548)))+(((cj3)*(r02)*(x1541))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(((((IkReal(-1.00000000000000))*(x1537)))+(((IkReal(-1.00000000000000))*(x1536))))) != 0)?((IkReal)1/(((((IkReal(-1.00000000000000))*(x1537)))+(((IkReal(-1.00000000000000))*(x1536)))))):(IkReal)1.0e30))*(((((x1538)*(x1540)))+(((IkReal(-1.00000000000000))*(x1542)*(x1543)))+(((r02)*(sj3)*(x1541)))+(((IkReal(-1.00000000000000))*(cj3)*(x1541)*(x1548)))+(((sj1)*(sj2)*(sj3)*(x1546)))+(((IkReal(-1.00000000000000))*(cj2)*(x1538)*(x1548)))+(((sj2)*(x1539)*(x1542)))+(((IkReal(-1.00000000000000))*(sj1)*(sj2)*(x1539)*(x1545)))+(((x1540)*(x1544)))+(((IkReal(-1.00000000000000))*(sj2)*(x1542)*(x1548)))+(((cj2)*(x1538)*(x1539)))+(((cj3)*(x1539)*(x1541))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(((((sj4)*(x1536)))+(((sj4)*(x1537))))) != 0)?((IkReal)1/(((((sj4)*(x1536)))+(((sj4)*(x1537)))))):(IkReal)1.0e30))*(((((sj3)*(x1541)*(x1546)))+(((x1538)*(x1543)))+(((IkReal(-1.00000000000000))*(x1539)*(x1541)*(x1545)))+(((IkReal(-1.00000000000000))*(sj2)*(x1538)*(x1539)))+(((IkReal(-1.00000000000000))*(sj2)*(x1539)*(x1544)))+(((cj2)*(x1539)*(x1542)))+(((sj2)*(x1544)*(x1546)))+(((sj2)*(x1538)*(x1546)))+(((x1540)*(x1542)))+(((IkReal(-1.00000000000000))*(sj1)*(x1540)*(x1545)))+(((IkReal(-1.00000000000000))*(cj2)*(x1542)*(x1548)))+(((cj3)*(r02)*(x1541)))))))+IKsqr(((((IKabs(((((IkReal(-1.00000000000000))*(x1537)))+(((IkReal(-1.00000000000000))*(x1536))))) != 0)?((IkReal)1/(((((IkReal(-1.00000000000000))*(x1537)))+(((IkReal(-1.00000000000000))*(x1536)))))):(IkReal)1.0e30))*(((((x1538)*(x1540)))+(((IkReal(-1.00000000000000))*(x1542)*(x1543)))+(((r02)*(sj3)*(x1541)))+(((IkReal(-1.00000000000000))*(cj3)*(x1541)*(x1548)))+(((sj1)*(sj2)*(sj3)*(x1546)))+(((IkReal(-1.00000000000000))*(cj2)*(x1538)*(x1548)))+(((sj2)*(x1539)*(x1542)))+(((IkReal(-1.00000000000000))*(sj1)*(sj2)*(x1539)*(x1545)))+(((x1540)*(x1544)))+(((IkReal(-1.00000000000000))*(sj2)*(x1542)*(x1548)))+(((cj2)*(x1538)*(x1539)))+(((cj3)*(x1539)*(x1541)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(((((sj4)*(x1536)))+(((sj4)*(x1537))))) != 0)?((IkReal)1/(((((sj4)*(x1536)))+(((sj4)*(x1537)))))):(IkReal)1.0e30))*(((((sj3)*(x1541)*(x1546)))+(((x1538)*(x1543)))+(((IkReal(-1.00000000000000))*(x1539)*(x1541)*(x1545)))+(((IkReal(-1.00000000000000))*(sj2)*(x1538)*(x1539)))+(((IkReal(-1.00000000000000))*(sj2)*(x1539)*(x1544)))+(((cj2)*(x1539)*(x1542)))+(((sj2)*(x1544)*(x1546)))+(((sj2)*(x1538)*(x1546)))+(((x1540)*(x1542)))+(((IkReal(-1.00000000000000))*(sj1)*(x1540)*(x1545)))+(((IkReal(-1.00000000000000))*(cj2)*(x1542)*(x1548)))+(((cj3)*(r02)*(x1541)))))), ((((IKabs(((((IkReal(-1.00000000000000))*(x1537)))+(((IkReal(-1.00000000000000))*(x1536))))) != 0)?((IkReal)1/(((((IkReal(-1.00000000000000))*(x1537)))+(((IkReal(-1.00000000000000))*(x1536)))))):(IkReal)1.0e30))*(((((x1538)*(x1540)))+(((IkReal(-1.00000000000000))*(x1542)*(x1543)))+(((r02)*(sj3)*(x1541)))+(((IkReal(-1.00000000000000))*(cj3)*(x1541)*(x1548)))+(((sj1)*(sj2)*(sj3)*(x1546)))+(((IkReal(-1.00000000000000))*(cj2)*(x1538)*(x1548)))+(((sj2)*(x1539)*(x1542)))+(((IkReal(-1.00000000000000))*(sj1)*(sj2)*(x1539)*(x1545)))+(((x1540)*(x1544)))+(((IkReal(-1.00000000000000))*(sj2)*(x1542)*(x1548)))+(((cj2)*(x1538)*(x1539)))+(((cj3)*(x1539)*(x1541)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1549=IKsin(j5);
IkReal x1550=IKcos(j5);
IkReal x1551=((r02)*(sj2));
IkReal x1552=((IkReal(1.00000000000000))*(sj2));
IkReal x1553=((r00)*(sj0));
IkReal x1554=((IkReal(1.00000000000000))*(cj2));
IkReal x1555=((IkReal(1.00000000000000))*(x1549));
IkReal x1556=((cj0)*(r01)*(sj1));
IkReal x1557=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x1555)))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1554)))+(((cj3)*(x1550)))+(((cj2)*(x1556)))+(((IkReal(-1.00000000000000))*(cj1)*(x1552)*(x1553)))+(((IkReal(-1.00000000000000))*(sj1)*(x1553)*(x1554)))+(((sj1)*(x1551)))+(((sj2)*(x1557)))+(((sj3)*(sj4)*(x1549))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1552)*(x1556)))+(((cj2)*(x1557)))+(((cj1)*(x1551)))+(((IkReal(-1.00000000000000))*(cj3)*(sj4)*(x1555)))+(((sj1)*(sj2)*(x1553)))+(((IkReal(-1.00000000000000))*(cj1)*(x1553)*(x1554)))+(((cj2)*(r02)*(sj1)))+(((sj3)*(x1550))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x1558=((IkReal(190892000000.000))*(sj1));
IkReal x1559=((px)*(sj0));
IkReal x1560=((IkReal(787000000.000000))*(pz));
IkReal x1561=((cj1)*(sj2));
IkReal x1562=((IkReal(787000000.000000))*(cj3));
IkReal x1563=((py)*(sj0));
IkReal x1564=((cj0)*(px));
IkReal x1565=((cj0)*(py));
IkReal x1566=((cj1)*(cj2));
IkReal x1567=((IkReal(190892000000.000))*(cj3));
IkReal x1568=((IkReal(787000000.000000))*(sj1)*(sj2));
if( IKabs(((gconst0)*(((IkReal(205477830.000000))+(((IkReal(-7728340.00000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x1559)*(x1568)))+(((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x1560)))+(((IkReal(-787000000.000000))*(x1565)*(x1566)))+(((IkReal(787000000.000000))*(x1559)*(x1566)))+(((IkReal(104844140.000000))*(cj3)))+(((IkReal(-1.00000000000000))*(x1560)*(x1561)))+(((IkReal(-1.00000000000000))*(x1563)*(x1567)))+(((IkReal(-1.00000000000000))*(x1564)*(x1567)))+(((IkReal(410554290.000000))*(sj2)))+(((IkReal(-40397497.0000000))*(sj3)))+(((x1565)*(x1568))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst0)*(((IkReal(-49839992280.0000))+(((cj2)*(pz)*(x1558)))+(((IkReal(-99582629640.0000))*(sj2)))+(((IkReal(-190892000000.000))*(x1559)*(x1566)))+(((IkReal(1874559440.00000))*(cj2)))+(((IkReal(-25430632240.0000))*(cj3)))+(((IkReal(9798677252.00000))*(sj3)))+(((IkReal(190892000000.000))*(x1565)*(x1566)))+(((IkReal(-1.00000000000000))*(x1562)*(x1564)))+(((IkReal(-1.00000000000000))*(x1562)*(x1563)))+(((sj2)*(x1558)*(x1559)))+(((IkReal(190892000000.000))*(pz)*(x1561)))+(((IkReal(-1.00000000000000))*(sj2)*(x1558)*(x1565))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst0)*(((IkReal(205477830.000000))+(((IkReal(-7728340.00000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x1559)*(x1568)))+(((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x1560)))+(((IkReal(-787000000.000000))*(x1565)*(x1566)))+(((IkReal(787000000.000000))*(x1559)*(x1566)))+(((IkReal(104844140.000000))*(cj3)))+(((IkReal(-1.00000000000000))*(x1560)*(x1561)))+(((IkReal(-1.00000000000000))*(x1563)*(x1567)))+(((IkReal(-1.00000000000000))*(x1564)*(x1567)))+(((IkReal(410554290.000000))*(sj2)))+(((IkReal(-40397497.0000000))*(sj3)))+(((x1565)*(x1568)))))), ((gconst0)*(((IkReal(-49839992280.0000))+(((cj2)*(pz)*(x1558)))+(((IkReal(-99582629640.0000))*(sj2)))+(((IkReal(-190892000000.000))*(x1559)*(x1566)))+(((IkReal(1874559440.00000))*(cj2)))+(((IkReal(-25430632240.0000))*(cj3)))+(((IkReal(9798677252.00000))*(sj3)))+(((IkReal(190892000000.000))*(x1565)*(x1566)))+(((IkReal(-1.00000000000000))*(x1562)*(x1564)))+(((IkReal(-1.00000000000000))*(x1562)*(x1563)))+(((sj2)*(x1558)*(x1559)))+(((IkReal(190892000000.000))*(pz)*(x1561)))+(((IkReal(-1.00000000000000))*(sj2)*(x1558)*(x1565)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[3];
IkReal x1569=IKsin(j4);
IkReal x1570=IKcos(j4);
IkReal x1571=((cj1)*(sj2));
IkReal x1572=((px)*(sj0));
IkReal x1573=((sj1)*(sj2));
IkReal x1574=((cj0)*(py));
IkReal x1575=((cj2)*(pz));
IkReal x1576=((IkReal(1.00000000000000))*(cj1));
IkReal x1577=((cj2)*(x1574));
IkReal x1578=((IkReal(0.000787000000000000))*(x1569));
IkReal x1579=((IkReal(0.190892000000000))*(x1570));
evalcond[0]=((((IkReal(0.190892000000000))*(x1569)))+(((cj0)*(px)))+(((py)*(sj0)))+(((IkReal(0.000787000000000000))*(x1570))));
evalcond[1]=((IkReal(-0.261090000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((x1572)*(x1573)))+(((cj1)*(x1577)))+(((cj3)*(x1578)))+(((IkReal(-1.00000000000000))*(x1573)*(x1574)))+(((sj1)*(x1575)))+(((IkReal(-0.133220000000000))*(cj3)))+(((IkReal(0.0513310000000000))*(sj3)))+(((pz)*(x1571)))+(((IkReal(-0.521670000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(cj3)*(x1579)))+(((IkReal(-1.00000000000000))*(cj2)*(x1572)*(x1576))));
evalcond[2]=((IkReal(0.00750000000000000))+(((x1571)*(x1574)))+(((IkReal(-1.00000000000000))*(sj3)*(x1578)))+(((IkReal(-1.00000000000000))*(x1575)*(x1576)))+(((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x1572)))+(((IkReal(-1.00000000000000))*(x1571)*(x1572)))+(((IkReal(0.133220000000000))*(sj3)))+(((IkReal(0.521670000000000))*(cj2)))+(((sj1)*(x1577)))+(((pz)*(x1573)))+(((IkReal(0.0513310000000000))*(cj3)))+(((IkReal(0.00982000000000000))*(sj2)))+(((sj3)*(x1579))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[2];
IkReal x1580=(cj3)*(cj3);
IkReal x1581=(sj3)*(sj3);
dummyeval[0]=((((sj4)*(x1581)))+(((sj4)*(x1580))));
dummyeval[1]=((((IkReal(-1.00000000000000))*(x1581)))+(((IkReal(-1.00000000000000))*(x1580))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=cj4;
dummyeval[1]=sj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=cj4;
dummyeval[1]=cj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x1582=((cj1)*(sj2));
IkReal x1583=((px)*(sj0));
IkReal x1584=((sj1)*(sj2));
IkReal x1585=((cj0)*(py));
IkReal x1586=((cj2)*(pz));
IkReal x1587=((IkReal(1.00000000000000))*(cj1));
IkReal x1588=((cj2)*(x1585));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(0.190892000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.261090000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((cj1)*(x1588)))+(((IkReal(-1.00000000000000))*(x1584)*(x1585)))+(((x1583)*(x1584)))+(((sj1)*(x1586)))+(((pz)*(x1582)))+(((IkReal(-0.132433000000000))*(cj3)))+(((IkReal(-1.00000000000000))*(cj2)*(x1583)*(x1587)))+(((IkReal(0.0513310000000000))*(sj3)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(0.00750000000000000))+(((IkReal(-1.00000000000000))*(x1582)*(x1583)))+(((x1582)*(x1585)))+(((IkReal(0.521670000000000))*(cj2)))+(((sj1)*(x1588)))+(((pz)*(x1584)))+(((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x1583)))+(((IkReal(0.0513310000000000))*(cj3)))+(((IkReal(-1.00000000000000))*(x1586)*(x1587)))+(((IkReal(0.132433000000000))*(sj3)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst2;
gconst2=IKsign((((sj3)*(sj3))+((cj3)*(cj3))));
dummyeval[0]=(((sj3)*(sj3))+((cj3)*(cj3)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1589=((IkReal(1.00000000000000))*(cj3));
IkReal x1590=((cj1)*(cj2));
IkReal x1591=((r00)*(sj0));
IkReal x1592=((r02)*(sj3));
IkReal x1593=((cj3)*(r02));
IkReal x1594=((cj2)*(sj1));
IkReal x1595=((IkReal(1.00000000000000))*(sj3));
IkReal x1596=((cj0)*(r01));
IkReal x1597=((cj1)*(sj2));
IkReal x1598=((sj1)*(sj2));
IkReal x1599=((sj1)*(x1596));
if( IKabs(((gconst2)*(((((x1590)*(x1592)))+(((x1593)*(x1597)))+(((x1593)*(x1594)))+(((IkReal(-1.00000000000000))*(x1589)*(x1596)*(x1598)))+(((IkReal(-1.00000000000000))*(x1592)*(x1598)))+(((cj3)*(x1591)*(x1598)))+(((cj3)*(x1590)*(x1596)))+(((IkReal(-1.00000000000000))*(x1594)*(x1595)*(x1596)))+(((IkReal(-1.00000000000000))*(x1589)*(x1590)*(x1591)))+(((IkReal(-1.00000000000000))*(x1595)*(x1596)*(x1597)))+(((sj3)*(x1591)*(x1594)))+(((sj3)*(x1591)*(x1597))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst2)*(((((x1590)*(x1593)))+(((IkReal(-1.00000000000000))*(x1589)*(x1594)*(x1596)))+(((IkReal(-1.00000000000000))*(r02)*(x1589)*(x1598)))+(((IkReal(-1.00000000000000))*(x1590)*(x1595)*(x1596)))+(((IkReal(-1.00000000000000))*(x1589)*(x1596)*(x1597)))+(((IkReal(-1.00000000000000))*(x1592)*(x1597)))+(((IkReal(-1.00000000000000))*(x1592)*(x1594)))+(((cj3)*(x1591)*(x1594)))+(((cj3)*(x1591)*(x1597)))+(((IkReal(-1.00000000000000))*(x1591)*(x1595)*(x1598)))+(((sj3)*(x1596)*(x1598)))+(((sj3)*(x1590)*(x1591))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst2)*(((((x1590)*(x1592)))+(((x1593)*(x1597)))+(((x1593)*(x1594)))+(((IkReal(-1.00000000000000))*(x1589)*(x1596)*(x1598)))+(((IkReal(-1.00000000000000))*(x1592)*(x1598)))+(((cj3)*(x1591)*(x1598)))+(((cj3)*(x1590)*(x1596)))+(((IkReal(-1.00000000000000))*(x1594)*(x1595)*(x1596)))+(((IkReal(-1.00000000000000))*(x1589)*(x1590)*(x1591)))+(((IkReal(-1.00000000000000))*(x1595)*(x1596)*(x1597)))+(((sj3)*(x1591)*(x1594)))+(((sj3)*(x1591)*(x1597)))))), ((gconst2)*(((((x1590)*(x1593)))+(((IkReal(-1.00000000000000))*(x1589)*(x1594)*(x1596)))+(((IkReal(-1.00000000000000))*(r02)*(x1589)*(x1598)))+(((IkReal(-1.00000000000000))*(x1590)*(x1595)*(x1596)))+(((IkReal(-1.00000000000000))*(x1589)*(x1596)*(x1597)))+(((IkReal(-1.00000000000000))*(x1592)*(x1597)))+(((IkReal(-1.00000000000000))*(x1592)*(x1594)))+(((cj3)*(x1591)*(x1594)))+(((cj3)*(x1591)*(x1597)))+(((IkReal(-1.00000000000000))*(x1591)*(x1595)*(x1598)))+(((sj3)*(x1596)*(x1598)))+(((sj3)*(x1590)*(x1591)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1600=IKcos(j5);
IkReal x1601=IKsin(j5);
IkReal x1602=((r02)*(sj2));
IkReal x1603=((IkReal(1.00000000000000))*(sj2));
IkReal x1604=((r00)*(sj0));
IkReal x1605=((cj1)*(cj2));
IkReal x1606=((cj0)*(r01));
IkReal x1607=((sj1)*(x1606));
IkReal x1608=((IkReal(1.00000000000000))*(cj2)*(x1604));
evalcond[0]=((((sj3)*(x1601)))+(((sj1)*(x1602)))+(((cj3)*(x1600)))+(((cj2)*(x1607)))+(((IkReal(-1.00000000000000))*(cj1)*(x1603)*(x1604)))+(((cj1)*(sj2)*(x1606)))+(((IkReal(-1.00000000000000))*(r02)*(x1605)))+(((IkReal(-1.00000000000000))*(sj1)*(x1608))));
evalcond[1]=((((sj3)*(x1600)))+(((cj1)*(x1602)))+(((IkReal(-1.00000000000000))*(x1604)*(x1605)))+(((IkReal(-1.00000000000000))*(cj3)*(x1601)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1603)*(x1607)))+(((sj1)*(sj2)*(x1604)))+(((x1605)*(x1606))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1609=((cj1)*(sj2));
IkReal x1610=((px)*(sj0));
IkReal x1611=((sj1)*(sj2));
IkReal x1612=((cj0)*(py));
IkReal x1613=((cj2)*(pz));
IkReal x1614=((IkReal(1.00000000000000))*(cj1));
IkReal x1615=((cj2)*(x1612));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(-0.190892000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.261090000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(cj2)*(x1610)*(x1614)))+(((IkReal(-0.134007000000000))*(cj3)))+(((IkReal(-1.00000000000000))*(x1611)*(x1612)))+(((sj1)*(x1613)))+(((IkReal(0.0513310000000000))*(sj3)))+(((IkReal(-0.521670000000000))*(sj2)))+(((x1610)*(x1611)))+(((pz)*(x1609)))+(((cj1)*(x1615))));
evalcond[4]=((IkReal(0.00750000000000000))+(((pz)*(x1611)))+(((IkReal(-1.00000000000000))*(x1609)*(x1610)))+(((sj1)*(x1615)))+(((IkReal(0.134007000000000))*(sj3)))+(((x1609)*(x1612)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x1610)))+(((IkReal(0.0513310000000000))*(cj3)))+(((IkReal(-1.00000000000000))*(x1613)*(x1614)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst3;
gconst3=IKsign((((sj3)*(sj3))+((cj3)*(cj3))));
dummyeval[0]=(((sj3)*(sj3))+((cj3)*(cj3)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1616=((r00)*(sj0));
IkReal x1617=((sj1)*(sj2));
IkReal x1618=((r02)*(sj3));
IkReal x1619=((cj0)*(r01));
IkReal x1620=((cj3)*(r02));
IkReal x1621=((IkReal(1.00000000000000))*(cj2));
IkReal x1622=((cj1)*(sj3));
IkReal x1623=((sj1)*(sj3));
IkReal x1624=((cj3)*(sj1));
IkReal x1625=((cj1)*(cj2)*(cj3));
IkReal x1626=((IkReal(1.00000000000000))*(cj1)*(sj2));
if( IKabs(((gconst3)*(((((IkReal(-1.00000000000000))*(cj1)*(x1618)*(x1621)))+(((IkReal(-1.00000000000000))*(cj3)*(x1616)*(x1617)))+(((IkReal(-1.00000000000000))*(x1616)*(x1621)*(x1623)))+(((x1617)*(x1618)))+(((IkReal(-1.00000000000000))*(cj1)*(cj3)*(x1619)*(x1621)))+(((IkReal(-1.00000000000000))*(sj2)*(x1616)*(x1622)))+(((sj2)*(x1619)*(x1622)))+(((cj3)*(x1617)*(x1619)))+(((IkReal(-1.00000000000000))*(x1620)*(x1626)))+(((x1616)*(x1625)))+(((cj2)*(x1619)*(x1623)))+(((IkReal(-1.00000000000000))*(sj1)*(x1620)*(x1621))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst3)*(((((IkReal(-1.00000000000000))*(x1617)*(x1620)))+(((sj3)*(x1617)*(x1619)))+(((IkReal(-1.00000000000000))*(sj3)*(x1616)*(x1617)))+(((cj1)*(cj3)*(sj2)*(x1616)))+(((IkReal(-1.00000000000000))*(x1619)*(x1621)*(x1624)))+(((IkReal(-1.00000000000000))*(x1619)*(x1621)*(x1622)))+(((IkReal(-1.00000000000000))*(sj1)*(x1618)*(x1621)))+(((IkReal(-1.00000000000000))*(cj3)*(x1619)*(x1626)))+(((cj2)*(x1616)*(x1622)))+(((cj2)*(x1616)*(x1624)))+(((IkReal(-1.00000000000000))*(x1618)*(x1626)))+(((cj1)*(cj2)*(x1620))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst3)*(((((IkReal(-1.00000000000000))*(cj1)*(x1618)*(x1621)))+(((IkReal(-1.00000000000000))*(cj3)*(x1616)*(x1617)))+(((IkReal(-1.00000000000000))*(x1616)*(x1621)*(x1623)))+(((x1617)*(x1618)))+(((IkReal(-1.00000000000000))*(cj1)*(cj3)*(x1619)*(x1621)))+(((IkReal(-1.00000000000000))*(sj2)*(x1616)*(x1622)))+(((sj2)*(x1619)*(x1622)))+(((cj3)*(x1617)*(x1619)))+(((IkReal(-1.00000000000000))*(x1620)*(x1626)))+(((x1616)*(x1625)))+(((cj2)*(x1619)*(x1623)))+(((IkReal(-1.00000000000000))*(sj1)*(x1620)*(x1621)))))), ((gconst3)*(((((IkReal(-1.00000000000000))*(x1617)*(x1620)))+(((sj3)*(x1617)*(x1619)))+(((IkReal(-1.00000000000000))*(sj3)*(x1616)*(x1617)))+(((cj1)*(cj3)*(sj2)*(x1616)))+(((IkReal(-1.00000000000000))*(x1619)*(x1621)*(x1624)))+(((IkReal(-1.00000000000000))*(x1619)*(x1621)*(x1622)))+(((IkReal(-1.00000000000000))*(sj1)*(x1618)*(x1621)))+(((IkReal(-1.00000000000000))*(cj3)*(x1619)*(x1626)))+(((cj2)*(x1616)*(x1622)))+(((cj2)*(x1616)*(x1624)))+(((IkReal(-1.00000000000000))*(x1618)*(x1626)))+(((cj1)*(cj2)*(x1620)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1627=IKsin(j5);
IkReal x1628=IKcos(j5);
IkReal x1629=((r02)*(sj2));
IkReal x1630=((IkReal(1.00000000000000))*(sj2));
IkReal x1631=((r00)*(sj0));
IkReal x1632=((IkReal(1.00000000000000))*(cj2));
IkReal x1633=((cj0)*(r01)*(sj1));
IkReal x1634=((cj0)*(cj1)*(r01));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj1)*(x1630)*(x1631)))+(((cj2)*(x1633)))+(((sj1)*(x1629)))+(((sj2)*(x1634)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1632)))+(((cj3)*(x1628)))+(((IkReal(-1.00000000000000))*(sj1)*(x1631)*(x1632)))+(((IkReal(-1.00000000000000))*(sj3)*(x1627))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj1)*(x1631)*(x1632)))+(((sj3)*(x1628)))+(((cj2)*(x1634)))+(((sj1)*(sj2)*(x1631)))+(((cj2)*(r02)*(sj1)))+(((cj3)*(x1627)))+(((IkReal(-1.00000000000000))*(x1630)*(x1633)))+(((cj1)*(x1629))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1635=((cj1)*(sj2));
IkReal x1636=((px)*(sj0));
IkReal x1637=((sj1)*(sj2));
IkReal x1638=((cj0)*(py));
IkReal x1639=((cj2)*(pz));
IkReal x1640=((IkReal(1.00000000000000))*(cj1));
IkReal x1641=((cj2)*(x1638));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(0.190892000000000))*(sj4)))+(((IkReal(0.000787000000000000))*(cj4)))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((IkReal(-0.209759000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((x1636)*(x1637)))+(((sj1)*(x1639)))+(((pz)*(x1635)))+(((cj1)*(x1641)))+(((IkReal(-1.00000000000000))*(x1637)*(x1638)))+(((IkReal(-0.521670000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(cj2)*(x1636)*(x1640))));
evalcond[3]=((IkReal(0.140720000000000))+(((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x1636)))+(((IkReal(0.190892000000000))*(cj4)))+(((sj1)*(x1641)))+(((pz)*(x1637)))+(((IkReal(-1.00000000000000))*(x1635)*(x1636)))+(((IkReal(-1.00000000000000))*(x1639)*(x1640)))+(((IkReal(0.521670000000000))*(cj2)))+(((x1635)*(x1638)))+(((IkReal(-0.000787000000000000))*(sj4)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x1642=((IkReal(1.00000000000000))*(sj0));
IkReal x1643=((cj1)*(sj2));
IkReal x1644=((sj1)*(sj2));
IkReal x1645=((cj2)*(sj1));
IkReal x1646=((cj0)*(r01));
IkReal x1647=((cj0)*(py));
IkReal x1648=((cj2)*(x1647));
IkReal x1649=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.000787000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((r02)*(x1644)))+(((x1645)*(x1646)))+(((x1643)*(x1646)))+(((IkReal(-1.00000000000000))*(r02)*(x1649)))+(((IkReal(-1.00000000000000))*(r00)*(x1642)*(x1645)))+(((IkReal(-1.00000000000000))*(r00)*(x1642)*(x1643))));
evalcond[3]=((IkReal(-0.209759000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((pz)*(x1645)))+(((pz)*(x1643)))+(((IkReal(-1.00000000000000))*(x1644)*(x1647)))+(((px)*(sj0)*(x1644)))+(((cj1)*(x1648)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(px)*(x1642)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(0.331612000000000))+(((pz)*(x1644)))+(((x1645)*(x1647)))+(((IkReal(-1.00000000000000))*(px)*(x1642)*(x1643)))+(((IkReal(-1.00000000000000))*(px)*(x1642)*(x1645)))+(((IkReal(0.521670000000000))*(cj2)))+(((x1643)*(x1647)))+(((IkReal(0.00982000000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(pz)*(x1649))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1650=((cj0)*(r01));
IkReal x1651=((sj1)*(sj2));
IkReal x1652=((IkReal(1.00000000000000))*(cj1));
IkReal x1653=((r00)*(sj0));
if( IKabs(((((r01)*(sj0)))+(((cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x1651)*(x1653)))+(((x1650)*(x1651)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1652)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((cj1)*(cj2)*(x1653)))+(((IkReal(-1.00000000000000))*(cj2)*(x1650)*(x1652))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r01)*(sj0)))+(((cj0)*(r00)))))+IKsqr(((((IkReal(-1.00000000000000))*(x1651)*(x1653)))+(((x1650)*(x1651)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1652)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((cj1)*(cj2)*(x1653)))+(((IkReal(-1.00000000000000))*(cj2)*(x1650)*(x1652)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((r01)*(sj0)))+(((cj0)*(r00)))), ((((IkReal(-1.00000000000000))*(x1651)*(x1653)))+(((x1650)*(x1651)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1652)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((cj1)*(cj2)*(x1653)))+(((IkReal(-1.00000000000000))*(cj2)*(x1650)*(x1652)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1654=((sj1)*(sj2));
IkReal x1655=((cj0)*(r01));
IkReal x1656=((r00)*(sj0));
IkReal x1657=((cj1)*(cj2));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((cj0)*(r00))));
evalcond[1]=((((x1654)*(x1656)))+(((IkReal(-1.00000000000000))*(x1654)*(x1655)))+(((x1655)*(x1657)))+(IKcos(j5))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1656)*(x1657)))+(((cj1)*(r02)*(sj2))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1658=((IkReal(1.00000000000000))*(sj0));
IkReal x1659=((cj1)*(sj2));
IkReal x1660=((sj1)*(sj2));
IkReal x1661=((cj2)*(sj1));
IkReal x1662=((cj0)*(r01));
IkReal x1663=((cj0)*(py));
IkReal x1664=((cj2)*(x1663));
IkReal x1665=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.000787000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((r02)*(x1660)))+(((IkReal(-1.00000000000000))*(r00)*(x1658)*(x1661)))+(((IkReal(-1.00000000000000))*(r00)*(x1658)*(x1659)))+(((x1659)*(x1662)))+(((IkReal(-1.00000000000000))*(r02)*(x1665)))+(((x1661)*(x1662))));
evalcond[3]=((IkReal(-0.209759000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((cj1)*(x1664)))+(((pz)*(x1661)))+(((px)*(sj0)*(x1660)))+(((pz)*(x1659)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(px)*(x1658)))+(((IkReal(-1.00000000000000))*(x1660)*(x1663)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(-0.0501720000000000))+(((IkReal(-1.00000000000000))*(pz)*(x1665)))+(((pz)*(x1660)))+(((IkReal(0.521670000000000))*(cj2)))+(((x1659)*(x1663)))+(((IkReal(-1.00000000000000))*(px)*(x1658)*(x1661)))+(((x1661)*(x1663)))+(((IkReal(-1.00000000000000))*(px)*(x1658)*(x1659)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1666=((sj1)*(sj2));
IkReal x1667=((cj0)*(r01));
IkReal x1668=((r00)*(sj0));
IkReal x1669=((IkReal(1.00000000000000))*(cj1));
if( IKabs(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1669)))+(((IkReal(-1.00000000000000))*(x1666)*(x1668)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((cj1)*(cj2)*(x1668)))+(((IkReal(-1.00000000000000))*(cj2)*(x1667)*(x1669)))+(((x1666)*(x1667))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))))+IKsqr(((((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1669)))+(((IkReal(-1.00000000000000))*(x1666)*(x1668)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((cj1)*(cj2)*(x1668)))+(((IkReal(-1.00000000000000))*(cj2)*(x1667)*(x1669)))+(((x1666)*(x1667)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))), ((((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1669)))+(((IkReal(-1.00000000000000))*(x1666)*(x1668)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((cj1)*(cj2)*(x1668)))+(((IkReal(-1.00000000000000))*(cj2)*(x1667)*(x1669)))+(((x1666)*(x1667)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1670=((sj1)*(sj2));
IkReal x1671=((cj0)*(r01));
IkReal x1672=((r00)*(sj0));
IkReal x1673=((cj1)*(cj2));
evalcond[0]=((((r01)*(sj0)))+(IKsin(j5))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1672)*(x1673)))+(IKcos(j5))+(((IkReal(-1.00000000000000))*(x1670)*(x1671)))+(((cj2)*(r02)*(sj1)))+(((x1671)*(x1673)))+(((x1670)*(x1672)))+(((cj1)*(r02)*(sj2))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1674=((pz)*(sj1));
IkReal x1675=((cj0)*(py));
IkReal x1676=((IkReal(1.00000000000000))*(sj2));
IkReal x1677=((cj1)*(cj2));
IkReal x1678=((px)*(sj0));
IkReal x1679=((cj2)*(sj1));
IkReal x1680=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(0.190892000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.209759000000000))+(((sj1)*(sj2)*(x1678)))+(((IkReal(-1.00000000000000))*(x1677)*(x1678)))+(((IkReal(0.00982000000000000))*(cj2)))+(((x1675)*(x1677)))+(((cj2)*(x1674)))+(((pz)*(x1680)))+(((IkReal(-1.00000000000000))*(sj1)*(x1675)*(x1676)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(0.139933000000000))+(((x1675)*(x1679)))+(((x1675)*(x1680)))+(((IkReal(0.521670000000000))*(cj2)))+(((sj2)*(x1674)))+(((IkReal(-1.00000000000000))*(cj1)*(x1676)*(x1678)))+(((IkReal(-1.00000000000000))*(pz)*(x1677)))+(((IkReal(-1.00000000000000))*(x1678)*(x1679)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1681=((IkReal(1.00000000000000))*(sj2));
IkReal x1682=((r02)*(sj1));
IkReal x1683=((cj0)*(r01));
IkReal x1684=((r00)*(sj0));
IkReal x1685=((cj1)*(r02));
IkReal x1686=((IkReal(1.00000000000000))*(cj2));
if( IKabs(((((IkReal(-1.00000000000000))*(x1681)*(x1682)))+(((cj2)*(sj1)*(x1684)))+(((IkReal(-1.00000000000000))*(cj1)*(x1681)*(x1683)))+(((cj1)*(sj2)*(x1684)))+(((IkReal(-1.00000000000000))*(sj1)*(x1683)*(x1686)))+(((cj2)*(x1685))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x1681)*(x1685)))+(((IkReal(-1.00000000000000))*(x1682)*(x1686)))+(((cj1)*(cj2)*(x1684)))+(((sj1)*(sj2)*(x1683)))+(((IkReal(-1.00000000000000))*(sj1)*(x1681)*(x1684)))+(((IkReal(-1.00000000000000))*(cj1)*(x1683)*(x1686))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x1681)*(x1682)))+(((cj2)*(sj1)*(x1684)))+(((IkReal(-1.00000000000000))*(cj1)*(x1681)*(x1683)))+(((cj1)*(sj2)*(x1684)))+(((IkReal(-1.00000000000000))*(sj1)*(x1683)*(x1686)))+(((cj2)*(x1685)))))+IKsqr(((((IkReal(-1.00000000000000))*(x1681)*(x1685)))+(((IkReal(-1.00000000000000))*(x1682)*(x1686)))+(((cj1)*(cj2)*(x1684)))+(((sj1)*(sj2)*(x1683)))+(((IkReal(-1.00000000000000))*(sj1)*(x1681)*(x1684)))+(((IkReal(-1.00000000000000))*(cj1)*(x1683)*(x1686)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x1681)*(x1682)))+(((cj2)*(sj1)*(x1684)))+(((IkReal(-1.00000000000000))*(cj1)*(x1681)*(x1683)))+(((cj1)*(sj2)*(x1684)))+(((IkReal(-1.00000000000000))*(sj1)*(x1683)*(x1686)))+(((cj2)*(x1685)))), ((((IkReal(-1.00000000000000))*(x1681)*(x1685)))+(((IkReal(-1.00000000000000))*(x1682)*(x1686)))+(((cj1)*(cj2)*(x1684)))+(((sj1)*(sj2)*(x1683)))+(((IkReal(-1.00000000000000))*(sj1)*(x1681)*(x1684)))+(((IkReal(-1.00000000000000))*(cj1)*(x1683)*(x1686)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1687=((r02)*(sj2));
IkReal x1688=((IkReal(1.00000000000000))*(sj2));
IkReal x1689=((r00)*(sj0));
IkReal x1690=((cj1)*(cj2));
IkReal x1691=((cj0)*(r01));
IkReal x1692=((sj1)*(x1691));
IkReal x1693=((IkReal(1.00000000000000))*(cj2)*(x1689));
evalcond[0]=((((IkReal(-1.00000000000000))*(sj1)*(x1693)))+(((sj1)*(x1687)))+(IKsin(j5))+(((cj1)*(sj2)*(x1691)))+(((IkReal(-1.00000000000000))*(cj1)*(x1688)*(x1689)))+(((IkReal(-1.00000000000000))*(r02)*(x1690)))+(((cj2)*(x1692))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1688)*(x1692)))+(((cj1)*(x1687)))+(((x1690)*(x1691)))+(IKcos(j5))+(((sj1)*(sj2)*(x1689)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1689)*(x1690))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1694=((pz)*(sj1));
IkReal x1695=((cj0)*(py));
IkReal x1696=((IkReal(1.00000000000000))*(sj2));
IkReal x1697=((cj1)*(cj2));
IkReal x1698=((px)*(sj0));
IkReal x1699=((cj2)*(sj1));
IkReal x1700=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(-0.190892000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.209759000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((x1695)*(x1697)))+(((IkReal(-1.00000000000000))*(x1697)*(x1698)))+(((sj1)*(sj2)*(x1698)))+(((IkReal(-0.521670000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(sj1)*(x1695)*(x1696)))+(((pz)*(x1700)))+(((cj2)*(x1694))));
evalcond[4]=((IkReal(0.141507000000000))+(((sj2)*(x1694)))+(((x1695)*(x1699)))+(((IkReal(-1.00000000000000))*(cj1)*(x1696)*(x1698)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x1698)*(x1699)))+(((x1695)*(x1700)))+(((IkReal(0.00982000000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(pz)*(x1697))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1701=((cj2)*(sj1));
IkReal x1702=((IkReal(1.00000000000000))*(r02));
IkReal x1703=((cj0)*(r01));
IkReal x1704=((sj1)*(sj2));
IkReal x1705=((cj1)*(cj2));
IkReal x1706=((cj1)*(sj2));
IkReal x1707=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((IkReal(-1.00000000000000))*(x1702)*(x1705)))+(((r02)*(x1704)))+(((x1703)*(x1706)))+(((x1701)*(x1703)))+(((IkReal(-1.00000000000000))*(x1706)*(x1707)))+(((IkReal(-1.00000000000000))*(x1701)*(x1707))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x1702)*(x1706)))+(((x1703)*(x1704)))+(((r00)*(sj0)*(x1705)))+(((IkReal(-1.00000000000000))*(x1704)*(x1707)))+(((IkReal(-1.00000000000000))*(x1701)*(x1702)))+(((IkReal(-1.00000000000000))*(x1703)*(x1705))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x1702)*(x1705)))+(((r02)*(x1704)))+(((x1703)*(x1706)))+(((x1701)*(x1703)))+(((IkReal(-1.00000000000000))*(x1706)*(x1707)))+(((IkReal(-1.00000000000000))*(x1701)*(x1707)))))+IKsqr(((((IkReal(-1.00000000000000))*(x1702)*(x1706)))+(((x1703)*(x1704)))+(((r00)*(sj0)*(x1705)))+(((IkReal(-1.00000000000000))*(x1704)*(x1707)))+(((IkReal(-1.00000000000000))*(x1701)*(x1702)))+(((IkReal(-1.00000000000000))*(x1703)*(x1705)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x1702)*(x1705)))+(((r02)*(x1704)))+(((x1703)*(x1706)))+(((x1701)*(x1703)))+(((IkReal(-1.00000000000000))*(x1706)*(x1707)))+(((IkReal(-1.00000000000000))*(x1701)*(x1707)))), ((((IkReal(-1.00000000000000))*(x1702)*(x1706)))+(((x1703)*(x1704)))+(((r00)*(sj0)*(x1705)))+(((IkReal(-1.00000000000000))*(x1704)*(x1707)))+(((IkReal(-1.00000000000000))*(x1701)*(x1702)))+(((IkReal(-1.00000000000000))*(x1703)*(x1705)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1708=((r02)*(sj2));
IkReal x1709=((IkReal(1.00000000000000))*(sj2));
IkReal x1710=((r00)*(sj0));
IkReal x1711=((cj1)*(cj2));
IkReal x1712=((cj0)*(r01));
IkReal x1713=((sj1)*(x1712));
IkReal x1714=((IkReal(1.00000000000000))*(cj2)*(x1710));
evalcond[0]=((((IkReal(-1.00000000000000))*(sj1)*(x1714)))+(((cj1)*(sj2)*(x1712)))+(((IkReal(-1.00000000000000))*(cj1)*(x1709)*(x1710)))+(((cj2)*(x1713)))+(((IkReal(-1.00000000000000))*(r02)*(x1711)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((sj1)*(x1708))));
evalcond[1]=((((cj1)*(x1708)))+(((IkReal(-1.00000000000000))*(x1709)*(x1713)))+(((sj1)*(sj2)*(x1710)))+(IKcos(j5))+(((x1711)*(x1712)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1710)*(x1711))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1715=((IkReal(1.00000000000000))*(sj2));
IkReal x1716=((r02)*(sj1));
IkReal x1717=((cj0)*(r01));
IkReal x1718=((cj1)*(r02));
IkReal x1719=((r00)*(sj0));
IkReal x1720=((IkReal(1.00000000000000))*(cj2));
if( IKabs(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj1)*(x1715)*(x1717)))+(((cj1)*(sj2)*(x1719)))+(((cj2)*(sj1)*(x1719)))+(((cj2)*(x1718)))+(((IkReal(-1.00000000000000))*(x1715)*(x1716)))+(((IkReal(-1.00000000000000))*(sj1)*(x1717)*(x1720))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(cj1)*(x1717)*(x1720)))+(((cj1)*(cj2)*(x1719)))+(((sj1)*(sj2)*(x1717)))+(((IkReal(-1.00000000000000))*(sj1)*(x1715)*(x1719)))+(((IkReal(-1.00000000000000))*(x1715)*(x1718)))+(((IkReal(-1.00000000000000))*(x1716)*(x1720))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj1)*(x1715)*(x1717)))+(((cj1)*(sj2)*(x1719)))+(((cj2)*(sj1)*(x1719)))+(((cj2)*(x1718)))+(((IkReal(-1.00000000000000))*(x1715)*(x1716)))+(((IkReal(-1.00000000000000))*(sj1)*(x1717)*(x1720)))))))+IKsqr(((((IkReal(-1.00000000000000))*(cj1)*(x1717)*(x1720)))+(((cj1)*(cj2)*(x1719)))+(((sj1)*(sj2)*(x1717)))+(((IkReal(-1.00000000000000))*(sj1)*(x1715)*(x1719)))+(((IkReal(-1.00000000000000))*(x1715)*(x1718)))+(((IkReal(-1.00000000000000))*(x1716)*(x1720)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj1)*(x1715)*(x1717)))+(((cj1)*(sj2)*(x1719)))+(((cj2)*(sj1)*(x1719)))+(((cj2)*(x1718)))+(((IkReal(-1.00000000000000))*(x1715)*(x1716)))+(((IkReal(-1.00000000000000))*(sj1)*(x1717)*(x1720)))))), ((((IkReal(-1.00000000000000))*(cj1)*(x1717)*(x1720)))+(((cj1)*(cj2)*(x1719)))+(((sj1)*(sj2)*(x1717)))+(((IkReal(-1.00000000000000))*(sj1)*(x1715)*(x1719)))+(((IkReal(-1.00000000000000))*(x1715)*(x1718)))+(((IkReal(-1.00000000000000))*(x1716)*(x1720)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1721=IKsin(j5);
IkReal x1722=((r02)*(sj2));
IkReal x1723=((IkReal(1.00000000000000))*(sj2));
IkReal x1724=((r00)*(sj0));
IkReal x1725=((IkReal(1.00000000000000))*(cj2));
IkReal x1726=((cj0)*(r01)*(sj1));
IkReal x1727=((cj0)*(cj1)*(r01));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj4)*(x1721)))+(((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[1]=((((cj2)*(x1726)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1725)))+(((sj1)*(x1722)))+(((sj4)*(x1721)))+(((IkReal(-1.00000000000000))*(cj1)*(x1723)*(x1724)))+(((IkReal(-1.00000000000000))*(sj1)*(x1724)*(x1725)))+(((sj2)*(x1727))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj1)*(x1724)*(x1725)))+(((cj2)*(x1727)))+(((IkReal(-1.00000000000000))*(x1723)*(x1726)))+(IKcos(j5))+(((cj2)*(r02)*(sj1)))+(((cj1)*(x1722)))+(((sj1)*(sj2)*(x1724))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1728=((cj0)*(r01));
IkReal x1729=((sj1)*(sj2));
IkReal x1730=((IkReal(1.00000000000000))*(cj1));
IkReal x1731=((r00)*(sj0));
if( IKabs(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj1)*(cj2)*(x1731)))+(((x1728)*(x1729)))+(((IkReal(-1.00000000000000))*(cj2)*(x1728)*(x1730)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1730)))+(((IkReal(-1.00000000000000))*(x1729)*(x1731)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))))+IKsqr(((((cj1)*(cj2)*(x1731)))+(((x1728)*(x1729)))+(((IkReal(-1.00000000000000))*(cj2)*(x1728)*(x1730)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1730)))+(((IkReal(-1.00000000000000))*(x1729)*(x1731)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))), ((((cj1)*(cj2)*(x1731)))+(((x1728)*(x1729)))+(((IkReal(-1.00000000000000))*(cj2)*(x1728)*(x1730)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x1730)))+(((IkReal(-1.00000000000000))*(x1729)*(x1731)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1732=IKsin(j5);
IkReal x1733=((r02)*(sj2));
IkReal x1734=((IkReal(1.00000000000000))*(sj2));
IkReal x1735=((r00)*(sj0));
IkReal x1736=((IkReal(1.00000000000000))*(cj2));
IkReal x1737=((cj0)*(r01)*(sj1));
IkReal x1738=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x1732)))+(((cj0)*(r00))));
evalcond[1]=((((cj2)*(x1737)))+(((IkReal(-1.00000000000000))*(sj1)*(x1735)*(x1736)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1736)))+(((sj1)*(x1733)))+(((sj4)*(x1732)))+(((IkReal(-1.00000000000000))*(cj1)*(x1734)*(x1735)))+(((sj2)*(x1738))));
evalcond[2]=((((cj2)*(x1738)))+(((IkReal(-1.00000000000000))*(cj1)*(x1735)*(x1736)))+(IKcos(j5))+(((cj2)*(r02)*(sj1)))+(((cj1)*(x1733)))+(((IkReal(-1.00000000000000))*(x1734)*(x1737)))+(((sj1)*(sj2)*(x1735))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1739=((cj1)*(sj2));
IkReal x1740=((px)*(sj0));
IkReal x1741=((sj1)*(sj2));
IkReal x1742=((cj0)*(py));
IkReal x1743=((cj2)*(pz));
IkReal x1744=((IkReal(1.00000000000000))*(cj1));
IkReal x1745=((cj2)*(x1742));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(0.190892000000000))*(sj4)))+(((IkReal(0.000787000000000000))*(cj4)))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((IkReal(-0.312421000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((pz)*(x1739)))+(((IkReal(-1.00000000000000))*(cj2)*(x1740)*(x1744)))+(((cj1)*(x1745)))+(((sj1)*(x1743)))+(((IkReal(-1.00000000000000))*(x1741)*(x1742)))+(((x1740)*(x1741)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[3]=((IkReal(-0.125720000000000))+(((pz)*(x1741)))+(((x1739)*(x1742)))+(((IkReal(-1.00000000000000))*(x1739)*(x1740)))+(((IkReal(0.000787000000000000))*(sj4)))+(((IkReal(0.521670000000000))*(cj2)))+(((sj1)*(x1745)))+(((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x1740)))+(((IkReal(-0.190892000000000))*(cj4)))+(((IkReal(-1.00000000000000))*(x1743)*(x1744)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x1746=((IkReal(1.00000000000000))*(sj0));
IkReal x1747=((cj1)*(sj2));
IkReal x1748=((sj1)*(sj2));
IkReal x1749=((cj2)*(sj1));
IkReal x1750=((cj0)*(r01));
IkReal x1751=((cj0)*(py));
IkReal x1752=((cj2)*(x1751));
IkReal x1753=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.000787000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((x1749)*(x1750)))+(((x1747)*(x1750)))+(((r02)*(x1748)))+(((IkReal(-1.00000000000000))*(r00)*(x1746)*(x1747)))+(((IkReal(-1.00000000000000))*(r00)*(x1746)*(x1749)))+(((IkReal(-1.00000000000000))*(r02)*(x1753))));
evalcond[3]=((IkReal(-0.312421000000000))+(((pz)*(x1747)))+(((pz)*(x1749)))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(px)*(x1746)))+(((cj1)*(x1752)))+(((IkReal(-1.00000000000000))*(x1748)*(x1751)))+(((IkReal(-0.521670000000000))*(sj2)))+(((px)*(sj0)*(x1748))));
evalcond[4]=((IkReal(-0.316612000000000))+(((pz)*(x1748)))+(((x1749)*(x1751)))+(((x1747)*(x1751)))+(((IkReal(-1.00000000000000))*(px)*(x1746)*(x1747)))+(((IkReal(-1.00000000000000))*(px)*(x1746)*(x1749)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(pz)*(x1753)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1754=((sj1)*(sj2));
IkReal x1755=((cj0)*(r01));
IkReal x1756=((r00)*(sj0));
IkReal x1757=((cj1)*(cj2));
if( IKabs(((((r01)*(sj0)))+(((cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x1754)*(x1756)))+(((IkReal(-1.00000000000000))*(x1756)*(x1757)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1754)*(x1755)))+(((cj1)*(r02)*(sj2)))+(((x1755)*(x1757))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r01)*(sj0)))+(((cj0)*(r00)))))+IKsqr(((((x1754)*(x1756)))+(((IkReal(-1.00000000000000))*(x1756)*(x1757)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1754)*(x1755)))+(((cj1)*(r02)*(sj2)))+(((x1755)*(x1757)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((r01)*(sj0)))+(((cj0)*(r00)))), ((((x1754)*(x1756)))+(((IkReal(-1.00000000000000))*(x1756)*(x1757)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1754)*(x1755)))+(((cj1)*(r02)*(sj2)))+(((x1755)*(x1757)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1758=((sj1)*(sj2));
IkReal x1759=((cj0)*(r01));
IkReal x1760=((r00)*(sj0));
IkReal x1761=((cj1)*(cj2));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1758)*(x1759)))+(((x1759)*(x1761)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((x1758)*(x1760)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1760)*(x1761)))+(((cj1)*(r02)*(sj2))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1762=((IkReal(1.00000000000000))*(sj0));
IkReal x1763=((cj1)*(sj2));
IkReal x1764=((sj1)*(sj2));
IkReal x1765=((cj2)*(sj1));
IkReal x1766=((cj0)*(r01));
IkReal x1767=((cj0)*(py));
IkReal x1768=((cj2)*(x1767));
IkReal x1769=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.000787000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r02)*(x1769)))+(((x1765)*(x1766)))+(((IkReal(-1.00000000000000))*(r00)*(x1762)*(x1763)))+(((IkReal(-1.00000000000000))*(r00)*(x1762)*(x1765)))+(((r02)*(x1764)))+(((x1763)*(x1766))));
evalcond[3]=((IkReal(-0.312421000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((px)*(sj0)*(x1764)))+(((pz)*(x1763)))+(((pz)*(x1765)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(px)*(x1762)))+(((IkReal(-0.521670000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(x1764)*(x1767)))+(((cj1)*(x1768))));
evalcond[4]=((IkReal(0.0651720000000000))+(((IkReal(-1.00000000000000))*(pz)*(x1769)))+(((IkReal(-1.00000000000000))*(px)*(x1762)*(x1765)))+(((IkReal(-1.00000000000000))*(px)*(x1762)*(x1763)))+(((x1765)*(x1767)))+(((IkReal(0.521670000000000))*(cj2)))+(((pz)*(x1764)))+(((IkReal(0.00982000000000000))*(sj2)))+(((x1763)*(x1767))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1770=((r00)*(sj0));
IkReal x1771=((cj1)*(cj2));
IkReal x1772=((sj1)*(sj2));
IkReal x1773=((cj0)*(r01));
if( IKabs(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x1772)*(x1773)))+(((x1771)*(x1773)))+(((x1770)*(x1772)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1770)*(x1771)))+(((cj1)*(r02)*(sj2))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))))+IKsqr(((((IkReal(-1.00000000000000))*(x1772)*(x1773)))+(((x1771)*(x1773)))+(((x1770)*(x1772)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1770)*(x1771)))+(((cj1)*(r02)*(sj2)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))), ((((IkReal(-1.00000000000000))*(x1772)*(x1773)))+(((x1771)*(x1773)))+(((x1770)*(x1772)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1770)*(x1771)))+(((cj1)*(r02)*(sj2)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1774=((sj1)*(sj2));
IkReal x1775=((cj0)*(r01));
IkReal x1776=((r00)*(sj0));
IkReal x1777=((cj1)*(cj2));
evalcond[0]=((((r01)*(sj0)))+(IKsin(j5))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(IKcos(j5))))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1774)*(x1775)))+(((x1775)*(x1777)))+(((x1774)*(x1776)))+(((IkReal(-1.00000000000000))*(x1776)*(x1777)))+(((cj1)*(r02)*(sj2))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1778=((pz)*(sj1));
IkReal x1779=((cj0)*(py));
IkReal x1780=((IkReal(1.00000000000000))*(sj2));
IkReal x1781=((cj1)*(cj2));
IkReal x1782=((px)*(sj0));
IkReal x1783=((cj2)*(sj1));
IkReal x1784=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(0.190892000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.312421000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((sj1)*(sj2)*(x1782)))+(((pz)*(x1784)))+(((x1779)*(x1781)))+(((IkReal(-1.00000000000000))*(x1781)*(x1782)))+(((IkReal(-1.00000000000000))*(sj1)*(x1779)*(x1780)))+(((cj2)*(x1778)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(-0.124933000000000))+(((IkReal(-1.00000000000000))*(x1782)*(x1783)))+(((x1779)*(x1783)))+(((x1779)*(x1784)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(cj1)*(x1780)*(x1782)))+(((IkReal(-1.00000000000000))*(pz)*(x1781)))+(((sj2)*(x1778)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1785=((r02)*(sj2));
IkReal x1786=((IkReal(1.00000000000000))*(sj2));
IkReal x1787=((r00)*(sj0));
IkReal x1788=((cj1)*(cj2));
IkReal x1789=((cj0)*(r01));
IkReal x1790=((sj1)*(x1789));
IkReal x1791=((IkReal(1.00000000000000))*(cj2)*(x1787));
if( IKabs(((((sj1)*(x1785)))+(((cj2)*(x1790)))+(((IkReal(-1.00000000000000))*(r02)*(x1788)))+(((IkReal(-1.00000000000000))*(cj1)*(x1786)*(x1787)))+(((cj1)*(sj2)*(x1789)))+(((IkReal(-1.00000000000000))*(sj1)*(x1791))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((sj1)*(sj2)*(x1787)))+(((cj1)*(x1785)))+(((IkReal(-1.00000000000000))*(x1787)*(x1788)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1786)*(x1790)))+(((x1788)*(x1789))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((sj1)*(x1785)))+(((cj2)*(x1790)))+(((IkReal(-1.00000000000000))*(r02)*(x1788)))+(((IkReal(-1.00000000000000))*(cj1)*(x1786)*(x1787)))+(((cj1)*(sj2)*(x1789)))+(((IkReal(-1.00000000000000))*(sj1)*(x1791)))))+IKsqr(((((sj1)*(sj2)*(x1787)))+(((cj1)*(x1785)))+(((IkReal(-1.00000000000000))*(x1787)*(x1788)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1786)*(x1790)))+(((x1788)*(x1789)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((sj1)*(x1785)))+(((cj2)*(x1790)))+(((IkReal(-1.00000000000000))*(r02)*(x1788)))+(((IkReal(-1.00000000000000))*(cj1)*(x1786)*(x1787)))+(((cj1)*(sj2)*(x1789)))+(((IkReal(-1.00000000000000))*(sj1)*(x1791)))), ((((sj1)*(sj2)*(x1787)))+(((cj1)*(x1785)))+(((IkReal(-1.00000000000000))*(x1787)*(x1788)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1786)*(x1790)))+(((x1788)*(x1789)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1792=((r02)*(sj2));
IkReal x1793=((IkReal(1.00000000000000))*(sj2));
IkReal x1794=((r00)*(sj0));
IkReal x1795=((cj1)*(cj2));
IkReal x1796=((cj0)*(r01));
IkReal x1797=((sj1)*(x1796));
IkReal x1798=((IkReal(1.00000000000000))*(cj2)*(x1794));
evalcond[0]=((((cj2)*(x1797)))+(((sj1)*(x1792)))+(((IkReal(-1.00000000000000))*(r02)*(x1795)))+(((cj1)*(sj2)*(x1796)))+(((IkReal(-1.00000000000000))*(cj1)*(x1793)*(x1794)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((IkReal(-1.00000000000000))*(sj1)*(x1798))));
evalcond[1]=((((sj1)*(sj2)*(x1794)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((IkReal(-1.00000000000000))*(x1793)*(x1797)))+(((cj1)*(x1792)))+(((cj2)*(r02)*(sj1)))+(((x1795)*(x1796)))+(((IkReal(-1.00000000000000))*(x1794)*(x1795))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1799=((pz)*(sj1));
IkReal x1800=((cj0)*(py));
IkReal x1801=((IkReal(1.00000000000000))*(sj2));
IkReal x1802=((cj1)*(cj2));
IkReal x1803=((px)*(sj0));
IkReal x1804=((cj2)*(sj1));
IkReal x1805=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(-0.190892000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.312421000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((x1800)*(x1802)))+(((cj2)*(x1799)))+(((sj1)*(sj2)*(x1803)))+(((IkReal(-1.00000000000000))*(sj1)*(x1800)*(x1801)))+(((IkReal(-1.00000000000000))*(x1802)*(x1803)))+(((IkReal(-0.521670000000000))*(sj2)))+(((pz)*(x1805))));
evalcond[4]=((IkReal(-0.126507000000000))+(((sj2)*(x1799)))+(((x1800)*(x1805)))+(((x1800)*(x1804)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(pz)*(x1802)))+(((IkReal(-1.00000000000000))*(x1803)*(x1804)))+(((IkReal(0.00982000000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(cj1)*(x1801)*(x1803))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1806=((IkReal(1.00000000000000))*(sj2));
IkReal x1807=((r02)*(sj1));
IkReal x1808=((cj0)*(r01));
IkReal x1809=((IkReal(1.00000000000000))*(cj2));
IkReal x1810=((cj1)*(r02));
IkReal x1811=((cj1)*(r00)*(sj0));
IkReal x1812=((r00)*(sj0)*(sj1));
if( IKabs(((((sj2)*(x1811)))+(((IkReal(-1.00000000000000))*(cj1)*(x1806)*(x1808)))+(((cj2)*(x1812)))+(((cj2)*(x1810)))+(((IkReal(-1.00000000000000))*(sj1)*(x1808)*(x1809)))+(((IkReal(-1.00000000000000))*(x1806)*(x1807))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((sj2)*(x1810)))+(((sj2)*(x1812)))+(((cj2)*(x1807)))+(((IkReal(-1.00000000000000))*(x1809)*(x1811)))+(((IkReal(-1.00000000000000))*(sj1)*(x1806)*(x1808)))+(((cj1)*(cj2)*(x1808))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((sj2)*(x1811)))+(((IkReal(-1.00000000000000))*(cj1)*(x1806)*(x1808)))+(((cj2)*(x1812)))+(((cj2)*(x1810)))+(((IkReal(-1.00000000000000))*(sj1)*(x1808)*(x1809)))+(((IkReal(-1.00000000000000))*(x1806)*(x1807)))))+IKsqr(((((sj2)*(x1810)))+(((sj2)*(x1812)))+(((cj2)*(x1807)))+(((IkReal(-1.00000000000000))*(x1809)*(x1811)))+(((IkReal(-1.00000000000000))*(sj1)*(x1806)*(x1808)))+(((cj1)*(cj2)*(x1808)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((sj2)*(x1811)))+(((IkReal(-1.00000000000000))*(cj1)*(x1806)*(x1808)))+(((cj2)*(x1812)))+(((cj2)*(x1810)))+(((IkReal(-1.00000000000000))*(sj1)*(x1808)*(x1809)))+(((IkReal(-1.00000000000000))*(x1806)*(x1807)))), ((((sj2)*(x1810)))+(((sj2)*(x1812)))+(((cj2)*(x1807)))+(((IkReal(-1.00000000000000))*(x1809)*(x1811)))+(((IkReal(-1.00000000000000))*(sj1)*(x1806)*(x1808)))+(((cj1)*(cj2)*(x1808)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1813=((r02)*(sj2));
IkReal x1814=((IkReal(1.00000000000000))*(sj2));
IkReal x1815=((r00)*(sj0));
IkReal x1816=((cj1)*(cj2));
IkReal x1817=((cj0)*(r01));
IkReal x1818=((sj1)*(x1817));
IkReal x1819=((IkReal(1.00000000000000))*(cj2)*(x1815));
evalcond[0]=((((IkReal(-1.00000000000000))*(sj1)*(x1819)))+(((cj2)*(x1818)))+(IKsin(j5))+(((IkReal(-1.00000000000000))*(cj1)*(x1814)*(x1815)))+(((IkReal(-1.00000000000000))*(r02)*(x1816)))+(((sj1)*(x1813)))+(((cj1)*(sj2)*(x1817))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1815)*(x1816)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((sj1)*(sj2)*(x1815)))+(((x1816)*(x1817)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1814)*(x1818)))+(((cj1)*(x1813))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1820=((r02)*(sj2));
IkReal x1821=((IkReal(1.00000000000000))*(sj2));
IkReal x1822=((r00)*(sj0));
IkReal x1823=((cj1)*(cj2));
IkReal x1824=((cj0)*(r01));
IkReal x1825=((sj1)*(x1824));
IkReal x1826=((IkReal(1.00000000000000))*(cj2)*(x1822));
if( IKabs(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((cj1)*(sj2)*(x1824)))+(((sj1)*(x1820)))+(((cj2)*(x1825)))+(((IkReal(-1.00000000000000))*(cj1)*(x1821)*(x1822)))+(((IkReal(-1.00000000000000))*(r02)*(x1823)))+(((IkReal(-1.00000000000000))*(sj1)*(x1826))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x1821)*(x1825)))+(((sj1)*(sj2)*(x1822)))+(((cj1)*(x1820)))+(((x1823)*(x1824)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1822)*(x1823))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((cj1)*(sj2)*(x1824)))+(((sj1)*(x1820)))+(((cj2)*(x1825)))+(((IkReal(-1.00000000000000))*(cj1)*(x1821)*(x1822)))+(((IkReal(-1.00000000000000))*(r02)*(x1823)))+(((IkReal(-1.00000000000000))*(sj1)*(x1826)))))))+IKsqr(((((IkReal(-1.00000000000000))*(x1821)*(x1825)))+(((sj1)*(sj2)*(x1822)))+(((cj1)*(x1820)))+(((x1823)*(x1824)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1822)*(x1823)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((cj1)*(sj2)*(x1824)))+(((sj1)*(x1820)))+(((cj2)*(x1825)))+(((IkReal(-1.00000000000000))*(cj1)*(x1821)*(x1822)))+(((IkReal(-1.00000000000000))*(r02)*(x1823)))+(((IkReal(-1.00000000000000))*(sj1)*(x1826)))))), ((((IkReal(-1.00000000000000))*(x1821)*(x1825)))+(((sj1)*(sj2)*(x1822)))+(((cj1)*(x1820)))+(((x1823)*(x1824)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1822)*(x1823)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1827=IKsin(j5);
IkReal x1828=((r02)*(sj2));
IkReal x1829=((IkReal(1.00000000000000))*(sj2));
IkReal x1830=((r00)*(sj0));
IkReal x1831=((IkReal(1.00000000000000))*(cj2));
IkReal x1832=((IkReal(1.00000000000000))*(x1827));
IkReal x1833=((cj0)*(r01)*(sj1));
IkReal x1834=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x1832)))+(((cj0)*(r00))));
evalcond[1]=((((cj2)*(x1833)))+(((IkReal(-1.00000000000000))*(sj4)*(x1832)))+(((sj2)*(x1834)))+(((sj1)*(x1828)))+(((IkReal(-1.00000000000000))*(cj1)*(x1829)*(x1830)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1831)))+(((IkReal(-1.00000000000000))*(sj1)*(x1830)*(x1831))));
evalcond[2]=((((cj2)*(x1834)))+(((sj1)*(sj2)*(x1830)))+(((IkReal(-1.00000000000000))*(cj1)*(x1830)*(x1831)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((cj1)*(x1828)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1829)*(x1833))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1835=((sj1)*(sj2));
IkReal x1836=((cj0)*(r01));
IkReal x1837=((r00)*(sj0));
IkReal x1838=((cj1)*(cj2));
if( IKabs(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x1837)*(x1838)))+(((x1835)*(x1837)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1835)*(x1836)))+(((x1836)*(x1838)))+(((cj1)*(r02)*(sj2))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))))+IKsqr(((((IkReal(-1.00000000000000))*(x1837)*(x1838)))+(((x1835)*(x1837)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1835)*(x1836)))+(((x1836)*(x1838)))+(((cj1)*(r02)*(sj2)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))), ((((IkReal(-1.00000000000000))*(x1837)*(x1838)))+(((x1835)*(x1837)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1835)*(x1836)))+(((x1836)*(x1838)))+(((cj1)*(r02)*(sj2)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1839=IKsin(j5);
IkReal x1840=((r02)*(sj2));
IkReal x1841=((IkReal(1.00000000000000))*(sj2));
IkReal x1842=((r00)*(sj0));
IkReal x1843=((IkReal(1.00000000000000))*(cj2));
IkReal x1844=((IkReal(1.00000000000000))*(x1839));
IkReal x1845=((cj0)*(r01)*(sj1));
IkReal x1846=((cj0)*(cj1)*(r01));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj4)*(x1844)))+(((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj4)*(x1844)))+(((IkReal(-1.00000000000000))*(cj1)*(x1841)*(x1842)))+(((sj2)*(x1846)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1843)))+(((sj1)*(x1840)))+(((cj2)*(x1845)))+(((IkReal(-1.00000000000000))*(sj1)*(x1842)*(x1843))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj1)*(x1842)*(x1843)))+(((IkReal(-1.00000000000000))*(x1841)*(x1845)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((cj2)*(x1846)))+(((cj1)*(x1840)))+(((cj2)*(r02)*(sj1)))+(((sj1)*(sj2)*(x1842))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1847=((cj1)*(sj2));
IkReal x1848=((px)*(sj0));
IkReal x1849=((sj1)*(sj2));
IkReal x1850=((cj0)*(py));
IkReal x1851=((cj2)*(pz));
IkReal x1852=((IkReal(1.00000000000000))*(cj1));
IkReal x1853=((cj2)*(x1850));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(0.190892000000000))*(sj4)))+(((IkReal(0.000787000000000000))*(cj4)))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((IkReal(-0.394310000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x1849)*(x1850)))+(((IkReal(0.000787000000000000))*(sj4)))+(((cj1)*(x1853)))+(((IkReal(-1.00000000000000))*(cj2)*(x1848)*(x1852)))+(((pz)*(x1847)))+(((x1848)*(x1849)))+(((IkReal(-0.190892000000000))*(cj4)))+(((sj1)*(x1851)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[3]=((IkReal(0.0588310000000000))+(((IkReal(-1.00000000000000))*(x1847)*(x1848)))+(((x1847)*(x1850)))+(((IkReal(-1.00000000000000))*(x1851)*(x1852)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x1848)))+(((pz)*(x1849)))+(((sj1)*(x1853)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x1854=((IkReal(1.00000000000000))*(sj2));
IkReal x1855=((px)*(sj0));
IkReal x1856=((pz)*(sj2));
IkReal x1857=((cj0)*(sj1));
IkReal x1858=((cj1)*(sj2));
IkReal x1859=((sj1)*(sj2));
IkReal x1860=((cj2)*(sj1));
IkReal x1861=((r00)*(sj0));
IkReal x1862=((cj0)*(cj1)*(cj2));
IkReal x1863=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.000787000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((r02)*(x1860)))+(((x1859)*(x1861)))+(((r02)*(x1858)))+(((IkReal(-1.00000000000000))*(r01)*(x1854)*(x1857)))+(((IkReal(-1.00000000000000))*(x1861)*(x1863)))+(((r01)*(x1862))));
evalcond[3]=((IkReal(-0.585202000000000))+(((py)*(x1862)))+(((IkReal(0.00982000000000000))*(cj2)))+(((pz)*(x1860)))+(((IkReal(-1.00000000000000))*(x1855)*(x1863)))+(((cj1)*(x1856)))+(((x1855)*(x1859)))+(((IkReal(-1.00000000000000))*(py)*(x1854)*(x1857)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(0.0588310000000000))+(((cj2)*(py)*(x1857)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(cj1)*(x1854)*(x1855)))+(((IkReal(-1.00000000000000))*(x1855)*(x1860)))+(((sj1)*(x1856)))+(((IkReal(-1.00000000000000))*(pz)*(x1863)))+(((IkReal(0.00982000000000000))*(sj2)))+(((cj0)*(py)*(x1858))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1864=((IkReal(1.00000000000000))*(sj2));
IkReal x1865=((cj0)*(r01));
IkReal x1866=((r00)*(sj0));
IkReal x1867=((cj2)*(sj1));
if( IKabs(((((r01)*(sj0)))+(((cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x1865)*(x1867)))+(((IkReal(-1.00000000000000))*(cj1)*(x1864)*(x1865)))+(((x1866)*(x1867)))+(((cj1)*(sj2)*(x1866)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1864)))+(((cj1)*(cj2)*(r02))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r01)*(sj0)))+(((cj0)*(r00)))))+IKsqr(((((IkReal(-1.00000000000000))*(x1865)*(x1867)))+(((IkReal(-1.00000000000000))*(cj1)*(x1864)*(x1865)))+(((x1866)*(x1867)))+(((cj1)*(sj2)*(x1866)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1864)))+(((cj1)*(cj2)*(r02)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((r01)*(sj0)))+(((cj0)*(r00)))), ((((IkReal(-1.00000000000000))*(x1865)*(x1867)))+(((IkReal(-1.00000000000000))*(cj1)*(x1864)*(x1865)))+(((x1866)*(x1867)))+(((cj1)*(sj2)*(x1866)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1864)))+(((cj1)*(cj2)*(r02)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1868=((cj2)*(sj1));
IkReal x1869=((cj0)*(r01));
IkReal x1870=((cj1)*(sj2));
IkReal x1871=((IkReal(1.00000000000000))*(r00)*(sj0));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1868)*(x1871)))+(((IkReal(-1.00000000000000))*(x1870)*(x1871)))+(IKcos(j5))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((x1869)*(x1870)))+(((r02)*(sj1)*(sj2)))+(((x1868)*(x1869))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1872=((IkReal(1.00000000000000))*(sj2));
IkReal x1873=((px)*(sj0));
IkReal x1874=((pz)*(sj2));
IkReal x1875=((cj0)*(sj1));
IkReal x1876=((cj1)*(sj2));
IkReal x1877=((sj1)*(sj2));
IkReal x1878=((cj2)*(sj1));
IkReal x1879=((r00)*(sj0));
IkReal x1880=((cj0)*(cj1)*(cj2));
IkReal x1881=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.000787000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1879)*(x1881)))+(((r02)*(x1876)))+(((r02)*(x1878)))+(((x1877)*(x1879)))+(((r01)*(x1880)))+(((IkReal(-1.00000000000000))*(r01)*(x1872)*(x1875))));
evalcond[3]=((IkReal(-0.203418000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x1873)*(x1881)))+(((IkReal(-1.00000000000000))*(py)*(x1872)*(x1875)))+(((py)*(x1880)))+(((cj1)*(x1874)))+(((pz)*(x1878)))+(((x1873)*(x1877)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(0.0588310000000000))+(((cj0)*(py)*(x1876)))+(((cj2)*(py)*(x1875)))+(((IkReal(0.521670000000000))*(cj2)))+(((sj1)*(x1874)))+(((IkReal(-1.00000000000000))*(x1873)*(x1878)))+(((IkReal(-1.00000000000000))*(pz)*(x1881)))+(((IkReal(0.00982000000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(cj1)*(x1872)*(x1873))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1882=((IkReal(1.00000000000000))*(sj2));
IkReal x1883=((cj0)*(r01));
IkReal x1884=((r00)*(sj0));
IkReal x1885=((cj2)*(sj1));
if( IKabs(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x1883)*(x1885)))+(((cj1)*(sj2)*(x1884)))+(((cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(cj1)*(x1882)*(x1883)))+(((x1884)*(x1885)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1882))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))))+IKsqr(((((IkReal(-1.00000000000000))*(x1883)*(x1885)))+(((cj1)*(sj2)*(x1884)))+(((cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(cj1)*(x1882)*(x1883)))+(((x1884)*(x1885)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1882)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))), ((((IkReal(-1.00000000000000))*(x1883)*(x1885)))+(((cj1)*(sj2)*(x1884)))+(((cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(cj1)*(x1882)*(x1883)))+(((x1884)*(x1885)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1882)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1886=((cj2)*(sj1));
IkReal x1887=((cj0)*(r01));
IkReal x1888=((cj1)*(sj2));
IkReal x1889=((IkReal(1.00000000000000))*(r00)*(sj0));
evalcond[0]=((((r01)*(sj0)))+(IKsin(j5))+(((cj0)*(r00))));
evalcond[1]=((((x1887)*(x1888)))+(((IkReal(-1.00000000000000))*(x1888)*(x1889)))+(IKcos(j5))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((r02)*(sj1)*(sj2)))+(((IkReal(-1.00000000000000))*(x1886)*(x1889)))+(((x1886)*(x1887))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1890=((pz)*(sj1));
IkReal x1891=((cj0)*(py));
IkReal x1892=((IkReal(1.00000000000000))*(sj2));
IkReal x1893=((cj1)*(cj2));
IkReal x1894=((px)*(sj0));
IkReal x1895=((cj2)*(sj1));
IkReal x1896=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(0.190892000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.393523000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((pz)*(x1896)))+(((x1891)*(x1893)))+(((cj2)*(x1890)))+(((IkReal(-1.00000000000000))*(sj1)*(x1891)*(x1892)))+(((sj1)*(sj2)*(x1894)))+(((IkReal(-0.521670000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(x1893)*(x1894))));
evalcond[4]=((IkReal(0.0588310000000000))+(((IkReal(-1.00000000000000))*(pz)*(x1893)))+(((IkReal(-1.00000000000000))*(cj1)*(x1892)*(x1894)))+(((sj2)*(x1890)))+(((IkReal(0.521670000000000))*(cj2)))+(((x1891)*(x1895)))+(((x1891)*(x1896)))+(((IkReal(-1.00000000000000))*(x1894)*(x1895)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1897=((IkReal(1.00000000000000))*(sj2));
IkReal x1898=((r02)*(sj1));
IkReal x1899=((cj0)*(r01));
IkReal x1900=((IkReal(1.00000000000000))*(cj2));
IkReal x1901=((cj1)*(r02));
IkReal x1902=((cj1)*(r00)*(sj0));
IkReal x1903=((r00)*(sj0)*(sj1));
if( IKabs(((((IkReal(-1.00000000000000))*(sj1)*(x1897)*(x1899)))+(((cj1)*(cj2)*(x1899)))+(((IkReal(-1.00000000000000))*(x1900)*(x1902)))+(((cj2)*(x1898)))+(((sj2)*(x1903)))+(((sj2)*(x1901))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x1897)*(x1898)))+(((cj2)*(x1903)))+(((cj2)*(x1901)))+(((IkReal(-1.00000000000000))*(sj1)*(x1899)*(x1900)))+(((sj2)*(x1902)))+(((IkReal(-1.00000000000000))*(cj1)*(x1897)*(x1899))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(sj1)*(x1897)*(x1899)))+(((cj1)*(cj2)*(x1899)))+(((IkReal(-1.00000000000000))*(x1900)*(x1902)))+(((cj2)*(x1898)))+(((sj2)*(x1903)))+(((sj2)*(x1901)))))+IKsqr(((((IkReal(-1.00000000000000))*(x1897)*(x1898)))+(((cj2)*(x1903)))+(((cj2)*(x1901)))+(((IkReal(-1.00000000000000))*(sj1)*(x1899)*(x1900)))+(((sj2)*(x1902)))+(((IkReal(-1.00000000000000))*(cj1)*(x1897)*(x1899)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(sj1)*(x1897)*(x1899)))+(((cj1)*(cj2)*(x1899)))+(((IkReal(-1.00000000000000))*(x1900)*(x1902)))+(((cj2)*(x1898)))+(((sj2)*(x1903)))+(((sj2)*(x1901)))), ((((IkReal(-1.00000000000000))*(x1897)*(x1898)))+(((cj2)*(x1903)))+(((cj2)*(x1901)))+(((IkReal(-1.00000000000000))*(sj1)*(x1899)*(x1900)))+(((sj2)*(x1902)))+(((IkReal(-1.00000000000000))*(cj1)*(x1897)*(x1899)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1904=((r02)*(sj2));
IkReal x1905=((IkReal(1.00000000000000))*(sj2));
IkReal x1906=((r00)*(sj0));
IkReal x1907=((cj1)*(cj2));
IkReal x1908=((cj0)*(r01));
IkReal x1909=((sj1)*(x1908));
IkReal x1910=((IkReal(1.00000000000000))*(cj2)*(x1906));
evalcond[0]=((((IkReal(-1.00000000000000))*(sj1)*(x1910)))+(((cj2)*(x1909)))+(((IkReal(-1.00000000000000))*(cj1)*(x1905)*(x1906)))+(IKcos(j5))+(((sj1)*(x1904)))+(((cj1)*(sj2)*(x1908)))+(((IkReal(-1.00000000000000))*(r02)*(x1907))));
evalcond[1]=((((sj1)*(sj2)*(x1906)))+(((IkReal(-1.00000000000000))*(x1906)*(x1907)))+(((cj1)*(x1904)))+(((IkReal(-1.00000000000000))*(x1905)*(x1909)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((x1907)*(x1908))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1911=((pz)*(sj1));
IkReal x1912=((cj0)*(py));
IkReal x1913=((IkReal(1.00000000000000))*(sj2));
IkReal x1914=((cj1)*(cj2));
IkReal x1915=((px)*(sj0));
IkReal x1916=((cj2)*(sj1));
IkReal x1917=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(-0.190892000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.395097000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((sj1)*(sj2)*(x1915)))+(((x1912)*(x1914)))+(((pz)*(x1917)))+(((cj2)*(x1911)))+(((IkReal(-1.00000000000000))*(sj1)*(x1912)*(x1913)))+(((IkReal(-1.00000000000000))*(x1914)*(x1915)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(0.0588310000000000))+(((x1912)*(x1917)))+(((x1912)*(x1916)))+(((IkReal(-1.00000000000000))*(x1915)*(x1916)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(pz)*(x1914)))+(((sj2)*(x1911)))+(((IkReal(0.00982000000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(cj1)*(x1913)*(x1915))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1918=((IkReal(1.00000000000000))*(sj2));
IkReal x1919=((r02)*(sj1));
IkReal x1920=((cj0)*(r01));
IkReal x1921=((r00)*(sj0));
IkReal x1922=((cj1)*(r02));
IkReal x1923=((IkReal(1.00000000000000))*(cj2));
if( IKabs(((((IkReal(-1.00000000000000))*(x1918)*(x1922)))+(((IkReal(-1.00000000000000))*(sj1)*(x1918)*(x1921)))+(((sj1)*(sj2)*(x1920)))+(((IkReal(-1.00000000000000))*(x1919)*(x1923)))+(((IkReal(-1.00000000000000))*(cj1)*(x1920)*(x1923)))+(((cj1)*(cj2)*(x1921))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(cj1)*(x1918)*(x1920)))+(((cj2)*(x1922)))+(((IkReal(-1.00000000000000))*(sj1)*(x1920)*(x1923)))+(((cj1)*(sj2)*(x1921)))+(((IkReal(-1.00000000000000))*(x1918)*(x1919)))+(((cj2)*(sj1)*(x1921))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x1918)*(x1922)))+(((IkReal(-1.00000000000000))*(sj1)*(x1918)*(x1921)))+(((sj1)*(sj2)*(x1920)))+(((IkReal(-1.00000000000000))*(x1919)*(x1923)))+(((IkReal(-1.00000000000000))*(cj1)*(x1920)*(x1923)))+(((cj1)*(cj2)*(x1921)))))+IKsqr(((((IkReal(-1.00000000000000))*(cj1)*(x1918)*(x1920)))+(((cj2)*(x1922)))+(((IkReal(-1.00000000000000))*(sj1)*(x1920)*(x1923)))+(((cj1)*(sj2)*(x1921)))+(((IkReal(-1.00000000000000))*(x1918)*(x1919)))+(((cj2)*(sj1)*(x1921)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x1918)*(x1922)))+(((IkReal(-1.00000000000000))*(sj1)*(x1918)*(x1921)))+(((sj1)*(sj2)*(x1920)))+(((IkReal(-1.00000000000000))*(x1919)*(x1923)))+(((IkReal(-1.00000000000000))*(cj1)*(x1920)*(x1923)))+(((cj1)*(cj2)*(x1921)))), ((((IkReal(-1.00000000000000))*(cj1)*(x1918)*(x1920)))+(((cj2)*(x1922)))+(((IkReal(-1.00000000000000))*(sj1)*(x1920)*(x1923)))+(((cj1)*(sj2)*(x1921)))+(((IkReal(-1.00000000000000))*(x1918)*(x1919)))+(((cj2)*(sj1)*(x1921)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1924=((r02)*(sj2));
IkReal x1925=((IkReal(1.00000000000000))*(sj2));
IkReal x1926=((r00)*(sj0));
IkReal x1927=((cj1)*(cj2));
IkReal x1928=((cj0)*(r01));
IkReal x1929=((sj1)*(x1928));
IkReal x1930=((IkReal(1.00000000000000))*(cj2)*(x1926));
evalcond[0]=((((IkReal(-1.00000000000000))*(sj1)*(x1930)))+(((IkReal(-1.00000000000000))*(r02)*(x1927)))+(((cj2)*(x1929)))+(IKcos(j5))+(((IkReal(-1.00000000000000))*(cj1)*(x1925)*(x1926)))+(((cj1)*(sj2)*(x1928)))+(((sj1)*(x1924))));
evalcond[1]=((((x1927)*(x1928)))+(((cj1)*(x1924)))+(((IkReal(-1.00000000000000))*(x1926)*(x1927)))+(((sj1)*(sj2)*(x1926)))+(IKsin(j5))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x1925)*(x1929))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1931=((IkReal(1.00000000000000))*(sj2));
IkReal x1932=((r02)*(sj1));
IkReal x1933=((cj0)*(r01));
IkReal x1934=((IkReal(1.00000000000000))*(cj2));
IkReal x1935=((cj1)*(r02));
IkReal x1936=((cj1)*(r00)*(sj0));
IkReal x1937=((r00)*(sj0)*(sj1));
if( IKabs(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((sj2)*(x1935)))+(((sj2)*(x1937)))+(((IkReal(-1.00000000000000))*(x1934)*(x1936)))+(((cj1)*(cj2)*(x1933)))+(((cj2)*(x1932)))+(((IkReal(-1.00000000000000))*(sj1)*(x1931)*(x1933))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(sj1)*(x1933)*(x1934)))+(((sj2)*(x1936)))+(((IkReal(-1.00000000000000))*(cj1)*(x1931)*(x1933)))+(((cj2)*(x1935)))+(((cj2)*(x1937)))+(((IkReal(-1.00000000000000))*(x1931)*(x1932))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((sj2)*(x1935)))+(((sj2)*(x1937)))+(((IkReal(-1.00000000000000))*(x1934)*(x1936)))+(((cj1)*(cj2)*(x1933)))+(((cj2)*(x1932)))+(((IkReal(-1.00000000000000))*(sj1)*(x1931)*(x1933)))))))+IKsqr(((((IkReal(-1.00000000000000))*(sj1)*(x1933)*(x1934)))+(((sj2)*(x1936)))+(((IkReal(-1.00000000000000))*(cj1)*(x1931)*(x1933)))+(((cj2)*(x1935)))+(((cj2)*(x1937)))+(((IkReal(-1.00000000000000))*(x1931)*(x1932)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((sj2)*(x1935)))+(((sj2)*(x1937)))+(((IkReal(-1.00000000000000))*(x1934)*(x1936)))+(((cj1)*(cj2)*(x1933)))+(((cj2)*(x1932)))+(((IkReal(-1.00000000000000))*(sj1)*(x1931)*(x1933)))))), ((((IkReal(-1.00000000000000))*(sj1)*(x1933)*(x1934)))+(((sj2)*(x1936)))+(((IkReal(-1.00000000000000))*(cj1)*(x1931)*(x1933)))+(((cj2)*(x1935)))+(((cj2)*(x1937)))+(((IkReal(-1.00000000000000))*(x1931)*(x1932)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1938=IKsin(j5);
IkReal x1939=((r02)*(sj2));
IkReal x1940=((IkReal(1.00000000000000))*(sj2));
IkReal x1941=((r00)*(sj0));
IkReal x1942=((IkReal(1.00000000000000))*(cj2));
IkReal x1943=((IkReal(1.00000000000000))*(x1938));
IkReal x1944=((cj0)*(r01)*(sj1));
IkReal x1945=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x1943)))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj1)*(x1940)*(x1941)))+(((sj2)*(x1945)))+(((cj2)*(x1944)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1942)))+(((sj1)*(x1939)))+(IKcos(j5))+(((IkReal(-1.00000000000000))*(sj1)*(x1941)*(x1942))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj1)*(x1941)*(x1942)))+(((IkReal(-1.00000000000000))*(sj4)*(x1943)))+(((cj1)*(x1939)))+(((cj2)*(x1945)))+(((IkReal(-1.00000000000000))*(x1940)*(x1944)))+(((cj2)*(r02)*(sj1)))+(((sj1)*(sj2)*(x1941))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1946=((IkReal(1.00000000000000))*(sj2));
IkReal x1947=((cj0)*(r01));
IkReal x1948=((r00)*(sj0));
IkReal x1949=((cj2)*(sj1));
if( IKabs(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj1)*(sj2)*(x1948)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1946)))+(((IkReal(-1.00000000000000))*(x1947)*(x1949)))+(((IkReal(-1.00000000000000))*(cj1)*(x1946)*(x1947)))+(((x1948)*(x1949)))+(((cj1)*(cj2)*(r02))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))))+IKsqr(((((cj1)*(sj2)*(x1948)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1946)))+(((IkReal(-1.00000000000000))*(x1947)*(x1949)))+(((IkReal(-1.00000000000000))*(cj1)*(x1946)*(x1947)))+(((x1948)*(x1949)))+(((cj1)*(cj2)*(r02)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))), ((((cj1)*(sj2)*(x1948)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x1946)))+(((IkReal(-1.00000000000000))*(x1947)*(x1949)))+(((IkReal(-1.00000000000000))*(cj1)*(x1946)*(x1947)))+(((x1948)*(x1949)))+(((cj1)*(cj2)*(r02)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x1950=IKsin(j5);
IkReal x1951=((r02)*(sj2));
IkReal x1952=((IkReal(1.00000000000000))*(sj2));
IkReal x1953=((r00)*(sj0));
IkReal x1954=((IkReal(1.00000000000000))*(cj2));
IkReal x1955=((IkReal(1.00000000000000))*(x1950));
IkReal x1956=((cj0)*(r01)*(sj1));
IkReal x1957=((cj0)*(cj1)*(r01));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj4)*(x1955)))+(((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[1]=((((sj2)*(x1957)))+(((cj2)*(x1956)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x1954)))+(IKcos(j5))+(((sj1)*(x1951)))+(((IkReal(-1.00000000000000))*(cj1)*(x1952)*(x1953)))+(((IkReal(-1.00000000000000))*(sj1)*(x1953)*(x1954))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj4)*(x1955)))+(((cj2)*(x1957)))+(((IkReal(-1.00000000000000))*(x1952)*(x1956)))+(((cj1)*(x1951)))+(((cj2)*(r02)*(sj1)))+(((sj1)*(sj2)*(x1953)))+(((IkReal(-1.00000000000000))*(cj1)*(x1953)*(x1954))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1958=((cj1)*(sj2));
IkReal x1959=((px)*(sj0));
IkReal x1960=((sj1)*(sj2));
IkReal x1961=((cj0)*(py));
IkReal x1962=((cj2)*(pz));
IkReal x1963=((IkReal(1.00000000000000))*(cj1));
IkReal x1964=((cj2)*(x1961));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(0.190892000000000))*(sj4)))+(((IkReal(0.000787000000000000))*(cj4)))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((IkReal(-0.127870000000000))+(((IkReal(0.190892000000000))*(cj4)))+(((IkReal(0.00982000000000000))*(cj2)))+(((x1959)*(x1960)))+(((IkReal(-1.00000000000000))*(x1960)*(x1961)))+(((cj1)*(x1964)))+(((sj1)*(x1962)))+(((pz)*(x1958)))+(((IkReal(-1.00000000000000))*(cj2)*(x1959)*(x1963)))+(((IkReal(-0.521670000000000))*(sj2)))+(((IkReal(-0.000787000000000000))*(sj4))));
evalcond[3]=((IkReal(-0.0438310000000000))+(((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x1959)))+(((x1958)*(x1961)))+(((sj1)*(x1964)))+(((pz)*(x1960)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x1962)*(x1963)))+(((IkReal(-1.00000000000000))*(x1958)*(x1959)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[5];
IkReal x1965=((IkReal(1.00000000000000))*(sj2));
IkReal x1966=((px)*(sj0));
IkReal x1967=((pz)*(sj2));
IkReal x1968=((cj0)*(sj1));
IkReal x1969=((cj1)*(sj2));
IkReal x1970=((sj1)*(sj2));
IkReal x1971=((cj2)*(sj1));
IkReal x1972=((r00)*(sj0));
IkReal x1973=((cj0)*(cj1)*(cj2));
IkReal x1974=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.000787000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((r02)*(x1971)))+(((r02)*(x1969)))+(((IkReal(-1.00000000000000))*(r01)*(x1965)*(x1968)))+(((x1970)*(x1972)))+(((IkReal(-1.00000000000000))*(x1972)*(x1974)))+(((r01)*(x1973))));
evalcond[3]=((IkReal(0.0630220000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((cj1)*(x1967)))+(((IkReal(-1.00000000000000))*(py)*(x1965)*(x1968)))+(((IkReal(-1.00000000000000))*(x1966)*(x1974)))+(((pz)*(x1971)))+(((py)*(x1973)))+(((x1966)*(x1970)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(-0.0438310000000000))+(((cj2)*(py)*(x1968)))+(((sj1)*(x1967)))+(((IkReal(-1.00000000000000))*(cj1)*(x1965)*(x1966)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(pz)*(x1974)))+(((IkReal(-1.00000000000000))*(x1966)*(x1971)))+(((IkReal(0.00982000000000000))*(sj2)))+(((cj0)*(py)*(x1969))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1975=((cj2)*(sj1));
IkReal x1976=((cj0)*(r01));
IkReal x1977=((cj1)*(sj2));
IkReal x1978=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((r01)*(sj0)))+(((cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x1975)*(x1978)))+(((x1976)*(x1977)))+(((x1975)*(x1976)))+(((IkReal(-1.00000000000000))*(x1977)*(x1978)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((r02)*(sj1)*(sj2))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r01)*(sj0)))+(((cj0)*(r00)))))+IKsqr(((((IkReal(-1.00000000000000))*(x1975)*(x1978)))+(((x1976)*(x1977)))+(((x1975)*(x1976)))+(((IkReal(-1.00000000000000))*(x1977)*(x1978)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((r02)*(sj1)*(sj2)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((r01)*(sj0)))+(((cj0)*(r00)))), ((((IkReal(-1.00000000000000))*(x1975)*(x1978)))+(((x1976)*(x1977)))+(((x1975)*(x1976)))+(((IkReal(-1.00000000000000))*(x1977)*(x1978)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((r02)*(sj1)*(sj2)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1979=((cj2)*(sj1));
IkReal x1980=((cj0)*(r01));
IkReal x1981=((cj1)*(sj2));
IkReal x1982=((IkReal(1.00000000000000))*(r00)*(sj0));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1981)*(x1982)))+(((IkReal(-1.00000000000000))*(x1979)*(x1982)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((x1980)*(x1981)))+(((x1979)*(x1980)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((r02)*(sj1)*(sj2))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1983=((IkReal(1.00000000000000))*(sj2));
IkReal x1984=((px)*(sj0));
IkReal x1985=((pz)*(sj2));
IkReal x1986=((cj0)*(sj1));
IkReal x1987=((cj1)*(sj2));
IkReal x1988=((sj1)*(sj2));
IkReal x1989=((cj2)*(sj1));
IkReal x1990=((r00)*(sj0));
IkReal x1991=((cj0)*(cj1)*(cj2));
IkReal x1992=((IkReal(1.00000000000000))*(cj1)*(cj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.000787000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r01)*(x1983)*(x1986)))+(((x1988)*(x1990)))+(((IkReal(-1.00000000000000))*(x1990)*(x1992)))+(((r01)*(x1991)))+(((r02)*(x1987)))+(((r02)*(x1989))));
evalcond[3]=((IkReal(-0.318762000000000))+(((x1984)*(x1988)))+(((IkReal(0.00982000000000000))*(cj2)))+(((pz)*(x1989)))+(((IkReal(-1.00000000000000))*(py)*(x1983)*(x1986)))+(((cj1)*(x1985)))+(((IkReal(-1.00000000000000))*(x1984)*(x1992)))+(((IkReal(-0.521670000000000))*(sj2)))+(((py)*(x1991))));
evalcond[4]=((IkReal(-0.0438310000000000))+(((cj0)*(py)*(x1987)))+(((IkReal(-1.00000000000000))*(cj1)*(x1983)*(x1984)))+(((cj2)*(py)*(x1986)))+(((IkReal(-1.00000000000000))*(x1984)*(x1989)))+(((IkReal(0.521670000000000))*(cj2)))+(((sj1)*(x1985)))+(((IkReal(-1.00000000000000))*(pz)*(x1992)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x1993=((cj2)*(sj1));
IkReal x1994=((cj0)*(r01));
IkReal x1995=((cj1)*(sj2));
IkReal x1996=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x1993)*(x1996)))+(((x1994)*(x1995)))+(((IkReal(-1.00000000000000))*(x1995)*(x1996)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((x1993)*(x1994)))+(((r02)*(sj1)*(sj2))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))))+IKsqr(((((IkReal(-1.00000000000000))*(x1993)*(x1996)))+(((x1994)*(x1995)))+(((IkReal(-1.00000000000000))*(x1995)*(x1996)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((x1993)*(x1994)))+(((r02)*(sj1)*(sj2)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))), ((((IkReal(-1.00000000000000))*(x1993)*(x1996)))+(((x1994)*(x1995)))+(((IkReal(-1.00000000000000))*(x1995)*(x1996)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((x1993)*(x1994)))+(((r02)*(sj1)*(sj2)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x1997=((cj2)*(sj1));
IkReal x1998=((cj0)*(r01));
IkReal x1999=((cj1)*(sj2));
IkReal x2000=((IkReal(1.00000000000000))*(r00)*(sj0));
evalcond[0]=((((r01)*(sj0)))+(IKsin(j5))+(((cj0)*(r00))));
evalcond[1]=((((x1998)*(x1999)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((IkReal(-1.00000000000000))*(x1997)*(x2000)))+(((r02)*(sj1)*(sj2)))+(((x1997)*(x1998)))+(((IkReal(-1.00000000000000))*(x1999)*(x2000))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x2001=((pz)*(sj1));
IkReal x2002=((cj0)*(py));
IkReal x2003=((IkReal(1.00000000000000))*(sj2));
IkReal x2004=((cj1)*(cj2));
IkReal x2005=((px)*(sj0));
IkReal x2006=((cj2)*(sj1));
IkReal x2007=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(0.190892000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.128657000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((x2002)*(x2004)))+(((pz)*(x2007)))+(((IkReal(-1.00000000000000))*(sj1)*(x2002)*(x2003)))+(((cj2)*(x2001)))+(((sj1)*(sj2)*(x2005)))+(((IkReal(-1.00000000000000))*(x2004)*(x2005)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[4]=((IkReal(-0.0438310000000000))+(((x2002)*(x2006)))+(((x2002)*(x2007)))+(((IkReal(-1.00000000000000))*(cj1)*(x2003)*(x2005)))+(((sj2)*(x2001)))+(((IkReal(-1.00000000000000))*(pz)*(x2004)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x2005)*(x2006)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2008=((sj1)*(sj2));
IkReal x2009=((cj2)*(sj1));
IkReal x2010=((cj1)*(sj2));
IkReal x2011=((IkReal(1.00000000000000))*(r02));
IkReal x2012=((cj1)*(cj2));
IkReal x2013=((cj0)*(r01));
IkReal x2014=((sj1)*(x2013));
IkReal x2015=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((IkReal(-1.00000000000000))*(x2008)*(x2015)))+(((IkReal(-1.00000000000000))*(x2010)*(x2011)))+(((IkReal(-1.00000000000000))*(x2009)*(x2011)))+(((r00)*(sj0)*(x2012)))+(((x2008)*(x2013)))+(((IkReal(-1.00000000000000))*(x2012)*(x2013))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x2010)*(x2015)))+(((IkReal(-1.00000000000000))*(x2009)*(x2015)))+(((r02)*(x2008)))+(((x2010)*(x2013)))+(((IkReal(-1.00000000000000))*(x2011)*(x2012)))+(((x2009)*(x2013))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x2008)*(x2015)))+(((IkReal(-1.00000000000000))*(x2010)*(x2011)))+(((IkReal(-1.00000000000000))*(x2009)*(x2011)))+(((r00)*(sj0)*(x2012)))+(((x2008)*(x2013)))+(((IkReal(-1.00000000000000))*(x2012)*(x2013)))))+IKsqr(((((IkReal(-1.00000000000000))*(x2010)*(x2015)))+(((IkReal(-1.00000000000000))*(x2009)*(x2015)))+(((r02)*(x2008)))+(((x2010)*(x2013)))+(((IkReal(-1.00000000000000))*(x2011)*(x2012)))+(((x2009)*(x2013)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x2008)*(x2015)))+(((IkReal(-1.00000000000000))*(x2010)*(x2011)))+(((IkReal(-1.00000000000000))*(x2009)*(x2011)))+(((r00)*(sj0)*(x2012)))+(((x2008)*(x2013)))+(((IkReal(-1.00000000000000))*(x2012)*(x2013)))), ((((IkReal(-1.00000000000000))*(x2010)*(x2015)))+(((IkReal(-1.00000000000000))*(x2009)*(x2015)))+(((r02)*(x2008)))+(((x2010)*(x2013)))+(((IkReal(-1.00000000000000))*(x2011)*(x2012)))+(((x2009)*(x2013)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x2016=((r02)*(sj2));
IkReal x2017=((IkReal(1.00000000000000))*(sj2));
IkReal x2018=((r00)*(sj0));
IkReal x2019=((cj1)*(cj2));
IkReal x2020=((cj0)*(r01));
IkReal x2021=((sj1)*(x2020));
IkReal x2022=((IkReal(1.00000000000000))*(cj2)*(x2018));
evalcond[0]=((((sj1)*(x2016)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((IkReal(-1.00000000000000))*(r02)*(x2019)))+(((cj1)*(sj2)*(x2020)))+(((IkReal(-1.00000000000000))*(sj1)*(x2022)))+(((cj2)*(x2021)))+(((IkReal(-1.00000000000000))*(cj1)*(x2017)*(x2018))));
evalcond[1]=((((cj1)*(x2016)))+(((x2019)*(x2020)))+(((IkReal(-1.00000000000000))*(x2018)*(x2019)))+(IKsin(j5))+(((IkReal(-1.00000000000000))*(x2017)*(x2021)))+(((cj2)*(r02)*(sj1)))+(((sj1)*(sj2)*(x2018))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x2023=((pz)*(sj1));
IkReal x2024=((cj0)*(py));
IkReal x2025=((IkReal(1.00000000000000))*(sj2));
IkReal x2026=((cj1)*(cj2));
IkReal x2027=((px)*(sj0));
IkReal x2028=((cj2)*(sj1));
IkReal x2029=((cj1)*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((((r01)*(sj0)))+(((cj0)*(r00))));
evalcond[2]=((IkReal(-0.190892000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[3]=((IkReal(-0.127083000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((x2024)*(x2026)))+(((pz)*(x2029)))+(((cj2)*(x2023)))+(((IkReal(-0.521670000000000))*(sj2)))+(((sj1)*(sj2)*(x2027)))+(((IkReal(-1.00000000000000))*(sj1)*(x2024)*(x2025)))+(((IkReal(-1.00000000000000))*(x2026)*(x2027))));
evalcond[4]=((IkReal(-0.0438310000000000))+(((x2024)*(x2029)))+(((x2024)*(x2028)))+(((IkReal(-1.00000000000000))*(x2027)*(x2028)))+(((IkReal(-1.00000000000000))*(pz)*(x2026)))+(((sj2)*(x2023)))+(((IkReal(-1.00000000000000))*(cj1)*(x2025)*(x2027)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2030=((cj2)*(sj1));
IkReal x2031=((cj0)*(r01));
IkReal x2032=((sj1)*(sj2));
IkReal x2033=((cj1)*(cj2));
IkReal x2034=((cj1)*(sj2));
IkReal x2035=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((x2031)*(x2033)))+(((r00)*(sj0)*(x2032)))+(((r02)*(x2034)))+(((r02)*(x2030)))+(((IkReal(-1.00000000000000))*(x2031)*(x2032)))+(((IkReal(-1.00000000000000))*(x2033)*(x2035))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x2031)*(x2034)))+(((x2030)*(x2031)))+(((r02)*(x2032)))+(((IkReal(-1.00000000000000))*(x2030)*(x2035)))+(((IkReal(-1.00000000000000))*(x2034)*(x2035)))+(((IkReal(-1.00000000000000))*(r02)*(x2033))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((x2031)*(x2033)))+(((r00)*(sj0)*(x2032)))+(((r02)*(x2034)))+(((r02)*(x2030)))+(((IkReal(-1.00000000000000))*(x2031)*(x2032)))+(((IkReal(-1.00000000000000))*(x2033)*(x2035)))))+IKsqr(((((x2031)*(x2034)))+(((x2030)*(x2031)))+(((r02)*(x2032)))+(((IkReal(-1.00000000000000))*(x2030)*(x2035)))+(((IkReal(-1.00000000000000))*(x2034)*(x2035)))+(((IkReal(-1.00000000000000))*(r02)*(x2033)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((x2031)*(x2033)))+(((r00)*(sj0)*(x2032)))+(((r02)*(x2034)))+(((r02)*(x2030)))+(((IkReal(-1.00000000000000))*(x2031)*(x2032)))+(((IkReal(-1.00000000000000))*(x2033)*(x2035)))), ((((x2031)*(x2034)))+(((x2030)*(x2031)))+(((r02)*(x2032)))+(((IkReal(-1.00000000000000))*(x2030)*(x2035)))+(((IkReal(-1.00000000000000))*(x2034)*(x2035)))+(((IkReal(-1.00000000000000))*(r02)*(x2033)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x2036=((r02)*(sj2));
IkReal x2037=((IkReal(1.00000000000000))*(sj2));
IkReal x2038=((r00)*(sj0));
IkReal x2039=((cj1)*(cj2));
IkReal x2040=((cj0)*(r01));
IkReal x2041=((sj1)*(x2040));
IkReal x2042=((IkReal(1.00000000000000))*(cj2)*(x2038));
evalcond[0]=((((IkReal(-1.00000000000000))*(sj1)*(x2042)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((sj1)*(x2036)))+(((cj2)*(x2041)))+(((cj1)*(sj2)*(x2040)))+(((IkReal(-1.00000000000000))*(cj1)*(x2037)*(x2038)))+(((IkReal(-1.00000000000000))*(r02)*(x2039))));
evalcond[1]=((((x2039)*(x2040)))+(((IkReal(-1.00000000000000))*(x2038)*(x2039)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x2037)*(x2041)))+(((sj1)*(sj2)*(x2038)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((cj1)*(x2036))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2043=((sj1)*(sj2));
IkReal x2044=((cj2)*(sj1));
IkReal x2045=((cj1)*(sj2));
IkReal x2046=((IkReal(1.00000000000000))*(r02));
IkReal x2047=((cj1)*(cj2));
IkReal x2048=((cj0)*(r01));
IkReal x2049=((sj1)*(x2048));
IkReal x2050=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((x2043)*(x2048)))+(((IkReal(-1.00000000000000))*(x2045)*(x2046)))+(((IkReal(-1.00000000000000))*(x2044)*(x2046)))+(((IkReal(-1.00000000000000))*(x2047)*(x2048)))+(((IkReal(-1.00000000000000))*(x2043)*(x2050)))+(((r00)*(sj0)*(x2047))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x2044)*(x2050)))+(((IkReal(-1.00000000000000))*(x2045)*(x2050)))+(((r02)*(x2043)))+(((x2045)*(x2048)))+(((x2044)*(x2048)))+(((IkReal(-1.00000000000000))*(x2046)*(x2047))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((x2043)*(x2048)))+(((IkReal(-1.00000000000000))*(x2045)*(x2046)))+(((IkReal(-1.00000000000000))*(x2044)*(x2046)))+(((IkReal(-1.00000000000000))*(x2047)*(x2048)))+(((IkReal(-1.00000000000000))*(x2043)*(x2050)))+(((r00)*(sj0)*(x2047)))))))+IKsqr(((((IkReal(-1.00000000000000))*(x2044)*(x2050)))+(((IkReal(-1.00000000000000))*(x2045)*(x2050)))+(((r02)*(x2043)))+(((x2045)*(x2048)))+(((x2044)*(x2048)))+(((IkReal(-1.00000000000000))*(x2046)*(x2047)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(sj4) != 0)?((IkReal)1/(sj4)):(IkReal)1.0e30))*(((((x2043)*(x2048)))+(((IkReal(-1.00000000000000))*(x2045)*(x2046)))+(((IkReal(-1.00000000000000))*(x2044)*(x2046)))+(((IkReal(-1.00000000000000))*(x2047)*(x2048)))+(((IkReal(-1.00000000000000))*(x2043)*(x2050)))+(((r00)*(sj0)*(x2047)))))), ((((IkReal(-1.00000000000000))*(x2044)*(x2050)))+(((IkReal(-1.00000000000000))*(x2045)*(x2050)))+(((r02)*(x2043)))+(((x2045)*(x2048)))+(((x2044)*(x2048)))+(((IkReal(-1.00000000000000))*(x2046)*(x2047)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x2051=IKsin(j5);
IkReal x2052=((r02)*(sj2));
IkReal x2053=((IkReal(1.00000000000000))*(sj2));
IkReal x2054=((r00)*(sj0));
IkReal x2055=((IkReal(1.00000000000000))*(cj2));
IkReal x2056=((cj0)*(r01)*(sj1));
IkReal x2057=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x2051)))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj1)*(r02)*(x2055)))+(((sj2)*(x2057)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((sj1)*(x2052)))+(((IkReal(-1.00000000000000))*(cj1)*(x2053)*(x2054)))+(((cj2)*(x2056)))+(((IkReal(-1.00000000000000))*(sj1)*(x2054)*(x2055))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj1)*(x2054)*(x2055)))+(((cj2)*(r02)*(sj1)))+(((cj1)*(x2052)))+(((IkReal(-1.00000000000000))*(x2053)*(x2056)))+(((sj4)*(x2051)))+(((cj2)*(x2057)))+(((sj1)*(sj2)*(x2054))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2058=((cj2)*(sj1));
IkReal x2059=((cj0)*(r01));
IkReal x2060=((cj1)*(sj2));
IkReal x2061=((IkReal(1.00000000000000))*(r00)*(sj0));
if( IKabs(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x2058)*(x2061)))+(((x2059)*(x2060)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((r02)*(sj1)*(sj2)))+(((x2058)*(x2059)))+(((IkReal(-1.00000000000000))*(x2060)*(x2061))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))))+IKsqr(((((IkReal(-1.00000000000000))*(x2058)*(x2061)))+(((x2059)*(x2060)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((r02)*(sj1)*(sj2)))+(((x2058)*(x2059)))+(((IkReal(-1.00000000000000))*(x2060)*(x2061)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30))*(((((r01)*(sj0)))+(((cj0)*(r00)))))), ((((IkReal(-1.00000000000000))*(x2058)*(x2061)))+(((x2059)*(x2060)))+(((IkReal(-1.00000000000000))*(cj1)*(cj2)*(r02)))+(((r02)*(sj1)*(sj2)))+(((x2058)*(x2059)))+(((IkReal(-1.00000000000000))*(x2060)*(x2061)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x2062=IKsin(j5);
IkReal x2063=((r02)*(sj2));
IkReal x2064=((IkReal(1.00000000000000))*(sj2));
IkReal x2065=((r00)*(sj0));
IkReal x2066=((IkReal(1.00000000000000))*(cj2));
IkReal x2067=((cj0)*(r01)*(sj1));
IkReal x2068=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x2062)))+(((cj0)*(r00))));
evalcond[1]=((((sj2)*(x2068)))+(((IkReal(-1.00000000000000))*(sj1)*(x2065)*(x2066)))+(((IkReal(-1.00000000000000))*(IKcos(j5))))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x2066)))+(((sj1)*(x2063)))+(((cj2)*(x2067)))+(((IkReal(-1.00000000000000))*(cj1)*(x2064)*(x2065))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj1)*(x2065)*(x2066)))+(((sj1)*(sj2)*(x2065)))+(((IkReal(-1.00000000000000))*(x2064)*(x2067)))+(((sj4)*(x2062)))+(((cj2)*(r02)*(sj1)))+(((cj1)*(x2063)))+(((cj2)*(x2068))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x2069=((cj1)*(sj2));
IkReal x2070=((px)*(sj0));
IkReal x2071=((sj1)*(sj2));
IkReal x2072=((cj0)*(py));
IkReal x2073=((cj2)*(pz));
IkReal x2074=((IkReal(1.00000000000000))*(cj1));
IkReal x2075=((cj2)*(x2072));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.000787000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((IkReal(-0.261090000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((x2070)*(x2071)))+(((IkReal(-1.00000000000000))*(x2071)*(x2072)))+(((IkReal(-1.00000000000000))*(cj2)*(x2070)*(x2074)))+(((pz)*(x2069)))+(((IkReal(0.0513310000000000))*(sj3)))+(((sj1)*(x2073)))+(((cj1)*(x2075)))+(((IkReal(-0.324112000000000))*(cj3)))+(((IkReal(-0.521670000000000))*(sj2))));
evalcond[3]=((IkReal(0.00750000000000000))+(((x2069)*(x2072)))+(((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x2070)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(x2069)*(x2070)))+(((sj1)*(x2075)))+(((pz)*(x2071)))+(((IkReal(-1.00000000000000))*(x2073)*(x2074)))+(((IkReal(0.0513310000000000))*(cj3)))+(((IkReal(0.324112000000000))*(sj3)))+(((IkReal(0.00982000000000000))*(sj2))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2076=((cj0)*(r01));
IkReal x2077=((sj1)*(sj2));
IkReal x2078=((IkReal(1.00000000000000))*(cj1));
IkReal x2079=((r00)*(sj0));
if( IKabs(((((r01)*(sj0)))+(((cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((cj1)*(cj2)*(x2079)))+(((IkReal(-1.00000000000000))*(x2077)*(x2079)))+(((IkReal(-1.00000000000000))*(cj2)*(x2076)*(x2078)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((x2076)*(x2077)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x2078))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r01)*(sj0)))+(((cj0)*(r00)))))+IKsqr(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((cj1)*(cj2)*(x2079)))+(((IkReal(-1.00000000000000))*(x2077)*(x2079)))+(((IkReal(-1.00000000000000))*(cj2)*(x2076)*(x2078)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((x2076)*(x2077)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x2078)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((r01)*(sj0)))+(((cj0)*(r00)))), ((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((cj1)*(cj2)*(x2079)))+(((IkReal(-1.00000000000000))*(x2077)*(x2079)))+(((IkReal(-1.00000000000000))*(cj2)*(x2076)*(x2078)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((x2076)*(x2077)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x2078)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x2080=IKcos(j5);
IkReal x2081=((r02)*(sj2));
IkReal x2082=((IkReal(1.00000000000000))*(sj2));
IkReal x2083=((r00)*(sj0));
IkReal x2084=((IkReal(1.00000000000000))*(cj2));
IkReal x2085=((cj0)*(r01)*(sj1));
IkReal x2086=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((cj0)*(r00))));
evalcond[1]=((((sj1)*(x2081)))+(((IkReal(-1.00000000000000))*(cj1)*(x2082)*(x2083)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x2084)))+(((sj2)*(x2086)))+(((cj2)*(x2085)))+(((IkReal(-1.00000000000000))*(sj1)*(x2083)*(x2084)))+(((cj3)*(x2080))));
evalcond[2]=((((sj1)*(sj2)*(x2083)))+(((cj1)*(x2081)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x2082)*(x2085)))+(((IkReal(-1.00000000000000))*(cj1)*(x2083)*(x2084)))+(((sj3)*(x2080)))+(((cj2)*(x2086))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2087=((IkReal(1.00000000000000))*(sj2));
IkReal x2088=((cj0)*(r01));
IkReal x2089=((cj2)*(sj1));
IkReal x2090=((r00)*(sj0));
if( IKabs(((((r01)*(sj0)))+(((cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r02)*(sj1)*(x2087)))+(((IkReal(-1.00000000000000))*(cj1)*(x2087)*(x2088)))+(((IkReal(-1.00000000000000))*(x2088)*(x2089)))+(((x2089)*(x2090)))+(((cj1)*(sj2)*(x2090)))+(((cj1)*(cj2)*(r02))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r01)*(sj0)))+(((cj0)*(r00)))))+IKsqr(((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r02)*(sj1)*(x2087)))+(((IkReal(-1.00000000000000))*(cj1)*(x2087)*(x2088)))+(((IkReal(-1.00000000000000))*(x2088)*(x2089)))+(((x2089)*(x2090)))+(((cj1)*(sj2)*(x2090)))+(((cj1)*(cj2)*(r02)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((r01)*(sj0)))+(((cj0)*(r00)))), ((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r02)*(sj1)*(x2087)))+(((IkReal(-1.00000000000000))*(cj1)*(x2087)*(x2088)))+(((IkReal(-1.00000000000000))*(x2088)*(x2089)))+(((x2089)*(x2090)))+(((cj1)*(sj2)*(x2090)))+(((cj1)*(cj2)*(r02)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x2091=IKcos(j5);
IkReal x2092=((r02)*(sj2));
IkReal x2093=((IkReal(1.00000000000000))*(sj2));
IkReal x2094=((r00)*(sj0));
IkReal x2095=((IkReal(1.00000000000000))*(cj2));
IkReal x2096=((cj0)*(r01)*(sj1));
IkReal x2097=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(IKsin(j5))))+(((cj0)*(r00))));
evalcond[1]=((((sj1)*(x2092)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x2095)))+(((cj2)*(x2096)))+(((sj2)*(x2097)))+(((cj3)*(x2091)))+(((IkReal(-1.00000000000000))*(cj1)*(x2093)*(x2094)))+(((IkReal(-1.00000000000000))*(sj1)*(x2094)*(x2095))));
evalcond[2]=((((cj1)*(x2092)))+(((IkReal(-1.00000000000000))*(cj1)*(x2094)*(x2095)))+(((IkReal(-1.00000000000000))*(x2093)*(x2096)))+(((cj2)*(x2097)))+(((sj1)*(sj2)*(x2094)))+(((cj2)*(r02)*(sj1)))+(((sj3)*(x2091))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x2098=((cj1)*(sj2));
IkReal x2099=((px)*(sj0));
IkReal x2100=((sj1)*(sj2));
IkReal x2101=((cj0)*(py));
IkReal x2102=((cj2)*(pz));
IkReal x2103=((IkReal(1.00000000000000))*(cj1));
IkReal x2104=((cj2)*(x2101));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j4)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.000787000000000000))+(((cj0)*(px)))+(((py)*(sj0))));
evalcond[2]=((IkReal(-0.261090000000000))+(((IkReal(0.00982000000000000))*(cj2)))+(((x2099)*(x2100)))+(((IkReal(-1.00000000000000))*(cj2)*(x2099)*(x2103)))+(((IkReal(0.0576720000000000))*(cj3)))+(((IkReal(-1.00000000000000))*(x2100)*(x2101)))+(((IkReal(0.0513310000000000))*(sj3)))+(((cj1)*(x2104)))+(((sj1)*(x2102)))+(((IkReal(-0.521670000000000))*(sj2)))+(((pz)*(x2098))));
evalcond[3]=((IkReal(0.00750000000000000))+(((x2098)*(x2101)))+(((IkReal(-1.00000000000000))*(x2102)*(x2103)))+(((IkReal(-1.00000000000000))*(cj2)*(sj1)*(x2099)))+(((pz)*(x2100)))+(((IkReal(0.521670000000000))*(cj2)))+(((IkReal(-0.0576720000000000))*(sj3)))+(((sj1)*(x2104)))+(((IkReal(0.0513310000000000))*(cj3)))+(((IkReal(0.00982000000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(x2098)*(x2099))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=sj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2105=((sj1)*(sj2));
IkReal x2106=((cj0)*(r01));
IkReal x2107=((r00)*(sj0));
IkReal x2108=((IkReal(1.00000000000000))*(cj1));
if( IKabs(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x2105)*(x2107)))+(((IkReal(-1.00000000000000))*(cj2)*(x2106)*(x2108)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((x2105)*(x2106)))+(((cj1)*(cj2)*(x2107)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x2108))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))))+IKsqr(((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x2105)*(x2107)))+(((IkReal(-1.00000000000000))*(cj2)*(x2106)*(x2108)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((x2105)*(x2106)))+(((cj1)*(cj2)*(x2107)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x2108)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))), ((((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x2105)*(x2107)))+(((IkReal(-1.00000000000000))*(cj2)*(x2106)*(x2108)))+(((IkReal(-1.00000000000000))*(cj2)*(r02)*(sj1)))+(((x2105)*(x2106)))+(((cj1)*(cj2)*(x2107)))+(((IkReal(-1.00000000000000))*(r02)*(sj2)*(x2108)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x2109=IKcos(j5);
IkReal x2110=((r02)*(sj2));
IkReal x2111=((IkReal(1.00000000000000))*(sj2));
IkReal x2112=((r00)*(sj0));
IkReal x2113=((IkReal(1.00000000000000))*(cj2));
IkReal x2114=((cj0)*(r01)*(sj1));
IkReal x2115=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(IKsin(j5))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj1)*(x2111)*(x2112)))+(((sj1)*(x2110)))+(((sj2)*(x2115)))+(((cj3)*(x2109)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x2113)))+(((IkReal(-1.00000000000000))*(sj1)*(x2112)*(x2113)))+(((cj2)*(x2114))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2111)*(x2114)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(x2112)*(x2113)))+(((sj3)*(x2109)))+(((sj1)*(sj2)*(x2112)))+(((cj1)*(x2110)))+(((cj2)*(x2115))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2116=((IkReal(1.00000000000000))*(sj2));
IkReal x2117=((cj0)*(r01));
IkReal x2118=((cj2)*(sj1));
IkReal x2119=((r00)*(sj0));
if( IKabs(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x2117)*(x2118)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x2116)))+(((x2118)*(x2119)))+(((IkReal(-1.00000000000000))*(cj1)*(x2116)*(x2117)))+(((cj1)*(sj2)*(x2119)))+(((cj1)*(cj2)*(r02))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))))+IKsqr(((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x2117)*(x2118)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x2116)))+(((x2118)*(x2119)))+(((IkReal(-1.00000000000000))*(cj1)*(x2116)*(x2117)))+(((cj1)*(sj2)*(x2119)))+(((cj1)*(cj2)*(r02)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj0)*(r00)))), ((((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x2117)*(x2118)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x2116)))+(((x2118)*(x2119)))+(((IkReal(-1.00000000000000))*(cj1)*(x2116)*(x2117)))+(((cj1)*(sj2)*(x2119)))+(((cj1)*(cj2)*(r02)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x2120=IKcos(j5);
IkReal x2121=((r02)*(sj2));
IkReal x2122=((IkReal(1.00000000000000))*(sj2));
IkReal x2123=((r00)*(sj0));
IkReal x2124=((IkReal(1.00000000000000))*(cj2));
IkReal x2125=((cj0)*(r01)*(sj1));
IkReal x2126=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(IKsin(j5))+(((cj0)*(r00))));
evalcond[1]=((((sj2)*(x2126)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x2124)))+(((IkReal(-1.00000000000000))*(cj1)*(x2122)*(x2123)))+(((sj1)*(x2121)))+(((cj2)*(x2125)))+(((cj3)*(x2120)))+(((IkReal(-1.00000000000000))*(sj1)*(x2123)*(x2124))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x2122)*(x2125)))+(((sj1)*(sj2)*(x2123)))+(((sj3)*(x2120)))+(((cj2)*(x2126)))+(((cj1)*(x2121)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(x2123)*(x2124))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}
}
}
}
}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2127=((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30);
IkReal x2128=((cj0)*(r00));
IkReal x2129=((r00)*(sj0));
IkReal x2130=((r01)*(sj0));
IkReal x2131=((cj4)*(r02));
IkReal x2132=((cj1)*(cj4)*(sj2));
IkReal x2133=((IkReal(1.00000000000000))*(sj3)*(sj4));
IkReal x2134=((IkReal(1.00000000000000))*(cj0)*(r01));
IkReal x2135=((cj2)*(cj4)*(sj1));
if( IKabs(((x2127)*(((x2128)+(x2130))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x2127)*(((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x2134)*(x2135)))+(((IkReal(-1.00000000000000))*(sj1)*(sj2)*(x2131)))+(((IkReal(-1.00000000000000))*(x2128)*(x2133)))+(((IkReal(-1.00000000000000))*(x2132)*(x2134)))+(((IkReal(-1.00000000000000))*(x2130)*(x2133)))+(((x2129)*(x2135)))+(((x2129)*(x2132)))+(((cj1)*(cj2)*(x2131))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x2127)*(((x2128)+(x2130)))))+IKsqr(((x2127)*(((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x2134)*(x2135)))+(((IkReal(-1.00000000000000))*(sj1)*(sj2)*(x2131)))+(((IkReal(-1.00000000000000))*(x2128)*(x2133)))+(((IkReal(-1.00000000000000))*(x2132)*(x2134)))+(((IkReal(-1.00000000000000))*(x2130)*(x2133)))+(((x2129)*(x2135)))+(((x2129)*(x2132)))+(((cj1)*(cj2)*(x2131)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((x2127)*(((x2128)+(x2130)))), ((x2127)*(((IKabs(cj3) != 0)?((IkReal)1/(cj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x2134)*(x2135)))+(((IkReal(-1.00000000000000))*(sj1)*(sj2)*(x2131)))+(((IkReal(-1.00000000000000))*(x2128)*(x2133)))+(((IkReal(-1.00000000000000))*(x2132)*(x2134)))+(((IkReal(-1.00000000000000))*(x2130)*(x2133)))+(((x2129)*(x2135)))+(((x2129)*(x2132)))+(((cj1)*(cj2)*(x2131)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x2136=IKsin(j5);
IkReal x2137=IKcos(j5);
IkReal x2138=((r02)*(sj2));
IkReal x2139=((IkReal(1.00000000000000))*(sj2));
IkReal x2140=((r00)*(sj0));
IkReal x2141=((IkReal(1.00000000000000))*(cj2));
IkReal x2142=((IkReal(1.00000000000000))*(x2136));
IkReal x2143=((cj0)*(r01)*(sj1));
IkReal x2144=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x2142)))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj1)*(x2140)*(x2141)))+(((cj2)*(x2143)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x2141)))+(((sj3)*(sj4)*(x2136)))+(((IkReal(-1.00000000000000))*(cj1)*(x2139)*(x2140)))+(((cj3)*(x2137)))+(((sj1)*(x2138)))+(((sj2)*(x2144))));
evalcond[2]=((((sj1)*(sj2)*(x2140)))+(((cj2)*(x2144)))+(((IkReal(-1.00000000000000))*(cj1)*(x2140)*(x2141)))+(((IkReal(-1.00000000000000))*(cj3)*(sj4)*(x2142)))+(((cj2)*(r02)*(sj1)))+(((sj3)*(x2137)))+(((cj1)*(x2138)))+(((IkReal(-1.00000000000000))*(x2139)*(x2143))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2145=((IKabs(cj4) != 0)?((IkReal)1/(cj4)):(IkReal)1.0e30);
IkReal x2146=((cj0)*(r00));
IkReal x2147=((r01)*(sj0));
IkReal x2148=((cj3)*(sj4));
IkReal x2149=((cj0)*(r01));
IkReal x2150=((cj4)*(sj2));
IkReal x2151=((r00)*(sj0));
IkReal x2152=((IkReal(1.00000000000000))*(cj2)*(cj4));
if( IKabs(((x2145)*(((x2147)+(x2146))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x2145)*(((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((x2146)*(x2148)))+(((IkReal(-1.00000000000000))*(cj1)*(x2149)*(x2152)))+(((IkReal(-1.00000000000000))*(sj1)*(x2150)*(x2151)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x2150)))+(((cj1)*(cj2)*(cj4)*(x2151)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x2152)))+(((sj1)*(x2149)*(x2150)))+(((x2147)*(x2148))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x2145)*(((x2147)+(x2146)))))+IKsqr(((x2145)*(((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((x2146)*(x2148)))+(((IkReal(-1.00000000000000))*(cj1)*(x2149)*(x2152)))+(((IkReal(-1.00000000000000))*(sj1)*(x2150)*(x2151)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x2150)))+(((cj1)*(cj2)*(cj4)*(x2151)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x2152)))+(((sj1)*(x2149)*(x2150)))+(((x2147)*(x2148)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((x2145)*(((x2147)+(x2146)))), ((x2145)*(((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((x2146)*(x2148)))+(((IkReal(-1.00000000000000))*(cj1)*(x2149)*(x2152)))+(((IkReal(-1.00000000000000))*(sj1)*(x2150)*(x2151)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x2150)))+(((cj1)*(cj2)*(cj4)*(x2151)))+(((IkReal(-1.00000000000000))*(r02)*(sj1)*(x2152)))+(((sj1)*(x2149)*(x2150)))+(((x2147)*(x2148)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x2153=IKsin(j5);
IkReal x2154=IKcos(j5);
IkReal x2155=((r02)*(sj2));
IkReal x2156=((IkReal(1.00000000000000))*(sj2));
IkReal x2157=((r00)*(sj0));
IkReal x2158=((IkReal(1.00000000000000))*(cj2));
IkReal x2159=((IkReal(1.00000000000000))*(x2153));
IkReal x2160=((cj0)*(r01)*(sj1));
IkReal x2161=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x2159)))+(((cj0)*(r00))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj1)*(r02)*(x2158)))+(((cj3)*(x2154)))+(((sj2)*(x2161)))+(((sj1)*(x2155)))+(((IkReal(-1.00000000000000))*(sj1)*(x2157)*(x2158)))+(((IkReal(-1.00000000000000))*(cj1)*(x2156)*(x2157)))+(((sj3)*(sj4)*(x2153)))+(((cj2)*(x2160))));
evalcond[2]=((((sj1)*(sj2)*(x2157)))+(((IkReal(-1.00000000000000))*(cj3)*(sj4)*(x2159)))+(((cj2)*(r02)*(sj1)))+(((IkReal(-1.00000000000000))*(x2156)*(x2160)))+(((cj2)*(x2161)))+(((IkReal(-1.00000000000000))*(cj1)*(x2157)*(x2158)))+(((sj3)*(x2154)))+(((cj1)*(x2155))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x2162=(cj3)*(cj3);
IkReal x2163=(sj3)*(sj3);
IkReal x2164=((cj1)*(sj3));
IkReal x2165=((cj0)*(r01));
IkReal x2166=((r02)*(sj2));
IkReal x2167=((cj2)*(sj1));
IkReal x2168=((cj1)*(cj3));
IkReal x2169=((cj2)*(r02));
IkReal x2170=((cj3)*(sj1));
IkReal x2171=((IkReal(1.00000000000000))*(sj3));
IkReal x2172=((r00)*(sj0));
IkReal x2173=((IkReal(1.00000000000000))*(sj1)*(sj2));
IkReal x2174=((IkReal(1.00000000000000))*(x2172));
if( IKabs(((((IKabs(((((sj4)*(x2162)))+(((sj4)*(x2163))))) != 0)?((IkReal)1/(((((sj4)*(x2162)))+(((sj4)*(x2163)))))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(sj2)*(x2165)*(x2170)))+(((IkReal(-1.00000000000000))*(cj2)*(x2168)*(x2174)))+(((sj2)*(x2170)*(x2172)))+(((IkReal(-1.00000000000000))*(sj2)*(x2164)*(x2165)))+(((x2164)*(x2169)))+(((cj2)*(x2165)*(x2168)))+(((x2166)*(x2168)))+(((cj3)*(r02)*(x2167)))+(((sj2)*(x2164)*(x2172)))+(((IkReal(-1.00000000000000))*(x2165)*(x2167)*(x2171)))+(((IkReal(-1.00000000000000))*(sj1)*(x2166)*(x2171)))+(((sj3)*(x2167)*(x2172))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(((((IkReal(-1.00000000000000))*(x2163)))+(((IkReal(-1.00000000000000))*(x2162))))) != 0)?((IkReal)1/(((((IkReal(-1.00000000000000))*(x2163)))+(((IkReal(-1.00000000000000))*(x2162)))))):(IkReal)1.0e30))*(((((cj3)*(x2165)*(x2167)))+(((x2164)*(x2166)))+(((IkReal(-1.00000000000000))*(x2168)*(x2169)))+(((x2166)*(x2170)))+(((IkReal(-1.00000000000000))*(sj2)*(x2168)*(x2174)))+(((sj1)*(sj2)*(sj3)*(x2172)))+(((IkReal(-1.00000000000000))*(sj1)*(sj2)*(x2165)*(x2171)))+(((cj2)*(x2164)*(x2165)))+(((IkReal(-1.00000000000000))*(cj2)*(x2164)*(x2174)))+(((sj2)*(x2165)*(x2168)))+(((r02)*(sj3)*(x2167)))+(((IkReal(-1.00000000000000))*(cj3)*(x2167)*(x2174))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(((((sj4)*(x2162)))+(((sj4)*(x2163))))) != 0)?((IkReal)1/(((((sj4)*(x2162)))+(((sj4)*(x2163)))))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(sj2)*(x2165)*(x2170)))+(((IkReal(-1.00000000000000))*(cj2)*(x2168)*(x2174)))+(((sj2)*(x2170)*(x2172)))+(((IkReal(-1.00000000000000))*(sj2)*(x2164)*(x2165)))+(((x2164)*(x2169)))+(((cj2)*(x2165)*(x2168)))+(((x2166)*(x2168)))+(((cj3)*(r02)*(x2167)))+(((sj2)*(x2164)*(x2172)))+(((IkReal(-1.00000000000000))*(x2165)*(x2167)*(x2171)))+(((IkReal(-1.00000000000000))*(sj1)*(x2166)*(x2171)))+(((sj3)*(x2167)*(x2172)))))))+IKsqr(((((IKabs(((((IkReal(-1.00000000000000))*(x2163)))+(((IkReal(-1.00000000000000))*(x2162))))) != 0)?((IkReal)1/(((((IkReal(-1.00000000000000))*(x2163)))+(((IkReal(-1.00000000000000))*(x2162)))))):(IkReal)1.0e30))*(((((cj3)*(x2165)*(x2167)))+(((x2164)*(x2166)))+(((IkReal(-1.00000000000000))*(x2168)*(x2169)))+(((x2166)*(x2170)))+(((IkReal(-1.00000000000000))*(sj2)*(x2168)*(x2174)))+(((sj1)*(sj2)*(sj3)*(x2172)))+(((IkReal(-1.00000000000000))*(sj1)*(sj2)*(x2165)*(x2171)))+(((cj2)*(x2164)*(x2165)))+(((IkReal(-1.00000000000000))*(cj2)*(x2164)*(x2174)))+(((sj2)*(x2165)*(x2168)))+(((r02)*(sj3)*(x2167)))+(((IkReal(-1.00000000000000))*(cj3)*(x2167)*(x2174)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(((((sj4)*(x2162)))+(((sj4)*(x2163))))) != 0)?((IkReal)1/(((((sj4)*(x2162)))+(((sj4)*(x2163)))))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(sj2)*(x2165)*(x2170)))+(((IkReal(-1.00000000000000))*(cj2)*(x2168)*(x2174)))+(((sj2)*(x2170)*(x2172)))+(((IkReal(-1.00000000000000))*(sj2)*(x2164)*(x2165)))+(((x2164)*(x2169)))+(((cj2)*(x2165)*(x2168)))+(((x2166)*(x2168)))+(((cj3)*(r02)*(x2167)))+(((sj2)*(x2164)*(x2172)))+(((IkReal(-1.00000000000000))*(x2165)*(x2167)*(x2171)))+(((IkReal(-1.00000000000000))*(sj1)*(x2166)*(x2171)))+(((sj3)*(x2167)*(x2172)))))), ((((IKabs(((((IkReal(-1.00000000000000))*(x2163)))+(((IkReal(-1.00000000000000))*(x2162))))) != 0)?((IkReal)1/(((((IkReal(-1.00000000000000))*(x2163)))+(((IkReal(-1.00000000000000))*(x2162)))))):(IkReal)1.0e30))*(((((cj3)*(x2165)*(x2167)))+(((x2164)*(x2166)))+(((IkReal(-1.00000000000000))*(x2168)*(x2169)))+(((x2166)*(x2170)))+(((IkReal(-1.00000000000000))*(sj2)*(x2168)*(x2174)))+(((sj1)*(sj2)*(sj3)*(x2172)))+(((IkReal(-1.00000000000000))*(sj1)*(sj2)*(x2165)*(x2171)))+(((cj2)*(x2164)*(x2165)))+(((IkReal(-1.00000000000000))*(cj2)*(x2164)*(x2174)))+(((sj2)*(x2165)*(x2168)))+(((r02)*(sj3)*(x2167)))+(((IkReal(-1.00000000000000))*(cj3)*(x2167)*(x2174)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[3];
IkReal x2175=IKsin(j5);
IkReal x2176=IKcos(j5);
IkReal x2177=((r02)*(sj2));
IkReal x2178=((IkReal(1.00000000000000))*(sj2));
IkReal x2179=((r00)*(sj0));
IkReal x2180=((IkReal(1.00000000000000))*(cj2));
IkReal x2181=((IkReal(1.00000000000000))*(x2175));
IkReal x2182=((cj0)*(r01)*(sj1));
IkReal x2183=((cj0)*(cj1)*(r01));
evalcond[0]=((((r01)*(sj0)))+(((IkReal(-1.00000000000000))*(cj4)*(x2181)))+(((cj0)*(r00))));
evalcond[1]=((((sj1)*(x2177)))+(((cj3)*(x2176)))+(((sj2)*(x2183)))+(((IkReal(-1.00000000000000))*(cj1)*(x2178)*(x2179)))+(((IkReal(-1.00000000000000))*(cj1)*(r02)*(x2180)))+(((sj3)*(sj4)*(x2175)))+(((IkReal(-1.00000000000000))*(sj1)*(x2179)*(x2180)))+(((cj2)*(x2182))));
evalcond[2]=((((sj3)*(x2176)))+(((IkReal(-1.00000000000000))*(cj3)*(sj4)*(x2181)))+(((cj2)*(r02)*(sj1)))+(((cj1)*(x2177)))+(((IkReal(-1.00000000000000))*(x2178)*(x2182)))+(((sj1)*(sj2)*(x2179)))+(((cj2)*(x2183)))+(((IkReal(-1.00000000000000))*(cj1)*(x2179)*(x2180))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
    }
}
return solutions.GetNumSolutions()>0;
}

static inline bool checkconsistency8(const IkReal* Breal)
{
    IkReal norm = 0.1;
    for(int i = 0; i < 7; ++i) {
        norm += IKabs(Breal[i]);
    }
    IkReal tol = 1e-5*norm; // have to increase the threshold since many computations are involved
    return IKabs(Breal[0]*Breal[1]-Breal[2]) < tol && IKabs(Breal[1]*Breal[1]-Breal[3]) < tol && IKabs(Breal[0]*Breal[3]-Breal[4]) < tol && IKabs(Breal[1]*Breal[3]-Breal[5]) < tol && IKabs(Breal[0]*Breal[5]-Breal[6]) < tol;
}
/// \brief Solve the det Ax^2+Bx+C = 0 problem using the Manocha and Canny method (1994)
///
/// matcoeffs is of length 54*3, for 3 matrices
static inline void solvedialyticpoly8qep(const IkReal* matcoeffs, IkReal* rawroots, int& numroots)
{
    const IkReal tol = 128.0*std::numeric_limits<IkReal>::epsilon();
    IkReal IKFAST_ALIGNED16(M[16*16]) = {0};
    IkReal IKFAST_ALIGNED16(A[8*8]);
    IkReal IKFAST_ALIGNED16(work[16*16*15]);
    int ipiv[8];
    int info, coeffindex;
    const int worksize=16*16*15;
    const int matrixdim = 8;
    const int matrixdim2 = 16;
    numroots = 0;
    // first setup M = [0 I; -C -B] and A
    coeffindex = 0;
    for(int j = 0; j < 4; ++j) {
        for(int k = 0; k < 6; ++k) {
            M[matrixdim+(j+4)+2*matrixdim*k] = M[matrixdim+j+2*matrixdim*(k+2)] = -matcoeffs[coeffindex++];
        }
    }
    for(int j = 0; j < 4; ++j) {
        for(int k = 0; k < 6; ++k) {
            M[matrixdim+(j+4)+2*matrixdim*k+matrixdim*2*matrixdim] = M[matrixdim+j+2*matrixdim*(k+2)+matrixdim*2*matrixdim] = -matcoeffs[coeffindex++];
        }
    }
    for(int j = 0; j < 4; ++j) {
        for(int k = 0; k < 6; ++k) {
            A[(j+4)+matrixdim*k] = A[j+matrixdim*(k+2)] = matcoeffs[coeffindex++];
        }
        for(int k = 0; k < 2; ++k) {
            A[j+matrixdim*k] = A[(j+4)+matrixdim*(k+6)] = 0;
        }
    }
    const IkReal lfpossibilities[4][4] = {{1,-1,1,1},{1,0,-2,1},{1,1,2,0},{1,-1,4,1}};
    int lfindex = -1;
    bool bsingular = true;
    do {
        dgetrf_(&matrixdim,&matrixdim,A,&matrixdim,&ipiv[0],&info);
        if( info == 0 ) {
            bsingular = false;
            for(int j = 0; j < matrixdim; ++j) {
                if( IKabs(A[j*matrixdim+j]) < 100*tol ) {
                    bsingular = true;
                    break;
                }
            }
            if( !bsingular ) {
                break;
            }
        }
        if( lfindex == 3 ) {
            break;
        }
        // transform by the linear functional
        lfindex++;
        const IkReal* lf = lfpossibilities[lfindex];
        // have to reinitialize A
        coeffindex = 0;
        for(int j = 0; j < 4; ++j) {
            for(int k = 0; k < 6; ++k) {
                IkReal a = matcoeffs[coeffindex+48], b = matcoeffs[coeffindex+24], c = matcoeffs[coeffindex];
                A[(j+4)+matrixdim*k] = A[j+matrixdim*(k+2)] = lf[0]*lf[0]*a+lf[0]*lf[2]*b+lf[2]*lf[2]*c;
                M[matrixdim+(j+4)+2*matrixdim*k] = M[matrixdim+j+2*matrixdim*(k+2)] = -(lf[1]*lf[1]*a + lf[1]*lf[3]*b + lf[3]*lf[3]*c);
                M[matrixdim+(j+4)+2*matrixdim*k+matrixdim*2*matrixdim] = M[matrixdim+j+2*matrixdim*(k+2)+matrixdim*2*matrixdim] = -(2*lf[0]*lf[1]*a + (lf[0]*lf[3]+lf[1]*lf[2])*b + 2*lf[2]*lf[3]*c);
                coeffindex++;
            }
            for(int k = 0; k < 2; ++k) {
                A[j+matrixdim*k] = A[(j+4)+matrixdim*(k+6)] = 0;
            }
        }
    } while(lfindex<4);

    if( bsingular ) {
        return;
    }
    dgetrs_("No transpose", &matrixdim, &matrixdim2, A, &matrixdim, &ipiv[0], &M[matrixdim], &matrixdim2, &info);
    if( info != 0 ) {
        return;
    }

    // set identity in upper corner
    for(int j = 0; j < matrixdim; ++j) {
        M[matrixdim*2*matrixdim+j+matrixdim*2*j] = 1;
    }
    IkReal IKFAST_ALIGNED16(wr[16]);
    IkReal IKFAST_ALIGNED16(wi[16]);
    IkReal IKFAST_ALIGNED16(vr[16*16]);
    int one=1;
    dgeev_("N", "V", &matrixdim2, M, &matrixdim2, wr, wi,NULL, &one, vr, &matrixdim2, work, &worksize, &info);
    if( info != 0 ) {
        return;
    }
    IkReal Breal[matrixdim-1];
    for(int i = 0; i < matrixdim2; ++i) {
        if( IKabs(wi[i]) < tol*100 ) {
            IkReal* ev = vr+matrixdim2*i;
            if( IKabs(wr[i]) > 1 ) {
                ev += matrixdim;
            }
            // consistency has to be checked!!
            if( IKabs(ev[0]) < tol ) {
                continue;
            }
            IkReal iconst = 1/ev[0];
            for(int j = 1; j < matrixdim; ++j) {
                Breal[j-1] = ev[j]*iconst;
            }
            if( checkconsistency8(Breal) ) {
                if( lfindex >= 0 ) {
                    const IkReal* lf = lfpossibilities[lfindex];
                    rawroots[numroots++] = (wr[i]*lf[0]+lf[1])/(wr[i]*lf[2]+lf[3]);
                }
                else {
                    rawroots[numroots++] = wr[i];
                }
                bool bsmall0=IKabs(ev[0]) > IKabs(ev[2]);
                bool bsmall1=IKabs(ev[0]) > IKabs(ev[1]);
                if( bsmall0 && bsmall1 ) {
                    rawroots[numroots++] = ev[2]/ev[0];
                    rawroots[numroots++] = ev[1]/ev[0];
                }
                else if( bsmall0 && !bsmall1 ) {
                    rawroots[numroots++] = ev[3]/ev[1];
                    rawroots[numroots++] = ev[1]/ev[0];
                }
                else if( !bsmall0 && bsmall1 ) {
                    rawroots[numroots++] = ev[6]/ev[4];
                    rawroots[numroots++] = ev[7]/ev[6];
                }
                else if( !bsmall0 && !bsmall1 ) {
                    rawroots[numroots++] = ev[7]/ev[5];
                    rawroots[numroots++] = ev[7]/ev[6];
                }
            }
        }
    }
}};


/// solves the inverse kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
IKSolver solver;
return solver.ComputeIk(eetrans,eerot,pfree,solutions);
}

IKFAST_API const char* GetKinematicsHash() { return "<robot:genericrobot - grips (42cd1e57ce525d117bf2884d2003e33b)>"; }

IKFAST_API const char* GetIkFastVersion() { return IKFAST_STRINGIZE(IKFAST_VERSION); }

#ifdef IKFAST_NAMESPACE
} // end namespace
#endif

#ifndef IKFAST_NO_MAIN
#include <stdio.h>
#include <stdlib.h>
#ifdef IKFAST_NAMESPACE
using namespace IKFAST_NAMESPACE;
#endif
int main(int argc, char** argv)
{
    if( argc != 12+GetNumFreeParameters()+1 ) {
        printf("\nUsage: ./ik r00 r01 r02 t0 r10 r11 r12 t1 r20 r21 r22 t2 free0 ...\n\n"
               "Returns the ik solutions given the transformation of the end effector specified by\n"
               "a 3x3 rotation R (rXX), and a 3x1 translation (tX).\n"
               "There are %d free parameters that have to be specified.\n\n",GetNumFreeParameters());
        return 1;
    }

    IkSolutionList<IkReal> solutions;
    std::vector<IkReal> vfree(GetNumFreeParameters());
    IkReal eerot[9],eetrans[3];
    eerot[0] = atof(argv[1]); eerot[1] = atof(argv[2]); eerot[2] = atof(argv[3]); eetrans[0] = atof(argv[4]);
    eerot[3] = atof(argv[5]); eerot[4] = atof(argv[6]); eerot[5] = atof(argv[7]); eetrans[1] = atof(argv[8]);
    eerot[6] = atof(argv[9]); eerot[7] = atof(argv[10]); eerot[8] = atof(argv[11]); eetrans[2] = atof(argv[12]);
    for(std::size_t i = 0; i < vfree.size(); ++i)
        vfree[i] = atof(argv[13+i]);
    bool bSuccess = ComputeIk(eetrans, eerot, vfree.size() > 0 ? &vfree[0] : NULL, solutions);

    if( !bSuccess ) {
        fprintf(stderr,"Failed to get ik solution\n");
        return -1;
    }

    printf("Found %d ik solutions:\n", (int)solutions.GetNumSolutions());
    std::vector<IkReal> solvalues(GetNumJoints());
    for(std::size_t i = 0; i < solutions.GetNumSolutions(); ++i) {
        const IkSolutionBase<IkReal>& sol = solutions.GetSolution(i);
        printf("sol%d (free=%d): ", (int)i, (int)sol.GetFree().size());
        std::vector<IkReal> vsolfree(sol.GetFree().size());
        sol.GetSolution(&solvalues[0],vsolfree.size()>0?&vsolfree[0]:NULL);
        for( std::size_t j = 0; j < solvalues.size(); ++j)
            printf("%.15f, ", solvalues[j]);
        printf("\n");
    }
    return 0;
}

#endif
