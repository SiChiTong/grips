<launch>
	<!-- roslaunch arguments -->
	<arg name="world_name" default="$(find grips_gazebo)/worlds/grips.world"/>
  <arg name="load_controllers" default="true"/>
	<arg name="show_rviz" default="true"/>
	<arg name="debug" default="false"/>
	<arg name="paused" default="true"/>
  <arg name="spawn_args" default=""/>
	<arg name="gui" default="true"/>

	<!-- We resume the logic in empty_world.launch, changing only the name of 
		the world to be launched -->
	<include file="$(find gazebo_ros)/launch/empty_world.launch">
		<arg name="world_name" value="$(arg world_name)" />
		<arg name="debug" value="$(arg debug)" />
		<arg name="gui" value="$(arg gui)" />
		<arg name="paused" value="$(arg paused)" />
		<arg name="use_sim_time" value="true" />
		<arg name="headless" value="false" />
	</include>
	
  <!-- Bring up the robot: description, spawn model, controllers and state publisher -->
  <arg name="robot_name" default="grips"/>
  <!-- send robots urdfs to param server -->
  <param name="robot_description" command="$(find xacro)/xacro.py '$(find grips_description)/robots/$(arg robot_name).xacro'" />
  
  <!-- the semantic description that corresponds to the URDF -->
  <param name="robot_description_semantic" textfile="$(find grips_moveit_config)/config/grips_simple_gripper.srdf" />

  <!-- push robot_description to factory and spawn robot in gazebo -->
  <node name="$(arg robot_name)_spawn" pkg="gazebo_ros" type="spawn_model" output="screen" 
        args="-urdf -param robot_description -model $(arg robot_name)
              $(arg spawn_args)" />
  
  <group if="$(arg load_controllers)">
    <!-- load joint controller configurations from YAML file to parameter server -->
    <rosparam file="$(find grips_control)/config/joint_position_control.yaml" command="load" />
    <!-- load the controllers -->
    <node name="$(arg robot_name)_controller" pkg="controller_manager" type="spawner" output="screen" 
          args="SA SE WP WY WR linkage_tr linkage_tl linkage_bl
          r_outer l_outer r_inner l_inner r_finger l_finger joint_state_controller" />
    <!-- start robot state publisher -->
    <node name="$(arg robot_name)_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" output="screen">
      <param name="publish_frequency" type="double" value="50.0" />
    </node>
  </group>
  
  <!-- Show in Rviz -->
	<group if="$(arg show_rviz)">
		<node name="rviz" pkg="rviz" type="rviz" output="screen" args="-d $(find grips_gazebo)/launch/rviz/grips.rviz"/> 
	</group>
	
</launch>
